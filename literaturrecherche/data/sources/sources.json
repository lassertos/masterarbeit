[
  {
    "title": "Providing students with standardized, cloud-based programming environments at term’s start (for free)",
    "abstract": "For CS50 at Harvard, we have long provided students with a standardized programming environment, to avoid start-of-term technical difficulties that might otherwise arise if students had to install and configure compilers, interpreters, and debuggers on their own Macs and PCs. (For many students, \"hello, world\" is challenge enough on day 0, without also encountering \"command not found\" at the same time!) We originally provided students with shell accounts on a university-managed cluster of systems. We then transitioned to a cloud-based equivalent so as to manage the systems ourselves, root access and all. We transitioned thereafter to client-side virtual machines, to scale to more students and enable GUI-based assignments. We have since transitioned to web-based environments, complete with code tabs, terminal windows, and file explorers, initially implemented atop AWS Cloud9 and now, most recently, GitHub Codespaces, an implementation of Visual Studio (VS) Code in the cloud, free for teachers and students alike. In this workshop, we’ll discuss the pedagogical and technological advantages and disadvantages of every approach and focus most of our time, hands-on, on using and configuring GitHub Codespaces itself for teaching and learning. Along the way, attendees will learn how to create their own Docker images and \"devcontainers\" for their own classes and any languages they teach. Attendees will learn what is possible educationally by writing their own VS Code extensions as well. And how, at term’s end, to \"offboard\" students to VS Code itself on their own Macs and PCs, so as to continue programming independent of Codespaces.",
    "keywords": "cli; code; code editor; command-line interface; container; docker; editor; graphical user interface; gui; ide; integrated development environment; programming; terminal window; text editor; web app; web application",
    "released": 2024,
    "link": "https://doi.org/10.1145/3626253.3633427",
    "interesting": "-"
  },
  {
    "title": "Design and evaluation of a web-based distributed pair programming tool for novice programmers",
    "abstract": "Research on pair programming (PP) in education have shown a number of positive outcomes for learners, and especially novice programmers, such as enhanced learning, greater confidence in work quality, higher problem solving skills or enhanced interaction skills, and promotes collaborative learning. Due to these diverse advantages, pair programming in education currently follows a growing curve. Also, blended learning approaches are becoming more and more popular in education, including when learners have to learn programming. As a consequence, distributed pair programming (DPP) can be considered as a good solution to support pair programming in hybrid learning scenarios. A large number of tools from both the research community and the major integrated development environment (IDE) editors tried to study and implement DPP in their tools. However, our review of literature shows that none of them meet the requirements for delivering effective pair programming activities to novice programmers in blended learning scenarios. Based on these findings, the paper introduces a new DPP application especially designed for novice programmers. It integrates, based on some requirements identified from previous research, several features dedicated to DPP as well as other capabilities supporting extensive data collection and learning analytics. The tool has been experimented in authentic learning settings in higher education with 82 students, both in PP and DPP conditions. The experiment showed no evidence of a difference between PP and DPP on the students’ perceived usability of the application, as well as on the quality of their productions.",
    "keywords": "computer science education; distributed pair programming; novice programmers; tool design and evaluation",
    "released": 2024,
    "link": "https://doi.org/10.1145/3649217.3653571",
    "interesting": "+"
  },
  {
    "title": "Containerizing CS50: Standardizing students’ programming environments",
    "abstract": "We argue in favor of Docker containers as alternatives to clusters of servers or virtual machines for students in introductory programming courses. We present our experience with the same since 2015 in CS50 at Harvard University as well as the pedagogical and operational motivations therefor. We present, too, the evolution of our environments for students over the years, from an on-campus cluster, to an off-campus cloud, to client-side virtual machines, to Docker containers, discussing the trade-offs of each. Not only do containers provide students with a standardized environment, reducing technical difficulties and frequently asked questions at term’s start, they also provide instructors with full control over the software in use and versions thereof, additionally allowing instructors to deploy updates mid-semester. Particularly for large courses with hundreds or even thousands of students, containers allow staff to focus more of their time on teaching than on technical support. And, coupled with text editors that support extensions or plugins, containers allow instructors to optimize students’ environment for learning, while still acquainting students with industry-standard tools. Most recently implemented atop GitHub Codespaces, a cloud-based version of Visual Studio Code, our own container-based solutions have since been used by more than 700,000 students and teachers, both on campus and off, and are also freely available to any teacher or student outside of our own university.",
    "keywords": "GUI; IDE; code; code editor; container; containerization; docker; editor; graphical user interface; integrated development environment; kubernetes; programming; text editor; web app; web application",
    "released": 2024,
    "link": "https://doi.org/10.1145/3649217.3653567",
    "interesting": "+"
  },
  {
    "title": "PyodideU: Unlocking python entirely in a browser for CS1",
    "abstract": "In this paper, we present an education-focused Python IDE and runtime library which can run entirely in desktop, laptop, tablet, and mobile device web browsers. Our solution provides features useful for an engaging CS1 course, and eliminates the need for a server-based runtime. We describe a new, open source, methodology for running interactive Python entirely in the browser by solving the \"WebAssembly blocking problem,\" a core technical challenge to a web-based Python solution.Because our method enables Python entirely in the browser, it unlocks many new features. For example, students can share their code with others, without incurring extra costs to the instructors or institutions. Other features include line by line code highlighting as a program executes, highly intuitive interactive graphics, mouse and touch integration, and use of a wide selection of Python modules such as Numpy and Pandas. Currently, our IDE has been used in 5 classes, covering more than 10,000 students and teachers, with over 350,000 projects created. We found that students and instructors appreciated the variety of tools and abilities the IDE made possible. We benchmark the performance of running code with our method against other online Python solutions and we discuss the benefits and additional possibilities that our method allows, such as mobile device and/or offline code execution. We provide full free public access to our IDE and open source the core libraries which enable the conversion of student written Python to WebAssembly.",
    "keywords": "cs1; ide; integrated development environment; mobile; python; web browser; webassembly",
    "released": 2024,
    "link": "https://doi.org/10.1145/3626252.3630913",
    "interesting": "+"
  },
  {
    "title": "Addressing misconceptions in introductory programming: Automated feedback in integrated development environments",
    "abstract": "In recent years, numerous approaches to automated feedback have been presented in the field of programming education. Often, these methods deliver feedback through standalone web-based environments or educational programming environments. However, only few works have explored how such feedback can be provided within Integrated Development Environments (IDEs). We propose MINDFIX, an approach for integrating alternative feedback mechanisms for addressing programming language misconceptions about Java into the Eclipse IDE. These mechanisms include textual hints, code examples, and a personalized pedagogical agent. A laboratory experiment was conducted to investigate their impact on novice programmers in higher education. The results show that MINDFIX addresses missing feedback mechanisms and features. Additionally, there are initial insights that our feedback addresses programming language misconceptions while being perceived as useful and comprehensible. Our findings also suggest that novice programmers with low self-efficacy expectations perceive pedagogical agents as more motivating, useful, and less disruptive compared to their peers.",
    "keywords": "affective computing; example-based feedback; intelligent tutoring system; pedagogical agent; programming environment",
    "released": 2024,
    "link": "https://doi.org/10.1145/3629296.3629297",
    "interesting": "+"
  },
  {
    "title": "Enabling untrained users to shape real-world robot behavior using an intuitive visual programming tool in human-robot interaction scenarios",
    "abstract": "For untrained users, programming a robot that interacts with humans in a real-world scenario is challenging to impossible. However, in order to make interactive robots available in a wide range of domains and connect them with other smart devices, it must be possible to change their behavior in a simple and intuitive way. We present a visual programming tool that builds on top of the open-source Node-RED software and enables users to quickly and easily connect robots with Internet of Things (IoT) devices in order to build scenarios that include human interaction. The tool, called Node-(RED)² (Node-RED-based Robotics Empowerment Designer) is available online and currently supports the humanoid robot Pepper, but is extendable to other robots with very little effort. We demonstrate two real-world use cases of our tool that include Pepper and IoT devices and evaluate the utility of Node-(RED)² via a user study.",
    "keywords": "Human-Robot Interaction; Real-World Robotics; Robot Behavior Planning; Visual Programming",
    "released": 2024,
    "link": "https://doi.org/10.1145/3648536.3648541",
    "interesting": "-"
  },
  {
    "title": "Supporting web-based API searches in the IDE using signatures",
    "abstract": "Developers frequently use the web to locate API examples that help them solve their programming tasks. While sites like Stack Overflow (SO) contain API examples embedded within their textual descriptions, developers cannot access this API knowledge directly. Instead they need to search for and browse results to select relevant SO posts and then read through individual posts to figure out which answers contain information about the APIs that are relevant to their task. This paper introduces an approach, called Scout, that automatically analyzes search results to extract API signature information. These signatures are used to group and rank examples and allow for a unique API-based presentation that reduces the amount of information the developer needs to consider when looking for API information on the web. This succinct representation enables Scout to be integrated fully within an IDE panel so that developers can search and view API examples without losing context on their development task. Scout also uses this integration to automatically augment queries with contextual information that tailors the developer’s queries, and ranks the results according to the developer’s needs. In an experiment with 40 developers, we found that Scout reduces the number of queries developers need to perform by 19",
    "keywords": "API signatures; code search; controlled experiment",
    "released": 2024,
    "link": "https://doi.org/10.1145/3597503.3639089",
    "interesting": "-"
  },
  {
    "title": "Math IDE: A platform for creating with math",
    "abstract": "To inspire student engagement in middle school math, we explore the possibility of using generative AI to enhance the creativity of math learning. We present the Math IDE, a math education environment in which students learn about math concepts by building artifacts. We aimed to create a platform in which students can engage with mathematical concepts, create an artifact that embodies the math that they are learning about, and practice their high-level specification skills. In the current iteration of the Math IDE, students can create custom web pages by describing and demonstrating understanding of the math that is involved in the web page. In this short overview, we describe our process and discuss several open questions regarding the design and application of this novel method of math education.",
    "keywords": "creating; education; generative ai; math",
    "released": 2024,
    "link": "https://doi.org/10.1145/3626253.3635572",
    "interesting": "-"
  },
  {
    "title": "A transformer-based approach for smart invocation of automatic code completion",
    "abstract": "Transformer-based language models are highly effective for code completion, with much research dedicated to enhancing the content of these completions. Despite their effectiveness, these models come with high operational costs and can be intrusive, especially when they suggest too often and interrupt developers who are concentrating on their work. Current research largely overlooks how these models interact with developers in practice and neglects to address when a developer should receive completion suggestions. To tackle this issue, we developed a machine learning model that can accurately predict when to invoke a code completion tool given the code context and available telemetry data.To do so, we collect a dataset of 200k developer interactions with our cross-IDE code completion plugin and train several invocation filtering models. Our results indicate that our small-scale transformer model significantly outperforms the baseline while maintaining low enough latency. We further explore the search space for integrating additional telemetry data into a pre-trained transformer directly and obtain promising results. To further demonstrate our approach’s practical potential, we deployed the model in an online environment with 34 developers and provided real-world insights based on 74k actual invocations.",
    "keywords": "Code Completion; IDE; Interaction; Transformers; Usability",
    "released": 2024,
    "link": "https://doi.org/10.1145/3664646.3664760",
    "interesting": "-"
  },
  {
    "title": "Language models for code completion: A practical evaluation",
    "abstract": "Transformer-based language models for automatic code completion have shown great promise so far, yet the evaluation of these models rarely uses real data. This study provides both quantitative and qualitative assessments of three public code language models when completing real-world code. We first developed an open-source IDE extension, Code4Me, for the online evaluation of the models. We collected real auto-completion usage data for over a year from more than 1200 users, resulting in over 600K valid completions. These models were then evaluated using six standard metrics across twelve programming languages. Next, we conducted a qualitative study of 1690 real-world completion requests to identify the reasons behind the poor model performance. A comparative analysis of the models’ performance in online and offline settings was also performed, using benchmark synthetic datasets and two masking strategies.Our findings suggest that while developers utilize code completion across various languages, the best results are achieved for mainstream languages such as Python and Java. InCoder outperformed the other models across all programming languages, highlighting the significance of training data and objectives. Our study also revealed that offline evaluations do not accurately reflect real-world scenarios. Upon qualitative analysis of the models’ predictions, we found that 66.3",
    "keywords": "automatic code completion; transformers; language models; IDE; evaluation; open source; InCoder; UniXcoder; CodeGPT",
    "released": 2024,
    "link": "https://doi.org/10.1145/3597503.3639138",
    "interesting": "-"
  },
  {
    "title": "Development of Project Management Module for Reflex Cloud IDE",
    "abstract": "Paper describes a project management module for the Reflex process-oriented language cloud IDE. Currently, a prototype IDE called RIDE has been developed for the Reflex language, based on Eclipse Theia. This implementation approach allows the user to launch the IDE in a browser and immediately begin developing embedded control software. However, Theia is aimed at single-user applications and this drawback limits complexity of the programs. Therefore, Reflex IDE requires a development environment, which provides sufficient features for group development. The paper analyzes existing cloud IDEs and multi-user collaboration in projects, formulates architectural requirements for the project management module, and describes the implementation of the cloud IDE RIDE using the Reflex language.",
    "keywords": "cloud IDE; RIDE; Reflex; Industry 4.0; project management module",
    "released": 2024,
    "link": "https://doi.org/10.1109/SmartIndustryCon61328.2024.10515647",
    "interesting": "+"
  },
  {
    "title": "Exploring the Boundaries: Online Compiler Limitations and Capabilities",
    "abstract": "This study examines the many facets of online compilers, examining their benefits and drawbacks as vital resources for contemporary software development. Web browser-based online compilers have become indispensable for programmers since they provide a platform-neutral environment for coding. The many elements that are built into these platforms-like language support, IDEs, accessibility, and collaboration tools-are all thoroughly examined in our study. Simultaneously, we examine the intrinsic constraints, such as security issues related to remote code execution, constraints on resource allocation, and difficulties with dependency management. We examine the advantages and disadvantages of well-known online compilers via case studies, offering valuable perspectives that help shape the direction of this technology going forward. The study concludes with suggestions for resolving the constraints found and emphasises the critical role online compilers play in the changing software development environment.",
    "keywords": "Online compilers; Software development; Integrated Development Environments (IDEs); Collaboration; Security concerns; Resource allocation; Dependency management",
    "released": 2024,
    "link": "https://doi.org/10.1109/ICRITO61523.2024.10522387",
    "interesting": "+"
  },
  {
    "title": "IoT-Based Smart Kitchen with Enhanced and Automated Safety Measures",
    "abstract": "In today's world, many technologies have emerged for the implementation of Smart homes, Smart Cities, Smart Farming, etc. We are very excited and involved in decorating our house with Smart TVs, Smartphones, Home theatres, and Computers but we forget about the kitchen which is the most important part of our house. Nowadays, Liquified Petroleum Gas (LPG) is the fuel that is frequently used for cooking in the kitchen which is filled as a liquid in a cylinder. Many accidents happen because of the blast of these cylinders, mainly due to gas leakage in the kitchen. Due to LPG's high level of flammability, even a minor gas leak can pose a serious hazard to the environment. So, in order to avoid this, we must find, warn about, and stop gas leaks. Not only is the detection of gas leakage important but the control and prevention of leakage are also most important. The Internet of Things (IoT) technology is utilized in this project to lower the dangers in our kitchen. Both hardware and software will be utilized to implement this process. We use various sensors and mobile applications to detectand control gas leakage.",
    "keywords": "Node MCU(ESP8266-12E); DHT11 Sensor; PIR Sensor; Gas Sensor; 4CH-Relay module; Arduino IDE; MG995 Servo; Web App (Blynk App)",
    "released": 2024,
    "link": "https://doi.org/10.1109/ICRITO61523.2024.10522116",
    "interesting": "-"
  },
  {
    "title": "Real-Time Parking System with Navigation",
    "abstract": "Traditional parking systems often struggle with inefficient space usage, limited visibility, and unsatisfactory user experiences due to manual monitoring and lack of real-time status updates specially the underground parking spaces that are common in malls and theatres. We propose a system that addresses the limitations of traditional parking systems, emphasizing inefficient space utilization, limited visibility, and suboptimal user experiences. To tackle these challenges, it introduces an Intelligent Parking System employing Infrared (IR) sensors strategically positioned for precise real-time car detection. By leveraging a centralized processing unit, manual monitoring issues are resolved, enabling swift data analysis. The system's dynamic web interface offers users real-time parking status, historical data, and trends, mitigating uncertainties about spot availability. Integrating IR sensors, Raspberry Pi Pico W, and React JS methodologies, the IPS fosters a scalable design, accommodating additional sensors and presenting a holistic solution to contemporary parking dilemmas. This approach not only maximizes parking space utilization but also enhances urban mobility, promising a comprehensive and adaptive answer to modern parking challenges. We have researched a smart parking system using OpenCV as well. Our proposed system includes capturing and integrating the footage of parking spaces with an Object-Detection Algorithm using OpenCv’ The real-time availability of the parking spaces can be displayed through our Web Page.",
    "keywords": "Thonny IDE; Web server; React JS; IR Sensors; Smart City",
    "released": 2024,
    "link": "https://doi.org/10.1109/ICECCC61767.2024.10593900",
    "interesting": "-"
  },
  {
    "title": "CodeXchange: Leaping into the Future of AI-Powered Code Editing",
    "abstract": "In the ever-changing internet ecosystem, where programs need to be regularly updated by users themselves not saving time and space, web-based coding tools surpass conventional desktop programs. Thus, showing online code editors enabling programmers to interact, experiment, and innovate efficiently. This study centers on \"CodeXchange,\" an innovative online code editor designed to streamline coding processes and foster collaboration. It discusses the capabilities of code translation in Python, Java, and C++, optimization, auto-commenting, and collaborative development. Translation aids in code interchange, optimization ideas enhance time complexity and maintainability, while direct code comments improve documentation and comprehension. Multiple developers can interact on the same codebase using websockets and secure shared room access keys, enabling real-time collaborative coding and fostering knowledge exchange and cooperation. This study showcases the significant development of online code editors and their potential to revolutionize how programmers communicate, develop, and learn.",
    "keywords": "Code translation; Optimization; Comments Generation; Websockets; IDEs; Code editors; Parsing",
    "released": 2024,
    "link": "https://doi.org/10.1109/ICCICA60014.2024.10585043",
    "interesting": "+"
  },
  {
    "title": "CREATOR: An Educational Integrated Development Environment for RISC-V Programming",
    "abstract": "This article introduces a new integrated development environment called CREATOR (didaCtic and geneRic assEmbly progrAmming simulaTOR) that provides an interactive platform for educational assembly programming. CREATOR is specially designed for the academic environment, so it is very intuitive to users who are encountering assembly for the first time. It makes the traditional theory classes interactive, engaging students’ participation. Moreover, it is a multiplatform simulator that can be used with a web browser without requiring a server or additional installations, and it can be used on different types of devices. CREATOR allows all the necessary steps to be performed on the same tool, from the implementation of the assembly program to its execution on real hardware. For this purpose, it allows editing, compiling, simulating, debugging, and loading the program on the hardware device without auxiliary software. In addition, it is also capable of detecting compilation errors, execution errors, and violations of the parameter passing convention, helping users understand the reason for a given error so that they can resolve it. CREATOR offers the RISC-V and MIPS32 architectures by default. However, it is possible to modify these architectures or add new architectures in the tool as needed by any user. This feature allows teachers to prepare practical labs adapted to the teaching objectives, and it can also be used for research, e.g., for the study of different instruction sets.",
    "keywords": "Assembly programming; educational simulator; ESP32-RISCV; integrated development environment (IDE); RISC-V",
    "released": 2024,
    "link": "https://doi.org/10.1109/ACCESS.2024.3406935",
    "interesting": "+"
  },
  {
    "title": "A visual programming tool for mobile web augmentation",
    "abstract": "The use of mobile devices for web browsing has increased extraordinarily in recent years, becoming the main source of information. Unfortunately, developers cannot meet the needs of all users. As a result, users have been forced to adapt web content to their needs. Additionally, users face more costly interactions than on desktop computers due to the smaller screen size of cell phones. These interactions include URL typing, scrolling, taping, branching and tab-switching. If the number of web resources is large, the activity becomes unpleasant. Furthermore, should the quantity of interactions be extensive, the web experience also becomes unpleasant. Moreover, all these interactions lead to higher costs in terms of phone time and battery life, as well as more costly navigation. Web augmentation enhances the user web experience by adding content from different resources, modifying the original layout, or reducing interactions during web searches, among other benefits. To reduce user interactions and satisfy their information necessities, we propose MAWA, an extension for Firefox mobile that allows users to adapt any web page to their needs through web augmentation techniques. To validate our proposal, an evaluation of the tool has been carried out. The article presents the benefits introduced by MAWA as a response to the inconveniences experienced by users when performing their activities in the mobile browser. The results obtained show that MAWA is able to reduce the number of interactions significantly, as well as to reduce battery consumption and the time needed to obtain the desired information. In addition, users perceive that navigation is less cluttered. © The Author(s), under exclusive licence to Springer-Verlag London Ltd., part of Springer Nature 2024.",
    "keywords": "Customization; End-user development; Human–computer interaction; Mobile browser; Web augmentation",
    "released": 2024,
    "link": "https://doi.org/10.1007/s10115-023-02039-6",
    "interesting": "-"
  },
  {
    "title": "Conditioning the Rhythm of Rehabilitative Appropriation Within a Multiple Intelligences Programming Environment",
    "abstract": "The utilization of evolving technologies has recently upgraded challenging methodologies in fields of humanities, such as pedagogy and psychology, by providing tools that serve the processes of diagnosis and treatment of human dysfunctions. Medical data comprise sensitive information and require special handling in the design of systems that serve it. Based on these principles, the processes involving the creation of software for mobile devices alongside its operative web environment are presented in this paper; these modules overall are appropriated to suit the diverse needs of persons undergoing rehabilitation, training and therapy aiming to restore cognitive functions to their former conditions, and if possible, enhance the acquisition of skills through their use. A distinction was made between Piaget’s stages of cognitive development and Gardner’s theory of multiple intelligences. The resulting software has five basic functions and was designed in collaboration with the Cochlear Implantation Center of the AHEPA University Hospital. The aforementioned system utilizes Stable Diffusion™ (text-to-image) AI technology as well as Ionic™ – React™ technology. Emphasis is paid to stages of cognitive development linked to musical intelligence adeptness. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2024.",
    "keywords": "Ionic and React Deep Learning Environments; Stable Diffusion and Rehabilitation; Web Audio APIs",
    "released": 2024,
    "link": "https://doi.org/10.1007/978-3-031-54327-2_31",
    "interesting": "-"
  },
  {
    "title": "IoT Based Anti-Theft Flooring System Using CC3200",
    "abstract": "Security is a basic need in an urbanized city. Major home theft has increased a lot these days. Every three minutes there is robbery happening in INDIA according to a major report given by the crime bureau. Home theft has increased compared to the previous years, there is not even a small drop or reduction in home theft instead there is only rapid increase. To reduce there are many ways, which can be diffused so easily these days using the advanced features that have been developed in the present generation. In all security problems, the device has been found to secure and reduce the home theft rate. This study uses CC3200, a structured microcontroller interfaced with the piezoelectric sensor so that once if the thief enters the house and steps on the mat the sensor reads and send the data to the cloud and the data sent to the cloud can be viewed and the theif can be caught so easily.  © 2024 IEEE.",
    "keywords": "CC3200; HAS; IDE; IoT; SDK; SENSOR",
    "released": 2024,
    "link": "https://doi.org/10.1109/IDCIoT59759.2024.10467952",
    "interesting": "-"
  },
  {
    "title": "'Smart Air purification: Enhancing Indoor Air quality using Arduino Uno and ThingSpeak Integration'",
    "abstract": "The Indoor air quality (IAQ) has become a growing concern due to the significant impact it has on human health and well-being. Traditional air purifiers offer solutions, but their efficiency and effectiveness often remain limited due to manual operation and lack of real-time monitoring capabilities. To address this issue, this paper proposes the development of Smart Air purifier system, integrating Arduino microcontroller technology with the ThingSpeak platform for enhanced IAQ monitoring and control. The proposed system employees Arduino as the central processing unit, with sensors for detecting various air pollutants and harmful gases such as CO, LPG etc., and temperature-humidity levels. These sensors continuously collect the data on IAQ parameters, which are then processed by the Arduino and transmitted to the ThingSpeak cloud platform using Wi-Fi connectivity. © 2024 IEEE.",
    "keywords": "Arduino IDE-Arduino Integrated Development Environment; DHT11-Digital Humidity and Temperature sensor; HEPA-High Efficiency particulate air; IAQ-Indoor Air Quality; IoT-Internet of Things; MQ2-Methane Quality sensor",
    "released": 2024,
    "link": "https://doi.org/10.1109/ICSSES62373.2024.10561320",
    "interesting": "-"
  },
  {
    "title": "How to Run GUI Applications on a Java Development Environment Based on JupyterLab",
    "abstract": "Programming education is important. Although Java is an important language, it is rarely used in introductory programming education. One reason for this is that there is no programming education environment suitable for Java. In previous research, we showed that running Java on JupyterLab is a suitable method for programming education. Furthermore, we used JupyterLab to build a browser-based Java development environment and verified whether the actual class code could be executed. We found that Java source code that does not use a graphical user interface (GUI), including code that performs communication, is almost 100% executable. However, code that uses a GUI was difficult to execute. In this paper, we propose a method to run Java code that uses a GUI using Jupyter Lab and CheerpJ. We found that GUI code that does not perform communication is almost 100% executable. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2024.",
    "keywords": "",
    "released": 2024,
    "link": "https://doi.org/10.1007/978-3-031-57840-3_26",
    "interesting": "-"
  },
  {
    "title": "A Smart Irrigation System for Plant Health Monitoring Using Unmanned Aerial Vehicles and IoT",
    "abstract": "The Internet of Things (IoT) and Unmanned Aerial Vehicles (UAVs) in agriculture has revolutionized traditional farming practices, giving rise into precision agriculture. With an increasing global population and the challenges raised by climate change, there is a need for novel farming solutions that conserve resources and increase food production. Agriculture majorly depends on significant water resources, and improper irrigation and excessive nutrient application often lead to the wastage of water and nutrient leaching. On the other hand, monsoon-dependent farmlands suffer drought related challenges. Therefore, IoT-enabled smart irrigation systems are preferred over traditional irrigation methods. This research proposes a smart irrigation system for plant health monitoring using UAVs and the IoT. The data collected though the sensors is transmitted to a cloud-based platform for analysis, offering timely information into plant health. The proposed system could help to enhance plant health, increase yields, reduce resource consumption and labor costs, and provide valuable insights to help farmers make informed decisions. © 2024, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.",
    "keywords": "Agriculture; Arduino Integrated Development Environment (AIDE); Internet of Things (IoT); Sensors; Unmanned Aerial Vehicles (UAVs)",
    "released": 2024,
    "link": "https://doi.org/10.1007/978-981-99-6586-1_34",
    "interesting": "-"
  },
  {
    "title": "A Collaborative Coding Platform for Both College Students and Teachers",
    "abstract": "In the rapidly evolving field of computer science education, there is an increasing demand for a comprehensive coding platform that caters to the needs of both college students and educators Although the educational setting is vital in exposing students to computer programming, current coding practices are frequently unsatisfactory because evaluating proposed solutions takes a lot of time. The aim of this research paper is to develop an integrated web-based coding platform called “CodeConnect”. This platform offers a flexible ecosystem for coding practice, assessment, and collaborative learning, with the goal of empowering educators and learners alike. It acts as a database of programming problems, providing opportunities for training, practice, and tracking of progress. Our web application aims to create a supportive community that promotes collaboration, skill development, and a passion for coding by bridging the gap between students and educators. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2024.",
    "keywords": "Code editor; Coding practice; Collaborative platform; Computer programming; Web application",
    "released": 2024,
    "link": "https://doi.org/10.1007/978-981-97-1329-5_28",
    "interesting": "-"
  },
  {
    "title": "An Accessible Blocks Language for Students with and without Visual Impairments",
    "abstract": "Blocks-based programming languages (BBPLs) have proven effective for instructing early learners in programming. Unlike text-based languages, BBPLs eliminate the need to memorize syntax rules by enforcing correct program structure through block assembly. However, the visual nature of BBPLs can pose challenges for children with visual impairments and blindness (VI). Moreover, the existing BBPLs tailored for children with VI are rarely embraced by sighted children due to their limited capabilities. To explore the creation of an inclusive BBPL that can be used by both children with and without VI, we devised a web-based BBPL platform with keyboard accessibility functionalities and personalized audio cues through an incorporated screen reader. Within this platform, called Grid-world, students engage with basic programming concepts, including iteration and selection, through entertaining games and animations-such as navigating a character within a 2D grid space. Notably, Grid-world accommodates children with VI without the need for extra hardware or assistive devices. We conducted two empirical assessments of Grid-world involving participants with and without VI. The observational analysis of participant interaction and survey responses illuminated areas for enhancement. We describe the rationale behind Grid-world's design and accessibility features, incorporating findings from experimental studies, including participants' feedback on the accessibility features.  © 2024 ACM.",
    "keywords": "accessibility; blocks-based programming environments; computer science education; k-12 education; visual impairments",
    "released": 2024,
    "link": "https://doi.org/10.1145/3626252.3630775",
    "interesting": "-"
  },
  {
    "title": "OpenVP: A Customizable Visual Programming Environment for Robotics Applications",
    "abstract": "Authored robotics applications have a diverse set of requirements for their authoring interfaces, being dependent on the underlying architecture of the program, the capabilities of the programmers and engineers using them, and the capabilities of the robot. Visual programming approaches have long been favored for both novice-level accessibility and clear graphical representations, but current tools are limited in their customizability and ability to be integrated holistically into larger design interfaces. OpenVP attempts to address this by providing a highly configurable and customizable component library that can be integrated easily into other modern web-based applications. © 2024 IEEE Computer Society. All rights reserved.",
    "keywords": "blocks; library; programming; visual",
    "released": 2024,
    "link": "https://doi.org/10.1145/3610977.3637477",
    "interesting": "-"
  },
  {
    "title": "ChainForge: A Visual Toolkit for Prompt Engineering and LLM Hypothesis Testing",
    "abstract": "Evaluating outputs of large language models (LLMs) is challenging, requiring making-and making sense of-many responses. Yet tools that go beyond basic prompting tend to require knowledge of programming APIs, focus on narrow domains, or are closed-source. We present ChainForge, an open-source visual toolkit for prompt engineering and on-demand hypothesis testing of text generation LLMs. ChainForge provides a graphical interface for comparison of responses across models and prompt variations. Our system was designed to support three tasks: model selection, prompt template design, and hypothesis testing (e.g., auditing). We released ChainForge early in its development and iterated on its design with academics and online users. Through in-lab and interview studies, we find that a range of people could use ChainForge to investigate hypotheses that matter to them, including in real-world settings. We identify three modes of prompt engineering and LLM hypothesis testing: opportunistic exploration, limited evaluation, and iterative refinement. © 2024 Copyright held by the owner/author(s)",
    "keywords": "auditing; language models; prompt engineering; toolkits; visual programming environments",
    "released": 2024,
    "link": "https://doi.org/10.1145/3613904.3642016",
    "interesting": "-"
  },
  {
    "title": "Extensible Tooling for Reactive Programming Based on Active Expressions",
    "abstract": "Reactive programming uses dedicated language concepts such as signals, data bindings, and constraints, so developers can better express behavior that is triggered by data changes and user interactions. As applications also contain aspects that cannot be easily expressed through reactive programming, reactive concepts are often integrated into more generally applicable imperative programming languages. Although such language integrations are readily available, working on reactive code with tools designed for imperative code is hard, because without dedicated tool support implementation details may leak unintentionally. There are special tools for reactive programming available, however, they are expensive to make. Further, a tool typically supports only a single language concept and cannot be applied to others even though they build on similar ideas. Consequently, control flow or data flow cannot be followed between concepts. We propose to leverage the commonalities found in reactive programming concepts to create reusable tool components for data gathering and visualization. To do so we create a toolset working on a generalization of reactive programming concepts, Active Expressions. By building upon the generic tool components, tool developers can create tool support for specific reactive concepts. Furthermore, multiple reactive concepts and their potentially complex interaction can be explored in one shared environment. We implemented the approach in the Lively4 Web-based JavaScript development environment using its Active Expression framework. Our toolset gathers relevant data about the reactive system and visualizes it using code annotations, an overview tree, an event timeline, and a dependency graph. We evaluate the reusability of this toolset by adapting it to two more concepts: signals, and implicit layer activation, known from context-oriented programming. We found that most of the functionality provided by the toolset can be reused, thus, reducing the implementation effort. Further, we show that multiple reactive concepts can be supported by the same common toolset. Programmers can use and debug multiple different reactive concepts simultaneously, without requiring new tools for each one. For future work, we believe our common toolset provides a starting point for researching the interplay between multiple reactive programming concepts. © (2024), Association Internationale pour les Technologies Objets.",
    "keywords": "Active Expressions; Development Environments; Lively Kernel; Programming Tools; Reactive Programming",
    "released": 2024,
    "link": "https://doi.org/10.5381/JOT.2024.23.1.A4",
    "interesting": "-"
  },
  {
    "title": "Use of basic programming tools to foster programming logic in university students with school preparation other than computer science",
    "abstract": "Teaching programming logic to students who do not have a background in computer science is challenging, as the instructor has to awaken problem-solving, critical thinking, and logical reasoning skills Several programming tools have been created to teach coding concepts to computer science students of different ages. However, these tools are not well designed to meet the challenge of teaching programming to new developers who come with school training in other areas such as accounting, management, etc. Therefore, this research focused on analyzing the importance of the application of online programming tools to students starting college who come with a school background in an area other than technology. A pre/post experimental design was carried out with 82 first-level students of the Technical University of Ambato in the careers of Systems and Electronics. The results revealed that 45% of the students increased their levels of application and analysis in programming processes. In addition, the research revealed that students who come from a background other than computer science agree with the integration of online programming tools from the first level of university entrance since this method helps to improve their learning capacity. © 2024 The Authors. Published by ELSEVIER B.V.",
    "keywords": "Programming logic; programming tools; software development; undergraduate student",
    "released": 2024,
    "link": "https://doi.org/10.1016/j.procs.2024.05.122",
    "interesting": "-"
  },
  {
    "title": "Requirements for an Online Integrated Development Environment for Automated Programming Assessment Systems",
    "abstract": "More and more introductory programming courses are being held online, using Automated Programming Assessment Systems (APASs). Some APASs provide online editors where students can solve and submit their exercises, because some course teachers want to avoid that students have to set up an Integrated Development Environment (IDE) on their PCs, fearing that this could increase the entry barrier to the course. However, most of the available online editors for APASs only provide rudimentary programming support, making it harder to write code and, therefore, have the undesired side effect of increasing the entry barrier to learning programming. To gain a better understanding of the requirements of an online IDE for APASs, we conducted a survey asking 48 APASs users to give their opinions on the importance of different online IDE features. Based on their responses we derived a set of main requirements for an online IDE within APASs. The survey was complemented by a tool review of state-of-the-art online IDEs, to see whether existing online IDEs meet the requirements. Finally, we evaluated whether the online IDEs can be integrated within APASs. This study establishes a framework for online IDEs tailored to APASs, creating the foundation for subsequent improvements. Copyright © 2024 by SCITEPRESS – Science and Technology Publications, Lda.",
    "keywords": "Automated Programming Assessment Systems; Integrated Development Environments; Online IDE; Programming Education; Requirements",
    "released": 2024,
    "link": "https://doi.org/10.5220/0012556400003693",
    "interesting": "+"
  },
  {
    "title": "Development environment, tools, and SDKs for serverless computing",
    "abstract": "Serverless applications require a good development environment and the right tools. This chapter guides serverless computing application developers through installing and utilising essential components and technologies. VSCode is a robust code editor and debugger. Easy installation provides developers with a diverse code editing and debugging platform. AWSToolkit for VS Code simplifies serverless application development, testing, and release on Amazon web services (AWS). Fast setup with step-by-step instruction makes AWS serverless development easy for developers. Node.js is needed for serverless apps. Developers require Node.js for local and cloud serverless operations. This chapter briefly describes installation. Postman is essential for serverless API testing. Postman installation and use for serverless API testing and troubleshooting are covered in this chapter. Developers seeking efficiency will benefit. These concepts let developers build a strong development environment, integrate AWS resources, and leverage SDKs to build serverless apps. © 2024, IGI Global. All rights reserved.",
    "keywords": "",
    "released": 2024,
    "link": "https://doi.org/10.4018/979-8-3693-1682-5.ch015",
    "interesting": "-"
  },
  {
    "title": "LEARNING WEB DEVELOPMENT USING GITHUB COPILOT IN AND OUTSIDE ACADEMIA: A BLESSING OR a CURSE?",
    "abstract": "This article investigates the usage of GitHub Copilot, an artificial intelligence-powered coding assistant owned by Microsoft and GitHub, in the process of learning and teaching web development both in formal academic, and informal settings. We dive into the idea behind utilizing GitHub Copilot and highlight its most common and relevant use cases which can be used to learn Web Development. Drawing from existing scientific literature and online statements from software professionals, we present an overview of the current situation with artificial intelligence-assisted programming tools such as GitHub Copilot and its impact and irrelevance on Web Development education especially for the early learning stages. Professionals both in and outside academia agree that usage of artificial intelligence Pair Programming tools such as GitHub Copilot is neither recommended nor essential when learning or teaching Web Development.",
    "keywords": "AI pair programming; GitHub Copilot; Web Development; VS Code",
    "released": 2024,
    "link": "https://doi.org/10.7906/indecs.22.3.10",
    "interesting": "+"
  },
  {
    "title": "Links between environmental features and developmental outcomes of elite youth athletes: A cross-sectional study within the german talent pathway",
    "abstract": "From a holistic perspective, the talent development environment (TDE) influences not only the athletic development but also the development of personal skills as well as the wellbeing of elite youth athletes. Alongside research on the effects of broader environmental features on athlete-related talent development (TD) outcomes, the importance of the closer social climate (i.e., teammates, coaches, support staff) is also emphasized. Therefore, the purpose of this study was to examine the relationship between environmental features, the social climate and athlete-related TD outcomes (I). Additionally, an exploratory analysis was conducted to investigate the role of motivational climate and psychological safety in the relationship between environmental features and athleterelated TD outcomes (II). To this end, 345 German elite youth athletes completed an online survey assessing their perceptions of environmental features, coach-created motivational climate, and psychological safety as well as wellbeing, performance satisfaction, and life skills development. The results revealed that environmental features (especially long-term development focus, effective coach-athlete communication, and the social network), motivational climate and psychological safety were all significantly associated with the outcome variables. These findings underline the significance of environmental features for athlete-related TD outcomes of young talented athletes in German elite youth sports. However, the results indicated that motivational climate and psychological safety did not have significant indirect effects on the relationship between TDE features and athlete-related TD outcomes. Thus, it remains to be questioned if and what other processes influence this relationship.",
    "keywords": "Talent development environment; Motivational climate; Psychological safety; Wellbeing; Performance satisfaction; Life skills",
    "released": 2024,
    "link": "https://doi.org/10.1016/j.psychsport.2023.102569",
    "interesting": "-"
  },
  {
    "title": "Extensible tooling for reactive programming based on",
    "abstract": "Reactive programming uses dedicated language concepts such as signals, data bindings, and constraints, so developers can better express behavior that is triggered by data changes and user interactions. As applications also contain aspects that cannot be easily expressed through reactive programming, reactive concepts are often integrated into more generally applicable imperative programming languages. Although such language integrations are readily available, working on reactive code with tools designed for imperative code is hard, because without dedicated tool support implementation details may leak unintentionally. There are special tools for reactive programming available, however, they are expensive to make. Further, a tool typically supports only a single language concept and cannot be applied to others even though they build on similar ideas. Consequently, control flow or data flow cannot be followed between concepts. We propose to leverage the commonalities found in reactive programming concepts to create reusable tool components for data gathering and visualization. To do so we create a toolset working on a generalization of reactive programming concepts, Active Expressions. By building upon the generic tool components, tool developers can create tool support for specific reactive concepts. Furthermore, multiple reactive concepts and their potentially complex interaction can be explored in one shared environment. We implemented the approach in the Lively4 Web-based JavaScript development environment using its Active Expression framework. Our toolset gathers relevant data about the reactive system and visualizes it using code annotations, an overview tree, an event timeline, and a dependency graph. We evaluate the reusability of this toolset by adapting it to two more concepts: signals, and implicit layer activation, known from context-oriented programming. We found that most of the functionality provided by the toolset can be reused, thus, reducing the implementation effort. Further, we show that multiple reactive concepts can be supported by the same common toolset. Programmers can use and debug multiple different reactive concepts simultaneously, without requiring new tools for each one. For future work, we believe our common toolset provides a starting point for researching the interplay between multiple reactive programming concepts.",
    "keywords": "Programming Tools; Development Environments; Reactive Programming; Active Expressions; Lively Kernel",
    "released": 2024,
    "link": "https://doi.org/10.5381/jot.2024.23.1.a4",
    "interesting": "-"
  },
  {
    "title": "PIACERE integrated development environment",
    "abstract": "This article presents a model-driven engineering (MDE) integrated development environment (IDE) to assist the DevSecOps (Development Security and Operations) process. This tool has been developed within the PIACERE H2020 project, which proposes a framework composed of a set of tools developed to support all phases of the DevSecOps life cycle including modeling, test/validation, build/generate, deployment, operate and modeling. PIACERE IDE is an Eclipse based tool, that acts as the front-end for this framework, and plays a key role in integrating other PIACERE tools. The IDE allows developers to access the different tools in a simple and unified way.",
    "keywords": "IaC (Infrastructure as Code); IDE (integrated development environment); Eclipse; DevSecOps",
    "released": 2023,
    "link": "https://doi.org/10.1145/3624486.3624507",
    "interesting": "-"
  },
  {
    "title": "Cloud-based development environment: A case study of teaching a cross-platform mobile app course",
    "abstract": "This workshop aims to share the experiences of using a cloud-based development environment for teaching a cross-platform mobile app requiring full-stack technologies. This approach brings several benefits to instructors and students: 1) Instructors can be free from trouble shootings in their students’ local desktop-based development environments. 2) Students can focus on the main concepts and skills of the course rather than the environment. Cloud-based development environments can be accessed from any device with an internet connection. It provides flexibility and convenience for the student. 3) Instructors can save their grading time by accessing the cloud-based development environment of each student. Furthermore, 4) students are exposed to the power of cloud computing with built-in version control systems.",
    "keywords": "React Native; Mobile Apps; Cross-Platform; Cloud-based Development Environment",
    "released": 2023,
    "link": "https://doi.org/10.1145/3585059.3611429",
    "interesting": "-"
  },
  {
    "title": "Towards an adaptable curriculum-driven block-based learning environment",
    "abstract": "In this poster, we present the design of a browser-based Arduino programming tool, CASMM, to support computational thinking and making in science classrooms. This tool allows for unique integration of research tools, lesson planning, and scaffolding for learning computational thinking concepts and block-based programming. This poster will describe four key features of a block-based LMS: (1) reduced-scoped programming toolbox, (2) block locking, (3) lesson plans and starter code templates; and (4) low-tech code replay for researchers. Through discussion of this tool, we aim to catalyze conversations about integrating new scaffolding techniques into block-based programming environments to better support classroom use and research.",
    "keywords": "science integration; scaffolding; programming; learning mangement system (lms); k-12; computing education; computational thinking; block-based programming environment; arduino",
    "released": 2023,
    "link": "https://doi.org/10.1145/3545947.3576357",
    "interesting": "-"
  },
  {
    "title": "Tool support for architectural pattern selection and application in cloud-centric service-oriented IDEs",
    "abstract": "Architectural patterns are high-level design guidelines and principles for designing the architecture of software systems. They play a crucial role laying the foundations to the organization and structure of software systems and have high impact on their quality and success both in terms of engineering and business aspects. Deciding for a concrete software architecture design requires careful analysis of several factors regarding the software system including system characteristics, constraints, required quality attributes and any trade-offs made along with the design decision; and hence is often not trivial. This paper presents a framework for architectural pattern selection and application that (i) supports the decision-making process of choosing an appropriate architectural pattern as well as (ii) the organization of the software structure based on the chosen pattern in an automated fashion when integrated within IDEs. In particular, the paper presents how this framework is implemented and integrated within an innovative open source cloud-native integration development environment.",
    "keywords": "Software architecture decision support; IDE integration; Architectural patterns",
    "released": 2023,
    "link": "https://doi.org/10.1145/3624486.3624494",
    "interesting": "-"
  },
  {
    "title": "ChainForge: An open-source visual programming environment for prompt engineering",
    "abstract": "Prompt engineering for large language models (LLMs) is a critical to effectively leverage their capabilities. However, due to the inherent stochastic and opaque nature of LLMs, prompt engineering is far from an exact science. Crafting prompts that elicit the desired responses still requires a lot of trial and error to gain a nuanced understanding of a model’s strengths and limitations for one’s specific task context and target application. To support users in sensemaking around the outputs of LLMs, we create ChainForge, an open-source visual programming environment for prompt engineering. ChainForge is publicly available, both on the web (https://chainforge.ai) and as a locally installable Python package hosted on PyPI. We detail some features of ChainForge and how we iterated the design in response to internal and external feedback.",
    "keywords": "language models; prompt engineering; visual programming",
    "released": 2023,
    "link": "https://doi.org/10.1145/3586182.3616660",
    "interesting": "-"
  },
  {
    "title": "Isabelle/cloud: Delivering isabelle/HOL as a cloud IDE for theorem proving",
    "abstract": "As online coding technology advances, various related products are emerging, but we observe that there are not many examples of introducing online coding into the field of theorem proving. We introduce Isabelle/Cloud, an online coding platform and user environment for the Isabelle theorem proving assistant. The primary objective of Isabelle/Cloud is to cloudify Isabelle using online coding technology, thereby addressing the issue of loading large projects. Leveraging the understanding of the Isabelle architecture, we have modified, replaced, and added some modules, encapsulated the Isabelle environment using containers, and developed the front-end and back-end. As a cloud platform, Isabelle/Cloud enables users to create a complete Isabelle environment with different versions that are isolated from each other, while providing basic cloud coding and theorem proving services. The current version integrates most of the popular Isabelle libraries with excellent tutorials and cases, enabling users to directly create projects from the tutorial code for practical exercises. Evaluation of the platform shows that Isabelle/Cloud performs better when dealing with large projects. The new platform opens up new possibilities for interaction and presentation, and it is currently in use.",
    "keywords": "cloud applications; Isabelle; Cloud-based IDEs",
    "released": 2023,
    "link": "https://doi.org/10.1145/3609437.3609460",
    "interesting": "-"
  },
  {
    "title": "Exploring gaze tracking &amp; code logging in IDEs as a passive way to ask for help in introduction to programming classes",
    "abstract": "A typical CS1 class involves students working on solving programming problems. Before the pandemic, this occurred in a computer laboratory with a teacher who could quickly assist students having difficulty with their work. Sometimes, there is a need for this intervention even without the student asking for help. An experienced teacher can sense the growing frustration of a student through their overall demeanor. A teacher can also watch how a student codes to provide quick hints to address potential problems. This kind of intervention is challenging to do in an online learning setting. A typical online meeting software provides a small and limited view of a student, often crowded with all the other students. As such, the visual cues of frustration can be easily lost in the noise. Not being able to see the student’s code easily is also a problem. The system we are developing aims to create an online IDE that leverages gaze tracking and code logging to automatically identify these struggling students. In the first phase of the research, a learning model will be trained on students’ gaze and code logs in line with their overall class performance. The second phase of the research will then use this model to predict the frustration level of student users. Collaboration and gamification strategies will be explored in the final stage of the research that would assist interventions of not just teachers but also classmates who are willing to help.",
    "keywords": "code logging; focused intervention; gaze tracking; introduction to programming",
    "released": 2023,
    "link": "https://doi.org/10.1145/3545947.3573251",
    "interesting": "-"
  },
  {
    "title": "Towards Collaborative Coding in RIDE Web IDE",
    "abstract": "RIDE is an integrated development environment (IDE) suited for the Reflex language, specifically designed for creating control algorithms for cyber-physical systems. RIDE is based on Eclipse Theia and a host program running independent instances for each user. However, it does not provide collaborative experience. Eclipse Theia is designed for single-user; therefore, collaborative programming is hampered by security and ease of use issues. This paper outlines a server program architecture to add collaborative abilities to otherwise single-user web applications. The suggested approach is application independent. It is applicable to other single-user applications, making it possible to deploy them in the cloud as web services. The paper provides a detailed analysis of the problem, as well as the tools and frameworks used for implementing this design with RIDE. This implementation makes use of Docker for containerization, Python and Flask for host program, Google Auth for user authentication, and SQLite for the database.",
    "keywords": "CPS; process-oriented programming; Reflex; cloud IDE; web application; multi-user management",
    "released": 2023,
    "link": "https://doi.org/10.1109/APEIE59731.2023.10347731",
    "interesting": "+"
  },
  {
    "title": "Towards web-applications for domain-specific languages and development tools",
    "abstract": "The modern trend towards web-based technologies in different domains calls for innovative tooling frameworks that are both adaptive and robust. This paper introduces a novel architecture for web-based development tools, employing a thin-client approach and scalable micro-service architecture, which holds significance in the era of web technologies. Central to this framework is a reactive document analysis algorithm, which is based on the declarative description of formal domain concepts and analysis rules. Several domain-specific languages have been drafted for domains such as industrial automation systems, based on IEC 61499, and biological knowledge structuring, to evaluate the proposed architecture. The results indicate the viability of integrating such an approach in future web-based development environments, thereby enhancing the ease and efficiency of conducting code analysis and editing tasks. Moreover, the architecture lays a foundation for the evolution of development tools aligned with modern web technologies.",
    "keywords": "Domain-specific languages and tools; Web-technologies; Cyber-physical systems",
    "released": 2023,
    "link": "https://doi.org/10.1109/ONCON60463.2023.10431381",
    "interesting": "-"
  },
  {
    "title": "Design of STEM Teaching Network Publishing Framework Based on Web Interactive Programming Environment",
    "abstract": "With the rapid development of e-learning, collaborative learning platforms such as Web-Based Education Domain are gradually being promoted in subject education. However, with the deepening of the application of platform environments, the problem of time lag in learning interaction in virtual classrooms has gradually been exposed. The traditional one-way collaborative education platform has been difficult to meet the demand for real-time interaction in smart classroom teaching. Based on this, the research was inspired by programming education and introduced a Web-based interactive programming environment. Through segmented programming technology, real-time interaction between teachers and students in the virtual classroom was realized, and animation media resources were finally generated and published to the learning network. middle. In the environment design, the study introduced four dimensions of environmental learning goals (entry skills, primitive skills, emotional skills and wisdom skills) to analyze learners, and based on the analysis results, a corresponding teaching case for the interactive programming environment system framework was designed, discuss how to use this framework to implement subject teaching ideas and practical methods to promote real-time interaction in virtual classrooms.",
    "keywords": "Interactive programming environment; real-time interaction; programming education; STEM; Notebooks",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICDSCA59871.2023.10393759",
    "interesting": "+"
  },
  {
    "title": "Evaluation and technological solutions for a dynamic, unified cloud programming development environment : Ease of use and applicable system for uniformized practices and assessments",
    "abstract": "The dynamic development and change of the world also result in the modernization of teacher-student relationships. In the training, educational processes must be planned with innovative strategies that meet the increasingly changing needs of students, which today go beyond the traditional classroom and methodological frameworks. In this article, we present a technological solution to support the renewal efforts in the education world that, on the one hand, takes advantage of the benefits of cloud-based services, and on the other hand, ensures that students can acquire the material of a given course in a unified, stable environment. The isolated environment offered by the virtual space guarantees private work sessions, and multi-project activities can also be handled more easily and uniformly. The analysis of the teaching program presented below provides insight into the practical and appropriate solutions offered by the containerization process. In addition to these, the topic will also cover the widely used and popular Docker application that supports the implementation of the process, as well as the NodeJS environment closely related to the project.",
    "keywords": "teach program; virtual environment; containerization; Docker; NodeJS; cloud-based services",
    "released": 2023,
    "link": "https://doi.org/10.1109/SAMI58000.2023.10044519",
    "interesting": "+"
  },
  {
    "title": "A Static IDE Plugin to Detect Security Hotspot for Laravel Framework Based Web Application",
    "abstract": "Automatic detection of potential vulnerabilities is critical to promoting application security awareness. It should be performed at the earliest stages of the software development life cycle, the goal being to minimize risk, regardless of the progress of various vulnerability detection techniques in program code, both static and with deep learning, website application developers need to be assisted with notifications in real time, not waiting for the entire project to be completed directly from the IDE they use to stay focused. A common problem with vulnerability detection tools is annoying false-positive results and a lack of anticipation of new or unknown vulnerabilities. Therefore, in this work, we choose an approach to identify patterns and spots where there are potential vulnerabilities, termed security hotspots, so as not to detect vulnerabilities directly. We propose a rule-based plugin integrated into the IDE, which can detect eight security hotspots in the PHP web application program code based on the Laravel framework. We have implemented a proof-of-concept extension/plugin in the popular VSCode code editor (for this initial stage, only running on Windows OS), which is developed from PHP_CodeSniffer. Experiments on 10 Laravel-based projects presented an accuracy of 98.6% and an F1 score of 87.36%. When running, the extension takes 1 ms for the shortest number of tokens, 66 tokens, and 382 ms for the most extended tokens (4,051 tokens). The result shows that this plugin can help in code analysis on Laravel-based projects. Our approach can also effectively complement existing software security best practices.",
    "keywords": "security; vulnerabilities; security hotspot; static analysis; Laravel",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICoDSE59534.2023.10291941",
    "interesting": "-"
  },
  {
    "title": "Expanding the Concept of Learning Space in Biomedical Engineering Education using Wearable Devices and Cloud-based Collaborative Programming Environments",
    "abstract": "Biomedical engineering undergraduate students often underestimate the relevance of their courses as they hardly perceive their practical application in future professional development, resulting in a lack of interest, motivation, and engagement. This issue may be addressed by implementing practical or “hands-on” learning experiences that allow students to construct their knowledge and apply skills in real-world scenarios. This work proposes to create learning experiences supported by blended learning spaces, including traditional classrooms for direct instruction, daily-life scenarios for experiential learning enabled by wearable devices, and cloudbased programming environments for online collaborative work. The learning experience presented was implemented in a biomedical signals and systems course. Students used health wearables to record their physiological and behavioral signals in everyday scenarios and Google Collaboratory notebooks to analyze the collected data. The survey results applied to students suggest that technology-enabled blended learning spaces positively impact students’ perception of their learning experience. However, other potential benefits in learning derived from the use of technologies, such as increased student engagement and motivation and improved learning outcomes, require further investigation. This is particularly relevant given the monetary investment that scaling up this pedagogical approach would need.",
    "keywords": "engineering education; learning spaces; technology-enabled learning; wearable devices; cloud computing technology; higher education; educational innovation",
    "released": 2023,
    "link": "https://doi.org/10.1109/IEEECONF56852.2023.10104837",
    "interesting": "-"
  },
  {
    "title": "Browser-based Java Development Environment for Programming Education",
    "abstract": "Programming education has become popular in elementary education. However, the pass rate for the subject of programming in higher education is not always sufficient. In recent years, data science courses have effectively taught interactive and goal-oriented programming using Python and Jupyter. We propose a method for learning Java programming interactively using a Jupyter-like execution environment. This environment also enables the execution of network applications that are difficult to execute in the existing Jupyter environment. We show that many of the actual class examples can be executed using the proposed system.",
    "keywords": "Programming Education; Programming Environment; Java; JupyterLab; JupyterHub; Google Colaboratory (Colab)",
    "released": 2023,
    "link": "https://doi.org/10.1109/CANDARW60564.2023.00033",
    "interesting": "+"
  },
  {
    "title": "Exploring the Effectiveness of Web-Based Programming Environments for MOOCs: A Comparative Study of CodeOcean and OpenJupyter",
    "abstract": "Programming courses offered by openHPI, the European MOOC platform of the Hasso Plattner Institute, feature hands-on programming exercises to support learners in practicing the newly acquired skills. These exercises are facilitated by two tools: CodeOcean and Open Jupyter. Code Ocean is user-friendly and suitable for beginners, while OpenJupyter is more advanced and used in data science courses. In this paper, we compare and discuss the advantages and limitations of both tools, providing recommendations for instructors and researchers in programming courses. We also address technical details, such as scalability and execution environments. Furthermore, we explore future research possibilities, particularly in learner collaboration and automated feedback. Our work supports learners in acquiring knowledge and testing it at their own pace, with individualized feedback and minimal technical requirements, contributing to an open education landscape in programming education.",
    "keywords": "MOOC; Programming; Web-based Environment; Auto-Grader; Data Science; CodeOcean; OpenJupyter",
    "released": 2023,
    "link": "https://doi.org/10.1109/LWMOOCS58322.2023.10306228",
    "interesting": "+"
  },
  {
    "title": "Code Recommendation Based on Deep Learning",
    "abstract": "Software developers, especially programming beginners, often need to complete some unfamiliar coding tasks, generally by reusing the previous code or searching the existing code snippets, and from a large number of redundant search results to screen out the code with similar structure to complete the coding task. In order to quickly and accurately recommend high-quality code snippets for programmers, this paper Sentence-BERT model. Firstly, the method obtains a large amount of high-quality data to build the code base, and proposes a code snippet recommendation method based on generates sentence vectors with rich semantics for the natural language description corresponding to the code snippets and the natural language query input by users based on the deep learning model SBERT. Then, the code snippets are recommended by comparing the dot product similarity. The effectiveness of the proposed method is verified by comparing the three commonly used evaluation indexes of hit rate, average reciprocal ranking and average accuracy with the methods in the current related research. Experimental results show that this recommendation method can effectively improve the accuracy and effect of code snippet recommendation.",
    "keywords": "code recommendation; code search; SBERT; code reuse; Web IDE",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICTech58362.2023.00041",
    "interesting": "-"
  },
  {
    "title": "Collaborative, Code-Proximal Dynamic Software Visualization within Code Editors",
    "abstract": "Software visualizations are usually realized as standalone and isolated tools that use embedded code viewers within the visualization. In the context of program comprehension, only few approaches integrate visualizations into code editors, such as integrated development environments. This is surprising since professional developers consider reading source code as one of the most important ways to understand software, therefore spend a lot of time with code editors. In this paper, we introduce the design and proof-of-concept implementation for a software visualization approach that can be embedded into code editors. Our contribution differs from related work in that we use dynamic analysis of a software system's runtime behavior. Additionally, we incorporate distributed tracing. This enables developers to understand how, for example, the currently handled source code behaves as a fully deployed, distributed software system. Our visualization approach enhances common remote pair programming tools and is collaboratively usable by employing shared code cities. As a result, user interactions are synchronized between code editor and visualization, as well as broadcasted to collaborators. To the best of our knowledge, this is the first approach that combines code editors with collaboratively usable code cities. Therefore, we conducted a user study to collect first-time feedback regarding the perceived usefulness and perceived usability of our approach. We additionally collected logging information to provide more data regarding time spent in code cities that are embedded in code editors. Seven teams with two students each participated in that study. The results show that the majority of participants find our approach useful and would employ it for their own use. We provide each participant's video recording, raw results, and all steps to reproduce our experiment as supplementary package. Furthermore, a live demo of our tool is available online.11https.//code.explorviz.dev We invite other researchers to extend our open-source software.22https://github.com/ExplorViz Video URL: https://youtu.be/3qZVSehnEug",
    "keywords": "software visualization; dynamic analysis; program comprehension; pair programming; integrated development environment",
    "released": 2023,
    "link": "https://doi.org/10.1109/VISSOFT60811.2023.00016",
    "interesting": "-"
  },
  {
    "title": "Cold Supply Chain Logistics with IoT to Ensure Quality and Security of the Transported Goods",
    "abstract": "Cold supply chain logistics is a transport logistics service where the packaged products which are stored in cold temperature are transported from one place to another. This project ensures the quality of the product and its security. A microcontroller based operation enables this project for dynamic control of the cooling system installed in the transport vehicle or the reefer containers. The real time data is sent to the logistics manager via cloud database and viewed through a mobile application. The complete monitoring of the data can be done at any part of the world with the use of cloud database. This project also enables tracking with an inbuilt GSM based GPS tracking system where the location of the vehicle can be monitored. A ultrasonic distance sensor based security device is used at the doors of the container to monitor the hatch. Whenever there is a possible breach, the sensor trips and activates the security system to capture photos of the breach occurred and sends it to the cloud data base where it is stored securely and alert is sent to the logistics.",
    "keywords": "Microcontroller; IoT; Cloud Database; Temperature and Humidity sensors; GSM and GPS; Mobile Application using android studio; Integrated Development Programme (IDE)",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICCEBS58601.2023.10448521",
    "interesting": "-"
  },
  {
    "title": "Design And Development Of Unmanned Hydroponic Setup Using IoT",
    "abstract": "Farmers need top-notch soil with strong natural mineral contents for the traditional farming approach. It also involves labour costs. It also requires a lot of land and water for weeding and ploughing. When it comes to seasonal plants, the yield falls short of meeting both consumer demands and farmer productivity expectations. Due to these characteristics,a farming technique that is less expensive to implement and thatalso makes it simple to manage and regulate key variables like light, temperature, and humidity all through the year is required. The procedure of cultivating plants hydroponically without light from the sun or soil is described in the proposed study. The level of the fertilizer solution and the presence of algae are monitored, and variables like humidity and temperature are assessed. As the level of the nutrient solution drops, a mechanism for automatically dispensing nutrient solution is also designed. The fresh nutrient solution is supplied to the container after emptying the current solution when presence of algae is identified. Farmers can routinely check their crops to improve their growth and output from the cloud-basedstorage of the sensor data.",
    "keywords": "IoT; hydroponics; cloud platform; sensors; NodeMCU; Arduino IDE",
    "released": 2023,
    "link": "https://doi.org/10.1109/InCACCT57535.2023.10141749",
    "interesting": "-"
  },
  {
    "title": "Landslide Monitoring Using IoT System with Cloud Platform",
    "abstract": "The natural disasters poses the losses in the disaster prone area. Landslides pose great socio-economic threats to regions which geography of the location favors it. The hill states of the India are more prone to the landslides due to the heavy rain fall other environmental challenges. The researchers found that ninety-nine percent of landslides induced due to heavy rain falls. The severity of disasters especially landslides is gradually increasing day by day in scale and frequency, resulting in widespread loss of human lives and infrastructure of the nation. The detection, monitoring and mitigation of the landslides in hill states is the major concern. The mitigation and monitoring of the effects of landslides can be performed using technology integration. This article presented an innovative landslide monitoring system. It is based on the IoT protocols based monitoring system consisting of cloud platform which provides instant alerts of upcoming landslides on the basis of real time data set collected inside the IoT cloud platform. As part of this monitoring system, landslide data is sent directly to the civil protection department and notified to the local population for the awareness and future precautionary safety measures. The results and discussions section shows the real time data visualization of the landslide inducting parameters, including metrological, geophysical and hydrological parameters.",
    "keywords": "Soil moisture Sensor; Arduino uno; Accelerometer sensor; Arduino IDE; Cloud; Internet of Things",
    "released": 2023,
    "link": "https://doi.org/10.1109/UPCON59197.2023.10434461",
    "interesting": "-"
  },
  {
    "title": "HIPAAChecker: The Comprehensive Solution for HIPAA Compliance in Android mHealth Apps",
    "abstract": "The proliferation of mobile health technology, or mHealth apps, has necessitated the paramount importance of safeguarding personal health records. These digital platforms afford individuals the ability to effortlessly monitor and manage their health-related issues, as well as store, share, and access their medical records and treatment information. As the utilization of mHealth apps becomes increasingly widespread, it is imperative to ensure that protected health information (PHI) is effectively and securely transmitted, received, created, and maintained in accordance with the regulations set forth by the Health Insurance Portability and Accountability Act (HIPAA). However, it is unfortunate to note that many mobile app developers, including those of mHealth apps, are not fully cognizant of the HIPAA security and privacy guidelines. This presents a unique opportunity for research to develop an analytical framework that can aid developers in maintaining a secure and HIPAA-compliant source code, while also raising awareness among consumers about the privacy and security of sensitive health information. The plan is to develop a framework which will serve as the foundation for developing an integrated development environment (IDE) plugin for mHealth app developers and a web-based interface for mHealth app consumers. This will help developers identify and address HIPAA compliance issues during the development process and provide consumers with a tool to evaluate the privacy and security of mHealth apps before downloading and using them. The goal is to encourage the development of secure and compliant mHealth apps that safeguard personal health information.",
    "keywords": "HIPAA; mHealth; Android Apps; Privacy & Security; IDE plugin",
    "released": 2023,
    "link": "https://doi.org/10.1109/COMPSAC57700.2023.00282",
    "interesting": "-"
  },
  {
    "title": "Web Performance Engineering - Finding Best Data Structure For Automatically Collected HTML Locators",
    "abstract": "The research basically aims to identify finding the best Data Structure and automatic detection of locators. This in turn leads to tracking (navigating) for the URL and its content. The term “Locators” can be described as an address that identifies a web element uniquely that is no repeatable within the webpage, It's a command that informs Selenium Integrated Development Environment which Graphical User Interface elements like - Text Box, Buttons, Check Boxes etc, it needs to operate on. Detecting correct GUI elements is a prior work for generating an automation script but, precise identification of GUI elements is much more difficult. Sometimes, you might even end up working with incorrect GUI elements or no elements at all, therefore, using the right locator ensures that the tests are faster, more reliable, or has lower maintenance over releases.",
    "keywords": "Locators; Selenium IDE",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICCSC56913.2023.10142973",
    "interesting": "-"
  },
  {
    "title": "Developing EDTL IDE Kernel with Xtext Framework",
    "abstract": "This process of creating an IDE core for the event-driven temporal requirements specification language called EDTL is outlined in the paper. Developed at the Institute of Automation and Electrometry SB RAS, EDTL is used for specifying requirements for reactive software. Such programs control cyber-physical systems, embedded systems, and PLC systems built using IEC 61131-3 or poST languages. Most of these safety critical systems are subject to mandatory verification. At the same time, as practice shows, failures in the operation of such systems in most cases are caused by errors in the specification of requirements. Therefore, the issue of requirements specification and the issue of requirements specification language are extremely important for the safety of the reactive system being developed. The advantages of EDTL include the relative simplicity of the language, the ability to specify requirements in terms of events and time intervals, independence from verification systems, and the presence of strict formal semantics that can be expressed using linear temporal logic. These advantages make EDTL a very promising requirements specification tool. The EDTL IDE comprises a language-oriented editor equipped with syntax and semantic analysis capabilities, an abstract syntax tree generator, and a library facilitating interaction with the generated abstract syntax tree. The research, the results of which are presented in the paper, is aimed at creating and EDTL IDE. The paper provides the motivation for the research, development requirements, IDE architecture, and the process of creating an IDE using the Eclipse toolchain. Finally, the article discusses the possibility of creating a web version of the EDTL IDE based on the results obtained and using Theia IDE.",
    "keywords": "requirements engineering; cyber-physical systems; process-oriented programming; IDE design; parser; domain specific languages; EDTL-requirements",
    "released": 2023,
    "link": "https://doi.org/10.1109/APEIE59731.2023.10347639",
    "interesting": "-"
  },
  {
    "title": "Savery: A Framework for the Assessment and Comparison of Mobile Development Tools",
    "abstract": "Different types of mobile development tools and frameworks to build web applications are constantly and rapidly emerging, making it difficult for developers to choose an appropriate one for their needs. In this work, we propose a novel framework to assess and benchmark development tools according to performance (and potentially dependability and security). The framework defines the components and procedures required to define and execute the benchmarks. To demonstrate the applicability of the proposed framework, we implemented it for a concrete benchmark focused on assessing the performance of a representative application developed by different development tools. For this, we defined a representative set of features for the application and a set of relevant metrics to characterize their performance. The benchmarking campaign is executed on each application in an automated manner. The metrics are collected during the execution of the campaign and the results are then analyzed to compare the applications, their features, and the development tools that produced them. The results show that the same applications implemented in different frameworks are different in terms of software metrics and build time and show different performance when executing different functions (features) in terms of computation time, memory, and CPU usage. This reveals the effectiveness of the approach and the framework proposed to assess and compare the mobile development tools.",
    "keywords": "Mobile applications; Native applications; Web applications; Benchmarking; Performance; Android",
    "released": 2023,
    "link": "https://doi.org/10.1109/QRS-C60940.2023.00041",
    "interesting": "-"
  },
  {
    "title": "Beyond Blocks: Lilypad, a Text-Based Visual Code Editor",
    "abstract": "Research on dual-modality and frame-based editors has uncovered strengths and weaknesses to block-oriented approaches to programming and instruction. Building on lessons learned from these editing models, we developed Lilypad, a text-based visual code editor. Lilypad is a modern text-based code editor that generates visual frames around code structures in real-time. Lilypad is designed to simplify the addition of new languages and can operate as a native-code standalone application, plugin, or web-based editor. In this demonstration, we showcase Lilypad's features, design, and real-time use.",
    "keywords": "dual-modality; frame-based editor; programming education; computer science education",
    "released": 2023,
    "link": "https://doi.org/10.1109/VL-HCC57772.2023.00037",
    "interesting": "-"
  },
  {
    "title": "Techniques to Maximize O-Level Cyber Security Protection",
    "abstract": "Cyber security threats continue to grow on a daily basis with attacks coming from a wide range of sources including phishing, spear phishing, malware, ransomware, exploiting cloud vulnerabilities, Botnet, state-sponsored attacks, as well as others. Of the aforementioned, state-sponsored attacks not only pose a significant threat to western financial, educational and healthcare institutions, but also threaten the systems and data utilized by a wide range of government agencies and contractors. The military test community is not immune to these threats either with many currently deployed automatic test equipment (ATE) implementations, across the various maintenance levels from the flightline to the depot, being increasingly vulnerable. A growing number of Organizational Level (O-Level) test sets are now exposed to cyber threats as their architectures and interfaces continue to evolve to meet the ever-growing need for increased processing power and measurement performance. Further, O-Level test sets typically connect to the platform (i.e. aircraft) and as such, pose a much greater cyber-security threat. Physical threats have always existed, even for previous generations of test sets, but the nature of the vulnerabilities has largely shifted to new types of interfaces. Replacing legacy test sets, that were deployed with limited external connectivity and data storage capabilities, with advanced processor-based implementations exposes them to a new set of cyber security concerns including possible vulnerabilities with the operating system, the test development environment, the test executive (sequencer) as well as threats from other new interfaces that could possibly be exploited. This paper will delve into these and other possible vulnerabilities with modern O-Level test set implementations, including the impact from the underlying hardware and software architectures. It will discuss the Department of Defense (DOD) Security Technical Implementation Guide (STIG) for devices and systems and identify where the STIG requirements apply to O-Level test sets. The analysis will include aspects such as file protections, access control, data encryption, activity logs, user group accounts and privileges, test program set (TPS) event logging and others. The analysis will also cover cyber security benefits from utilizing a cyber-approved integrated test development and test executive environment, and identify techniques to maximize the proper protections for current and future deployments.",
    "keywords": "Cyber Security; Cybersecurity; Armament Test; O-Level Test; IDE",
    "released": 2023,
    "link": "https://doi.org/10.1109/AUTOTESTCON47464.2023.10296266",
    "interesting": "-"
  },
  {
    "title": "Listen Veronica! Can You Give Me a Hand With This Bug?",
    "abstract": "Developing software implies looking for documentation, following tutorials, making implementation decisions, encountering errors, and overcoming them. Behind each aspect is the developer's reasoning that, if not collected, is lost after the implementation. Conversely, if captured and linked to the code, the developers' reasoning and motivations for each step they accomplish can become a valuable asset, meaningful for them and other developers. Looking for a mechanism to capture such knowledge seamlessly, we present Veronica. It is a conversational agent integrated directly into Visual Studio Code that, based on the developers' self-explanatory reasoning, records memos and links them with the code they are writing. Furthermore, Veronica can interact with the web browser to automatically gather the sources consulted by the developer and attach them to the code. We validated our approach by conducting a usability study with eight participants that positively assessed the tool's usefulness and suggested improvements in the graphical interface.  © 2023 ACM.",
    "keywords": "conversational agent; development environment; documentation; software",
    "released": 2023,
    "link": "https://doi.org/10.1145/3596454.3597179",
    "interesting": "-"
  },
  {
    "title": "IoT Based Smart Shopping Cart",
    "abstract": "A supermarket is a place with different sorts of products which comes under a same roof, by this shopping becomes easy but there are some issues with this type of shopping method that is traditionally every person in the supermarket purchases the product by collecting them all in a trolley. Upon purchase, the billing process takes quite some time and also waiting in long queue will be even worse on festive season and weekends. To overcome these problems, we could incorporate the advancing technology by introducing a smart shopping cart, this method benefits the buyers as well as the shop owners. Each cart has an inbuilt system of a RFID reader to scan the products instead of barcode, an LCD module for displaying product details and cost of total products purchased by the customers. A webpage for generation of a digital copy of the bill has been created by using ESP8266 Wi-Fi module and a power supply for stepping down the voltage and the system to can be implemented by using the Arduino IDE, it is a software tool which we have used for programming.  © 2023 IEEE.",
    "keywords": "Arduino IDE; ESP8266 Wi-Fi module; RFID reader; RFID tag",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICCEBS58601.2023.10448761",
    "interesting": "-"
  },
  {
    "title": "Development iterations based on web augmentation and context tasks",
    "abstract": "The use of prototypes in requirements engineering has widely known benefits since they actively involve the stakeholders in the development process. Web Augmentation techniques make it possible to build prototypes relying on existing web applications. Thus, high fidelity mockups can be quickly generated. One of the most critical activities is dividing requirements into tasks and managing them through the development process. This paper proposes an approach that includes high fidelity mockups into the Task-oriented Development approach. The proposed approach consists of the following steps: (i) end-users specifies requirements, (ii) a product owner verifies and prioritizes the requirements, (iii) tasks are defined and included in a kanban board, (iv) developers should provide the functionality, and (v) the product owner should approved the functionality. The main contribution of this approach is to integrate the requirements specified through web augmentation mockups, into the development environment via a task-oriented development approach. Thus, developers will have a rich context that facilitates the understanding of the requirements. At the same time, the management of the development process will have benefits because of the traceability between tasks and requirements. This paper describes the approach proposed, called “WAMRI”, and an application of its usage, as well as a tool to support the application. © 2022, The Author(s), under exclusive licence to Springer Science+Business Media, LLC, part of Springer Nature.",
    "keywords": "Requirements engineering; Software development environments; Software tools; Task contexts; Web augmentation; Web engineering",
    "released": 2023,
    "link": "https://doi.org/10.1007/s11042-022-13694-2",
    "interesting": "-"
  },
  {
    "title": "Deep Learning Fusion: CNN-LSTM Hybrid for Robust COVID-19 Forecasting and Spatial Localization",
    "abstract": "The corona virus was first identified in Wuhan, China and has spread around the globe. Around 1.8 million people have been infected, with 114,698 people dying as a result. Due to the number of instances has increased rapidly, most of the countries are experiencing a lack of testing kits and resources. Previous prediction method is based only on the historical data. So the prediction accuracy is less, here the external factors are also necessary to analyze the number of cases that will occur. The method proposed is based on by integrating CNN and LSTM framework to assist radiologist and clinicians in recognising COVID-19 cases in X ray images. The main aim of this work is to predict cases from the data sets available in online. The prediction is done by using Convolutional neural network and LSTM approach. The proposed work performs better than existing methods in-terms of accuracy in prediction. © 2023 IEEE.",
    "keywords": "Anaconda; DCN; Floydhub; Jupyter notebook IDE; Kaggle; Keras; LSTM; Matplotlib; Numpy; Opencv; Pandas; Python; Tensorflow",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICDSAAI59313.2023.10452516",
    "interesting": "-"
  },
  {
    "title": "Broadening the view of live programmers: Integrating a Cross-Cutting Perspective on Run-Time Behavior into a Live Programming Environment",
    "abstract": "Live programming provides feedback on run-time behavior by visualizing concrete values of expressions close to the source code. When using such a local perspective on run-time behavior, programmers have to mentally reconstruct the control flow if they want to understand the relation between observed values. As this requires complete and correct knowledge of all relevant code, this reconstruction is impractical for larger programs as well as in the case of unexpected program behavior. In turn, cross-cutting perspectives on run-time behavior can visualize the actual control flow directly. At the same time, cross-cutting perspectives are often difficult to navigate due to the large number of run-time events. We propose to integrate cross-cutting perspectives into live programming environments based on local perspectives so that the two complement each other: The cross-cutting perspective provides an overview of the run-time behavior; the local perspective provides detailed feedback as well as points of interest to navigate the cross-cutting perspective. We present a cross-cutting perspective prototype in the form of a call tree browser integrated into the Babylonian/S live programming environment. In an exploratory user study, we observed that programmers found the tool useful for debugging, code comprehension, and navigation. Finally, we discuss how our prototype illustrates how the features of live programming environments may serve as the basis for other powerful dynamic development tools. © 2024 Patrick Rein, Christian Flach, Stefan Ramson, Eva Krebs, and Robert Hirschfeld.",
    "keywords": "Call trace; Debugging; Dynamic analysis; Exploratory programming; Live programming; Squeak/Smalltalk; User study",
    "released": 2023,
    "link": "https://doi.org/10.22152/programming-journal.org/2024/8/13",
    "interesting": "-"
  },
  {
    "title": "An eFPGA Generation Suite with Customizable Architecture and IDE",
    "abstract": "From edge devices to cloud servers, providing optimized hardware acceleration for specific applications has become a key approach to improve the efficiency of computer systems. Traditionally, many systems employ commercial field-programmable gate arrays (FPGAs) to implement dedicated hardware accelerator as the CPU's co-processor. However, commercial FPGAs are designed in generic architectures and are provided in the form of discrete chips, which makes it difficult to meet increasingly diversified market needs, such as balancing reconfigurable hardware resources for a specific application, or to be integrated into a customer's system-ona- chip (SoC) in the form of embedded FPGA (eFPGA). In this paper, we propose an eFPGA generation suite with customizable architecture and integrated development environment (IDE), which covers the entire eFPGA design generation, testing, and utilization stages. For the eFPGA design generation, our intellectual property (IP) generation flow can explore the optimal logic cell, routing, and array structures for given target applications. For the testability, we employ a previously proposed shipping test method that is 100% accurate at detecting all stuck-at faults in the entire FPGA-IP. In addition, we propose a user-friendly and customizable Webbased IDE framework for the generated eFPGA based on the NODE-RED development framework. In the case study, we show an eFPGA architecture exploration example for a differential privacy encryption application using the proposed suite. Then we show the implementation and evaluation of the eFPGA prototype with a 55 nm test element group chip design.  © 2023 The Institute of Electronics.",
    "keywords": "application-specific acceleration; eFPGA; FPGA architecture; FPGA CAD; FPGA-IP",
    "released": 2023,
    "link": "https://doi.org/10.1587/transfun.2022VLP0008",
    "interesting": "+"
  },
  {
    "title": "An Integrated Development Environment for the Design of Fuzzy Human-centric System in Accordance with IEEE Standard 1855-2016",
    "abstract": "A fuzzy Logic System (FLS) has the unique potential of intelligent decision-making capability with the input data, which are imprecise and unpredictable but can be expressed using linguistic rules. However, such FLS strongly depends on the hardware architecture of the systems under consideration. A language called Fuzzy Markup Language (FML), which is based on XML, has the ability to express fuzzy systems without taking into account either hardware or software restrictions, thus enabling sharing effectively among distributed environments. FML creates a unified and clearly defined FLS that is independent of its previous representation. It also increases the capabilities of system designers by giving them access to a range of services that accelerate the process of creating a distributed or centralised fuzzy system. This can be done either through a centralised cloud-based platform or through a distributed cloud-based platform. FML-related software libraries, such as Simpful (a Python-based library) and Java FML (JFML, a Java-based library), have added to the novelty in it. However, JFML and Simpful enable fuzzy system modeling for programmers only in the abovementioned programming languages. Hence a need for the development of an open-source FLS which will be capable of enabling fuzzy system-based modelling is felt. The present communication introduces an enhancement of JFML through a visual environment based on GUI following IEEE Std 1855-2016. The functionalities of user-friendly visual FML are developed considering the data related to Human Activity Recognition (HAR) and other physiological data like SpO2 and pulse rate obtained from wearable sensors to compare the performances. © 2023 ACM.",
    "keywords": "azure; fls; fml; fuzzy logic; gui; jfml;; real-time; soa",
    "released": 2023,
    "link": "https://doi.org/10.1145/3594806.3596585",
    "interesting": "-"
  },
  {
    "title": "Enabling End-Users in Designing and Executing of Complex, Collaborative Robotic Processes",
    "abstract": "Over the last years, capabilities of robotic systems have quantitatively and qualitatively improved. But going beyond isolated robotic systems, the integration and interoperability of robotic capabilities in complex work processes remains a major challenge. This lack of tools to integrate robots needs to be addressed on technical, semantic and organizational level. In the ROBxTASK research project, we developed an approach to support cooperation between different types of users in order to enable domain experts, with no robotic know-how, to work with robot-assisted workflows. By engineering robotic skills at a useful and usable level of abstraction for experts in different domains, we aim to increase re-usability of these skills on two different levels, (robotic) device level, and on level of application specific workflows. The researched prototype consists of a web platform, which allows (a) engineers to register (robotic) devices and the implemented skills of the devices, (b) domain experts to use a graphical task design environment to create workflows across multiple robotic devices and lastly (c) robot co-workers to download and execute the workflow code in a local environment with digital twins or real robots. Additionally skills and workflows can be shared across organisations. Initial user studies have shown that the visual programming environment is accessible and the defined skill-set is easy to understand even for domain experts that are inexperienced in the field of robotics. © 2023 by the authors.",
    "keywords": "digital twin; end-user programming; healthcare robotics; robotic devices; skill-based programming; visual programming environment",
    "released": 2023,
    "link": "https://doi.org/10.3390/asi6030056",
    "interesting": "-"
  },
  {
    "title": "Catchword: Language Server Protocol An Introduction to the Protocol, its Use, and Adoption for Web Modeling Tools",
    "abstract": "With the introduction of the Language Server Protocol (LSP), a fundamental shift has been observed in the development of language editing support for Integrated Development Environments (IDEs), such as VS Code, the traditional Eclipse IDE, or Eclipse Theia. LSP establishes a uniform protocol that standardizes the communication between a language client (e. g., an IDE like Eclipse) and a language server (e. g., for a programming language like Java). The language client only needs to be able to interpret and understand the protocol instead of the specific programming language. Likewise, the language server can focus on language support and does not need to consider the specifics of a respective IDE. This reduces the complexity of realizing language support on different editors and IDEs and enables smooth transitions from one IDE to another. LSP is an open and community-driven protocol that has been developed within the realm of the VS Code community, initiated and driven by Microsoft. The generic concept and architectural pattern of LSP enables widespread applications that go far beyond the realization of editing support for programming languages. This paper provides an introduction to LSP, describes its evolution and core characteristics, and delineates its potential for revolutionizing not only the IDE market but also other software systems, such as modeling tools. © 2023, Gesellschaft fur Informatik (GI). All rights reserved.",
    "keywords": "Conceptual Modeling; Graphical Language Server Protocol; Integrated Development Environment; Language Server Protocol; Modeling tools; Software Engineering",
    "released": 2023,
    "link": "https://doi.org/10.18417/emisa.18.9",
    "interesting": "+"
  },
  {
    "title": "Development and Assessment of an Indoor Air Quality Control IoT-Based System",
    "abstract": "Good health and well-being are primary goals within the list of Sustainable Development Goals (SDGs) proposed by the United Nations (UN) in 2015. New technologies, such as Internet of Things (IoT) and Cloud Computing, can aid to achieve that goal by enabling people to improve their lifestyles and have a more healthy and comfortable life. Pollution monitoring is especially important in order to avoid exposure to fine particles and to control the impact of human activity on the natural environment. Some of the sources of hazardous gas emissions can be found indoors. For instance, carbon monoxide (CO), which is considered a silent killer because it can cause death, is emitted by water heaters and heaters that rely on fossil fuels. Existing solutions for indoor pollution monitoring suffer from some drawbacks that make their implementation impossible for households with limited financial resources. This paper presents the development of IdeAir, a low-cost IoT-based air quality monitoring system that aims to reduce the disadvantages of existing systems. IdeAir was designed as a proof of concept to capture and determine the concentrations of harmful gases in indoor environments and, depending on their concentration levels, issue alarms and notifications, turn on the fan, and/or open the door. It has been developed following the Test-Driven Development Methodology for IoT-based Systems (TDDM4IoTS), which, together with the tool (based on this methodology) used for the automation of the development of IoT-based systems, has facilitated the work of the developers. Preliminary results on the functioning of IdeAir show a high level of acceptance by potential users. © 2023 by the authors.",
    "keywords": "air quality; development methodology; development tool; Internet of Things; microcontrollers",
    "released": 2023,
    "link": "https://doi.org/10.3390/electronics12030608",
    "interesting": "-"
  },
  {
    "title": "Leveraging the Power of Blockchain Technology for Building a Resilient Crowdfunding Solution",
    "abstract": "Crowdfunding is a fundraising method that involves raising small amounts of money from a large number of people, typically through online platforms. It allows individuals, businesses, or organizations to present their projects, ideas, or causes to a global audience and request financial support from a crowd of potential backers. Crowdfunding has gained popularity across various industries, including technology, arts, entrepreneurship, social causes, and more. It provides a democratized approach to financing, allowing innovative and creative ideas to come to life with the support of a diverse community of backers. The current research explores the potential of blockchain technology and smart contracts to revolutionize traditional crowdfunding methodologies. Traditional crowdfunding has been plagued by issues such as lack of transparency, centralized intermediaries, slow payment processing, fraud, and limited access. In response to these challenges, blockchain solutions offer a transparent and decentralized approach, allowing contributors to track their contributions, eliminate intermediaries, automate fund disbursement, and enable cross-border transactions. Tokenization and reduced entry barriers further enhance accessibility and participation. The current research presents a conceptual model and implementation of a smart contract-based crowdfunding system using Solidity, addressing these issues and providing a foundation for future research in the field of decentralized crowdfunding. The research scope has been expanded to encompass Initial Coin Offerings (ICOs) as a means of fundraising for startups. Within this context, fungible tokens, which adhere to the ERC-20 standard, are generated using the OpenZeppelin library. These tokens are then subject to approval by the startup, granting authorization to a crowdfunding manager for the purpose of distributing tokens to contributors based on their respective contributions. The percentage of tokens made available for distribution can be customized to suit the specific needs and preferences of the startup. © 2023 Elsevier B.V.. All rights reserved.",
    "keywords": "Blockchain; Initial Coin Offerings; Remix Integrated Development Environment; Smart Contract; Startups; Tokens",
    "released": 2023,
    "link": "https://doi.org/10.1016/j.procs.2023.12.056",
    "interesting": "-"
  },
  {
    "title": "Development of Network Public Opinion Analysis System in Big Data Environment Based on Hadoop Architecture",
    "abstract": "The rapid development of the Internet has given individuals the freedom to fully express their own opinions and value demands, and also accelerated the occurrence and evolution of online public opinions. In essence, online public opinion reflects social conditions and public opinions. In the era of big data, various kinds of data generated by the Internet every day are rapidly growing at the scale of PB level, which poses new challenges to the collation and analysis of online public opinion information. In order to comprehensively improve the authenticity and comprehensiveness of online public opinion governance, realize scientific guidance of public opinion, and optimize the way of online public opinion governance, this paper develops an online public opinion analysis system in the big data environment based on Hadoop architecture, and adopts data mining technology to analyze public opinion in three stages before, during and after the event. It evaluates the risks, predicts the development trend, puts forward early warning in time, and provides theoretical guidance for the governance reform of online public opinions.  © 2023 The Authors. Published by Elsevier B.V.",
    "keywords": "Big Data Environment; Development Environment; Hadoop Architecture; Markov Prediction Model; Network Public Opinion Analysis System",
    "released": 2023,
    "link": "https://doi.org/10.1016/j.procs.2023.11.033",
    "interesting": "-"
  },
  {
    "title": "Leveraging Static Analysis: An IDE for RTLola",
    "abstract": "Runtime monitoring is an essential part of guaranteeing the safety of cyber-physical systems. Recently, runtime monitoring frameworks based on formal specification languages gained momentum. These languages provide valuable abstractions for specifying the behavior of a system. Yet, writing specifications remains challenging as, among other things, the specifier has to keep track of the timing behavior of streams. This paper presents the RTLola Playground, a browser-based development environment for the stream-based runtime monitoring framework RTLola. It features new methods to explore the static analysis results of RTLola, leveraging the advantages of such a formal language to support the developer in writing and understanding specifications. Specifications are executed locally in the browser, plotting the resulting stream values, allowing for intuitive testing. Step-wise execution based on user-provided system traces enables the debugging of identified errors. © 2023, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Integrated Development Environment; Runtime Monitoring; Static Analysis; Visualization",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-3-031-45332-8_13",
    "interesting": "-"
  },
  {
    "title": "A Teacher Professional Development Tool for Creating and Sharing Research Lessons on Evidence-Based Teaching Strategies",
    "abstract": "This demo paper presents a teacher professional development (PD) tool aimed at increasing educator adoption of evidence-based teaching and learning strategies such as retrieval practice, distributed practice, spaced learning, and reframing. The tool, evolving from Learning Design and online communities of teachers’ technologies, is an online platform centered on a teacher-led inquiry design template. The template, developed to scaffold teacher creation of research lessons (i.e., case studies) based on their use of the strategies, presents a 5-step teacher inquiry process: (1) lesson planning, (2) data planning, (3) activity and materials, (4) sense-making, and (5) communication. In addition to enabling teachers to create their own research lessons, document the lesson effects, and share their work with other teachers; the tool provides teachers with content and resources to deepen their understanding of the strategies and to support their usage. Furthermore, exemplar research lessons that teachers can duplicate and adapt to their contexts are offered to facilitate teacher learning and creation of case studies. The tool was co-designed with teachers as part of a European project that ran a series of workshops for teachers in four countries during the academic year 2021–2022 – and has been integrated into a 20-h teacher PD program. © 2023, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Learning design; Lesson study; Teacher inquiry; Teacher professional development",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-3-031-42682-7_62",
    "interesting": "-"
  },
  {
    "title": "Electronic Transaction System Construction Utilizing the Internet of Things",
    "abstract": "Internet - of - things (IoT) technologies must be developed for e-payments due to the surge in cell use. The payment network is yet another significant IoT challenge. The links will be successfully used in the future to improve and streamline life by taking funds in exchange for the goods and services. In this inquiry, money is transferred. It consists of a number of interconnected components, including a transmitter, a Rfid tag, a NodeMCU microcontroller, and compatible programming. A tab serves as a representation of the shopping excursion, or user data is stored on the data tier. In order to maintain the i.d. of sectors, including payment commerce, where one allows clients to complete all having to buy debt securities tech, a security mechanism for the a basic Smart things price strategy is articulated to use user proof in the sensor of cellular telephones, such as identity verification and designation. Management efficiency and conventional approaches are still used by several institutions and bank transactions. Multiple documentation must be filed for each trade, which might take time. As a result, the mechanism for sending money is a crucial component of online shopping. It is a financial service that makes use of lan, PCB pc (servo controller) cards, anonymity, and other communication and information technologies.  © 2023 IEEE.",
    "keywords": "API and IDE; E-Payment; IoT; NodeMCU; PCB; RIFD; Security",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICACITE57410.2023.10183008",
    "interesting": "-"
  },
  {
    "title": "The Construction of Multi-specialty Collaborative Digital Development Environment for Space Optical Remote Sensor",
    "abstract": "In view of the characteristics of multidisciplinary and cross-regional collaborative development of space optical remote sensor, the collaborative modeling and management requirements from the mission demonstration, scheme design, detailed design to the manufacturing stage are analyzed, and an architecture of space optical remote sensor multidisciplinary collaborative digital development environment is proposed, for solving the low collaboration efficiency problem. The system integration technology based on unified model is adopted to realize top-down design throughout the whole design process. By developing the unified collaborative platform, the design process knowledge is solidified to the platform. Also, the process driven collaborative design between the overall design and disciplinary design, and centralized management of various models are realized. Then, the development data transmission link is gotten through. Based on the mixed sharing mode, a safe and controllable shared collaborative development space is formed. The application shows that development environment can support the multidisciplinary and cross-regional collaborative development online and efficiently. © 2023 SPIE.",
    "keywords": "Collaborative platform; Digital development; Multidisciplinary collaborative; Space optical remote sensor",
    "released": 2023,
    "link": "https://doi.org/10.1117/12.2691759",
    "interesting": "-"
  },
  {
    "title": "Augmented Reality Applications in the Automotive Industry",
    "abstract": "This research paper examines the implications and transformative capabilities of Augmented Reality (AR) within the automotive landscape. We examine how AR catalyses radical changes across various automotive functions, from design and manufacturing to customer engagement and vehicle operation. While AR is poised to elevate operational efficiencies significantly, it also presents challenges, such as AR content authoring complexity and hardware constraints that restrict mass consumer adoption. This paper surveys the current AR state-of-the-art technology, systems and pivotal automotive applications. The primary objective is to offer a thorough comprehension of the underlying concepts, methodologies, and applications that underpin the integration of AR within the automotive industry. It concludes by discussing potential barriers to AR implementation and outlines future avenues for research, including software scalability and the integration of cloud and edge computing to alleviate device limitations.  © 2023 IEEE.",
    "keywords": "AR Work Instructions (ARWI); Augmented Reality (AR); Automotive Industry; Development Tools; User Experiences",
    "released": 2023,
    "link": "https://doi.org/10.1109/MIUCC58832.2023.10278357",
    "interesting": "-"
  },
  {
    "title": "WebChucK IDE: A Web-Based Programming Sandbox for ChucK",
    "abstract": "WebChucK IDE is a web-based integrated development environment for writing and running ChucK code. WebChucK IDE provides tools and workflows for developing and running ChucK on-the-fly and in any web browser, on desktop and mobile devices. This environment integrates ChucK development with visualization and code-based generative web UI elements to offer an accessible and playful way to program computer music. In this paper, we detail the design and implementation of WebChucK IDE and discuss its various affordances and limitations as a sandbox for learning, experimentation, and art making. © 2023 Terry Feng et al.",
    "keywords": "",
    "released": 2023,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85171774087&partnerID=40&md5=410fd58336de407413cdbf72c9797468",
    "interesting": "-"
  },
  {
    "title": "Mobile Health App – A Tool for Health Services",
    "abstract": "Use of mobile technology in the field of medicine and healthcare is denoted as great health on the go. This mobile health app is used to keep the doctor's information, the patients can book the doctor’s appointment and also in this app health information and health tips are dynamically displayed. The patient can also have a conversation with the physician such that the patient can visit the hospital physically at what time the doctor is present. By uploading the medical data of patients through chat, the doctor can give some suggestions to patients online and also can suggest some medicine. The online payment can be done to the doctor. This app will help the old age people who cannot go to the hospital and also the patient who were so far from the hospital. During the pandemic situations like Covid-19, this app would be very useful to track and provide treatment online. Many features can be added to this app in future. © Grenze Scientific Society, 2023.",
    "keywords": "Android Studio; App Development tools; Health care; Health services; Mobile health app",
    "released": 2023,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85174406512&partnerID=40&md5=ad977557ffceef4e110183b25cd3858a",
    "interesting": "-"
  },
  {
    "title": "Study on Web Based Virtualized Containers for Software Development Lectures in BYOD",
    "abstract": "Virtualization technology is commonly employed to manage multiple computers within a shared environment. However, the growing prevalence of Bring Your Own Device (BYOD) practices, allowing users to utilize their personal computers, has presented challenges in achieving a standardized computing environment. To address this issue, study proposes a web service with the construction of a flexible software development environment for BYOD setups, leveraging container-based virtualization technology in the software development education domain. Specifically, the proposed solution enables the effortless creation of custom containers by selecting the necessary functionalities via a web interface. These containers can then be accessed and utilized by users through the web. Consequently, users can establish a containerized virtual environment in a BYOD context without relying on their own knowledge and expertise. Furthermore, the utilization of web-based tools is anticipated to enhance the maintainability and convenience of containers in this context. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd 2023.",
    "keywords": "BYOD; Educational Development Environment; Virtualization Environments",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-981-99-8296-7_21",
    "interesting": "-"
  },
  {
    "title": "Low Cost Precision Farming and Remote Monitoring Using Cloud",
    "abstract": "Precision agriculture is a rapidly growing field that has seen experienced substantial investment and adoption in recent years. The adoption of precision agriculture is driven by the need to produce more food to feed a growing global population, while minimizing the environmental impact of agriculture. Thefactors such as the increasing use of precision farming techniques, advancements in agricultural technologies, and the growing demand for food as drivers of this growth. Overall, precision farming is a promising approach it has the capacity to completely alter how we generate food. The application of IoT, artificial intelligence, and machine learning can definitely help farmers to optimize their crop yield while reducing the amount of human labour required.The implementation of using a NodeMCU, a DHT11 sensor, and a soil moisture sensor to create an unexpensive automatic watering system is a great starting point. © 2023 IEEE.",
    "keywords": "Arduino IDE; Arduino UNO; Humidity and Temperature; Soil Moisture Sensor",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICCCNT56998.2023.10306633",
    "interesting": "-"
  },
  {
    "title": "Proposal for a Peer-to-Peer Coding Platform for Teaching Introductory Programming to Large Classes of Novice Students",
    "abstract": "Universities are increasingly introducing programming courses for beginners into their curricula as programming knowledge becomes a key skill in various fields which results in larger class sizes for programming teachers. Three key aspects of efficient programming education were identified: integrated development environments, collaboration through pair programming, and assessment with feedback methods. A novel platform designed for novice students was developed to embed an Integrated Development Environment (IDE) and live pair programming in a web browser. The platform was tested by 192 student volunteers from an introductory programming course in the first year of a bachelor’s degree in economics and management. The results indicate that it was useable and group work provided increased grades. The solution was developed mainly as a proof of concept but can be easily adapted to other courses. © The Author(s), under exclusive license to Springer Nature Switzerland AG 2023.",
    "keywords": "Collaborative Coding; Pair Programming; Peer-to-peer; Programming Platform; Web Based Learning; Web IDE",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-3-031-42134-1_16",
    "interesting": "-"
  },
  {
    "title": "Empowering Educators and Learners: A Video Conferencing Application for Online Learning",
    "abstract": "The current market lacks a video conferencing software that seamlessly integrates an IDE, resulting in inconvenience and time consumption for users who have to switch between different applications. Our research aims to provide a solution to this problem by developing an all-in-one video calling app that includes an IDE, real-time whiteboard, and file sharing options. This research paper describes a video calling app that includes an integrated development environment (IDE) as part of its software. The program is intended for usage in meetings and interviews, allowing users to code without switching to another software. It also has a live whiteboard and file sharing capabilities, making it a flexible tool for collaborative work. The application has the power to completely change how online interviews are conducted and how distant teams and educational institutions communicate. We aspire to have a positive influence on how people work and learn in the quickly evolving world of today by offering a free and open platform for remote coding and collaboration. © Grenze Scientific Society, 2023.",
    "keywords": "integrated IDE; Real-time file share; videoconferencing; Web Real-Time Communication",
    "released": 2023,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85174274489&partnerID=40&md5=eddd9cb96726406b427d0bc48db78b00",
    "interesting": "-"
  },
  {
    "title": "Automated Horticulture for Farmers Using IoT",
    "abstract": "India is a country that focuses on raising crops. The agricultural understanding was everything to our ancient populations. The majority of Indians depend on agriculture for their daily needs, and it has a significant impact on the nation's economy. Irrigation becomes challenging in dry areas or cases of little rainfall. To provide the best results and safeguard farmers, it must be forced upon them. A substantial role is played by horticulture, a subsector of agriculture, in the economy, human nutrition, gender mainstreaming, and employment. Fruits, vegetables, flowers, spices, and sauces are examples of horticultural goods, which have continuously increased and now make up a significant portion of the agricultural trade. The purpose of the automatic irrigation control system is to decrease the efforts of the human operator (gardener) in horticulture operations. The goal of the horticulture system is to maintain measures of food security. Farmlands have historically had their soil moisture levels checked manually. This is frequently time-consuming and ineffective, thus a method that is effective at regulating and keeping track of soil moisture levels is required. To communicate data from the board to the user's smartphone or laptop, this study presents an Internet of Things (IoT)-based soil moisture monitor that uses ESP32 with an integrated Wi-Fi module to monitor soil moisture level. The soil moisture monitors measure the amount of water in the soil and notify the farmer when the moisture sensor's predetermined threshold rate rises or falls, indicating overwatering or underwatering, respectively. This control system is based on an Arduino that has been coded in embedded C. Data from the sensor is also transmitted during this procedure, first to the cloud and subsequently to the database server. By ensuring that water is not wasted, the proposed soil moisture monitor's evaluation utilizing ThingSpeak.  © 2023 IEEE.",
    "keywords": "Arduino IDE; DC Pump motor; HT11; Humidity module; Internet of things; Relay; smart automated horticulture; Soil moisture sensor; Temperature; Wi-fi Module",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICECAA58104.2023.10212220",
    "interesting": "-"
  },
  {
    "title": "Impact of reflection in auto-graders: an empirical study of novice coders",
    "abstract": "Background and Context: Auto-graders are praised by novice students learning to program, as they provide them with automatic feedback about their problem-solving process. However, some students often make random changes when they have errors in their code, without engaging in deliberate thinking about the cause of the error. Objective: To investigate whether requiring students using an auto-grading system to reflect on the errors in their code would reduce trial and error behavior often seen in such systems. Method: The paper analyzes the impact of reflection per student and per problem using paired t-tests. Findings: Students took fewer steps to solve the problem in reflective sessions than in Usual Debugging Sessions (4.33 vs 8.04) and they made half as many syntax errors, logic errors, and runtime errors. However, they took more time between runs. Implications: This paper provides evidence that requiring reflection in autograding systems can improve student debugging skills. © 2023 Informa UK Limited, trading as Taylor & Francis Group.",
    "keywords": "actionable learning analytics; auto graders; introductory programming classes; novice programming; online IDE; Reflective debugging",
    "released": 2023,
    "link": "https://doi.org/10.1080/08993408.2023.2262877",
    "interesting": "-"
  },
  {
    "title": "Bringing IDE Support to JSON-LD with the Language Server Protocol",
    "abstract": "JSON-LD is a popular data format used to describe and share semantic data on the web. However, creating and editing JSON-LD documents can be a challenging task, especially when dealing with complex contexts that include many properties. The existing JSON editing functionality may not suffice for developers, and a JSON-LD editor could greatly enhance their experience. In this paper, we introduce a JSON-LD Language Server based on the Language Server Protocol (LSP) that empowers text editors compatible with the LSP (e.g., Visual Studio Code and NeoVim) with IDE functionality, including autocompletion suggestions based on the defined context, semantic highlighting and renaming identifiers inside the document. We believe that a JSON-LD LSP will enhance developer ergonomics and promote its adoption. Moreover, we see high potential for additional features that can be added such as hovering, go-to-definition and code actions like flattening or structuring of JSON-LD documents. © 2023 Copyright for this paper by its authors.",
    "keywords": "Developer UX; JSON-LD; Language Server; Linked Data; Tool",
    "released": 2023,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85184375438&partnerID=40&md5=25fe582687e9f91d91b3a0c961363828",
    "interesting": "-"
  },
  {
    "title": "Developers' Visuo-spatial Mental Model and Program Comprehension",
    "abstract": "Previous works from research and industry have proposed a spatial representation of code in a canvas, arguing that a navigational code space confers developers the freedom to organise elements according to their understanding. By allowing developers to translate logical relatedness into spatial proximity, this code representation could aid in code navigation and comprehension. However, the association between developers' code comprehension and their visuo-spatial mental model of the code is not yet well understood. This mental model is affected on the one hand by the spatial code representation and on the other by the visuo-spatial working memory of developers. We address this knowledge gap by conducting an online experiment with 20 developers following a between-subject design. The control group used a conventional tab-based code visualization, while the experimental group used a code canvas to complete three code comprehension tasks. Furthermore, we measure the participants' visuo-spatial working memory using a Corsi Block test at the end of the tasks. Our results suggest that, overall, neither the spatial representation of code nor the visuo-spatial working memory of developers has a significant impact on comprehension performance. However, we identified significant differences in the time dedicated to different comprehension activities such as navigation, annotation, and UI interactions. © 2023 IEEE.",
    "keywords": "Code comprehension; code navigation; code visualization; cognitive studies; developer productivity; IDE design",
    "released": 2023,
    "link": "https://doi.org/10.1109/ICSE48619.2023.00163",
    "interesting": "-"
  },
  {
    "title": "Air Quality Monitoring Platform",
    "abstract": "Nowadays, Pollution became one of our biggest concerns. Air pollution is a mixture of various harmful solid particles and hazardous chemicals and gases in the atmosphere. Various kinds of sensors are interfaced in this model to determine air quality, humidity, pressure, and the temperature of the surroundings. The NodeMCU board is being interfaced with the sensors indicated above. The MQ135, DHT11, and the HW611 e/p 280, which determine air quality, temperature, humidity, and atmospheric pressure, respectively, are all connected to the Esp8266, and the results are immediately supplied into the ThingSpeak an IoT platform. The resulting value of parameters of air can be seen just by measured readings over a threshold value email alert can also be sent on a user ID utilizing an easy mail transfer protocol which makes the user get notified and take necessary action. The Arduino IDE software was utilized to run the NodeMCU board, Embedded C is used in the coding of the board. To implement the model on ThingSpeak, Cloud computing is used. In this study, the sensors utilized are connected to their respective pin configurations on the board to determine numerous factors in real time and to acquire detection results given by them at that instant. © 2023, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.",
    "keywords": "Air quality sensor (MQ135); Arduino IDE; Humidity and temperature sensor (DHT11); HW611 e/p 280; ThingSpeak",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-981-99-0483-9_29",
    "interesting": "-"
  },
  {
    "title": "Easing Construction of Smart Agriculture Applications Using Low Code Development Tools",
    "abstract": "Smart agriculture applications are a promising path to the future of modern farming. Building smart agriculture applications is a complex undertaking that requires considering different factors, such as the technology that can be used to implement the applications. These factors require advanced skills in software construction, such as handling the distributed setting for smart agriculture applications. As such, implementing smart agriculture applications requires engaging experienced developers with the skills to tackle the issues mentioned above. Low code development tools have risen that domain experts (e.g., agricultural extension workers that give advice to farmers) outside software engineering can use to construct software applications. The low code development tools provide visual programming environments that developers can use intuitively to construct applications. However, the existing low code development tools do not offer support for low infrastructure networking that sensors can use to communicate directly to mobile devices (e.g., smartphones and tablets), computation at the edge, and offline accessibility capabilities at the edge that are crucial for smart agriculture applications. In this paper, we present DisCoPar-K, a low code development tool that supports the properties mentioned above for implementing smart agriculture applications. We show how DisCoPar-K can improve the development of smart agriculture applications by implementing smart agriculture use cases on it. © 2023, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "cloud computing; edge computing; Internet of Things; mobile applications; smart agriculture; visual programming",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-3-031-34776-4_2",
    "interesting": "-"
  },
  {
    "title": "Spying and Bomb Disposal Robot",
    "abstract": "This paper is reporting a novel device configuration of Spying and Bomb Disposal Robot. Bomb disposal operations provide a number of difficulties, including significant hazards to weapon designers, disposal technicians, and mission controllers. A typical explosive ordnance disposal mission will begin with a remote-controlled robot surveying the area, in order to determine whether the explosive can be remotely deactivated. At times, a person who is skilled in bomb disposal is required to deactivate the device. The specialist who detonates the device will do so by donning a defensive suit and helmet, grabbing a toolbox of supplies, and moving around 100 meters to the location. It could be required to climb stairs, squeeze through a small space, or even lay down to reach the bomb's location in order to complete the task. To ease this task we designed the device, also comes with a camera that will enable viewing of both daytime and night time recordings enabled with android application is used to control the entire system. The improved vehicle is constructed from PVC pipes connected to a nearby connection of a rocking buggy to provide sloping security. Spying robot is controlled via the web using the Blynk application. Spying robot has Zigbee connectivity, Meal and gas sensors operate independently and send SMS alerts using the GSM module, along with GPS coordinates.  © 2023 IEEE.",
    "keywords": "Android Phone; Arduino IDE; Blynk Application; Internet of Things (IOT); L293D IC; Metal Detector Sensor; Proteus; Wi-Fi module ESP8266",
    "released": 2023,
    "link": "https://doi.org/10.1109/MAC58191.2023.10177060",
    "interesting": "-"
  },
  {
    "title": "End-user development for interactive web-based virtual reality scenes",
    "abstract": "Recent advances in Virtual Reality (VR) technology and the increased availability of VR-equipped devices enable a wide range of consumer-oriented applications. For novice developers, however, creating interactive scenes for VR applications is a complex and cumbersome task that requires high technical knowledge which is often missing. This hinders the potential of enabling novices to create, modify, and execute their own interactive VR scenes. Although recent authoring tools for interactive VR scenes are promising, most of them focus on experts as the target group and neglect the novices with low programming knowledge. To lower the entry barrier, we provide an open-source web-based End-User Development (EUD) tool, called VREUD, that supports the rapid construction and execution of interactive VR scenes. To address the aspect of construction, VREUD enables the specification of the VR scene including interactions and tasks. Furthermore, our tool supports the execution and immersive experience of the created interactive VR scenes on VR head-mounted displays. Based on a user study, we have analyzed the effectiveness, efficiency, and user satisfaction of VREUD which shows promising results to empower novices in creating their interactive VR scenes. © 2022 Elsevier Ltd",
    "keywords": "Authoring; Development tool; End-user development; Interactive scene; Virtual reality",
    "released": 2023,
    "link": "https://doi.org/10.1016/j.cola.2022.101187",
    "interesting": "-"
  },
  {
    "title": "Cask HLS: A Better Development Tool for Vitis HLS",
    "abstract": "The increasing complexity of modern hardware designs makes it difficult for the developer to easily design, validate, and test ideas while creating RTL (Register Transfer Level) logic. HLS (High-Level Synthesis) has been introduced as a tool to easily design complex and specialized hardware such as machine learning accelerators, processors, and other FPGA designs on a behavioral level, significantly reducing the size and time typically necessary for such undertakings. However, the complex compilation process and the semantic gap between behavioral code and synthesized hardware make resulting designs hard to verify and debug. Cask HLS, a web-application debugger for Vitis HLS, not only loads relevant debugging information faster than Vitis, but also creates new visualizations and quality-of-life improvements such as a side-by-side C++/LLVM-IR schedule viewer, linter, and function call graph, allowing debugging through a lightweight, portable application.  © 2023 IEEE.",
    "keywords": "",
    "released": 2023,
    "link": "https://doi.org/10.1109/ORSS58323.2023.10161946",
    "interesting": "-"
  },
  {
    "title": "IoT Based on Non-invasive Glucometer",
    "abstract": "Diabetes mellitus is named the most important developer source of any kind of major disease and if it’s not treated properly then the majority of it gives severe health-related issues and leads to death. This is considered one of the non-contagious diseases, and it occurs when the sugar level within the blood increases above an average value. Therefore, regular calculation of blood glucose levels could be the condition to take care of sugar patients. Existing techniques for the determination of blood glucose levels are invasive methods that carry small single-use needles that are directly pricked into a finger to collect blood samples out of the body so it's passed to the fresh test tube for further processing chemically to see the number of sugar molecules present there. However, tolerating and reducing the patient's pain and the use of strips of those techniques have led to the process of non-invasive techniques. The near-infrared LED and photodetector determine the sugar and insulin concentration. The attentiveness of glycemia within the blood sample is estimated by the level of infrared emission in the blood. The total concentration level of sugar molecules is on the LCD in an appropriate unit. To start the process, insert the fingertip in between the NIR-LED and NIR-PD. The reflected signal is fetched by the NIR-PD. The evaluation value obtained from it'll be filtered out and then amplified. The noise has been removed by FFT. The filtered signal and amplified to attach to an NPN transistor for getting the negative value and for early showing the evaluated value within the LCD. The signal has been connected to Arduino port A0. Finally, the output value is displayed on the LCD display. © 2023, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.",
    "keywords": "Arduino IDE; Diabetes people; ESP8266 node MCU; Glucometer; IoT cloud; IR (Infrared) sensor; LCD; Non-invasive; Thingspeak",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-981-99-0838-7_43",
    "interesting": "-"
  },
  {
    "title": "Visualizing Environments of Modern Scripting Languages",
    "abstract": "A central learning objective of introductory programming courses is a thorough understanding of environments that arise when programs written in modern programming languages run. An awareness is arising in the CS-Ed community that a mental model based on a runtime stack does not do justice to languages that combine lexical scoping with first-class functions. As a result, debugging and visualization tools designed around a runtime stack are not suitable for this family of languages, which includes Python, JavaScript, Ruby, Lua, Java, and Scheme. As a suitable mental model for environments in these languages, the classical programming textbook “Structure and Interpretation of Computer Programs” (SICP) introduced the environment model of computation using diagrammatic graphics. The SICP authors Hal Abelson and Gerald Jay Sussman designed the environment model to represent the runtime data structures required for executing programs written in such languages while blending out all forms of control. In this paper, we describe a novel tool for automatically and interactively visualizing the execution environments of programs written in the targeted language family. After introducing the environment model in detail, we highlight the main challenges for its automatic and interactive visualization. We outline the architecture of the tool and its integration into a web-based environment for learning the structure and interpretation of computer programs and conclude with an analysis of the tool’s impact based on feedback from 69 course facilitators in Academic Year 2021/22. Copyright © 2023 by SCITEPRESS – Science and Technology Publications, Lda.",
    "keywords": "First-Class Functions; Integrated Development Environments; Learning Programming; Lexical Scoping; Visualization Tools",
    "released": 2023,
    "link": "https://doi.org/10.5220/0011766700003470",
    "interesting": "-"
  },
  {
    "title": "Simplifying the Code Editor Using MEAN Stack Technologies",
    "abstract": "The online coding platform lies on the remote server which can be accessed through browsers. As we know that online code editors are efficient and fast, it is a popular tool among developers. Competitive coding is an essential skill that should be possessed by every graduate. Though we have various coding platforms over the Internet, having our coding platform for our college brings and develops the competitive environment in our college. This platform enables students to practice coding questions by facilitating multiple programming languages. They can compete with their fellow parallel students which keeps the competitive environment. Here, senior and pro students can become problem setters and every individual will be given a chance to contribute their questions or blogs or articles. Here, end application will be a web application that can be accessed by every user upon authentication. This platform makes analytics and prepares reports about the user performance where they are good and where they must improve based on previously solved questions. © 2023, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.",
    "keywords": "Code editor; MEAN stack; Node.js",
    "released": 2023,
    "link": "https://doi.org/10.1007/978-981-19-6880-8_13",
    "interesting": "-"
  },
  {
    "title": "Development of a Machine Learning Model For Big Data Analytics",
    "abstract": "The aim of the study was to utilize machine learning approaches in the development of a big data analytics model that can effectively discover patterns and aid in making intelligent decisions. The impact of Big Data on scientific discoveries and technology in Big Data analytics cannot be overstated. In this regard, the study focused on the development of a system to control incoming illegal messages from intruders/unknown users, in order to alleviate illicit contextual communication channels. Unstructured data sets were collected from online blogs and labeled to suit the needs of the machine learning algorithm. The data was preprocessed using Weka machine learning libraries and converted into attribute related file form (arff). The resampling technique was used to partition the data into 80% training set and 20% testing set, which was used to develop the big data model and identify illicit message content to prevent people from being victimized. The Na ï ve Bayes machine learning algorithm was utilized to predict the categorized labels as binary values. The results of the study showed that Naïve Bayes had an accuracy of 96.76% for metrics evaluation of true precision model. It is recommended that the application of other machine learning techniques to the classification model would improve its performance. © 2023 IEEE.",
    "keywords": "Java Virtual Machine (JVM); Machine learning; Netbeans Integrated Software Development Environment (IDE); Predictive model; Weka Plugin; Weka Tool",
    "released": 2023,
    "link": "https://doi.org/10.1109/SEB-SDG57117.2023.10124592",
    "interesting": "-"
  },
  {
    "title": "Green IoT Framework for Deep Forest Surveillance",
    "abstract": "Forests are one of the essential natural resources required to preserve the planet's ecological equilibrium. This paper offers a technique for creating an extensive environmental monitoring system. Along with that, it keeps an check over illegal activities taking place nearby, such as invasion into reserved forest areas and natural calamities like forest fire. The datas will be captured, classified, and reported to the official by the device. This can be accomplished by interfacing various sensors like an flame sensor, an ultrasonic sensor, and a DHT sensor with Arduino Nano board. Additionally, it offers guidance on safety measures and has the capacity to forecast natural calamities. Results are compared to numerous cutting-edge methods for figuring out total performance. The concern of finite energy supplies, however, affects the sensor nodes used in such networks. Keeping this concern in mind, energy can be saved to a greater extend by implementing green IoT technologies. The continual changes in temperature and humidity may be observed using the Adafruit cloud platform. The internet connectivity that connects Arduino to the Adafruit platform is provided by Node MCU. Wi-Fi is the transmission technique used in this. Real-time application of Lora WAN technology is possible to link sensors to cloud platforms.  © 2023 IEEE.",
    "keywords": "Adafruit; Arduino Integrated Development Environment; Green IoT; Internet of Things; sensor nodes; sleep scheduling; Wi-Fi",
    "released": 2023,
    "link": "https://doi.org/10.1109/IConSCEPT57958.2023.10170016",
    "interesting": "-"
  },
  {
    "title": "Parallelising semantic checking in an IDE: A way toward improving profits and sustainability, while maintaining high-quality software development",
    "abstract": "After recent improvements brought the incremental compilation of large industrial test suites down to a few seconds, the first semantic checking of a project became one of the longest-running processes. As multi-core systems are now the standard, we derived a parallelisation using software engineering laws to improve the performance of semantic checking.Our measurements show that even an outdated laptop is fast enough for daily use. The performance improvements came without performance regressions, and we can’t expect additional massive benefits even from infinitely scaling Cloud resources.Companies should utilise cheaper machines that still o er enough performance for longer. This approach can help businesses increase profits, reduce electronic waste and promote sustainability while maintaining high-quality software development practices.",
    "keywords": "parallel computing; cloud computing; semantic checking; integrated development environment; software development tools; software engineering laws; TTCN-3; performance improvement; sustainability; cost reduction; profit increase",
    "released": 2023,
    "link": "https://doi.org/10.2478/ausi-2023-0016",
    "interesting": "-"
  },
  {
    "title": "THE ACCEPTANCE OF AN EDUCATIONAL INTEGRATED DEVELOPMENT ENVIRONMENT TO LEARN PROGRAMMING FUNDAMENTALS",
    "abstract": "Programming is an important course for any IT or engineering-related course. However, previous research shows that students face difficulties in learning programming due to its abstract concepts. This study aims to evaluate the acceptance of a developed Integrated Development Environment (IDE), namely C-SOLVIS which is a web-based application that specifically intends to facilitate the teaching and learning of the C programming fundamentals in Malaysian tertiary education. The C-SOLVIS integrates problem-solving into a program development environment for the C language. The goal is to guide the users in problem-solving and help them write C programs based on problem-solving algorithms. The Rapid Application Development (RAD) Model was employed in the C-SOLVIS development process. Based on this model, the requirement planning phase was carried out through the triangulation technique by applying qualitative approaches comprising a literature review supported by semi-structured interviews, document reviews, and content validation by expert programming lecturers. Subsequently, the design of the application was accomplished through the iterative prototyping process which was then followed by the application construction. Then, the C-SOLVIS is deployed to be used by several programming lecturers to evaluate its usability by adopting a quantitative method using the System Usability Scale (SUS) questionnaire. The study has discovered several suitable techniques and designs for the problem-solving and program development environment. For the problem -solving environment, the Computational Thinking (CT) concepts were applied which were supported by the Input-Process-Output (IPO) Model through Scientific Instructions and Inquiries. Meanwhile, the program development environment was designed and developed based on frame -based programming using a set of developed Code Patterns. The C-SOLVIS evaluation using the SUS instrument has yielded a SUS mean score of 86.07. This score is interpreted by SUS as an A grade that indicates C-SOLVIS as a highly usable application and thus is accepted for C programming learning. Hence, the development process of the C-SOLVIS can be used as a guideline for educational software development, especially in the field of programming education.",
    "keywords": "IDE; educational software; usability; programming",
    "released": 2023,
    "link": "https://doi.org/10.33407/itlt.v93i1.5102",
    "interesting": "+"
  },
  {
    "title": "Development of an IoT tool for optimizing humidity control in cocoa cultivation.",
    "abstract": ". -The following document presents the development of a humidity sensor for cocoa crops using IoT and Arduino. Its purpose is to showcase the various applications that new technologies can offer, particularly in the cocoa industry. It involves designing a humidity sensor node to measure changes in humidity and temperature using the electronic design tool Proteus. The measurement module is programmed in Arduino IDE and connected to the cloud via IoT, incorporating Node-RED as a means to remotely visualize real-time results. This is achieved through a presentation dashboard as the final output of the measurement process, collecting data on climate changes received by the transducer and comparing them with data obtained from the web over a specified period. This process verifies the sensor’s efficiency and data accuracy, setting a precedent for future research in applied electronics, IoT, and telecommunications.",
    "keywords": "1; IoT 2; Arduino IDE 3; Proteus 4; Node-RED 5; Transducer",
    "released": 2023,
    "link": "https://doi.org/10.36561/ING.25.14",
    "interesting": "-"
  },
  {
    "title": "Training packages for the use of child development tools in low/middle-income countries: A review",
    "abstract": "Background We are now moving beyond the focus of “child survival” to an era which promotes children thriving and developing rather than simply “surviving”. In doing so, we are becoming more aware of the large variation of child development screening tools available globally, but in particular, those in low/middle-income countries (LMICs). Methods This narrative review identifies 24 child development tools used in LMICs. We aimed to identify information on training accessibility and training design, assessment methods and cost of training. For those tools with no training information identified or for any tools identified as providing online training, the tool author was contacted individually to obtain information on the features of the tool’s training package. Results Information on training features was identified for 18 tools. All of the tools are identified as screening tools with some also identified as surveillance or assessment tools. The training material for the majority of the tools was not readily accessible and most training packages were proprietary and only available with a face-to-face training design. Other training options included a user manual, training videos or training through an online platform. Conclusions Training is a key factor when selecting a child development screening or surveillance tool particularly in a low-income or middle-income setting where funds may be limited. The accessibility of training can have a key impact on the implementation and utilisation of tools desperately needed for use in LMICs. Essential to improvements in overall child health is an emphasis on helping children thrive as well as survive. This new emphasis will require a well-trained healthcare workforce in this regard. This paper reviews child development training packages in resource-limited settings.",
    "keywords": "child development; global health; paediatrics",
    "released": 2023,
    "link": "https://doi.org/10.1136/archdischild-2022-323814",
    "interesting": "-"
  },
  {
    "title": "The effect of textbook analysis as a teacher professional development tool on teacher understanding of nature of science",
    "abstract": "This article reports on the effect of textbook analysis as a tool of teacher professional development on nature of science (NOS) understanding of 10 science teachers in South Africa. The teacher professional development program (TPDP) was based on an explicit reflective methodology of textbook analysis and conducted online due to the Covid-induced lockdown. NOS understanding of the participant teachers was documented pre-training and post-training using a questionnaire designed by the researchers, termed the IFVNOS questionnaire. This tool was formulated based on the views of nature of science questionnaire version C (VNOSC) and the reconceptualised family resemblance approach (RFN) questionnaire. The same tool was used pre- and post-training. A comparison was made of the pre- and post-training results and it was found that there was a general individual increase in NOS understanding in 9 of the 10 teachers. The creative, scientific knowledge, science methods and ethical practices NOS aspects showed the greatest improvement in understanding by the teachers as a collective, whilst inferential NOS showed no overall change in understanding. This study showed that textbook analysis can be used as a professional development tool to improve NOS understanding of in-service science teachers.",
    "keywords": "",
    "released": 2023,
    "link": "https://doi.org/10.1007/s11191-023-00442-7",
    "interesting": "-"
  },
  {
    "title": "Re-imagining computer laboratories for teaching introductory programming concepts using web-based integrated development environments: Opportunities and challenges",
    "abstract": "This study reported on students’ views and experience during the transition from a traditional computer laboratory into a web-based integrated development environment in an introductory programming concepts course. The aim of this study is twofold. First, to review and evaluate selected web-based integrated development environments (Web IDEs) that can be used to support teaching and learning of programming concepts. Second, to get insight into students’ views and experience towards the web-based integrated development environments compared to computer laboratory. Students’ understanding of basic programming concepts is part of any computer science and information technology academic program. However, research shows that it is not always easy for students to learn about these concepts, and that is reflected in the high drop rate among students in these subjects. Computer laboratory is an integral part for introductory courses on programming concepts to help students practice what they have learnt. The study is descriptive and exploratory in its nature, and was conducted in two stages. First, a review of some selected web integrated development environments was performed using a rubric for evaluating e-learning tools. Second, the study explored students’ views and experience with the web-based integrated development environment using a questionnaire and a focus group. The study demonstrated that students had positive views and experience towards the web-based integrated development environments implying that these tools have the potential to overcome the limitations inherited in computer laboratory. The study suggested some improvements to the web-based integrated development environments to be more educationally effective.",
    "keywords": "e-learning; Web-based integrated development environments; Virtual labs; Programming education",
    "released": 2022,
    "link": "https://doi.org/10.1145/3568364.3568375",
    "interesting": "+"
  },
  {
    "title": "Virtual programming environments: Programming the cloud (keynote)",
    "abstract": "Cloud-based applications are ubiquitous and essential. We expect them to be simultaneously scalable and available and simple to build and deploy. Virtual Programming Environments are what make these applications possible. Virtual Programming Environments are themselves complex distributed systems, built using the entire spectrum of System and Runtime Virtualization technology that is the subject of VEE. In the first part of the talk, I will focus on the purest form of Serverless Computing: Functions as a Service (FaaS) as embodied in Virtual Programming Environments such as AWS Lambda or Apache OpenWhisk. I will describe the programming abstractions they provide to the developer and how these abstractions are realized using virtualization technology. In the second part of the talk, I will outline the research challenges in moving beyond FaaS to build Virtual Programming Environments that can productively support building complex stateful applications on the cloud.",
    "keywords": "Serverless Computing; Functions as a Service; Fault Tolerance; Distributed Systems",
    "released": 2022,
    "link": "https://doi.org/10.1145/3516807.3519421",
    "interesting": "-"
  },
  {
    "title": "Prototyping products using web-based AI tools: Designing a tangible programming environment with children",
    "abstract": "A wide variety of children’s products such as mobile apps, toys, and assistant systems now have integrated smart features. Designing such AI-powered products with children, the users, is essential. Using high-fidelity prototypes can be a means to reveal children’s needs and behaviors with AI-powered systems. Yet, a prototype that can show unpredictable features similar to the final AI-powered product can be expensive. A more manageable and inexpensive solution is using web-based AI prototyping tools such as Teachable Machine. In this work, we developed a Teachable Machine-powered game-development environment to inform our tangible programming environment’s design decisions. Using this kind of an AI-powered high-fidelity prototype in the research process allowed us to observe children in a very similar setting to our final AI-powered product and extract design considerations. This paper reports our experience of prototyping AI-powered solutions with children and shares our design considerations for children’s self-made tangible representations.",
    "keywords": "tangible programming; co-design with children; co-creation with AI; child-AI interaction",
    "released": 2022,
    "link": "https://doi.org/10.1145/3535227.3535239",
    "interesting": "-"
  },
  {
    "title": "Standardizing students’ programming environments with docker containers: Using visual studio code in the cloud with GitHub codespaces",
    "abstract": "",
    "keywords": "text editor; programming; integrated development environment; ide; editor; docker; containerization; container; code editor; code",
    "released": 2022,
    "link": "https://doi.org/10.1145/3502717.3532164",
    "interesting": "+"
  },
  {
    "title": "Informing housing policy through web automation: Lessons for designing programming tools for domain experts",
    "abstract": "Housing costs have risen dramatically in the past decade, surpassing their pre-Recession levels, but the data that housing researchers and policymakers rely on to understand these dynamics remain subject to important limitations in their spatiotemporal granularity or methodological transparency. While these aspects of existing public and private data sources present barriers to understanding the geography of cost and availability in markets across the United States, web data about housing opportunities provide an important alternative—albeit one that demands technical skills that would-be data users may lack. This case study documents the experiences of a collaboration between social and computer scientists focused on using a novel programming-by-demonstration tool for web automation, Helena, to inform rental housing policy and inequalities in the United States. While this project was initially focused on collecting housing ads from a single site within the Seattle area, the capacity to scale our project to new sources and locations afforded by Helena’s human-centered design allowed a team of social scientists to progress to scraping data across the country and multiple platforms. Using this project as a case study, we discuss a.) important programming and research challenges that were encountered and b.) how Helena’s design helped us overcome these barriers to using scraped web data in basic research and policy analysis.",
    "keywords": "web automation; housing policy; applied sociology",
    "released": 2022,
    "link": "https://doi.org/10.1145/3491101.3503575",
    "interesting": "-"
  },
  {
    "title": "Jupyter in the classroom: An experience report",
    "abstract": "Jupyter is an interactive web-based programming environment commonly used by Python programmers and data scientists. It can be used in the classroom either by itself or in addition to a traditional programming environment. This paper documents our experience using Jupyter in multiple computer science courses in a public four-year university using different programming languages (Java, C++, and Python). It describes our motivations for using Jupyter in these courses and how it is made available to students. It also describes the different roles it plays in our pedagogical approaches and the challenges it poses to both instructors and students. A report is presented on the preliminary experimentation conducted to evaluate its effectiveness in improving student performance. While our tests are limited by small sample sizes and did not show that using Jupyter produces a statistically significant improvement in student performance, qualitative analysis of student responses showed the usefulness of this tool in revitalizing teaching and keeping students engaged.",
    "keywords": "web-based interactive coding; jupyter; development environment",
    "released": 2022,
    "link": "https://doi.org/10.1145/3478431.3499379",
    "interesting": "+"
  },
  {
    "title": "Seamless embedding of programming IDEs into computer-based testing software",
    "abstract": "Interest in computer-based assessment has increased in recent years, most certainly due to a shift to online learning due to the COVID pandemic. Instructors are creating questiongenerators for Computer Science classes on PrairieLearn (PL), an open-source platform developed at the University of Illinois at Urbana-Champaign PrairieLearn. The software generates differentvariants of each question to students through randomization. The challenge up to now has been that automatically graded coding problems in RISC-V or Snap!, some of the significant languages used in undergraduate Computer Science courses at our university, weren’t possible to do within the software. Thequestion could be displayed, but then the student would have to load their favorite integrated development environment (IDE), code it up, and thenreturn to PL to upload their solution. This poster discusses our approach to embedding interactive development environments for Venus (RISC-V) and Snap! directly into PrairieLearn, so students never have to leave the browser tab!",
    "keywords": "mastery learning; computer-based testing",
    "released": 2022,
    "link": "https://doi.org/10.1145/3478432.3499122",
    "interesting": "-"
  },
  {
    "title": "MOCSIDE: An open-source and scalable online IDE and auto-grader for computer science education",
    "abstract": "Programming is learned through practice, with said practice in introductory programming courses often translating to a prohibitively large number of assignments, increasing the grading workload for faculty and/or teaching assistants. In short, this is unsustainable. Several publishers and a few notable companies have provided meritable auto-grading solutions, although most are plagued with problems including minimal problem sets, limited customization options, high cost, and at times even a disconnect with the pedagogical needs of academia. This poster presents our newly-developed web application, MOCSIDE, an open-source and scalable online IDE and auto-grader for computer science education. Results indicate a positive user experience from students and instructors alike, with cost savings, ease of use, and code collaboration highlighted as key features.",
    "keywords": "online ide; cs2; cs1; computer science education; auto-grading",
    "released": 2022,
    "link": "https://doi.org/10.1145/3478432.3499125",
    "interesting": "+"
  },
  {
    "title": "SmartCLIDE: Shortening the toolchain of SOA-based cloud software development by automating service creation, composition, testing, and deployment",
    "abstract": "Nowadays the majority of cloud applications are developed based on the Service-Oriented Architecture (SOA) paradigm. Large-scale applications are structured as a collection of well-integrated services that are deployed in public, private or hybrid cloud. Despite the inherent benefits that service-based cloud development provides, the process is far from trivial, in the sense that it requires the software engineer to be (at least) comfortable with the use of various technologies in the long cloud development toolchain: programming in various languages, testing tools, build / CI tools, repositories, deployment mechanisms, etc. In this paper, we propose an approach and corresponding toolkit (termed SmartCLIDE—as part of the results of an EU-funded research project) for facilitating SOA-based software development for the cloud, by extending a well-known cloud IDE from Eclipse. The approach aims at shortening the toolchain for cloud development, hiding the process complexity and lowering the required level of knowledge from software engineers. The approach and tool underwent an initial validation from professional cloud software developers. The results underline the potential of such an automation approach, as well as the usability of the research prototype, opening further research opportunities and providing benefits for practitioners.",
    "keywords": "Automated Software Engineering; Cloud Software Development; Service-Oriented Architecture",
    "released": 2022,
    "link": "https://doi.org/10.1145/3503823.3503880",
    "interesting": "-"
  },
  {
    "title": "In-IDE code generation from natural language: Promise and challenges",
    "abstract": "A great part of software development involves conceptualizing or communicating the underlying procedures and logic that needs to be expressed in programs. One major difficulty of programming is turning concept into code, especially when dealing with the APIs of unfamiliar libraries. Recently, there has been a proliferation of machine learning methods for code generation and retrieval from natural language queries, but these have primarily been evaluated purely based on retrieval accuracy or overlap of generated code with developer-written code, and the actual effect of these methods on the developer workflow is surprisingly unattested. In this article, we perform the first comprehensive investigation of the promise and challenges of using such technology inside the PyCharm IDE, asking, “At the current state of technology does it improve developer productivity or accuracy, how does it affect the developer experience, and what are the remaining gaps and challenges?” To facilitate the study, we first develop a plugin for the PyCharm IDE that implements a hybrid of code generation and code retrieval functionality, and we orchestrate virtual environments to enable collection of many user events (e.g., web browsing, keystrokes, fine-grained code edits). We ask developers with various backgrounds to complete 7 varieties of 14 Python programming tasks ranging from basic file manipulation to machine learning or data visualization, with or without the help of the plugin. While qualitative surveys of developer experience are largely positive, quantitative results with regards to increased productivity, code quality, or program correctness are inconclusive. Further analysis identifies several pain points that could improve the effectiveness of future machine learning-based code generation/retrieval developer assistants and demonstrates when developers prefer code generation over code retrieval and vice versa. We release all data and software to pave the road for future empirical studies on this topic, as well as development of better code generation models.",
    "keywords": "Natural language programming assistant; code generation; code retrieval; empirical study",
    "released": 2022,
    "link": "https://doi.org/10.1145/3487569",
    "interesting": "-"
  },
  {
    "title": "Towards Multi-User Mode in RIDE Web-IDE",
    "abstract": "RIDE is an integrated development environment for the Reflex language, a process-oriented language designed for developing control algorithms for cyber-physical systems. RIDE was developed based on Eclipse Theia – an open source web IDE framework. Despite being based on web technologies such as Node.JS, RIDE can not serve as a web application for multiple users simultaneously. The paper describes an approach for configuring a server environment and creating a host program that makes hosting RIDE as a public web application possible. It provides problem analysis, tools and frameworks survey, and implementation details. Among discussed technologies are Docker, Kubernetes, and Eclipse Che. For multi-user support and security reasons, an instance of RIDE runs in an independent Docker container for each client. The host program handles input connections, runs and stops Docker containers with RIDE. The described approach may be used for deploying other single-user applications in the cloud turning them into web-services.",
    "keywords": "cloud IDE; web; Docker; multi-user management; process-oriented programming",
    "released": 2022,
    "link": "https://doi.org/10.1109/EDM55285.2022.9855114",
    "interesting": "+"
  },
  {
    "title": "A Bad IDEa: Weaponizing uncontrolled online-IDEs in availability attacks",
    "abstract": "Botnets are an ongoing threat to the cyber world and can be utilized to carry out DDoS attacks of high magnitude. From the botmaster's perspective, there is a constant need for deploying more effective botnets and discovering new ways to bolster their bot ranks. Integrated Development Environments (IDEs) have been essential for software developers to write and compile source code. The increasing need for remote work and collaborative workspaces have led to the IDE-as-a-service paradigm that offers online code editing and compilation with multiple language support. In this paper, we show that a multitude of online IDEs do not run control checks on the user code and can be therefore lever-aged by a botnet. We examine the concept of uncontrolled execution environments and present a proof of concept to show how uncontrolled online-IDEs can be weaponized to perform large-scale attacks by a botnet. Overall, we detect a total of 719 online-IDEs with uncontrolled execution environments and limited sandboxing. Lastly, as ethical disclosure, we inform the IDE developers and service providers of the vulnerabilities and propose countermeasures.",
    "keywords": "online IDE; uncontrolled execution",
    "released": 2022,
    "link": "https://doi.org/10.1109/EuroSPW55150.2022.00015",
    "interesting": "+"
  },
  {
    "title": "FPL Demo: SERVE: Agile Hardware Development Platform with Cloud IDE and Cloud FPGAs",
    "abstract": "We introduce SERVE, a cloud platform for agile hardware software co-design, with cloud IDE and cloud FPGAs integrated. SERVE enables users to focus on logic designs, without facing the hassle of setting up FPGA tools and development environment. Users can write and simulate hardware logic in the cloud IDE and then generate bitstream files through a Continuous Integration (CI) pipeline. Finally, the bitstream files are deployed on an FPGA board. A great amount of testbenches will be executed to ensure the correctness of the hardware logic. We will demo a workflow of modifying a RISC- V processor and getting the design change quickly evaluated using SERVE.",
    "keywords": "",
    "released": 2022,
    "link": "https://doi.org/10.1109/FPL57034.2022.00087",
    "interesting": "-"
  },
  {
    "title": "A comparison between online compilers: A Case Study",
    "abstract": "During pandemic period educational institution were challenged will many issues how to achieve their goal continuing with online teaching. In some fields it was difficult to conduct effective teaching and learning and one of this field was computer programming teaching. In the field of programming, the use of online compilers was seen as an important challenge. The use of online compilers was seen by some students as a solution (especially during pandemic lockdown) when they did not have a computer to install an IDE but used a tablet/smartphone simply connected to the Internet, or they founded difficult to install/configure different compilers. The aim of this paper is to study and explore online compilers by making a comparison between them. A sample of 10 online compilers that were fully or partially open-source was selected. The comparison of compilers was done in 2 aspects, the first in the services they provide and the second in their performance in executing programs. Finally, a ranking of the three best compilers is given based on comparisons of the two aspects.",
    "keywords": "Online Compiler; Online Programming; Online IDE; Web IDE; Novice Programmers",
    "released": 2022,
    "link": "https://doi.org/10.1109/MECO55406.2022.9797096",
    "interesting": "-"
  },
  {
    "title": "Automatic Unit Testing-Based Assessments for Online C++ Programming Classroom",
    "abstract": "Usually, in programming courses, students can have good programming skills, only through intensive coding practices. This makes programming assignments to be the most important part of computer programming coursework. However, creating programming assignments with the traditional existing tools is not suitable for online learning classrooms, it cannot allow students to automatically tested and scored their assignment tasks. As the result, teachers must have an extensive workload for assessing the programming skill of their students. In this paper, we develop an online C++ web integrated development environment (Web-IDE), where teachers can prepare a set of unit testing-based programming task templates, in which the unique task descriptions and unit tests are specifically generated and assigned for each student, dynamically. The proposed system is implemented in the cloud so that it can be accessed via web browsers on both PC and mobile devices. This allows students to learn to write code, compile, run, test, and grade their programming assignments without installing additional software. We also confirm the effectiveness of the proposed system through our preliminary experiments with a real computer programming classroom.",
    "keywords": "Programming Assessment Generation; C++ Web IDE; Computer Science Education; Code Grader",
    "released": 2022,
    "link": "https://doi.org/10.1109/JCSSE54890.2022.9836289",
    "interesting": "-"
  },
  {
    "title": "Development of Intellectual Information and Analytical System Using Cloud Technologies",
    "abstract": "The article discusses the development of an intelligent information and analytical system for assessing students' health. The object of the research was the first-year students of the Al-Farabi Kazakh National University. They were interviewed by the International Healthy Behavior Network (HBSC). We analyzed the survey results using the cloud. For the analysis, an ASP.NET application provided by the Visual Studio programming environment, Power BI desktop and R programming language, OneDrive cloud database was used. Along with the visualization of analytical work in the developed system, analytical conclusions were drawn for each indicator. The data was retrieved from Univer and uploaded to the OneDrive cloud environment. The data transformation was done in Power Query. Power BI was used for data modeling and data analysis, and for connecting to the web platform.",
    "keywords": "intelligent information and analytical system; artificial intelligence; international network overview; digital health profile; Visual Studio programming environment; application; Power BI; R programming language; OneDrive cloud database; Power Query; data modeling; communication with web platform",
    "released": 2022,
    "link": "https://doi.org/10.1109/SIST54437.2022.9945702",
    "interesting": "-"
  },
  {
    "title": "TauLiM: Test Data Augmentation of LiDAR Point Cloud by Metamorphic Relation",
    "abstract": "With the rapid development of object detection in deep learning (DL), applications on LiDAR point clouds have received much attention, such as autonomous driving. To verify the robustness of object detection models by testing, large amounts of diversifted annotated LiDAR point clouds are required to be used as test data. However, considering the sparseness of objects, the diversity of the existing point cloud dataset is limited by the number and types of objects. Therefore, it is important to generate diversifted point clouds by test data augmentation. In this paper, we propose a tool for LiDAR point cloud via test data augmentation, named TauLiM. A well-designed metamorphic relation (MR) [1] is proposed to augment point clouds while maintaining their physical characteristic of LiDAR. TauLiM is composed of three modules, namely point cloud configuration, coordinate filtering, and object insertion. To evaluate our tool, we employ experiments to compare the ability of testing between the existing dataset and the augmented one. The result shows that TauLiM can effectively augment diversified test data and test the object detection model. The video of TauLiM is available at https://www.youtube.com/watch?v=9S6xpRbbhtQ and TauLiM can be used at http://1.13.193.98:2601/.",
    "keywords": "Software and its engineering → Software testing and development environments; Computing methodologies → Machine learning; Information systems→World Wide Web; Networks→Cyber-physical networks;  Cloud computing",
    "released": 2022,
    "link": "https://doi.org/10.1145/3510454.3516860",
    "interesting": "-"
  },
  {
    "title": "Development of Visual Dashboard for River Monitoring System",
    "abstract": "Monitoring a tributary’s water depth and velocity can provide a wealth of information for ecological systems. Typically, tributaries are located deep within the jungle, and manual measurement is the norm. The research aims to develop a real-time remote monitoring system for measuring water depth and velocity. The system uses ultrasonic and water flow sensors to measure velocity and river depth. The data will be transmitted to the back-end software, including Arduino IDE and Node-RED, for data collection. The data is then stored in the cloud database InfluxDB for future use. The data can be set to be automatically deleted every 1 hour, 1 day, 1 month, or at other time intervals. The Grafana platform can produce an interactive Graphical User Interface (GUI), and the administrator can modify the visual dashboard using either their program code or existing features. It can then be made available to the general public as an observer for the online visual dashboard via the Uniform Resource Locator (URL).",
    "keywords": "real-time remote monitoring; IoT; Node-RED; Arduino IDE; cloud database; visual dashboard.",
    "released": 2022,
    "link": "https://doi.org/10.1109/ICSIMA55652.2022.9928973",
    "interesting": "-"
  },
  {
    "title": "Application of Internet of Things in Image Processing",
    "abstract": "Image processing and IoT technology use various sensors and camera-based sensors for processing image data with help of a variety of IoT applications. So far, the IoT and image processing concepts have been used for our real-life applications. Their individual use in the sphere of industries is possible and has had some success. However, a combination of the two technologies has yet to be developed. In this paper, we have purposed architecture that provides an overview of the function of image processing in the field of the Internet of Things. In this paper, we have used the ESP32 CAM WiFi Module with OV2640 Camera Module and the Arduino Uno R3 that open-source microcontroller board. We capture the plant image and use the cloud and big data-based prediction model for data analysis. We have used the ThingSpeak open-source platform to show the camera Received Signal Strength.",
    "keywords": "ESP32; Internet of thing; Image processing; Arduino IDE; cloud",
    "released": 2022,
    "link": "https://doi.org/10.1109/DELCON54057.2022.9753308",
    "interesting": "-"
  },
  {
    "title": "Dockerlive : A live development environment for Dockerfiles",
    "abstract": "The process of developing Dockerfiles is perceived by many developers as slow and based on trial-and-error, and it is hardly immediate to see the result of a change introduced into a Dockerfile. In this work we propose a plugin for Visual Studio Code, which we name Dockerlive, and that has the purpose of shortening the length of feedback loops. Namely, the plugin is capable of providing information to developers on a number of Dockerfile elements, as the developer is writing the Dockerfile. We achieve this through dynamic analysis of the resulting container, which the plugin builds and runs in the background.",
    "keywords": "Cloud; Dockerfile; Live Programming; IDE",
    "released": 2022,
    "link": "https://doi.org/10.1109/VL/HCC53370.2022.9833145",
    "interesting": "-"
  },
  {
    "title": "Assessor: a PO-Based WebDriver Test Suites Generator from Selenium IDE Recordings",
    "abstract": "End-to-end automated test scripts are a great way to ensure the quality of web applications, but are often perceived as expensive both during their initial development and subsequent maintenance activities. However, maintenance costs can be re-duced when test scripts adopt the Page Object (PO) pattern, a sort of web page facade exposing methods to the test scripts. In this work, we proposed ASSESSOR, a novel tool capable of reducing the effort needed for building PO-based Selenium WebDriver test suites. ASSESSOR allows to simply record the test cases, with only a few additional steps compared to Selenium IDE, and then to automatically generate PO-based WebDriver test suites. The in-depth evaluation performed with four web applications shows that ASSESSOR's adoption allows to reduce the development effort of PO-based web test scripts compared to the classic manual approach: 59% time reduction overall, corresponding to a 2.44 increment in productivity.",
    "keywords": "End-to-End Testing; Web Testing; Development Effort Reduction; Test Generation; Selenium IDE; Selenium WebDriver",
    "released": 2022,
    "link": "https://doi.org/10.1109/ICST53961.2022.00045",
    "interesting": "-"
  },
  {
    "title": "A study of microcontroller simulator tools for autonomous and online learning",
    "abstract": "Even though technologically advanced processors based on 32 and 64 bit are now available, embedded systems still rely on the use 8 or 16 bit microcontroller solutions, due to factors such as cost-effectiveness and low power consumption. Its widespread adoption by the industry and its simplicity led the academy to address the development of systems using these 8 or 16 bit microcontrollers in its introductory-level electrical engineering curricula. Typically, a microcontroller of the MSP, AVR, MCS-51 or PIC family is used. Although in person laboratory work offers students the opportunity for acquiring skills related to practical experience with hardware and development boards, availability of hardware resources might be reduced in autonomous or online contexts. In these scenarios, simulation tools can be highly valuable, as an alternative or complementary option to laboratory work. Standard development tools are often unsuited for such purposes, because they are oriented to development activities that often assume the availability of hardware resources for executing, testing and debugging the system. To address this, this paper presents a survey of the ecosystem of tools for 8 or 16 bit microprocessors and microcontrollers development focused on their capability for supporting the simulation of embedded systems, and evaluate these solutions from the perspective of their potential for enabling autonomous study and learning by students. This comparative analysis can be very useful as it can serve as a decision factor for the choice of the microcontroller or microprocessor and toolchain to adopt in curriculum design, while it also identifies opportunities for new developments to address existing limitations.",
    "keywords": "microcontroller simulators; online learning; autonomous learning; development tools; embedded systems",
    "released": 2022,
    "link": "https://doi.org/10.1109/EAEEIE54893.2022.9820021",
    "interesting": "+"
  },
  {
    "title": "ITSS: Interactive Web-Based Authoring and Playback Integrated Environment for Programming Tutorials",
    "abstract": "Video-based programming tutorials are a popular form of tutorial used by authors to guide learners to code. Still, the interactivity of these videos is limited primarily to control video flow. There are existing works with increased interactivity that are shown to improve the learning experience. Still, these solutions require setting up a custom recording environment and are not well-integrated with the playback environment. This paper describes our integrated ITSS environment and evaluates the ease of authoring and playback of our interactive programming tutorials. Our environment is designed to run within the browser sandbox and is less intrusive to record interactivity actions. We develop a recording approach that tracks the author’s interactivity actions (e.g., typing code, highlighting words, scrolling panels) on the browser and stored in text and audio formats. We replay these actions using the recorded artefacts for learners to have a more interactive, integrated and realistic playback of the author’s actions instead of watching video frames. Our design goals are 1) eﬃcient recording and playback, 2) extensible interactivity features to help students learn better, and 3) a scalable web-based environment. Our first user study of 20 participants who carry out the author tasks agree that it is eﬃcient and easy to author interactive videos in our environment with no additional software needed. Our second user study of 84 students using the environment agrees that the increased interactivity can help them learn better over a video-based tutorial. Our performance test shows that the environment can scale to support up to 500 concurrent users. We hope our open-source environment enable more educators to create interactive programming tutorials.",
    "keywords": "• Software and its engineering → Integrated and visual development environments; • Human-centered computing → Web-based interaction; • Applied computing → Interactive learning environments; • Social and professional topics → Computer science education",
    "released": 2022,
    "link": "https://doi.org/10.1145/3510456.3514142",
    "interesting": "-"
  },
  {
    "title": "A Recursive Method for Estimating Missing Data in Spatio-Temporal Applications",
    "abstract": "Missing data is a major data reliability problem in spatio-temporal (ST) applications. This article proposes an online method for estimating missing data in case of a network of $n$ sensors. The true sensor value at a specific location is expressed using an integro-difference equation. The Karhunen–Loéve Expansion of the spatial process allows one to represent the ST field values at $n$ locations in the form of a linear state-space model. The parameters of the model are identified using the maximum likelihood method. The parameters are updated in a rolling window approach. Whenever missing data are encountered, the algorithm predicts the missing observations based on the constrained solution of state evolution equation. The constrained solution is obtained by representing the optimal state as the orthogonal sum decomposition of a deterministic and a stochastic component. The utility of the algorithm is presented on two sensor network datasets.",
    "keywords": "Integro-difference equation (IDE); missing data; online estimation; sensor network; spatio-temporal (ST)",
    "released": 2022,
    "link": "https://doi.org/10.1109/TII.2021.3100501",
    "interesting": "-"
  },
  {
    "title": "Smart Embedded Framework of Real-Time Pollution Monitoring and Alert System",
    "abstract": "The sustainability and progress of humanity depend on a clean, pollution-free environment, which is essential for good health and hygiene. Huge indoor auditorium does not have proper ventilation for air flow so when the auditorium is crowded the carbon di-oxide is emitted and it stays there for many days this may be a chance to spreading of COVID-19 and other infectious diseases. Without proper ventilation virus may present in the indoor auditorium. In the proposed system, emissions are detected by air, noise, and dust sensors. If the signal limit is exceeded, a warning is given to the authorities via an Android application and WiFi, and data is stored in cloud networks. In this active system, CO2 sensor, noise sensor, dust sensor, Microcontroller and an exhaust fan are used. This ESP-32 based system is developed in Arduino Integrated Development Environment (Aurdino IDE) to monitor air, dust and noise pollution in an indoor auditorium to prevent unwanted health problems related to noise and dust. More importantly, using IoT Android Application is developed in Embedded C, which continuously records the variation in levels of 3 parameters mentioned above in cloud and display in Android screen. Also, it sends an alert message to the users if the level of parameters exceeds the minimum and maximum threshold values with more accuracy and sensitivity. Accuracy and sensitivity of this products are noted which is very high for various input values.",
    "keywords": "IoT; sensors; pollution; Arduino IDE",
    "released": 2022,
    "link": "https://doi.org/10.1109/INCOFT55651.2022.10094405",
    "interesting": "-"
  },
  {
    "title": "Machine learning development environment for single-cell sequencing data analyses",
    "abstract": "Machine learning (ML) is transforming single-cell sequencing data analysis; however, the barriers of technology complexity and biology knowledge remain challenging for the involvement of the ML community in single-cell data analysis. Here we present an ML development environment for single-cell sequencing data analyses, together with a diverse set of realistic and accessible ML-Ready benchmark datasets. A cloud-based platform is built to dynamically scale workflows for collecting, processing, and managing various single-cell sequencing data to make them ML-ready. In addition, benchmarks for each problem formulation and a code-level and web-interface IDE for single-cell analysis method development are provided. These efforts provide an automated end-to-end single-cell analysis ML pipeline that simplifies and standardizes the process of single-cell data formatting, loading, model development, and model evaluation.",
    "keywords": "Machine learning; Single-cell data analyses pipeline; Benchmarks; Assessment utilities; Cloud-based platform",
    "released": 2022,
    "link": "https://doi.org/10.1109/BIBM55620.2022.9995420",
    "interesting": "-"
  },
  {
    "title": "Technologies of FPGA-based projects Development Under Ever-changing Conditions, Platform Constraints, and Time-to-Market Pressure",
    "abstract": "An analytical review of the history of the leading vendors' providers in the field of programmable logic device manufacturing is presented. The analysis of development environment changes for FPGA-based projects, and a comparative analysis of FPGA chips and development kit boards for testing are performed. The practical experience of the transition process to new development environments for FPGA-based projects is considered. It is established that the dynamics of changes in development environments must be addressed at an early stage to reduce risks. It is shown that in-system programming significantly simplifies the development of FPGA-based projects. It is shown that scaling and parallelization at the top level of project hierarchy and pipelining and parameterization at the RTL level effectively allow such systems to be deployed in commercial cloud infrastructures and data centers.",
    "keywords": "Programmable Logic Devices; PLDs; FPGAs; Development Tools; Project Constraints; Development Environment; Time-to-Marker",
    "released": 2022,
    "link": "https://doi.org/10.1109/DESSERT58054.2022.10018828",
    "interesting": "-"
  },
  {
    "title": "GraphQL-based Backend Service Development Tool for CRUD Operations, Authentication, and Authorization",
    "abstract": "The development of GraphQL-based backend services needs: (1) data model, (2) create, read, update, and delete (CRUD) operations, (3) authentication, and (4) authorization system implementations. There are often repetitions of those implementations in the development process so that a large number of code writings are required. A GraphQL-based backend service development tool for CRUD operations, authentication, and authorization is proposed. This tool was created with the aim of reducing the code writings required for developers to implement CRUD operations, authentication, and authorization systems. GraphQL is used as the query language to access and manipulate data because GraphQL has a schema that can be utilized to define model data and the metadata needed. JSON Web Token (JWT) is chosen as the authentication method because JWT is one of the authentication methods that has a subject context used by the authorization method. Attribute-based access control (ABAC) is used as the authorization method because ABAC can validate up to the attribute level so it can handle many system requirements. The result is a GraphQL-based backend service development tool for CRUD operations, authentication, and authorization called Homura. The following results were obtained: (1) The GraphQL API server was successfully created using Homura based on the definition of CRUD operations, data model, authentication, and authorization, and (2) Homura succeeded in reducing the number of code writings required by 82%.",
    "keywords": "authentication; authorization; attribute-based access control; CRUD operations; GraphQL",
    "released": 2022,
    "link": "https://doi.org/10.1109/ICoDSE56892.2022.9971818",
    "interesting": "-"
  },
  {
    "title": "Evaluating Student Spatial Skills Learning in a Virtual Reality Programming Environment",
    "abstract": "In this research full paper, we examine students’ improvement in spatial visualization skills when using MYR (short for \"My Reality\"), a browser-based, cloud-hosted programming environment for beginning through advanced programmers to create immersive, three-dimensional virtual reality scenes.The research literature suggests that there is correlation between students’ spatial abilities and their success in programming. In this study, we conducted a three-week (six hour) virtual after-school program which introduced high school students with different programming backgrounds to coding in MYR. During the program, students learned the basics of MYR, introductory CS topics, and completed individual coding projects, creating an original MYR scene.A study examined changes in students’ spatial reasoning as a result of this intervention. The students’ performance in spatial skills was measured using the Revised Purdue Spatial Visualization Test: Visualization of Rotations (Revised PSVT:R) [1]. Students completed this instrument using a pre/post survey design. We analyzed the impact of the intervention using a paired samples T-test. We further developed a rubric for analyzing the sophistication of students’ MYR code and applied it to evaluating the programming expertise of our study participants.The program was hosted twice with two different groups of high school students. Most showed interest in MYR programming and expressed their creativity and learned skills in their original project. With the first group of students, we found increases in their spatial visualization performance after the intervention with MYR, though statistical significance was not reached. The second group of students had higher baseline prior experience in computing and spatial visualization skills; these students did not further increase in their spatial visualization skill.The analysis showed that the MYR has a potential to improve spatial skills and engage students’ interest in computing. We recommend that MYR and related computational environments be further studied and made available to students.",
    "keywords": "Computer science education; Spatial skills; Virtual reality",
    "released": 2022,
    "link": "https://doi.org/10.1109/FIE56618.2022.9962403",
    "interesting": "-"
  },
  {
    "title": "Prototype Design of an IoT Enabled Cost-Efficient Portable Heart Health Data Acquisition System",
    "abstract": "From the last ten years, healthcare monitoring systems have become one of the most significant systems and have become more technologically focused. The world is confronting a problem of untimely death owing to a variety of ailments, which is caused by a lack of timely medical care for patients. The major objective was to develop a reliable IoT-based patient monitoring system so that medical personnel could keep an eye on their patients, whether they are in a hospital or at home, in order to give better patient care. The development of a smart phone broadband healthcare application allows for the provision of online real-time data regarding a patient's physiological state. The system consists primarily of sensors, a data acquisition unit, such as an Arduino, and software (Arduino IDE). The technology monitors and stores the patient's temperature and heart rate, which is then relayed to the doctor's mobile phone, which has the app. As a result, a realtime patient monitoring system powered by the Internet of Things may successfully track a patient's condition and save lives.",
    "keywords": "Arduino; IoT; Health care; Patient; Monitoring; Temperature; Reliable; Sensors; Arduino IDE; Heart Beat; Medical care",
    "released": 2022,
    "link": "https://doi.org/10.1109/SSTEPS57475.2022.00057",
    "interesting": "-"
  },
  {
    "title": "Watcher: Cloud-Based Coding Activity Tracker for Fair Evaluation of Programming Assignments",
    "abstract": "Online learning has made it possible to attend programming classes regardless of the constraint that all students should be gathered in a classroom. However, it has also made it easier for students to cheat on assignments. Therefore, we need a system to deal with cheating on assignments. This study presents a Watcher system, an automated cloud-based software platform for impartial and convenient online programming hands-on education. The primary features of Watcher are as follows. First, Watcher offers a web-based integrated development environment (Web-IDE) that allows students to start programming immediately without the need for additional installation and configuration. Second, Watcher collects and monitors the coding activity of students automatically in real-time. As Watcher provides the history of the coding activity to instructors in log files, the instructors can investigate suspicious coding activities such as plagiarism, even for a short source code. Third, Watcher provides facilities to remotely manage and evaluate students’ hands-on programming assignments. We evaluated Watcher in a Unix system programming class for 96 students. The results showed that Watcher improves the quality of the coding experience for students through Web-IDE, and it offers instructors valuable data that can be used to analyze the various coding activities of individual students. © 2022 by the authors.",
    "keywords": "cloud platform; coding activity; online learning; Web-IDE",
    "released": 2022,
    "link": "https://doi.org/10.3390/s22197284",
    "interesting": "-"
  },
  {
    "title": "PyGuru: A Programming Environment to Facilitate Measurement of Cognitive Engagement",
    "abstract": "There is a vital link between students' engagement and their performance. Despite this, a dearth of studies exploring student engagement (especially cognitive) in computer programming, where high failure rates are a norm. Interestingly, online environments capture fine-grained interactions; this data has the potential to detect students' cognitive engagement. The contribution of this paper is two-fold. Firstly, it introduces an online learning environment to learn and practice python programming called PyGuru and the data logged in the system. Secondly, we provide a preliminary analysis of students' interaction with the system to reveal their level of cognitive engagement in different system components. The results of this study conducted for two weeks and 21 students demonstrate that students perform more actions that correspond to passive engagement than other levels of engagement. © 30th International Conference on Computers in Education Conference, ICCE 2022 - Proceedings.",
    "keywords": "Cognitive Engagement; Learning Environment; log data; Programming; PyGuru",
    "released": 2022,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85151057671&partnerID=40&md5=55681dd316c4316e0dc7abf3ea120c7e",
    "interesting": "+"
  },
  {
    "title": "Subacute Pulmonary Toxicity of Glutaraldehyde Aerosols in a Human In Vitro Airway Tissue Model",
    "abstract": "Glutaraldehyde (GA) has been cleared by the Center for Devices and Radiological Health (CDRH) of the Food and Drug Administration (FDA) as a high-level disinfectant for disinfecting heat-sensitive medical equipment in hospitals and healthcare facilities. Inhalation exposure to GA is known to cause respiratory irritation and sensitization in animals and humans. To reproduce some of the known in vivo effects elicited by GA, we used a liquid aerosol exposure system and evaluated the tissue responses in a human in vitro airway epithelial tissue model. The cultures were treated at the air interface with various concentrations of GA aerosols on five consecutive days and changes in tissue function and structure were evaluated at select timepoints during the treatment phase and after a 7-day recovery period. Exposure to GA aerosols caused oxidative stress, inhibition of ciliary beating frequency, aberrant mucin production, and disturbance of cytokine and matrix metalloproteinase secretion, as well as morphological transformation. Some effects, such as those on goblet cells and ciliated cells, persisted following the 7-day recovery period. Of note, the functional and structural disturbances observed in GA-treated cultures resemble those found in ortho-phthaldehyde (OPA)-treated cultures. Furthermore, our in vitro findings on GA toxicity partially and qualitatively mimicked those reported in the animal and human survey studies. Taken together, observations from this study demonstrate that the human air-liquid-interface (ALI) airway tissue model, integrated with an in vitro exposure system that simulates human inhalation exposure, could be used for in vitro-based human hazard identification and the risk characterization of aerosolized chemicals. © 2022 by the authors.",
    "keywords": "air-liquid-interface (ALI) airway model; airway toxicity; cloud liquid aerosol generation and exposure system; glutaraldehyde (GA); medical device development tools",
    "released": 2022,
    "link": "https://doi.org/10.3390/ijms232012118",
    "interesting": "-"
  },
  {
    "title": "Enhancing students’ beliefs regarding programming self-efficacy and intrinsic value of an online distributed Programming Environment",
    "abstract": "Several studies have explored the factors that influence self-efficacy as well as its contribution to academic development in online learning environments in recent years. However, little research has investigated the effect of a web-based learning environment on enhancing students’ beliefs about self-efficacy for learning. This is especially noticeable in the field of online distributed programming. We need to design online learning environments for programming education that foster both students’ self-efficacy for programming learning and the added value that students perceive of the tool as a successful learning environment. To that end, we conducted a quantitative analysis to collect and analyze data of students using an online Distributed Systems Laboratory (DSLab) in an authentic, long-term online educational experience. The results indicate that (1) our distributed programming learning tool provides an environment that increases students’ belief of programming self-efficacy; (2) the students’ experience with the tool strengthens their belief in the intrinsic value of the tool; however (3) the relationship between students’ belief in the tool intrinsic value and their self-efficacy is inconclusive. This study provides relevant implications for online distributed (or general) programming course teachers who seek to increase students’ engagement, learning and performance in this field. © 2022, The Author(s).",
    "keywords": "Intrinsic value; Online distributed programming learning; Programming self-efficacy",
    "released": 2022,
    "link": "https://doi.org/10.1007/s12528-022-09310-9",
    "interesting": "-"
  },
  {
    "title": "Gorgias cloud: On-line explainable argumentation",
    "abstract": "[No abstract available]",
    "keywords": "Computational Argumentation; IDE; SaaS; xAI",
    "released": 2022,
    "link": "https://doi.org/10.3233/FAIA220178",
    "interesting": "-"
  },
  {
    "title": "Cloud Based Electrical Power Management System Using JDBC",
    "abstract": "Electricity is one of the most important features in life and it is the predominant part of life as most of our life is dependent on this only and electricity play a predominant role in the day-to-day activities. So, maintaining the electricity and the post-production through the unit of power consumption should be clear and neat. This necessitates the need to develop an engaging system that connects to the database and work flawlessly 24/7. The proposed system made the work easier and ensure full attention. The electricity bill management system effortlessly brings down the manpower and it produces a friendly environment between the consumer and admin. The proposed system uses Java for the front end and SQL for the back end. SQL is one of the leading platforms for the database. This doesn't need any mastery and they can be easily adapted within a past time. The proposed system is used to control the power consumption by the user by calculating the number of units. Thus the front end of the proposed system is designed by Java to enhance the feature of the system. As most of the systems are deployed with simple features this provides a higher version of credit to the system.  © 2022 IEEE.",
    "keywords": "Connectivity tools; Database; Eclipse IDE; Java; JDBC; SQL; SQL Run IDE",
    "released": 2022,
    "link": "https://doi.org/10.1109/ICAISS55157.2022.10010731",
    "interesting": "-"
  },
  {
    "title": "Introduction to Apache NetBeans IDE",
    "abstract": "This chapter presents basic and fundamental knowledge about and implementations of the Apache NetBeans IDE 12. The Apache NetBeans IDE is one of the most current and updated IDEs and is widely implemented in a wide spectrum of Java applications. The Apache NetBeans IDE is actually written in Java and runs everywhere a Java Virtual Machine is installed, including Windows, Mac OS, Linux and Solaris. The Apache NetBeans Platform is a broad Swing-based framework on which a programmer can base large desktop applications. The IDE itself is based on the NetBeans Platform. The Platform contains APIs that simplify the handling of windows, actions, files and many other things typical in applications. The Apache NetBeans IDE is an open-source integrated development environment, and it supports development of all Java application types, such as Java Standard Edition including JavaFX, Java Mobile Edition, Web, Enterprise JavaBean and mobile applications, out of the box. © 2023 Ying Bai.",
    "keywords": "",
    "released": 2022,
    "link": "https://doi.org/10.1201/9781003304029-5",
    "interesting": "-"
  },
  {
    "title": "Assessing Versatility of a Generic End‐to‐End Platform for IoT Ecosystem Applications",
    "abstract": "Availability of efficient development tools for data‐rich IoT applications is becoming ever more important. Such tools should support cross‐platform deployment and seamless and effective applicability in a variety of domains. In this view, we assessed the versatility of an edge‐to‐cloud system featuring Measurify, a framework for managing smart things. The framework exposes to developers a set of measurement‐oriented resources that can be used in different contexts. The tool has been assessed in the development of end‐to‐end IoT applications in six Electronic and Information Technologies Engineering BSc theses that have highlighted the potential of such a system, both from a didactic and a professional point of view. The main design abstractions of the system (i.e., generic sensor configuration, simple language with chainable operations for processing data on the edge, seamless WiFi/GSM communication) allowed developers to be productive and focus on the application requirements and the high‐level design choices needed to define the edge system (microcontroller and its sensors), avoiding the large set‐up times necessary to start a solution from scratch. The experience also highlighted some usability issues that will be addressed in an upcoming release of the system. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.",
    "keywords": "Development tools; Edge computing; Embedded systems and devices; End‐to‐end systems; IoT",
    "released": 2022,
    "link": "https://doi.org/10.3390/s22030713",
    "interesting": "-"
  },
  {
    "title": "Advanced Blood Management System Community Method Based on Deep Learning",
    "abstract": "In consideration of both people and geographical area, India is a sizable nation. If we examine the Indian medical system, we find that not all segments of the population are served. Due to a lack of resources or ineffective resource management, the poor and lower-class population do not get the greatest medications available in the nation. Our bodies and the whole healthcare system depend on blood. Many patients pass away while waiting for the blood necessary for performing numerous life-saving procedures in hospitals. Blood is a crucial component of the healing process, whether it be for a fatal sickness or a serious injury. The goal of blood transfusion is to save the patient's life. On a local level, we have resource-constrained blood banks like those located in hospitals or cities. Particular blood types like AB+, AB-, A+, etc. are constantly in limited supply. When a patient is struggling for his or her life, it often leaves physicians and administrators powerless, forcing them to look for and request blood from other sources. People sometimes are requested to pay for donation in an emergency, which is completely against the law and contributes to a corrupt political system. Although similar incidents often occur in federal We are unable to conceive what the situation would be in the isolated areas of India because men lack resources and money. It is astonishing that we don't have a fully reliable platform handling the widespread healthcare issue while having a technology like the internet for nearly twenty to thirty years in the mainstream. Ironically, there is a significant difference between online firms that promise 30-minute shopping and pizza delivery and those who really deliver blood. The major goal of this study is to shorten the time needed to complete the cycle of blood donation, waste-free storage, and distribution to interested institutions. This research uses cutting-edge technologies to improve logistics management, performance, and quality, including cloud computing, wearable tech, and machine learning. Designing intelligent systems that can use artificial information to make choices and enhance from across supply chain is crucial. © 2022 IEEE.",
    "keywords": "Android Platform; Blood Management; E-Raktkosh; Healthcare System; IDE and BaaS; ML; SMBS",
    "released": 2022,
    "link": "https://doi.org/10.1109/SMART55829.2022.10047024",
    "interesting": "-"
  },
  {
    "title": "Automatically Categorizing Software Technologies",
    "abstract": "The lack of informal language and software technology standard taxonomy makes it impossible to analyze technology trends on forums and other online sites. Researchers have done an in-depth study of the seven top-notch technology tools and proposed a better automated method to classify software technologies. e.g., Witt uses phrases that describe software tech or concept and put back a wide-ranging class that defines it (i. e., IDE). Furthermore, it defines its function (commercial, PHP). By extension, this method can dynamically compile the list using all technologies of a given type. In a same way working of WordNet, WebIsADb, WiBiTaxonomy, and few other tools is also studied by the researchers. Eventually, they compared these classification methodologies and establish that Witt, once used in software jargon, showed healthier results as compared to all other explanations assessed, lacking a conforming diminution in untrue alarm rates.  © 2022 IEEE.",
    "keywords": "IDE; PHP; WebIsADb; WiBiTaxonomy; WITT",
    "released": 2022,
    "link": "https://doi.org/10.1109/ICoDT255437.2022.9787457",
    "interesting": "-"
  },
  {
    "title": "Instagram as a Special Educator Professional Development Tool: A Guide to Teachergram",
    "abstract": "Instagram is a free, online social media application that facilitates social networking. Since Instagram is image dependent, educators create visuals accompanied by captions of up to 2,200 characters. By adding specific hashtags to captions, educator posts are curated by the algorithm into a broad community of practice, colloquially known as “Teachergram.” As a technology-facilitated PD tool, Teachergram lends itself to many of the characteristics of high quality and sustainable professional development (PD). In this paper, we focus on how Instagram can be used as a PD tool that supports collaboration, reflection, and feedback loops of educators. We focus on how the unique characteristics of Teachergram lead to the creation of communities and affinity spaces, aligned with existing PD frameworks, built to support the retention of special education teachers and related service providers. © The Author(s) 2021.",
    "keywords": "educational perspectives; inclusive education; professional development; social networking; technology perspectives",
    "released": 2022,
    "link": "https://doi.org/10.1177/01626434211033596",
    "interesting": "-"
  },
  {
    "title": "Micro-IDE: A tool platform for generating efficient deployment alternatives based on microservices",
    "abstract": "Microservice architecture (MSA) is a paradigm to design and develop scalable distributed applications using loosely coupled, highly cohesive components that can be deployed independently. The applications that realize the MSA may contain thousands of services that together form the overall system. Microservices interact with each other by producing and consuming data. Deploying frequently communicating services to the same physical resource would reduce network utilization, which is vital for reducing costs and improving scalability. Since the physical resources have limited capacity, it is not always possible to deploy communicating services to the same resource. Therefore, automated efficient deployment alternatives need to be generated for MSA in the design phase. To address this problem, we proposed an algorithmic approach to generate efficient microservice deployment configurations to available cloud resources in our previous study. In this study, a tool (Micro-IDE) has been proposed to realize and evaluate this approach. The Micro-IDE tool has been validated using a case study inspired by the Spotify application. © 2022 John Wiley & Sons Ltd.",
    "keywords": "automated deployment of microservices; cloud computing; microservice architectures; optimization algorithms; tool platform for deploying microservices",
    "released": 2022,
    "link": "https://doi.org/10.1002/spe.3088",
    "interesting": "-"
  },
  {
    "title": "Machine Learning Based Smart Social Media Mining for Disorder Communication Detection",
    "abstract": "Social Media are gaining momentum in this digital era. Data is being shared on social media on random intervals across the world. The Population of the persons in social media has overcome the population of certain countries of the world, which implicates the growth of the social media at this juncture. Any news or posts in the social media can be so trending that the post get viral within fraction of time, thus attracting the attention of the other persons. Whilst this can be taken in the positive account, precautions have to be taken to avoid the social media being misused. Any news or posts related to hatred, spread of misappropriate content relating to religion, sex, countries or borders, or any other news that can harm or spread hatred towards any community or people has to be stopped, else it may create havoc or damages of property or a brand that can affect the lives and the reputation of many. This paper puts out a novel approach to identify those mental disorders communication from the social media accounts by using machine learning approach. © 2022 IEEE.",
    "keywords": "Hate Speech; Machine Learning; NLP; Python; Python IDE; Social Media",
    "released": 2022,
    "link": "https://doi.org/10.1109/ICCPC55978.2022.10072247",
    "interesting": "-"
  },
  {
    "title": "Health detection system for COVID19 patients using IoT",
    "abstract": "Currently, the entire planet is terrified of a virus known as COVID-19 (coronavirus). Its effects are so deadly that the whole world has been placed on lockdown. Vaccines for this virus are being developed by scientists and physicians all over the world. Machine learning, the Internet of Things (IoT), and artificial intelligence all play a role in detecting people who have been affected by coronavirus. We have also operated in this direction and developed a system called \"Health Detection System for COVID-19 Patients using IoT\" which can identify coronavirus-infected people and create a database for easy monitoring. Our system named as \"Health Detection System for COVID-19 Patients using IoT\" can detect corona by measuring the temperature and oxygen level of the patient. The system will detect the temperature of person with the help of DHT sensor and the oxygen level with the help of MAX30100, which are interfaced with NodeMCU. Data will be uploaded on ThingSpeak server (cloud) through which it can be monitored. The system is quite simple and very effective, especially at the hospital (ICU) where doctors can monitor patient from a distant place. Complete system cost around Rs 1,000/- (Rupees One Thousand Only). © 2022 Scrivener Publishing LLC.",
    "keywords": "30100; Arduino IDE; Coronavirus; DHT; IoT; MAX; Node MCU; Proteus",
    "released": 2022,
    "link": "https://doi.org/10.1002/9781119819165.ch13",
    "interesting": "-"
  },
  {
    "title": "GriddlyJS: A Web IDE for Reinforcement Learning",
    "abstract": "Progress in reinforcement learning (RL) research is often driven by the design of new, challenging environments-a costly undertaking requiring skills orthogonal to that of a typical machine learning researcher. The complexity of environment development has only increased with the rise of procedural-content generation (PCG) as the prevailing paradigm for producing varied environments capable of testing the robustness and generalization of RL agents. Moreover, existing environments often require complex build processes, making reproducing results difficult. To address these issues, we introduce GriddlyJS, a web-based Integrated Development Environment (IDE) based on the Griddly engine. GriddlyJS allows researchers to visually design and debug arbitrary, complex PCG grid-world environments using a convenient graphical interface, as well as visualize, evaluate, and record the performance of trained agent models. By connecting the RL workflow to the advanced functionality enabled by modern web standards, GriddlyJS allows publishing interactive agent-environment demos that reproduce experimental results directly to the web. To demonstrate the versatility of GriddlyJS, we use it to quickly develop a complex compositional puzzle-solving environment alongside arbitrary human-designed environment configurations and their solutions for use in automatic curriculum learning and offline RL. The GriddlyJS IDE is open source and freely available at https://griddly.ai. © 2022 Neural information processing systems foundation. All rights reserved.",
    "keywords": "",
    "released": 2022,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85150655577&partnerID=40&md5=64a1cc460d48271ecfd27d233261de74",
    "interesting": "-"
  },
  {
    "title": "An Intelligent Sensor based Automatic Attendance Management System Using IoT",
    "abstract": "The need for intelligent and distributed monitoring systems based on sensor networks of diverse application systems is growing as a result of the field of industrial control in network applications developing so quickly. It is required to check the body temperatures and attendance when students and staffs visit schools and colleges during this COVID 19 pandemic. A solution is developed here for the purpose of tracking temperatures and attendance management using a smart thermometer without being in contact in order to keep social distance. The person (both staff and student) faces are captured by the ESP32 Camera for training and testing purposes. After the training is over, the ESP32 Micro Controller board registers the student or faculty facial image. For attendance purposes, the MLX90614 IR Temperature Sensor will measure the body temperature of students or instructors. Both the collected data and the email-based attendance notification will be transferred to the cloud using IoT. The message \"Please leave the college and take care of your health\" will be communicated to the person if their temperature exceeds the threshold level. © 2022 Authors. All rights reserved.",
    "keywords": "Arduino IDE; Attendance Management; ESP32 camera, OLED Display; ESP32 Micro Controller; MLX90614 - IR sensor",
    "released": 2022,
    "link": "https://doi.org/10.17762/ijritcc.v10i2s.5909",
    "interesting": "-"
  },
  {
    "title": "3rd International Conference on Innovations in Digital Economy, SPBU IDE 2021",
    "abstract": "The proceedings contain 23 papers. The special focus in this conference is on Innovations in Digital Economy. The topics include: The Introduction of Digital Technologies to Participatory Design in the Public Spaces Formation; factors Influencing Shoppers’ Behavioral Intention to Purchase Smart Phones: Digital Transformation Through YouTube User Generated Content; revisiting the Question of Digitalization and Bioenergy Development in the Russian Federation Regions; digital Ecosystem: Nature, Types and Opportunities for Value Creation; identification and Visualization of Regional Industrial Clusters: Case of Metallurgical Cluster in Russia; evaluation of E-commerce Impact on Sustainable Economic Growth: The Case of Vietnam; machine Learning Predictive Model for Performance Criteria of Energy-Efficient Healthy Building; innovative Project Model Development for the Use of Digital Wearable Devices to Improve the Quality of Life; preface; web Innovation Cycles and Timing Projections – Applying Economic Waves Theory to Internet Development Stages; digitalization of Business Processes in the Automotive Industry; transformation of Software Project Management in Industry 4.0; development of a Method for Assessing the Industrial Enterprise Digitalization Level; the Use of Neural Networks for Optimization of the Quality of Business Activity in the Digital Environment; approach to Evaluating a Digital Company Activities Based on Intellectual Platform of Data Analysis; reference Model of Digital Business-Architecture of Geographically Distributed Medical Organizations; information Trends and Digital Management Tools of the “New Industrialization”; features of the Russian National Qualifications System Under the Influence of Digitalization; Employee Development and Digitalization in BANI World; study of Labour Digital Potential Usage by Organizations of Ural Federal District.",
    "keywords": "",
    "released": 2022,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85136938386&partnerID=40&md5=4ab1cb8fd5d415c316a0b5c424335310",
    "interesting": "-"
  },
  {
    "title": "Visual development environment and visual programming as an effective tool for data collection and analysis",
    "abstract": "The paper analyzes the effectiveness of various visual programming languages. Its application in data processing and collection is considered. The complexity of analyzing diverse, poorly structured and often unrelated information requires the use of special software and appropriate skills. The application of visual programming to work with such data is proposed. A prototype of software for obtaining, analyzing and processing data from websites in the form of a visual programming language has been developed. The prototype includes a visual user interface development environment and a visual script editor. The efficiency and optimal functionality of visual programming for working with data are analyzed.  © 2022 IEEE.",
    "keywords": "data analysis; data manipulation; programming language; visual programming; web scraping",
    "released": 2022,
    "link": "https://doi.org/10.1109/ITNT55410.2022.9848614",
    "interesting": "-"
  },
  {
    "title": "Web Game Development Tool for Learning Communication Functions for Beginners Networked Game Developers",
    "abstract": "In networked game development, there are issues related to the technology and tuning required to implement communication features, such as synchronization control between terminals, suitable display updates, and adjustment of communication frequencies. This knowledge of development requires a lot of learning time to acquire in practice because the operations of communication are not transparent, and this may be a factor that prevents newcomers from entering the market. Therefore, the authors propose a networked game development learning support tool for beginner networked game developers without the above-mentioned development skills. Concretely, the authors propose an object allocation system that supports networked game development by providing users with intuitive operation and a visual understanding of networked game development skills. Subject experiment and learning task to evaluate learning effectiveness using the proposed system has been planned. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-3-031-14314-4_51",
    "interesting": "-"
  },
  {
    "title": "Performance Simulation of a Traffic Sign Recognition based Neural Network on Cadence’s Tensilica Vision P6 DSP using Xtensa Xplorer IDE",
    "abstract": "Advanced Driver Assistance System (ADAS) technology is currently in an embryonic stage. Many multinational tech companies and startups are developing a truly autonomous vehicle that will guarantee the safety and security of the passengers and other vehicles, pedestrians on roads, and roadside structures such as traffic signal poles, traffic signposts, and other structures. However, these autonomous vehicles have not been implemented on a large scale for regular use on roads currently. These autonomous vehicles perform many different object detection/recognition tasks. Examples include traffic sign recognition, lane detection, pedestrian detection. Usually, the person driving the vehicle performs these detection/recognition tasks. The main goal of such autonomous systems should be to perform these tasks in real-time. Deep learning performs these object recognition tasks with very high accuracy. The neural network is implemented on the hardware device, which does all the computation work. Different vendors have many different hardware choices that suit the client's needs. Usually, these neural networks are implemented on a CPU, DSP, GPU, FPGA, and other custom-made AI-specific hardware. The underlying processor forms a vital part of an ADAS. The CNN needs to process the incoming frames from a camera for real-time object detection/recognition tasks. Real-time processing is necessary to take appropriate actions/decisions depending on the logic embedded. Hence knowing the performance of the neural network (in terms of frames processed per second) on the underlying hardware is a significant factor in deciding the various hardware options available from different vendors, which CNN model to implement, whether the CNN model is suitable to implement on the underlying hardware depending upon the system specifications and requirement. In this paper, we trained a CNN using the transfer learning approach to recognize german traffic signs using Nvidia DIGITS web-based software and analyzed the performance of this trained CNN (in terms of frames per second) by simulating the trained CNN on Cadence's Xtensa Xplorer software by selecting Cadence's Tensilica Vision P6 DSP as an underlying processor for inference. © 2022, World Scientific and Engineering Academy and Society. All rights reserved.",
    "keywords": "ConvNets); Convolutional Neural Networks (CNN; Digital Signal Processor (DSP); frames per second (fps); Graphical User Interface (GUI); Graphics Processing Unit (GPU); Multiply and Accumulate (MACs); Traffic Sign Recognition (TSR); Vector Floating Point Unit (VFPU); Xtensa Neural Network Compiler (XNNC); Xtensa Processor Generator (XPG); Xtensa Xplorer",
    "released": 2022,
    "link": "https://doi.org/10.37394/232018.2022.10.5",
    "interesting": "-"
  },
  {
    "title": "Experiences from Developing a Web Crawler Using a Model-Driven Development Tool: Emerging Opportunities",
    "abstract": "Model-driven development (MDD) tools aim to increase software development speed and decrease software time-to-market. Available MDD tools in the market state that software development teams can fast and easily develop “any” software by using them. So, the following research question arises: what is the perception of a software developer in using an MDD tool to create software he/she is used to develop without models? We selected Mendix, a user-friendly and easy configurable MDD tool, to address such a question and develop a domain-specific software artifact. We propose a use case collaborating with a Swiss company that allows users to compare insurances based on web crawling. Therefore, we ask a software developer at the Swiss company to develop a simplified version of a web crawler using the selected MDD tool. The software developer has extensive experience with developing web crawlers. However, for the software developer using MDD tools was a new paradigm of software development. We observe that the software developer successfully developed the web crawler using the MDD tool. However, he/she perceived some difficulties during the development, arising opportunities such as decreasing modeling complexity, increasing the MDD tool integrability, and improving modeling assistance. Finally, we conclude the experience report by drawing next research endeavors to generalize the results and discover new opportunities for improving MDD tools. © 2022, Springer Nature Switzerland AG.",
    "keywords": "Experience report; Model-driven development; Web crawling",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-3-031-07475-2_23",
    "interesting": "-"
  },
  {
    "title": "Cinco Cloud: A Holistic Approach for Web-Based Language-Driven Engineering",
    "abstract": "In this paper, we present Cinco Cloud, a holistic web-based language engineering environment that seamlessly aligns the entire process from the meta modeling of domain-specific languages, via application modeling in corresponding integrated modeling environments, to the deployment of the final product through CI/CD pipelines using Git repository platform integrations. Cinco Cloud supports a role/competence-specific access management in order to organize the collaborative modeling involving stakeholders of different expertise without any installation requirements. The paper illustrates the interplay between all the required steps along a concrete application example. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "CI/CD; Cloud-based IDEs; Collaborative modeling; Domain specific languages; Language-driven engineering",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-3-031-19756-7_23",
    "interesting": "-"
  },
  {
    "title": "User Interface Development Tools and Software for Arduino “A Comparative Study”",
    "abstract": "In this paper, we have introduced some of the most interesting user interface software for developing applications with Arduino modules. A brief comparison of the most used Graphical interfaces is done based on student’s feedback and experiment. The first scenario was a questionnaire presented to License L3 students and Master students in their final project work. The second scenario is taken from research’s documentation from the web. We concluded that students like to have GUI in their applications however they prefer simplicity, clearness in the GUI and real-time interaction. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Arduino modules; Development tools; E learning; Graphic interface; Simulation",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-3-031-05258-3_4",
    "interesting": "-"
  },
  {
    "title": "Effective Online Tools for Teaching Java Programming Course on an Online Platform",
    "abstract": "Today is the era of online teaching and learning. Specifically for programming courses, it is necessary to apply any powerful online tool that may help students learn on an online platform. Hence, in this paper as a case study, Java programming course is considered. Total three online tools, namely JDoodle (online Java complier IDE), Codeshare and Poll Everywhere have been applied during the course delivery. The student’s performance has measured before and after the tool application. Total 120 students have participated in this activity. It has observed that there is around 20% increase in the results after the tool usage. Also, many students appreciated the usage of this tool. © 2022, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.",
    "keywords": "Codeshare; Java; JDoodle; Online Java complier IDE; Poll Everywhere",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-981-16-6369-7_56",
    "interesting": "-"
  },
  {
    "title": "Modern Integrated Development Environment (IDEs)",
    "abstract": "One of the important objectives of smart cities is to provide electronic services to citizens, however, this requires the building of related software which is a time-consuming process. In this regard, smart city infrastructures require development tools that can help accelerate and facilitate software development (mobile, IoT, and web applications). Integrated Development Environments (IDEs) are well-known tools that have brought together the features of various tools within one package. Modern IDEs include the advantages of Artificial Intelligence (AI) and Cloud Computing. These technologies can help the developer overcome the complexities associated with multi-platform software products. This paper has explored AI techniques that are applied in IDEs. To this end, the Eclipse Theia (cloud-based IDE) and its AI-based extensions are explored as a case study. The findings show that recommender system models, language modeling, deep learning models, code mining, and attention mechanisms are used frequently to facilitate programming. Furthermore, some researches have used NLP techniques and AI-based virtual assistance to promote the interaction between developers and projects. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Artificial intelligence (AI); Integrated Development Environment (IDE); Online IDEs; Software development; Theia",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-3-030-78901-5_24",
    "interesting": "-"
  },
  {
    "title": "A Surprising Navigation: The Emergence of the LODEStone Model for Specialized Learning Design, Through the Creation of OCTBR, a Creative Commons-Licensed Course Development Tool for Health Science Learning",
    "abstract": "The LODEStone model is an emerging design model for con-sulting on organizational, department or team level challenges for specialized learners. LODEStone evolved from the it-erative design of OCTBR, a course development tool created at an academic health science center (AHSC). OCTBR’s purpose is to help create better blended and online learning experiences for graduate-level students in medicine, allied health and related health sciences. Reflecting on how OCTBR was developed, we describe a pilot model of Learning, Opinions, Discerning, Equipping and Shaping (LODEStone) that can be used to design other projects for specialized learners. © 2022, Association for the Advancement of Computing in Education. All rights reserved.",
    "keywords": "AHSC; allied health learning; course design; course develop-ment; Creative Commons; emerging model; health science learning; instructional design; medical learning; specialized learning",
    "released": 2022,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85127452928&partnerID=40&md5=4c3a5b75583531778f5d87d04d3f6654",
    "interesting": "-"
  },
  {
    "title": "Design and Implement Smart Home Appliances Controller Using IOT",
    "abstract": "Today, most of the appliances are working on the internet platform to use different sensors and other equipment. The devices can communicate with each other when it allow to the data over the network. This technique is implemented in our home to handle appliances automatically and easy. The source of the current task is performed by the home appliance controller inside the house. Now a day’s, it is very easy to develop the home appliance controller, because high computational devices, user friendly and cost effective automation system. For the communication, different technology of it using by home appliance controller like Wi-Fi, Bluetooth and controlling varies appliances it used different devices like smart phone, tablet and laptop. The existing systems may not effective for general user and it causes trouble to user due to use by the web application for looking the view of the house. If the users want to see the status of the home, then each and every time he/she can access the web application. Therefore, the purpose of development of this system is to let people aware about these technologies, and make the system as simple as possible for an general peoples to understand. We are going to mobile application for controlling the home appliance form any remote location using internet of things. © 2022, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "CMOS; IC; IDE; IOT; MOSFET; SQL; TTL; WI-FI",
    "released": 2022,
    "link": "https://doi.org/10.1007/978-3-030-86223-7_11",
    "interesting": "-"
  },
  {
    "title": "A python library for the jupyteo ide earth observation processing tool enabling interoperability with the qgis system for use in data science",
    "abstract": "This paper describes JupyQgis – a new Python library for Jupyteo IDE enabling interoperability with the QGIS system. Jupyteo is an online integrated development environment for earth observation data processing and is available on a cloud platform. It is targeted at remote sensing experts, scientists and users who can develop the Jupyter notebook by reusing embedded open-source tools, WPS interfaces and existing notebooks. In recent years, there has been an increasing popularity of data science methods that have become the focus of many organizations. Many scientific disciplines are facing a significant transformation due to data-driven solutions. This is especially true of geodesy, environmental sciences, and Earth sciences, where large data sets, such as Earth observation satellite data (EO data) and GIS data are used. The previous experience in using Jupyteo, both among the users of this platform and its creators, indicates the need to supplement its functionality with GIS analytical tools. This study analyzed the most efficient way to combine the functionality of the QGIS system with the functionality of the Jupyteo platform in one tool. It was found that the most suitable solution is to create a custom library providing an API for collaboration between both environments. The resulting library makes the work much easier and simplifies the source code of the created Python scripts. The functionality of the developed solution was illustrated with a test use case. © 2022 Author.",
    "keywords": "API; Data science; Earth observation data processing; GIS; IDE; IPython; Jupyter notebook; Machine learning; Web processing service",
    "released": 2022,
    "link": "https://doi.org/10.7494/geom.2022.16.1.117",
    "interesting": "-"
  },
  {
    "title": "The use of WEB-oriented Technologies in the Process of WEB-programming Teaching for Technical Universities Students",
    "abstract": "The realities of the XXI century - informatization, digital transformation, high technologies, WEB-technologies in particular - put Ukraine state in front of global challenges of creating a digital state. It is the implementation of a number of digital projects which form the digital space of the state, in particular those coordinated by the Ministry of Digital Transformation of Ukraine. The development of a significant number of applications requires the state to constantly update them, maintain them working, which requires qualified programmers. The task of technical universities is to train competitive specialists in the IT field. This study analyzes the results of a survey of students of NTUU \"Kyiv Polytechnic Institute. Igor Sikorsky”, the purpose of which was to find out what integrated development environments and programming languages senior students independently choose when developing programs within the educational and professional programs of the faculty, and which correlate with software used by programmers in the implementation of large IT-enterprises, in particular WEB-programming languages. The results of the study showed as well that the rating of programming languages and the use of integrated development environments meet modern requirements for software development. 76.7% of graduates, while being students, are already employed in IT companies as full-time employees. The high percentage of employment suggests that graduate students of the Faculty of Informatics and Computer Engineering of Igor Sikorsky NTUU KPI are competitive in the modern IT labor market. © 2022 Copyright for this paper by its authors",
    "keywords": "integrated development environment; IT graduates competitiveness; programming language",
    "released": 2022,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85127380931&partnerID=40&md5=d7052529c25b7cc502590fc33cf96780",
    "interesting": "-"
  },
  {
    "title": "JSPatcher, a visual programming environment for building high-performance web audio applications",
    "abstract": "Many visual programming languages (VPLs), which include Max or PureData, provide a graphic canvas for connecting between functions or data. This canvas, also called a patcher, is basically a graph meant to be interpreted as a dataflow computation by the system. Some VPLs are used for multimedia performance or content generation because the user interface system is generally a significant element of the language. This paper presents a Web-based VPL, JSPatcher, which allows users to build audio graphs using the Web Audio API. Users can use aWeb browser to graphically design and run digital signal processor algorithms using domain-specific languages for audio processing, such as FAUST or Gen, and execute them in a dedicated high-priority thread called AudioWorklet. The application can also be utilized to create interactive programs and shareable artworks online with other JavaScript language built-ins, Web APIs, Web-based audio plugins, or external JavaScript modules.",
    "keywords": "",
    "released": 2022,
    "link": "https://doi.org/10.17743/jaes.2022.0056",
    "interesting": "-"
  },
  {
    "title": "Intelligent correction and monitoring of ship propulsion rotary device vibration",
    "abstract": "Field inspection is a traditional way to detect the problem of shaft imbalance or abnormal vibration in a ship propulsion system; however, the ship cannot execute any tasks or activities during calibration. This study develops a human-machine monitoring interface (HMMI) to estimate vibration abnormalities and implement an intelligent active balance correction to the propulsion system online. In this study, Arduino IDE, InduSoft, and LabVIEW are used to create a function monitored by HMMI. By comparing the abnormal vibration amplification of the moment of inertia, HMMI calculates the correct mass to reduce the vibration. The experimental results show that, after HMMI carries out continuous active balance correction online, the correction rate achieves 105.37%. This indicates that HMMI can calculate the amount of imbalance and phase angles and drive a counterweight to the correct balance position while the device is still operating.",
    "keywords": "Arduino IDE; InduSoft; HMMI; LabVIEW; active balance",
    "released": 2022,
    "link": "https://doi.org/10.46604/ijeti.2022.9151",
    "interesting": "-"
  },
  {
    "title": "Intermural online research group meetings as professional development tools for undergraduate, graduate, and postdoctoral trainees",
    "abstract": "In academic research laboratories, well-organized group meetings are common training tools that can benefit individuals and the group as a whole. Owing to the COVID-19 pandemic, virtual meetings have become an increasingly important format for research group meetings. Virtual meeting formats also offer an important and underappreciated advantage: ease of collaboration with researchers at other (potentially distant) institutions. Herein, we describe the strategies we employed to facilitate engaging and productive online meetings and academic exchanges between environmental chemistry/engineering laboratories at a primarily undergraduate program and a doctoral research intensive institution. Over a period of 12 months, six intermural group meetings were held through videoconference. All meetings consisted of two segments: (1) a literature or research discussion and (2) a professional development session that emphasized topics such as navigating life after completing a bachelor’s degree, advice on securing graduate school admission and funding, and characteristics of effective instructors (from the undergraduate perspective). Student-led discussion of scientific literature and research is valuable in enhancing trainees’ communication skills, interdisciplinary perspectives, and critical reading of the literature. Professional development sessions facilitate unique opportunities for professional mentorship. Given the substantial pedagogical and other professional benefits of intermural group meetings, we recommend this meeting format as a useful training tool for research trainees even after the current pandemic wanes.",
    "keywords": "higher education; interdisciplinary training; collaborative learning; professional development",
    "released": 2022,
    "link": "https://doi.org/10.1089/ees.2021.0147",
    "interesting": "-"
  },
  {
    "title": "Barriers to physiotherapists’ use of professional development tools for chronic pain: A knowledge translation study",
    "abstract": "Purpose: The Pain Science Division (PSD) is a special interest group of the Canadian Physiotherapy Association that serves physiotherapists who have an interest in better understanding and managing patients’ pain. The PSD developed evidence-based resources for its members with the goal of improving patient care by supporting professional development. However, online metrics tracking access to these resources indicated that access was low. The purpose of this study was to identify the barriers PSD members encountered to the use of PSD resources and to recommend interventions to address these barriers guided by the Theory and Techniques Tool (TTT). Method: We distributed an online survey to PSD members across Canada. We used the TTT, a knowledge translation tool, to guide the design of the questionnaire and identify actionable findings. Results: Response rates from 621 non-student members and 1,470 student members were 26.9% and 1.4%, respectively. Based on the frequency of practicing physiotherapists’ (N = 167) agreement with items in the TTT, the primary barriers to use of the PSD resources were forgetting that the resources were available and forgetting to use them. Conclusions: The TTT can be used to identify barriers to use of professional development tools.",
    "keywords": "continuing education; evidence-based practice; knowledge translation; pain management; physical therapists",
    "released": 2022,
    "link": "https://doi.org/10.3138/ptc-2020-0148",
    "interesting": "-"
  },
  {
    "title": "Design of integrated courseware development environment for computer education based on online evaluation system",
    "abstract": "Distance education based on computer has become the main part of modern education in our country, which has contributed to the popularization of higher education and the improvement of teaching quality. However, at the same time, there are still many deficiencies in the opening of the existing computer education system courseware. Therefore, this paper puts forward a research on the design of integrated courseware development environment for computer education based on online evaluation system. This paper makes a detailed analysis of the classification and selection of computer education courseware, and points out the main problems existing in the existing courseware mode. In view of these shortcomings, according to the characteristics of computer education courseware, this paper puts forward the optimization design of online evaluation system. In this paper, the development ideas and objectives of the integrated courseware system are further studied. SCORM content aggregation model is used to effectively manage the micro teaching units in the courseware. Especially after the establishment of the classroom management module, the computer distance education becomes more flexible. In the application of courseware, it can be combined according to the needs, which greatly expands the computer education department the practicability of the system. The analysis shows that the computer integrated courseware management scheme based on online evaluation system not only improves the courseware editing and demonstration ability of the computer education system, but also greatly improves the comprehensive performance of the system. The teaching effect can be evaluated in real time, so that the students’ learning efficiency is higher.",
    "keywords": "Online Evaluation System; Distance Education; Computer Networks; Computer Courseware",
    "released": 2021,
    "link": "https://doi.org/10.1145/3456887.3457496",
    "interesting": "-"
  },
  {
    "title": "Data collection for the learn-OCaml programming platform: Modelling how students develop typed functional programs",
    "abstract": "Online programming platforms provide unique opportunities to collect and analyze a wealth of information on how students develop programs. In this work, we give an overview of the data collection infrastructure for the Learn-OCaml programming environment which allows students to write, typecheck and run OCaml code directly in their browser. We collect data for three different events: compile reads student’s code and type-checks it; eval compiles and evaluates the code; grade runs the auto-grader on the student’s well-typed program and provides feedback on the input-output correctness and code style. The data which we aim to gather across semesters serves as a basis for a wide variety of future studies on understanding how students develop programs in the context of typed functional programming.",
    "keywords": "online programming environments; functional programming",
    "released": 2021,
    "link": "https://doi.org/10.1145/3408877.3439579",
    "interesting": "-"
  },
  {
    "title": "Fostering collaboration with asymmetric roles in accessible programming environments for children with mixed-visual-abilities",
    "abstract": "Introduction of computational thinking training in early childhood potentiates cognitive development and better prepares children to live and prosper in a future heavily computational society. Programming environments are now widely adopted in classrooms to teach programming concepts. However, these tools are often reliant on visual interaction, making them inaccessible to children with visual impairments. Also, programming environments in general are usually designed to promote individual experiences, wasting the potential benefits of group collaborative activities. We propose the design of a programming environment that leverages asymmetric roles to foster collaborative computational thinking activities for children with visual impairments, in particular mixed-visual-ability classes. The multimodal system comprises the use of tangible blocks and auditory feedback, while children have to collaborate to program a robot. We conducted a remote online study, collecting valuable feedback on the limitations and opportunities for future work, aiming to potentiate education and social inclusion.",
    "keywords": "accessible; children; collaboration; robot; tangible; visually impaired",
    "released": 2021,
    "link": "https://doi.org/10.1145/3441852.3476553",
    "interesting": "-"
  },
  {
    "title": "Interactive programming environments for teachers and students",
    "abstract": "This workshop offers hands-on experience with a suite of interactive programming environments for teachers and students, each of them cloud-based and free. The first tool is CS50 Sandbox, via which teachers create temporary programming environments quickly and share copies of those sandboxes with students. The second tool is CS50 Lab, via which teachers can create step-by-step programming lessons, providing incremental feedback at each step, enabling students to progress from an empty file (or starter code) to working code, with hints and feedback along the way. And the third tool is CS50 IDE, via which teachers can provide students with their own cloud-based Linux environment. Each of these environments offers students a built-in file browser and code editor, along with a terminal window with shell access to their very own container. The IDE additionally provides an interactive, graphical debugger. Each tool enables students to write programs in any language for which a compiler or interpreter can be installed in the underlying container, including Java and Python. Not only will we demonstrate each tool, we’ll discuss lessons learned from having deployed these tools in CS50 at Harvard to hundreds of students on campus and thousands of students online. We’ll compare and contrast with commercial and open-source tools. And we’ll discuss challenges encountered and best practices adopted.",
    "keywords": "sandbox; programming environment; linux; lab; ide",
    "released": 2021,
    "link": "https://doi.org/10.1145/3408877.3432501",
    "interesting": "-"
  },
  {
    "title": "IDE support for cloud-based static analyses",
    "abstract": "Integrating static analyses into continuous integration (CI) or continuous delivery (CD) has become the best practice for assuring code quality and security. Static Application Security Testing (SAST) tools fit well into CI/CD, because CI/CD allows time for deep static analyses on large code bases and prevents vulnerabilities in the early stages of the development lifecycle. In CI/CD, the SAST tools usually run in the cloud and provide findings via a web interface. Recent studies show that developers prefer seeing the findings of these tools directly in their IDEs. Most tools with IDE integration run lightweight static analyses and can give feedback at coding time, but SAST tools used in CI/CD take longer to run and usually are not able to do so. Can developers interact directly with a cloud-based SAST tool that is typically used in CI/CD through their IDE? We investigated if such a mechanism can integrate cloud-based SAST tools better into a developers’ workflow than web-based solutions. We interviewed developers to understand their expectations from an IDE solution. Guided by these interviews, we implemented an IDE prototype for an existing cloud-based SAST tool. With a usability test using this prototype, we found that the IDE solution promoted more frequent tool interactions. In particular, developers performed code scans three times more often. This indicates better integration of the cloud-based SAST tool into developers’ workflow. Furthermore, while our study did not show statistically significant improvement on developers’ code-fixing performance, it did show a promising reduction in time for fixing vulnerable code.",
    "keywords": "static analysis; security testing; cloud service; SAST tools; IDE integration",
    "released": 2021,
    "link": "https://doi.org/10.1145/3468264.3468535",
    "interesting": "-"
  },
  {
    "title": "Reflective debugging with a python web IDE",
    "abstract": "In this lightning talk, we explore the impact of adding reflective debugging to a web-based problem-solving IDE, Spinoza, that we created to support teaching programming with Python. Spinoza allows the instructor to create (or select from a library) Python problems with automatic unit tests. Each time a student attempts a new problem, the system randomly decides if reflective debugging will be required; in which case each time the student runs their code and the code does not pass the unit tests, the student will be required to classify the type of error (syntax, logic or runtime error), provide a description of the bug, and explain how they plan to fix it before they are allowed to revise and run the code again. Our main result from this pilot study is that the number of debugging steps to reach a correct solution was statistically significantly less when students were required to use reflective debugging. Our hope was that by being required to analyze each error for some problems (about one out of three), students would see the benefits and develop the habit of reflective debugging even when it was not required.",
    "keywords": "reflective debugging; novice web-based ide; learning analytics",
    "released": 2021,
    "link": "https://doi.org/10.1145/3408877.3439556",
    "interesting": "-"
  },
  {
    "title": "A programming environment for multi-FPGA systems based on CyberWorkBench: An integrated design tool",
    "abstract": "This paper proposes a multi-FPGA programming environment based on NEC’s integrated design tool CyberWorkBench (CWB) for a multi-FPGA system FiC (Flow-in-Cloud). Programmers describe their program in SystemC as small modules connected with FIFO channels, then verify the operation with the behavioral simulation considering parallel execution. After the high-level synthesis (HLS) is done with CWB, modules distributed to each board are decided, and the interface module is inserted. The cycle accurate simulation is applied to ensure the operation and estimate the performance. Finally, generated Verilog HDL code for each board is implemented with Xilinx’s Vivado just like the traditional design and configuration is obtained. As an example, a simple convolutional neural network LeNet is described and implemented on a real system using the tool. Although the cycle accurate simulation takes 105.34sec, the estimated cycles are only 2.2",
    "keywords": "",
    "released": 2021,
    "link": "https://doi.org/10.1145/3468044.3468049",
    "interesting": "-"
  },
  {
    "title": "GenLine and GenForm: Two tools for interacting with generative language models in a code editor",
    "abstract": "A large, generative language model’s output can be influenced through well-designed prompts, or text-based inputs that establish textual patterns that the model replicates in its output [6]. These capabilities create new opportunities for novel interactions with large, generative language models. We present a macro system with two tools that allow users to invoke language model prompts as macros in a code editor. GenLine allows users to execute macros inline as they write code in the editor (e.g., “Make an OK button” produces the equivalent HTML). GenForm provides a form-like interface where the user provides input that is then transformed into multiple pieces of output at the same time (e.g., a description of web code is transformed into HTML, CSS, and JavaScript).",
    "keywords": "prompt programming; macros; generative models; code synthesis",
    "released": 2021,
    "link": "https://doi.org/10.1145/3474349.3480209",
    "interesting": "-"
  },
  {
    "title": "MOCSIDE: An open-source and scalable online IDE and auto-grader for introductory programming courses",
    "abstract": "Programming is learned through practice, with said practice in introductory programming courses often translating to a prohibitively large number of assignments, increasing the grading workload for faculty and/or teaching assistants. In short, this is unsustainable. Several publishers and a few notable companies have provided meritable solutions, although most are plagued with problems including minimal problem sets, limited customization options, high cost, and even a disconnect with the pedagogical needs within academia. This paper presents a survey of the more popular solutions currently available, followed by a presentation of our newly-developed web application, MOCSIDE: open-source and scalable online IDE and auto-grader for computer science education.",
    "keywords": "",
    "released": 2021,
    "link": "https://dl.acm.org/doi/10.5555/3512733.3512734",
    "interesting": "+"
  },
  {
    "title": "Reflective debugging in spinoza V3.0",
    "abstract": "In this paper we present an online IDE (Spinoza 3.0) for teaching Python programming in which the students are (sometimes) required to verbally reflect on their error messages and unit test failures before being allowed to modify their code. This system was designed to be used in large synchronous in-person, remote, or hybrid classes for either in-class problem solving or out-of-class homework problems. For each student and problem, the system makes a random choice about whether to require reflection on all debugging steps. If the student/problem pair required reflection, then after each time the student ran the program and received feedback as an error message or a set of unit test results, they were required to type in a description of the bug and a plan for how to modify the program to eliminate the bug. The main result is that the number of debugging steps to reach a correct solution was statistically significantly less for problems where the students were required to reflect on each debugging step. We suggest that future developers of pedagogical IDEs consider adding features which require students to reflect frequently during the debugging process.",
    "keywords": "Spinoza; introductory programming classes; learning analytics; novice programmers; online IDE; reflective debugging",
    "released": 2021,
    "link": "https://doi.org/10.1145/3441636.3442313",
    "interesting": "-"
  },
  {
    "title": "Towards automated generation of PO-based WebDriver test suites from selenium IDE recordings",
    "abstract": "Modern web applications require long quality assurance sessions to be appreciated by users. Test automation reduces delivery times but requires the development of effective and maintainable test scripts so that the advantages of its use are not lost. The usage of the Page object (PO) pattern has proven to be very effective in GUI testing, however, the manual development of Page objects, a sort of web page facade exposing methods to the test scripts, requires a relevant effort, which is often only repaid during evolution. In this paper, we describe a novel approach, almost totally automated, that takes advantage of the features offered by Selenium IDE for generating more maintainable Selenium WebDriver test scripts and Page objects for web applications. The only manual step required to the tester/developer is to add comments to the Selenese produced by Selenium IDE during registrations through a plugin. The very first estimate we conducted to evaluate our tool-based approach appears to be promising.",
    "keywords": "Automated generation; Page Objects; Selenium IDE and WebDriver; Test Automation",
    "released": 2021,
    "link": "https://doi.org/10.1145/3472672.3473953",
    "interesting": "-"
  },
  {
    "title": "A Novel Browser-based No-code Machine Learning Application Development Tool",
    "abstract": "Machine learning (ML) application development constitutes a complex process that requires developers to have considerable amount of programming and specialized technical skills. There is still a substantial barrier for researchers who do not possess the programming and technical skills to develop ML models that meets the needs of their specific fields of study. The typical ML model development workflow entails the installation of a set of software elements and a certain amount of code development. This paper introduces a browser-based ML application development tool that is geared towards the needs of researchers who have limited knowledge in programming. The tool allows the users to create a customized image classifier model based on the image sets that they provide. The tool provides a no-code workflow that enables users to create and test their ML models on a browser without downloading any software modules.",
    "keywords": "Machine learning; artificial intelligence application development tools; browser-based machine learning systems; system design; machine learning model development",
    "released": 2021,
    "link": "https://doi.org/10.1109/AIIoT52608.2021.9454239",
    "interesting": "-"
  },
  {
    "title": "RIDE: Theia-Based Web IDE for the Reflex Language",
    "abstract": "The process-oriented programming language Reflex is a programming language for cyber-physical systems' (CPS) control software. It is based on the formal hyperprocess model. Reflex has proved effective in industrial projects. But using Reflex is difficult due to the lack of IDE for Reflex programs. In this paper, we develop a cloud desktop IDE for the Reflex language - RIDE. Modularity is the main principle of RIDE architecture. It meets the needs of CPS software development process and allows extending the IDE functionality. Reflex IDE extensions may provide various functionalities, such as a graphical representation of the Reflex code, translators to other programming languages, debugging, and verification techniques.",
    "keywords": "process-oriented programming; cloud IDE; web; cyber-physical systems; control software",
    "released": 2021,
    "link": "https://doi.org/10.1109/EDM52169.2021.9507678",
    "interesting": "+"
  },
  {
    "title": "CodeHelper: A Web-Based Lightweight IDE for E-Mentoring in Online Programming Courses",
    "abstract": "Many universities choose online courses instead of in-person during the COVID-19 pandemic. One of the limitations of online courses is that it is difficult to perform teacher-student interactions in online teaching environments. Especially in online programming courses, it is hard to find an appropriate approach to remotely guide students when they have trouble conducting program code. This paper presents a lightweight IDE named CodeHelper integrated with an online judge that allows the instructor or the teaching assistant (TA) to help students in a form of online pair programming. Students can share their code with the instructor or the TA in a sandbox programming environment generated by CodeHelper, and the instructor or the TA can guide students by marking the mistakes in the sandbox. CodeHelper allows real-time pair programming for both sides, which can reduce the time and the cost of distance learning. Besides, the source code shared in the sandbox can also be compiled for syntax check, executed with a user-defined input, and submitted to the online judge for automated assessment, which can let students check the correctness of their programs once their troubles have been solved. It is efficient to use CodeHelper for mentoring students in online programming courses.",
    "keywords": "Online programming courses; e-mentoring; pair programming",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICCCI51764.2021.9486772",
    "interesting": "+"
  },
  {
    "title": "Development of a Block-Based Programming Environment that Enables to Create Web Game Pages about Random Numbers",
    "abstract": "Numerous learners require general and generic algorithmic thinking abilities regardless of the programming languages through activities to develop algorithms to solve problems. For example, Scratch is block-based programming often used in elementary and junior high schools. Therefore, several learners need a block-based programming environment that can increase their interest in programming and fosters algorithmic thinking as they implement and solve their problems. However, setting a task that does not require learners to take the initiative is challenging. Thus, an easy subject that several learners can handle is necessary to develop. This study proposes a block-based programming environment allowing novice learners to create web game pages regarding random numbers to promote algorithmic thinking. The proposed environment can be handled easily by learners who know how to use Scratch.",
    "keywords": "algorithmic thinking; block-based programming; HTML; JavaScript; random numbers; web game page",
    "released": 2021,
    "link": "https://doi.org/10.1109/GCCE53005.2021.9621779",
    "interesting": "-"
  },
  {
    "title": "Creating a Private Cloud using FTP Server",
    "abstract": "Data plays an indispensable role in our day-to-day lives. Also, in this digital era, the amount of data is increasing at an unprecedented rate, which in turn requires specific storage devices to store different types of data. Despite the hype, maintaining these devices require high cost. Sometimes these devices may also get corrupted and also it require a lot of devices to store data. To reduce these problem, this research work maintains a cloud space, which can be accessed through a FTP login(admin), where user need to register/subscribe to access the cloud. After successful registration they will get links through mobile number, and then they need to login to upload their data. Here, the Data is protected by using ROTA algorithm. Also, the poposed research work provides bitcoin transaction as an additional feature. A private cloud has been created for storage and later it was implemented and created by using NetBeans IDE. The user can upload and download the data into the cloud by using FTP server. The bitcoin transaction shows the graph with different tokens entered by the user.",
    "keywords": "Cloud space; FTP; ROTA; NetBeans IDE",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICICCS51141.2021.9432320",
    "interesting": "-"
  },
  {
    "title": "Providing Security to private cloud Using AES Algorithm",
    "abstract": "In this digital era, people are generating huge amount of data. This necessitates the need to develop a specific device to store all the data. Generally, the data will be stored in pen drives, hard drives, etc. sometimes the data will be lost due to the corrupt devices. To overcome all these issues, this research work has implemented a cloud space for storing the data and it provides more security to the data. The data can just be accessed by using the internet from anywhere in the world. All these techniques were implemented with the java by using Net beans IDE. Once user uploads the data, the user will not have any rights to change the data. User uploaded files are stored in the cloud with the file name as system time and a directory will be created with some random words. Also, the cloud accepts the data only if the size of file is less than 2MB.",
    "keywords": "Cloud space; AES; FTP; NetBeans IDE; SOAP; Security",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICIRCA51532.2021.9545001",
    "interesting": "-"
  },
  {
    "title": "Smart Cold Storage and Inventory Monitoring System",
    "abstract": "Internet of things technology is adopted in every field. Our proposed Smart cold storage and inventory monitoring system uses sensor-based IoT technology to offer remote monitoring and tracking the produce. Our paper proposed methodology is early warning alerts and notifications in critical conditions. It enables end-end visibility and accountability across the entire product value chain. The perishable goods are often required to travel thousands of miles by land, air, water transport facilities to reach their final destination. It creates a lot of pressure on tracking the companies using the cold storage supporters for the distribution of the food and maintain a certain temperature during the entire journey. This mainly causes a panic situation for the business owners, stakeholders and industrialists. It may also cause damage to the inventory system and time. Our system enables endless real time monitoring. It helps in controlling the losses which occur for business. As per the research India has 7645 cold storage facilities, out of these about 68% is used to store vegetables. And remaining 32% is used for storing other commodities. In the proposed cold storage system Temperature and Humidity sensor, Ultrasonic sensor, Wi-Fi enabled microcontroller board and Mobile application are used.",
    "keywords": "Sensors; IBM WATSON Cloud Platform; Arduino IDE; NodeMCU; MIT app inventor; Node Red platform; Fast-2 SMS; MQTT",
    "released": 2021,
    "link": "https://doi.org/10.1109/RTEICT52294.2021.9573939",
    "interesting": "-"
  },
  {
    "title": "Using Cloudmesh GAS for Speedy Generation of Hybrid Multi-Cloud Auto Generated AI Services",
    "abstract": "Today’s problems require a plethora of analytics tasks to be conducted to tackle state-of-the-art computational challenges posed in society impacting many areas including health care, automotive, banking, natural language processing, image detection, and many more data analytics-related tasks. Sharing existing analytics functions allows reuse and reduces overall effort. However, integrating deployment frameworks in the age of cloud computing are often out of reach for domain experts. Simple frameworks are needed that allow even non-experts to deploy and host services in the cloud. To avoid vendor lock-in, we require a generalized composable analytics service framework that allows users to integrate their services and those offered in clouds, not only by one, but by many cloud compute and service providers.We report on work that we conducted to provide a service integration framework for composing generalized analytics frame-works on multi-cloud providers that we call our Generalized AI Service (GAS) Generator. We demonstrate the framework’s usability by showcasing useful analytics workflows on various cloud providers, including AWS, Azure, and Google, and edge computing IoT devices. The examples are based on Scikit learn so they can be used in educational settings, replicated, and expanded upon. Benchmarks are used to compare the different services and showcase general replicability.",
    "keywords": "Software/Software Engineering; Tools; Programming Environments/Construction Tools; Code generation; Distributed systems; Artificial Intelligence; code generation; AI services; multi-cloud; hybrid cloud; OpenAPI; REST; cloudmesh",
    "released": 2021,
    "link": "https://doi.org/10.1109/COMPSAC51774.2021.00032",
    "interesting": "-"
  },
  {
    "title": "From Monolithic to Microservice Architecture: The Case of Extensible and Domain-Specific IDEs",
    "abstract": "Integrated Development Environments (IDEs) are evolving towards cloud-native applications with the aim to relocate the language services provided by an IDE on distant servers. Existing research works focus on the overall migration process to handle more efficiently their specific requirements. However, the microservicization of legacy monolithic applications is still highly dependent on the specific properties of the application of interest. In this paper, we report our experiment on the microservicization process of the Cloud-Based graphical modeling workbench Sirius Web. We aim to identify the technical challenges related to applications with similar properties, and provide insights for practitioners to migrate their similar applications towards microservices. We discuss the main lessons learned and identify the underlying challenges to be further addressed by the community.",
    "keywords": "Microservice; DevOps; Domain-Specific Languages",
    "released": 2021,
    "link": "https://doi.org/10.1109/MODELS-C53483.2021.00070",
    "interesting": "-"
  },
  {
    "title": "Developing Reflex IDE Kernel with Xtext Framework",
    "abstract": "In this paper, we describe the technology of the process-oriented language Reflex IDE kernel development. The Reflex language, which is being maintained at the Institute of Automation and Electrometry, is a language for cyber-physical systems software specification. In the paper, we assume that the cyber-physical system is a computational core that interacts with the physical world. In the case of Reflex, the computation platform is an industrial PC. Reflex IDE (RIDE) includes a language-based editor, syntax and semantics analyzers as well as an abstract syntax tree (AST) generator, and a class library for working with the generated AST. In this work, we explain our motivation for the research, formulate the requirements for the development, and present the RIDE architecture. We describe the RIDE development process using Eclipse/Xtext tools and its user interface. We also provide an example of extending the Reflex IDE kernel with a code generator for the AVR platform. In the conclusion, we discuss the possibility of using the obtained result to create a web-version of RIDE.",
    "keywords": "process-oriented programming; Reflex; Xtext; parser; translator; DSL",
    "released": 2021,
    "link": "https://doi.org/10.1109/EDM52169.2021.9507663",
    "interesting": "+"
  },
  {
    "title": "Removing the Walls Around Visual Educational Programming Environments",
    "abstract": "Many block-based programming environments have proven to be effective at engaging novices in learning programming. However, most restrict access to the outside world, limiting learners to commands and computing resources built in to the environment. Some allow learners to drag and drop files, connect to sensors and robots locally or issue HTTP requests. But in a world where most of the applications in our daily lives are distributed (i.e., their functionality depends on communicating with other programs or accessing resources and data on the internet), the lack of support for beginners to envision and create such distributed programs is a lost opportunity. This paper argues that it is not only feasible, but crucial, to create environments with simple yet powerful abstractions that open up distributed computing and other widely used but advanced computing concepts including networking, the Internet of Things, and cybersecurity to novices. By thus removing the walls around our environments, we can expand opportunities for learning considerably: programs can access a wealth of online data and web services, and communicate with other projects. Moreover, these changes can enable young learners to collaborate with each other during program construction whether they share their physical location or study remotely. Importantly, providing access to the wider world will also help counter widespread student perceptions that block-based environments are mere toys, and show that they are capable of creating compelling applications. The paper presents NetsBlox, a programming environment that supports these ideas and shows that tools can be designed to democratize access to powerful ideas in computing.",
    "keywords": "",
    "released": 2021,
    "link": "https://doi.org/10.1109/VL/HCC51201.2021.9576399",
    "interesting": "-"
  },
  {
    "title": "IoT Based Voice Controlled Autonomous Robotic Vehicle Through Google Assistant",
    "abstract": "Internet of Things (IOT) which aims to describe the execution of a voice-controlled automated vehicle utilizing Arduino IDE. The thought is to at first arrangement the Equipment of the Robot Car and a while later code the entire working using our previous data on programming. The code will by then be reenacted on programming (IDE) and later be interfaced with the gear. The client provides explicit voice orders to the mechanical vehicle through google right hand present on the cell phone. At the receiving side data will be received through Thing Speak (cloud computing) to the ESP32 micro-controller that will execute the orders and forward them to the Arduino on the mechanical vehicle. ESP32 controls the developments of the mechanical vehicle as per got orders. The voice-controlled robot (VCR) moves advances, in reverse, left and right, and quits as indicated by the voice orders forward, in reverse, left, right and stop, respectively. We picked this as our endeavor as mechanical innovation has become a huge piece of our conventional lifestyle and moreover has a wide degree in the planning field. It's anything but's an essential occupation in the improvement of new advancement.",
    "keywords": "IOT; Embedded C; IFTTT; IDE; VCR",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICAC3N53548.2021.9725526",
    "interesting": "-"
  },
  {
    "title": "Sorrel: an IDE Plugin for Managing Licenses and Detecting License Incompatibilities",
    "abstract": "Software development is a complex process that includes many different tasks besides just writing code. One of the aspects of software engineering is selecting and managing licenses for the given project. In this paper, we present SORREL-a plugin for managing licenses and detecting potential incompatibilities for IntelliJ IDEA, a popular Java IDE. The plugin scans the project in search of information about the project license and the licenses of its libraries. If the project does not yet have a license, the plugin provides the developer with recommendations for choosing the most suitable open license, and if there is a license, it informs the programmer about potential licensing violations. The tool makes it easier for developers to choose a proper license for a project and avoid most of the licensing errors-all inside the familiar IDE editor. The plugin and its source code are available online on GitHub: https://github.com/JetBrains-Research/sorrel. A demonstration video can be found at https://youtu.be/doUeAwPjcPE.",
    "keywords": "license detection; license management; license incompatibilities",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICSME52107.2021.00059",
    "interesting": "-"
  },
  {
    "title": "Platform Design of Online Medical Devices using Java Programming",
    "abstract": "The policy for the implementation of the Community Activities Restrictions (a.k.a PPKM) recently implemented by the government due to the increased of COVID-19 outbreak in Indonesia has an impact of the activities restriction. People are experiencing problem to buy all the necessities. Moreover, during this pandemic, various health institutions require large quantity of medical devices, so the design of online medical devices platform application is needed to consider the availability of medical devices are needed quickly. The design of the online medical devices platform done with several programming languages, one of them is the Java programming language. Java was the first programming language that was not tied to any particular hardware or operating system. Java programming language are known as application applied by using Netbeans 2.1. NetBeans IDE also known as an application that is used to create and develop on the Desktop. The result of the study using this application indicates that there are 6 display designs made in the program, including the initial display, the login display by entering the username and password, the list display (for users who do not have an account), the list-item display, the order display and final display.",
    "keywords": "Java Programming; NetBeans IDE; Platform; Medical Devices",
    "released": 2021,
    "link": "https://doi.org/10.1109/ELTICOM53303.2021.9590153",
    "interesting": "-"
  },
  {
    "title": "Choosing a Chatbot Development Tool",
    "abstract": "Chatbots are programs that supply services to users via conversation in natural language, acting as virtual assistants within social networks or web applications. Here, we review the most representative chatbot development tools with a focus on technical and managerial aspects.",
    "keywords": "Software Engineering; Chatbots; Natural Language Processing",
    "released": 2021,
    "link": "https://doi.org/10.1109/MS.2020.3030198",
    "interesting": "-"
  },
  {
    "title": "VREUD - An End-User Development Tool to Simplify the Creation of Interactive VR Scenes",
    "abstract": "Recent advances in Virtual Reality (VR) technology and the increased availability of VR-equipped devices enable a wide range of consumer-oriented applications. For novice developers, however, creating interactive scenes for VR applications is a complex and cumbersome task that requires high technical knowledge which is often missing. This hinders the potential of enabling novices to create, modify, and execute their own interactive VR scenes. Although recent authoring tools for interactive VR scenes are promising, most of them focus on expert professionals as the target group and neglect the novices with low programming knowledge. To lower the entry barrier, we provide an open-source web-based End-User Development (EUD) tool, called VREUD, that supports the rapid construction and execution of interactive VR scenes. Concerning construction, VREUD enables the specification of the VR scene including interactions and tasks. Furthermore, VREUD supports the execution and immersive experience of the created interactive VR scenes on VR head-mounted displays. Based on a user study, we have analyzed the effectiveness, efficiency, and user satisfaction of VREUD which shows promising results to empower novices in creating their interactive VR scenes.  © 2021 IEEE.",
    "keywords": "Authoring; Development Tool; End-user Development; Interactive Scene; Virtual Reality",
    "released": 2021,
    "link": "https://doi.org/10.1109/VL/HCC51201.2021.9576372",
    "interesting": "-"
  },
  {
    "title": "F-IDEs with features and vcs designed to assist human reasoning when verification fails",
    "abstract": "This paper summarizes our efforts to aid human reasoning when verification fails through the use of two distinct Formalization Integrated Development Environments (F-IDEs) that we have developed. Both environments are modular and facilitate reasoning about the full behavior of object-based code. The first environment, referred to as the web-IDE, has been used for several years to teach aspects of formal specification and verification, including why and where verification conditions (VCs) arise and how to use them when verification fails. The second F-IDE, RESOLVE Studio, remains experimental, but is a more fully-fledged environment backed by a sequent-based VC generator that produces VCs with fewer extraneous givens. While the environments and VC generation techniques are necessarily language specific, the principles of alternative VC generation methods, F-IDE features, and observations about their impact on novices and experienced users are more generally applicable.  © Y. Sun et al.",
    "keywords": "",
    "released": 2021,
    "link": "https://doi.org/10.4204/EPTCS.349.4",
    "interesting": "-"
  },
  {
    "title": "Framework to migrate AngularJS based legacy web application to react component architecture",
    "abstract": "The next-generation component-based front-end frameworks such as React have outperformed AngularJS from both the end-user and developer expectations. The concepts, patterns, and architecture of the old school AngularJS application and the component-based React applications are different, hence the migration is not straightforward. This research defines a clear, cost-effective and efficient migration path from AngularJS applications to React applications. By comparing different approaches, the research provides a framework with a step-by-step guideline for migrating the presentation layer of any AngularJS based legacy application to a component-based React application. A migration assistant tool named Ng-React Copilot was implemented to guide the developer and automate the migration. The tool was developed by converting the critical refactorings proposed in the framework into a set of detection algorithms and providing the ability to scan against the given codebase. The tool works as a command-line tool as well as an integrated tool with popular IDEs. The framework and the tool were evaluated by applying them to selected small, medium, and enterprise-level AngularJS legacy applications and the results indicate the validity of the research findings. © 2021 IEEE.",
    "keywords": "AngularJS; IDE; Ng-React Copilot; React",
    "released": 2021,
    "link": "https://doi.org/10.1109/MERCon52712.2021.9525659",
    "interesting": "-"
  },
  {
    "title": "The LRA Workbench: an IDE for efficient REST API composition through linked metadata",
    "abstract": "The number of Web APIs for accessing information and services is continuously increasing, and yet, no tools exist to automate the time-consuming and error-prone process of invoking those APIs and composing their responses. The recent emergence of widely-adopted, standardized, Web-API description formats and the development of Linked Data technologies for data integration have motivated our work on the LRA (Linked REST APIs) methodology [1, 2]. LRA relies on RDF service specifications to automate the development process around the usage of Web APIs. This automation represents a great opportunity to systematize and improve the quality of service-oriented application development. However, LRA’s reliance on SPARQL as the user-interaction model may hinder its adoption, because it requires developers to learn the intricacies of the unconventional graph data model and its associated datasets. In this paper we have developed the LRA Workbench (LRAWbench), which takes advantage of the emergent schema of Web-API specifications, in order to simplify the formulation of LRA-compliant SPARQL queries. Our empirical evaluation of the LRAWbench usability demonstrates that our tool significantly improves the performance of developers formulating SPARQL queries for LRA. A subsequent study on the effectiveness of the LRAWbench demonstrated that developers using LRA tend to produce code with considerable better structural complexity, in less time, than developers manually composing APIs. © 2021, The Author(s).",
    "keywords": "Intelligent web services and Semantic Web; Service-oriented architecture; Services integration framework",
    "released": 2021,
    "link": "https://doi.org/10.1186/s40537-021-00504-z",
    "interesting": "-"
  },
  {
    "title": "Crowdsourced evaluation of robot programming environments: Methodology and application",
    "abstract": "Industrial robot programming tools increasingly rely on graphical interfaces, which aim at rendering the programming task more accessible to a wide variety of users. The usability of such tools is currently being evaluated in controlled environments, such as laboratories or companies, in which a group of participants is asked to carry out several tasks using the tool and then fill out a standardized questionnaire. In this context, this paper proposes and evaluates an alternative evaluation methodology, which leverages online crowdsourcing platforms to produce the same results as face-to-face evaluations. We applied the proposed framework in the evaluation of a web-based industrial robot programming tool called Assembly. Our results suggest that crowdsourcing facilitates a cost-effective, result-oriented, and reusable methodology for performing user studies anonymously and online. © 2021 by the authors. Licensee MDPI, Basel, Switzerland.",
    "keywords": "Crowdsourcing; Robot programming; User interface evaluation",
    "released": 2021,
    "link": "https://doi.org/10.3390/app112210903",
    "interesting": "-"
  },
  {
    "title": "Electric Load Forecasting for Internet of Things Smart Home Using Hybrid PCA and ARIMA Algorithm",
    "abstract": "Many types of research have been conducted for the development of Internet of Things (IoT) devices and energy consumption forecasting. In this research, the electric load forecasting is designed with the development of microcontrollers, sensors, and actuators, added with cameras, Liquid Crystal Display (LCD) touch screen, and minicomputers, to improve the IoT smart home system. Using the Python program, Principal Component Analysis (PCA) and Autoregressive Integrated Moving Average (ARIMA) algorithms are integrated into the website interface for electric load forecasting. As provisions for forecasting, a monthly dataset is needed which consists of electric current variables, number of individuals living in the house, room light intensity, weather conditions in terms of temperature, humidity, and wind speed. The main hardware parts are ESP32, ACS712, electromechanical relay, Raspberry Pi, RPi Camera, infrared Light Emitting Diode (LED), Light Dependent Resistor (LDR) sensor, and LCD touch screen. While the main software applications are Arduino Interactive Development Environment (IDE), Visual Studio Code, and Raspberry Pi OS, added with many libraries for Python 3 IDE. The experimental results provided the fact that PCA and ARIMA can predict short-term household electric load accurately. Furthermore, by using Amazon Web Services (AWS) cloud computing server, the IoT smart home system has excellent data package performances. © 2021 Int. J. Elec. & Elecn. Eng. & Telcomm.",
    "keywords": "Hybrid algorithm; internet of things; load forecasting; python IDE; remote control; smart home",
    "released": 2021,
    "link": "https://doi.org/10.18178/ijeetc.10.6.425-430",
    "interesting": "-"
  },
  {
    "title": "Air Pollution Monitoring System by using Arduino IDE",
    "abstract": "Air pollution has an effect on our everyday lives. It poses threats to the world's biodiversity and quality of life. Due to the rapid increase in industrial activity over the years, there is a much greater need for monitoring the air quality. This project proposes a framework for tracking air pollution. The proposed model is regulated by an Arduino mini control. Air pollution observance system is intended to trace and evaluate air quality in real time with the knowledge retrieved from an overseas server and saved online. Measurements of air quality depend on the components, which are measured in terms of Million Metrics (PPM) and analyzed in Microsoft Excel. The air quality measurements taken by the established system were also precise. © 2021 IEEE.",
    "keywords": "16 x 2 LCD Display; Arduino mega; ESP 8266 WIFI Module; MQ135 sensor",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICESC51422.2021.9533007",
    "interesting": "-"
  },
  {
    "title": "An IoT based solar powered aquaponics system",
    "abstract": "Aquaponics represent a viable and sustainable solution for food security for the whole world. Today, in the era of internet of things (IoT) and artificial intelligence (AI), smart, cloud-connected aquaponics have become a reality. Monitoring and control of aquaponics can be remotely done on mobile devices. In this paper, we present the design and implementation of a small-scale (domestic) solar-powered aquaponics system with wireless monitoring that allows the user monitor data from sensors and also remotely control a few actuators. The work is based on low cost microcontrollers and sensors as well as an open source online database. A notification system was set-up so that the user is informed whenever there is an emergency situation in the system. Since the power is derived from a PV panel, the system is totally independent in terms of power consumption, so it can be placed anywhere with sufficient solar irradiance. The system was thoroughly tested and results were conclusive.  © 2021 IEEE.",
    "keywords": "Android; Aquaponics; Arduino; Integrated Development Environment; microcontroller",
    "released": 2021,
    "link": "https://doi.org/10.1109/ECAI52376.2021.9515023",
    "interesting": "-"
  },
  {
    "title": "Sustainable solving: Reducing the memory footprint of IFDS-based data flow analyses using intelligent garbage collection",
    "abstract": "Static data flow analysis is an integral building block for many applications, ranging from compile-time code optimization to security and privacy analysis. When assessing whether a mobile app is trustworthy, for example, analysts need to identify which of the user's personal data is sent to external parties such as the app developer or cloud providers. Since accessing and sending data is usually done via API calls, tracking the data flow between source and sink API is often the method of choice. Precise algorithms such as IFDS help reduce the number of false positives, but also introduce significant performance penalties. With its fixpoint iteration over the program's entire exploded supergraph, IFDS is particularly memory-intensive, consuming hundreds of megabytes or even several gigabytes for medium-sized apps. In this paper, we present a technique called CleanDroid for reducing the memory footprint of a precise IFDS-based data flow analysis and demonstrate its effectiveness in the popular FlowDroid open-source data flow solver. CleanDroid efficiently removes edges from the path edge table used for the IFDS fixpoint iteration without affecting termination. As we show on 600 realworld Android apps from the Google Play Store, CleanDroid reduces the average per-app memory consumption by around 63% to 78%. At the same time, CleanDroid speeds up the analysis by up to 66%.  © 2021 IEEE.",
    "keywords": "Data Flow; IDE; IFDS; Performance; Static Analysis",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICSE43902.2021.00102",
    "interesting": "-"
  },
  {
    "title": "Storing Student Records Using Blockchain and IPFS",
    "abstract": "Securing and issuing academic transcripts is one of the most mind-numbing tasks in the modern world as there are multiple disciplines and manually maintaining the accuracy of the data is tough. Moreover, the data is stored in an untrusted centralized cloud storage system, this type of model possesses a number of issues like high operational cost, data availability, and data security. The current research paper tries to exploit the decentralization and the smart contract feature of the ethereum blockchain. A model where basic student data is stored in a smart contract and large files are stored in IPFS protocol.  © 2021 IEEE.",
    "keywords": "Blockchain; IPFS; Remix IDE; Security; Smart Contract; Solidity",
    "released": 2021,
    "link": "https://doi.org/10.1109/ComPE53109.2021.9751947",
    "interesting": "-"
  },
  {
    "title": "A Container Cloud Based PaaS Solution for Supplying GPU Computing Resources",
    "abstract": "With the increasing number of deep learning models started to rely on the high computing throughput of GPUs, many institutes, such as universities, have invested a lot in purchasing GPU devices and servers and building data centers. However, providing usable development environments for end-users can be quite a challenge for them due to the lack of specific expertise. In this paper, we designed and implemented a platform as a service (PaaS) solution, which enables end-users to provision an integrated multi-framework development environment with shared GPU computing resources using a few clicks. Our actual use shows that the proposed platform is capable of supporting nearly 100 development environments through a Kubernetes cluster consisting of 3 nodes and each node equipped with 2 Nvidia Tesla V100 datacenter-class GPUs with 32GB device memory, and can be scaled up and down as needed.  © 2021 IEEE.",
    "keywords": "deep learning; development environment; kubernetes; PaaS",
    "released": 2021,
    "link": "https://doi.org/10.1109/CISCE52179.2021.9445913",
    "interesting": "-"
  },
  {
    "title": "Smart Contract enabled Online Examination System Based in Blockchain Network",
    "abstract": "In today's world, data is one of the most important assets than any other. Every user wants to secure their data from the outer world. Blockchain is the prominent technology that can provide the security and loyalty of data. Initially, blockchain has been used for the cryptocurrency and all the data were available on the public distributed ledger. But now a days, private blockchain is widely used within the organizations for data security. Blockchain engenders decentralized systems in which data can be send and receive securely and efficiently over the network. It means there is everything is hidden from the outer world; only authorized users have the authority to read and write the data on the network. World's topmost industries; like Walmart, IBM, Google, etc. are adopting the blockchain technology to build the Decentralized Applications (DApps). Decentralized Applications are the smart systems that are executed on a distributed computer network. Blockchain enables one of the most secure applications called Smart Contract. Smart Contracts are the computerized and secured distributed ledgers that enable secure, transparent, and tamper-proof transactions. Smart contracts create and verify the data with the help of hashing. It is a mathematical procedure that uses the most powerful algorithm cryptographic Hash Algorithm i.e. SHA-256. It engenders 256-bit signature for the input text. Ethereum Blockchain Platform is a widely used platform to build the DApps. This platform is a public network platform, which is open to all and anyone can participate in this network to send and receives the transactions. Blockchain Technology is enabled in every sector like marketing, business, education and supply-chain, etc. This paper carries out the study Ethereum Blockchain Platform in Education System. We have developed an application for the Online-Examination System using Blockchain Ethereum Platform with features of Smart Contracts that enables server runtime environment NodeJS and MongoDB database system. Blockchain-based system is truly more secure than all the Cloud-based systems. We have also analysed that how blockchain based online examination is more trustworthy as compare the other systems.  © 2021 IEEE.",
    "keywords": "Blockchain Technology; Ethereum Wallet MetaMask; MongoDB and Ethereum; Node.JS; Remix_IDE; Smart-Contracts",
    "released": 2021,
    "link": "https://doi.org/10.1109/ICCCI50826.2021.9402420",
    "interesting": "-"
  },
  {
    "title": "Estimating the Multiple Skills of Students in Massive Programming Environments",
    "abstract": "This Research to Practice Full Paper presents a proposed model to estimate the multiple skills of students in massive online environments that provide programming exercises, whose assessment methods occur automatically without human intervention. The proposed model is based on the M-ERS model and incorporates, from the TrueSkill model, the uncertainty regarding the student's skills. To validate the model, a database from the URI Online Judge platform was used and the M-ERS and TriMElo models were applied to compare the performance and behavior of the two models. The empirical results show that the proposed model updates student's skills more smoothly, according to the correctness or error of the exercise, according to the uncertainty of the skills.  © 2021 IEEE.",
    "keywords": "M-ERS; model; skill; TriMElo; TrueSkill",
    "released": 2021,
    "link": "https://doi.org/10.1109/FIE49875.2021.9637456",
    "interesting": "-"
  },
  {
    "title": "Exploring the Impact of Using Code Genie to Enhance the Programming Knowledge of Students and Across Genders: Experimental Study",
    "abstract": "Statistics show that the computer science field is currently dominated by White and Asian males. This study aims to explore how to increase students’ interest in programming, especially females and underrepresented minorities, through the use of art and animation elements. Code Genie web-based Integrated Development Environment (IDE) was designed and developed for this study so that a student can write JavaScript code that produces artwork and share with other students through this environment. In this paper we explore gender differences in understanding computer programming concepts and whether the use of art has any effect on improving this understanding for both genders. Pretest-posttest experimental methodology was used to collect the data from 65 high school students before and after three coding workshops. The results show that the students’ programming knowledge increased in the posttest and their confidence in answering the programming questions increased for both genders as well. The results also show that females’ scores with more coding time were better than their males’ counterparts while males’ scores with less coding time were better than the females of the same group. However, there was not a big difference in understanding programming concepts between the two genders. © 2021, Springer Nature Switzerland AG.",
    "keywords": "Code genie; CS and gender difference; CS education; CS for underrepresented minorities; STEM for K12; Web-IDE",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-63128-4_69",
    "interesting": "-"
  },
  {
    "title": "Evaluating User Experience in Sandbox Game’s Development Environment in Higher Education",
    "abstract": "The use of Sandbox games development environment in education has been increasing in popularity during the past decade. The topics introduces heuristic approach to evaluate the possibility of UX that created by sandbox game developer environment, through the University game design course, the course requires students use the sandbox game develop environment to create different types of games and upload online. Based on our previous work and experience, we propose an evaluation framework mainly composed of heuristic (game / game story, virtual interface) to detect different problems in the game. To evaluate its applicability in measuring UX factors, we tried to compare the expert evaluation results of five games produced by the experimental results with the game reviews online. Our results show that there is a correlation between the satisfaction of UX and the scores of games created by sandbox game development environment. © 2021, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Heuristic valuation; Sandbox Game; User experience",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-80091-8_20",
    "interesting": "-"
  },
  {
    "title": "Test Automation of Web Application Login Page by Using Selenium Ide in a Web Browser",
    "abstract": "Selenium stands as open-source program apparatus aimed at computerization testing. Here, selenium-IDE (Integrated Developments Environment) Testing is investigated, which could be a remarkably vital movement in Program Improvement Handle. It is to look at and alter source code. A high-quality computer program can well be achieved by producing Compelling Testing. This Paper handles a critical in addition to the crucial issue of Program Testing. Testing can well be executed both manually and automatically. This paper sets to do Mechanization Testing through \"Selenium\". Test cases (TC) are consequently recorded with this web testing tool whilst the analyzer is entering the information in a web application screen. © 2021",
    "keywords": "Manual Testing; Selenium IDE; Test Automation; Test Cases; Test Data",
    "released": 2021,
    "link": "https://doi.org/10.14704/WEB/V18SI04/WEB18160",
    "interesting": "-"
  },
  {
    "title": "A pilot experience with software programming environments as a service for teaching activities",
    "abstract": "Software programming is one of the key abilities for the development of Computational Thinking (CT) skills in Science, Technology, Engineering and Mathematics (STEM). However, specific software tools to emulate realistic scenarios are required for effective teaching. Unfortunately, these tools have some limitations in educational environments due to the need of an adequate configuration and orchestration, which usually assumes an unaffordable work overload for teachers and is inaccessible for students outside the laboratories. To mitigate the aforementioned limitations, we rely on cloud solutions that automate the process of orchestration and configuration of software tools on top of cloud computing infrastructures. This way, the paper presents ACTaaS as a cloud-based educational resource that deploys and orchestrates a whole realistic software programming environment. ACTaaS provides a simple, fast and automatic way to set up a professional integrated environment without involving an overload to the teacher, and it provides an ubiquitous access to the environment. The solution has been tested in a pilot group of 28 students. Currently, there is no tool like ACTaaS that allows such a high grade of automation for the deployment of software production environments focused on educational activities supporting a wide range of cloud providers. Preliminary results through a pilot group predict its effectiveness due to the efficiency to set up a class environment in minutes without overloading the teachers, and providing ubiquitous access to students. In addition, the first student opinions about the experience were greatly positive. © 2020 by the authors. Licensee MDPI, Basel, Switzerland.",
    "keywords": "Cloud comp",
    "released": 2021,
    "link": "https://doi.org/10.3390/app11010341",
    "interesting": "+"
  },
  {
    "title": "Design of Online Visual Interactive Teaching System Based on Artificial Intelligence Technology",
    "abstract": "Based on the research results obtained, an online visualized interactive teaching system based on artificial intelligence technology is designed. The tools and technologies used in the system include Windows XP Professional SP3, Eclipse Flex SDK 4, etc. The RIA scheme based on Adobe Flex technology system is adopted as the client, and the development architecture adopts MVC pattern. Data access is implemented by JDO. The designed system running environment includes the server running environment and the client running environment. System function modules include system setting module, teaching resource management module, electronic whiteboard programming module, controller module, online visual interactive teaching module, database module. The interactive teaching of online visualization is realized by combining hardware and software. The test results show that the system has high throughput, short request waiting time and short request processing time, which proves that the system has good performance. © 2021, ICST Institute for Computer Sciences, Social Informatics and Telecommunications Engineering.",
    "keywords": "Artificial intelligence technology; Development environment; Interactive teaching system; Visualization",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-84386-1_8",
    "interesting": "-"
  },
  {
    "title": "Prediction of Temperature and Humidity Using IoT and Machine Learning Algorithm",
    "abstract": "In this paper, we analyze and predict the temperature and humidity using IoT and linear regression algorithm in machine learning. In ancient days, people use to check the climate conditions by seeing clouds or through storm warnings or by using animals they have noticed the weather conditions for many purposes like harvesting and involves many household activities. To overcome this situation, weather forecasting was found. We collect the temperature and humidity data in various places for few days using Message Queuing Telemetry Transport (MQTT) protocol. So, we initialize the collected data for 5 days in Amazon Web services (AWS) cloud. This data is stored in AWS and by using Dynamo Database (DynamoDB) the stored data is created in the form of the table and it is exported to.csv file. Hence, the data is recorded. Now by using linear regression algorithm in machine learning, we predict the temperature and humidity data. People can therefore easily monitor the weather conditions without eagerly waiting for tomorrow. This makes more easy and comfortable way to the people so that they will be able to know the climatic conditions within a short period of time. © 2021, The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd.",
    "keywords": "Arduino IDE; AWS; DynamoDB; ESP8266",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-981-33-6176-8_30",
    "interesting": "-"
  },
  {
    "title": "A Standalone WebAssembly Development Environment for the Internet of Things",
    "abstract": "In Industry 4.0, there is a growing demand to perform high-performance and latency-sensitive computations at the edge. Increasingly, machine data is not only collected but also processed and translated into actionable decisions influencing production parameters in real-time. However, heterogeneous hardware in the Internet of Things prevents the adoption of consistent development and deployment structures as known from service containers. WebAssembly is a recent hardware-agnostic bytecode format that is capable of running not only in the browser, but also on microcontrollers and in cloud environments. In this article, we argue that this web technology can have a real impact by leveraging tools and programming languages that web engineers are familiar with. As a first step, we present a proof-of-concept integrated development and deployment environment to execute WebAssembly modules on microcontrollers. Its key feature is a built-in web server that provides a self-contained browser-based IDE to directly develop, compile and flash AssemblyScript code to a device. In this sense, the Web of Things will unfold a streamlined development and deployment context for the agile and low-latency operationalization of adjustable data streaming and action-oriented process adaptations for industrial devices. © 2021, Springer Nature Switzerland AG.",
    "keywords": "Industry 4.0; Internet of Things; WebAssembly",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-74296-6_27",
    "interesting": "-"
  },
  {
    "title": "A smart development environment for infrastructure as code",
    "abstract": "Cloud computing is a mature paradigm that has evolved to accommodate ever-increasing complex applications such as in the AI and HPC domain. If applications are complex, infrastructure can be even more, spanning over hybrid architectures. As such, producing a less error-prone deployment while offering high performance requires application and infrastructure awareness, and also deep knowledge of the IaC languages. In this paper, we present the SODALITE IDE, a suite that assists the users in the authoring of application deployment topology and infrastructure models for IaC. With focus on quality and performance, the IDE enables the faster and simpler development of IaC by offering features such as in-sync multiple model viewpoints , smart context-aware content assistance and semantic validation, powered by a Knowledge Base. © 2021 CEUR-WS. All rights reserved.",
    "keywords": "Ansible; IDE; Infrastructure as Code; Ontology; Semantic; TOSCA",
    "released": 2021,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85108025317&partnerID=40&md5=669824d244d76b18a2190f2235d3cd9b",
    "interesting": "-"
  },
  {
    "title": "Aligned, Purpose-Driven Cooperation: The Future Way of System Development",
    "abstract": "Collaborative system development requires a three-dimensional alignment: in space, in time, and in mindset: Traditionally, different developers typically have their own, local development environments, each of which may change over time due to updates and other version changes. The third dimension concerns so-called semantic gaps, which we proposed to address via Language-Driven Engineering using Purpose-Specific Language. In this paper we argue that web-based, collaborative development environments that support Language-Driven Engineering are capable of solving the three-dimensional alignment problem. Our illustration via a corresponding prototypical solution aims at illustrating that this vision has the power to radically improve the effectiveness of collaborative development and that it is realistic even in near future. © 2021, Springer Nature Switzerland AG.",
    "keywords": "Cloud Development; Cloud IDE; Domain-Specific Languages; Language-Driven Engineering; Programming",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-89159-6_27",
    "interesting": "-"
  },
  {
    "title": "Virtual Reality–Enhanced Soft and Hard Skills Development Environment for Higher Education",
    "abstract": "Indeed, the 21st-century dynamic and competitive employment and labor market require Higher Education (HE) graduates to be equipped with a substantial degree of knowledge and skills. Comparable to knowledge, skills can be domain-specific or domain-general. Both types of skills are crucial for a well-crafted HE program graduate. To provide students with key skills and the chance to test, experience, and integrate them, institutions should not merely rely on short work placements and industrial training programs. Students should be given the opportunity to sharpen their competencies, acquire, and develop the right skills, technical and non-technical, throughout their study life. Virtual reality, as a revolutionary technology, can support achieving that. In this paper, a web-based environment enhanced with VR framework is proposed to enable students to increase their knowledge, experiences, and gain employability skills progressively for the duration of their study journey. The environment, accessible starting from the first year, provides the students with the opportunity to be engaged with a professional setting and immersed in interactive experiences to gradually, effectively, and affordably experiment concepts, enhance their skills and develop new ones. © 2021, The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Hard skills; Learning system; Soft skills; Virtual reality",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-66840-2_20",
    "interesting": "-"
  },
  {
    "title": "Framework and smart contract for blockchain enabled certificate verification system using robotics",
    "abstract": "Certificate is used to measure and assess the skills that a person possesses. This is used for pursuing higher studies, getting jobs, rewarding a person, etc. Nowadays, it is evident that admission forgery happens by producing fake certificates very frequently. Hence, verification of certificates becomes highly essential to overcome the issue of fake certification. Blockchain is a technology that provides solution to this problem. Blockchain enables peer-to-peer transfer of assets without any intermediaries. This chapter presents a framework for blockchain-enabled certificate verification system using robotics technology. Here, in this system, robotic cameras are being used to scan the certificates and store them on cloud using Arduino Uno connected to a WiFi device. Later on, the same has been stored permanently on blockchain in the form of blocks. Since the smart contract is computational component of the technology, hence, the chapter depicts a smart contract for storing of a certificate in blockchain and verifying it. The smart contract has been written as well as tested for its proper functioning, and the objectives had been achieved. Two softwares Sublime Text3 and Remix Ethereum IDE were used for writing and testing of the smart contract, respectively. This smart contract enables the employer to check the stored certificate which eases the task of verifying the job seeker’s certificates. This smart contract can be taken by students, employers as well as educational institutes. © The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2021.",
    "keywords": "Blockchain; Certificate verification; Distributed application; Remix Ethereum IDE; Robotics; Smart contract; Solidity",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-981-16-0598-7_10",
    "interesting": "-"
  },
  {
    "title": "Task-Technology Fit and Continuance of Use of Web-Based Programming Tool: A Pilot Study",
    "abstract": "Web-based coding tools are widely accepted in computer science education. The use of these tools allows us to improve learning, but the requirement is to understand the factors that affect their acceptance. Carefully selecting technology that best suits the needs of the task will allow the optimal use of these tools in education. The purpose of this study is to develop a model that incorporates constructs of the Task-technology fit (TTF) model and the Expectation-confirmation model of IT continuance (ECM) to better understand the impact of the tool’s suitability on the user’s behavioral intention. The analysis was performed using the partial least squares approach to structural equation modeling. The results show a significant impact of task-technology fit factor on student satisfaction and their continuance intention. Consequently, this demonstrates that the proposed model is appropriate for understanding the acceptance of web-based programming tools in an educational context. © 2021, The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Empirical study; Expectation-confirmation model of IT continuance; Introductory programming course; PLS-SEM; Post-use questionnaire; Task–technology fit model; Web-based coding tool",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-58282-1_10",
    "interesting": "-"
  },
  {
    "title": "Using Mobile ICT for Online Learning During COVID-19 Lockdown",
    "abstract": "The research is aimed at theoretical substantiation, development and experimental verification of methods of applying mobile technologies to university students training during the COVID-19 lockdown. The research objective implies adapting mobile ICT to online learning during the COVID-19 lockdown. There are analyzed Ukrainian and foreign researches into the issues of mobile ICT application to the University students training. The authors have developed methods of applying Audience Response Systems by taking Plickers as an example; Mobile Multimedia Authoring Tools development through using augmented reality; Mobile Learning Management Systems by taking Moodle; Mobile Modeling and Programming Environments through using Pydroid; Mobile Database Management Systems by taking Google Cloud SQL. There is comparative assessment of functionality of five systems of mobile ICT for online learning during the COVID-19 lockdown. Efficiency of the developed technology is experimentally verified and confirmed. © 2021, Springer Nature Switzerland AG.",
    "keywords": "Audience Response Systems; COVID-19 lockdown; Mobile Database Management Systems; Mobile ICT; Mobile Learning Management System; Mobile Modeling and Programming Environments; Mobile Multimedia Authoring Tools; Online learning",
    "released": 2021,
    "link": "https://doi.org/10.1007/978-3-030-77592-6_3",
    "interesting": "-"
  },
  {
    "title": "Towards a professional development tool for teachers of english in bilingual streams: The dynamics of beliefs and practices",
    "abstract": "This study highlights tensions and challenges experienced by language teachers in CLIL contexts. Using an example from the Netherlands, it explores the pedagogical and collaborative practices of Teachers of English in Bilingual streams (TEBs). The study shows how, using formal and practical theories (Borg and Burns 2008. “Integrating Grammar in Adult TESOL Classrooms.” Applied Linguistics 29 (3): 456-482. doi:10.1093/applin/amn020.), pedagogical and collaborative practices were formulated and used to investigate the beliefs and practices of language teachers in bilingual settings. The paper presents the operationalisation of 36 practices for TEBs and reports on an online survey investigating TEBs’ stated beliefs and practices. The findings suggest this set of practices has potential, both as a professional development tool for language teachers in bilingual education settings, and for further research. Results of the online survey revealed that the disciplinary identity of most Dutch TEBs leads to a focus on language, communication, literature, and language arts. TEBs are not necessarily aware of, and do not automatically consider, possibilities for expanding their own pedagogical practices in relation to subject-specific language or supporting and collaborating with their subject teacher colleagues. We suggest that policy guidelines, curricula development and teacher education programmes should pay more attention to the unique position of language teachers in these settings.",
    "keywords": "CLIL; language teacher; bilingual education; teacher beliefs; pedagogical practices; collaborative practices",
    "released": 2021,
    "link": "https://doi.org/10.1080/13670050.2018.1556244",
    "interesting": "-"
  },
  {
    "title": "Student adoption and perceptions of a web integrated development environment: An experience report",
    "abstract": "Students often spend a considerable amount of time and effort installing and configuring programming tools and environments. This can frustrate, and distract them from more important learning objectives, particularly in introductory programming courses. A web-based integrated development environment can serve as a low-threshold, ready-to-use programming environment, and reduce the time and effort needed to start practicing programming.In this paper, we report our experience of developing and deploying a web-based integrated development environment (web IDE) as an optional tool at a large public university that has been in use for over several years in various programming courses.We conducted a survey to understand students’ perceptions toward the web IDE and usage of its features. Using the data from the survey, we explored potential correlations between student demographic and behavioral traits in adoption of the web IDE. The results of the survey suggest that around half of the students use the IDE often or very often. We also discovered that the likelihood of adoption of the IDE decreases as students to move to upper classes. In this paper, we also describe broader lessons for educators and researchers.",
    "keywords": "web-based integrated development envioronment; tool adoption; student perceptions",
    "released": 2020,
    "link": "https://doi.org/10.1145/3328778.3366949",
    "interesting": "+"
  },
  {
    "title": "CodeKey - an online code editor to study code patterns and enhance student performance in CS courses",
    "abstract": "In the past several years, there has been an increase in web-based compilers that allow students to learn how to code using a browser. Many Universities use online code editors for their large Computer Science (CS) courses. For example, the CS200 course at UC Berkeley uses Jupyter Notebooks to teach Python for data science to 800+ students. All the students in the course must write and submit their code assignments in the web-browser. These online code editors for large CS courses presents several benefits. One benefit is that it becomes easier to monitor the steps that a student takes to solve a coding problem since keystrokes can be tracked using Javascript. Another benefit is that the code written by students can be stored in one central database, creating less barriers for code analysis. The CodeKey project aims to take advantage of analyzing code patterns of students in a CS course in order to find key insights. CodeKey aims to find these insights by monitoring the interactions (i.e. clicks and keystrokes) of students as each student attempts to solve a coding problem. The goal is to study the code patterns of students in a CS course in order to understand similarities and differences between students who perform well on a problem and students who do not. We also aim to study how revealing these coding patterns to a student can increase his understanding of how to solve a difficult coding problem by showing common mistakes, and by showing simple steps that lead to the correct solution.",
    "keywords": "web-compilers; intelligent tutor systems; computer science education",
    "released": 2020,
    "link": "https://doi.org/10.1145/3328778.3372680",
    "interesting": "-"
  },
  {
    "title": "YTCoder - towards turning YouTube into a development environment",
    "abstract": "YouTube is one of the most popular video sharing platforms that hosts many video tutorials which aim to teach concepts of various programming languages. Most of these tutorials include code snippets in the videos. However, it is important that the learners have hands-on experience while learning various programming concepts. Providing a code editor along with the video tutorial could help learners get a better learning experience, as they have a scope to learn by practice. Existing solutions of accompanying video tutorials with code editors are either pre-programmed or require a separate web portal. We are not aware of any solutions in the current literature that aim to support Youtube video tutorials. Hence, we present YTCoder in this paper that aims to improve the learning experience by integrating videos related to various programming languages with the development environments of the respective programming languages. Demonstration of YTCoder can be found here - https://youtu.be/iONtO7cuQwo.",
    "keywords": "youtube; video tutorials; programming languages; code editors",
    "released": 2020,
    "link": "https://doi.org/10.1145/3406865.3418566",
    "interesting": "-"
  },
  {
    "title": "Evolution of the WebDSL runtime: Reliability engineering of the WebDSL web programming language",
    "abstract": "Web applications are ideal for implementing information systems; they can organize and persist the data in a database, do not require installation on client machines, and can be instantly updated everywhere. However, web programming is complex due to its heterogeneous nature, causing web frameworks to suffer from insufficient or leaky abstraction, weak static consistency checking, and security features that are not enforced. We developed the WebDSL web programming language, which supports direct expression of intent, strong static consistency checking, linguistic abstractions for web programming concerns, and automatically enforces security features for web applications. We have used WebDSL for over 10 years to create information systems for academic workflows with thousands of users. Based on our experiences with these applications, we improved the WebDSL compiler and runtime to increase robustness, performance, and security of applications. In this experience report, we reflect on the lessons learned and improvements made to the language runtime.",
    "keywords": "web security; web programming; web applications; integrated development environments; experience report; domain-specific languages; compilers",
    "released": 2020,
    "link": "https://doi.org/10.1145/3397537.3397553",
    "interesting": "-"
  },
  {
    "title": "Modular and distributed IDE",
    "abstract": "Integrated Development Environments (IDEs) are indispensable companions to programming languages. They are increasingly turning towards Web-based infrastructure. The rise of a protocol such as the Language Server Protocol (LSP) that standardizes the separation between a language-agnostic IDE, and a language server that provides all language services (e.g., auto completion, compiler...) has allowed the emergence of high quality generic Web components to build the IDE part that runs in the browser. However, all language services require different computing capacities and response times to guarantee a user-friendly experience within the IDE. The monolithic distribution of all language services prevents to leverage on the available execution platforms (e.g., local platform, application server, cloud). In contrast with the current approaches that provide IDEs in the form of a monolithic client-server architecture, we explore in this paper the modularization of all language services to support their individual deployment and dynamic adaptation within an IDE. We evaluate the performance impact of the distribution of the language services across the available execution platforms on four EMF-based languages, and demonstrate the benefit of a custom distribution.",
    "keywords": "Microservice; IDE; Generative approach",
    "released": 2020,
    "link": "https://doi.org/10.1145/3426425.3426947",
    "interesting": "-"
  },
  {
    "title": "MatchingRef: Matching variable names in a reference page to help introductory CS students fix compiler errors",
    "abstract": "Debugging compiler errors is essential to programming and can be challenging for novice programmers. In introductory computer science courses, challenging errors can discourage students. One reason these errors are difficult to resolve is that most online help systems do not match a student’s code. For example, online reference pages use different variable names, identifiers, and method names compared with a student’s particular code. To utilize existing resources, students must wade through other people’s code (which is often too advanced for novices to comprehend). This is time-consuming and does not provide novices with solutions.To address this problem, we developed MatchingRef -a reference system that helps novices resolve compiler errors. It is a web-based reference guide that catalogs common Processing/Java compiler errors. MatchingRef integrates with the Processing programming environment to provide users with explanations and that match users’ particular code. It includes a list of strategies to fix each error, accompanied by one or more concrete examples. Importantly, the key feature that distinguishes MatchingRef from prior reference systems (e.g., Decaf [1], HelpMeOut [4], CodeWrite [2]) is that MatchingRef examples are all dynamically generated using variable, method, and class names from users’ programming environments.There are four guiding design principles behind MatchingRef. First is readability, which is listed as a criterion that good error messages should exhibit [5]. The description from Java documentation is usually technical and causes confusion for novice programmers. Hence, we provide explanations that are less cryptic and more familiar in wording. Second is learning by examples. Examples have been shown to be effective way to learn and fix programming errors, such as in online forum like Stack Overflow [7]. Therefore, we include examples in each suggestion so that users can have a concrete idea on how to fix the problems. Third is familiarity, a common design principle across domains [3]. MatchingRef matches elements in the fixing examples with the original code of the users. Finally, our system is intended to reduce cognitive load by customizing the pages to users’ code to show the relevant information. According to Cognitive Load Theory (CLT), humans have a finite ability to efficiently process input [6]. As MatchingRef provide users with matching error messages and matching names, their brain only needs to process useful information such as ways to fix the errors or roots of the errors. Users can avoid reading some information in the page multiple times such as variable names or class names because they are already familiar with them.We conducted a within-subjects pilot study (n = 4) to evaluate whether MatchingRef improved novices’ performance and comprehension while debugging compiler errors. Participants interacted with two designs of our system, one with matching variable names in the examples and one without this feature. Otherwise, the systems were identical. The participants were students in introductory computer science courses that use Processing. Due to the small sample size, we could not detect significant differences in task completion time. Although the conclusions we can draw are limited, we are encouraged to evaluate MatchingRef in a more formal study.",
    "keywords": "software engineering; processing development environment; introductory programming; computing education; compiler errors",
    "released": 2020,
    "link": "https://doi.org/10.1145/3372782.3408118",
    "interesting": "-"
  },
  {
    "title": "MOCCA studio: A graphical tool for high-level programming of human-robot social interaction",
    "abstract": "In this paper, we introduce a handy and affordable solution we are developing, for education of human-robot social interaction. The solution consists of a smart device-controlled robot with a 3D printed body, a cloud-based integrated development environment that provides intuitive programming and simulation of the robot, and embedded functions enabling intelligent, natural response of the robot. The outline and architecture of the proposed system are briefly explained.",
    "keywords": "robot control architecture; human-robot social interaction; graphical programming tool",
    "released": 2020,
    "link": "https://dl.acm.org/doi/10.5555/3378680.3378817",
    "interesting": "-"
  },
  {
    "title": "Towards a pattern language for interactive coding tutorials",
    "abstract": "Online, text-based coding tutorials are popular among programming learners. Though they are relatively easy to create, it’s challenging to ensure their pedagogical effectiveness. Computer Science Education researchers have advocated for interactive tutorials, because they provide learners with opportunities to practice and receive feedback while completing a tutorial. Nonetheless, little guidance exists on how to best leverage interactivity in tutorials. We set out to develop a pattern language for interactive tutorials to fill this gap. Through a human-centered design process, we created and evolved three instructional patterns and their supporting interaction components in a tutorial on asynchronous programming. We describe the preliminary results of our work towards this pattern language in this paper.",
    "keywords": "programming education; pattern language; online code editors; coding tutorials",
    "released": 2020,
    "link": "https://doi.org/10.1145/3397537.3397558",
    "interesting": "-"
  },
  {
    "title": "Xilinx vitis unified software platform",
    "abstract": "FPGAs provide significant advantages in throughput, latency, and energy efficiency for implementing low-latency, compute-intensive applications when compared to general-purpose CPUs and GPUs. Over the last decade, FPGAs have evolved into highly configurable SoCs with on-chip CPUs, domain-specific programmable accelerators, and flexible connectivity options. Recently, Xilinx introduced a new heterogeneous compute architecture, the Adaptive Compute Acceleration Platform (ACAP), with significantly more flexibility and performance to address an evolving set of new applications such as machine learning. This advancement on the device side is accompanied by similar advances on higher-level programming approaches to make FPGAs and ACAPs significantly easy to use for a wide range of applications. Xilinx Vitis Unified Software Platform is a comprehensive development environment to build and seamlessly deploy accelerated applications on Xilinx platforms including Alveo cards, FPGA-instances in the cloud, and embedded platforms. It addresses the three major industry trends: the need for heterogenous computing, applications that span cloud to edge to end-point, and AI proliferation. Vitis supports application programming using C, C++ and OpenCL, and it enables the development of large-scale data processing and machine learning applications using familiar, higher-level frameworks such as TensorFlow and SPARK. To facilitate communication between the host application and accelerators, Xilinx Runtime library (XRT) provides APIs for accelerator life-cycle management, accelerator execution management, memory allocation, and data communication between the host application and accelerators. In addition, a rich set of performance-optimized, open-source libraries significantly ease the application development. Vitis AI, an integral part of Vitis, enables AI inference acceleration on Xilinx platforms. It supports industry’s leading deep learning frameworks like Tensorflow and Caffe, and offers a comprehensive suite of tools and APIs to prune, quantize, optimize, and compile pre-trained models to achieve the highest AI inference performance on Xilinx platforms. This talk provides an overview of Vitis and Vitis AI development environments.",
    "keywords": "vitis unified software platform; vitis ai; machine learning tools; machine learning inference; higher-level programming tools for fpga; heterogenous computing; fpga acceleration",
    "released": 2020,
    "link": "https://doi.org/10.1145/3373087.3375887",
    "interesting": "-"
  },
  {
    "title": "Exploring the impact of exposing CS majors to programming concepts using IDE programming vs. Non-IDE programming in the classroom",
    "abstract": "Due to the increased demand for computer scientists in the, the importance to improve the retention rate of CS majors who could potentially fill such positions has been ongoing. Literature has produced many efforts for increasing the engagement of CS majors in the field while also exploring ways to improve their ability to develop the ideal skill sets for success. In such efforts, our research explores the impact of visual and/or command-line based programming editors and their ability to shape the students’ mental model as they learn to program. This abstract discusses a \"think-aloud\" protocol assessment that was conducted on two entry level programming courses at a university in the United States during the 2018-2019 school year. The objective of this assessment was to determine whether Repl.IT, a web-based IDE, and Cygwin/Nano Editor, a command line-based tool, impacted student performance while being used for programming. Our preliminary results showed that 41",
    "keywords": "cs-majors; programming-editors; verbal-protocol-assessment",
    "released": 2020,
    "link": "https://doi.org/10.1145/3328778.3372701",
    "interesting": "-"
  },
  {
    "title": "GAPP: Inventory Tracking Applications in Mobile Networks",
    "abstract": "On a daily basis people waste so many items, and what better way to help them from wasting but to create an app that tracks their groceries, creates less waste in the world and saves money at the same time in mobile networks. People waste food on average 1 pound per person each day they live. The application GAPP will cut down costs and waste in everyday life. People also misplace or lose track of items daily. Location of items is a big deal and knowing where they are at all times on a device would help.",
    "keywords": "cloud computing; computing services; database architecture; Amazon Web Services (AWS); EC2; Relation Database Services (RDS); framework; MVC (Model View Controller); Open Source; Laravel; PHP; MariaDB; MySQL; JQuery; Twitter Bootstrap; Source Code Control; GITHUB; collaboration; Google G-Suite Services; Universal Product Code (UPC); Application Program Interface (API); web scrape; inventory control; Integrated Development Environment (IDE); Google Mobile Vision API; DSP environments (Development/Staging/Production); user roles; HTML; push notifications; full stack; web view",
    "released": 2020,
    "link": "https://doi.org/10.1109/SMC42975.2020.9282947",
    "interesting": "-"
  },
  {
    "title": "Build: Web Services based Source Code Editor Integrate with Community Question Answer",
    "abstract": "Source code editor have different features to ease and speed-up the developer works. This paper proposed the source code editor BUILD integrated with Community Question and Answer (Q&A) and stack overflow web service. While programming developer often came across the set of questions, programming errors, thus in order to find the solutions or resolving the errors developers take reference from the different online resources (Documentations, Books, Q & A Services) through web browser. This leads to switching windows between source code editor and web-browser. To reduce development time and effort, neglect web or internet distractions and to get the specific result to questions we form a community. we combine source code editor and community Q & a services (Stack Overflow, institutional CQA). We also understand different learning resources and development tool which preferred by the developers. Explains the important of the Community Question & Answer (CQA) services.",
    "keywords": "Source code editor; Development tool; Crowdsource knowledge community question and Answer services; Stack overflow; Webservices.",
    "released": 2020,
    "link": "https://doi.org/10.1109/ICISC47916.2020.9171162",
    "interesting": "-"
  },
  {
    "title": "A survey for AWS cloud development tools and services",
    "abstract": "Cloud computing is currently considered one of the fastest-growing businesses in the field of IT. One of cloud computing main benefits is that it can be accessed and managed anytime and from anywhere using the web. In order to allow for such a feature, the cloud service providers offer several development tools and services. This paper shows some of the services offered by AWS, one of the biggest cloud service providers if not the biggest. Services including cloud build, cloud deployment, cloud9, code pipeline and code commit. The paper as well presents a comparison between those features and some other features that are offered by the other competitors. Moreover, it presents the pros and cons, pricing and users’ feedback.",
    "keywords": "",
    "released": 2020,
    "link": "https://doi.org/10.1049/icp.2021.0898",
    "interesting": "-"
  },
  {
    "title": "An Intelligent Optimization Method for Optimal Virtual Machine Allocation in Cloud Data Centers",
    "abstract": "A cloud computing paradigm has quickly developed and been applied widely for more than ten years. In a cloud data center, cloud service providers offer many kinds of cloud services, such as virtual machines (VMs), to users. How to achieve the optimized allocation of VMs for users to satisfy the requirements of both users and providers is an important problem. To make full use of VMs for providers and ensure low makespan of user tasks, we formulate an optimal allocation model of VMs and develop an improved differential evolution (IDE) method to solve this optimization problem, given a batch of user tasks. We compare the proposed method with several existing methods, such as round-robin (RR), min-min, and differential evolution. The experimental results show that it can more efficiently decrease the cost of cloud service providers while achieving lower makespan of user tasks than its three peers. Note to Practitioners-VM allocation is one of the challenging problems in cloud computing systems, especially when user task makespan and cost of cloud service providers have to be considered together. We propose an IDE approach to solve this problem. To show its performance, this article compares the commonly used methods, i.e., RR and min-min, as well as the classic differential evolution method. A cloud simulation platform called CloudSim is used to test these methods. The experimental results show that the proposed one can well outperform its compared ones, and its VM allocation results can achieve the highest satisfaction of both users and providers. The proposed method can be readily applicable to industrial cloud computing systems.",
    "keywords": "Cloud computing; improved differential evolution (IDE); intelligent optimization; virtual machine allocation",
    "released": 2020,
    "link": "https://doi.org/10.1109/TASE.2020.2975225",
    "interesting": "-"
  },
  {
    "title": "CareBro (Personal Farm Assistant):An IoT based Smart Agriculture with Edge Computing",
    "abstract": "Post Covid-19 era redefines farming in terms of ensuring the maximum productivity and safety of the produce by leveraging technology. A contactless approach coupled with reliability and safety in the entre supply chain is the need of the hour. The proposed solution “CareBro”, plays a vital part in ensuring that the entire farm is managed autonomously and remotely without physical presence. The onboard edge computing capabilities interact with the smart farm sensorics in an IOT environment. This ensures seamless farming and allows for increased crop yield, ethical pest management and irrigation control. The CareBro is always in touch with the farmer through the cloud, with real time monitoring and decision making. Thereby ensuring the perfect farm management solution in urban, rural, largescale and small scale farmers throughout our country.",
    "keywords": "IoT; Edge Computing; Thing speak Cloud; Arduino IDE; Sensorics; Ethical; Off-grid; autonomous; sustainable",
    "released": 2020,
    "link": "https://doi.org/10.1109/MPCIT51588.2020.9350481",
    "interesting": "-"
  },
  {
    "title": "ChainIDE 2.0: Facilitating Smart Contract Development for Consortium Blockchain",
    "abstract": "Nowadays, many novel blockchain-based architecture and frameworks are proposed to solve issues in computer science and financial service. Smart contracts with blockchain systems, especially consortium blockchain systems, can help to provide many reliable and efficient functions for existing systems like smart grid payments. The novel concept of smart contract as a service is proposed but the difficulty of developing smart contracts on various kinds of blockchain systems are also significantly increasing which brings the additional cost for both developers and infrastructure builders. In this paper, we present an updated cloud-based smart integrated smart contract development system, ChainIDE 2.0, for the ultra-efficient development of blockchain-based smart contracts on multiple kinds of blockchain systems. Not only we stay as the most popular cloud-based developing Integrated Development Environment (IDE) for the Libra blockchain, but also we introduce the consortium blockchain systems such as Ant Financial Open-Chain (Ant OC) and served as the first cloud-based IDE supporting the Ant Financial OpenChain test net. Today, we have served almost 1 million compiled smart contracts which makes us the most popular cloud-based blockchain development IDE in the world.",
    "keywords": "Blockchain; Smart Contract; Cross-chain Platform; Libra; Consortium Blockchain",
    "released": 2020,
    "link": "https://doi.org/10.1109/INFOCOMWKSHPS50562.2020.9163051",
    "interesting": "-"
  },
  {
    "title": "IoT Aided Smart Light Sensing Automation using Passive Infrared Sensors",
    "abstract": "Internet of Things home automation industry is opening the flood gates to a whole new world of sensors and microcontrollers that reduce human effort and simplify how usual things function around us. This project aims to explore ESP8266 and its capabilities along with PIR sensors to make a home automation prototype that focusses on \"Conservation of Energy\". By establishing a Web Server which would record the data of the number of persons entering/exiting a given room, we explore the ability of this module to use wifi protocols, being a microcontroller. The setup process for the apparatus requires feasibility, perseverance and precision. Once accomplished we move on to the equally difficult process of setting up an Integrated Development Environment (IDE) and pushing our program for the server onto the moduleKeeping in mind the potential of the project, the future scope including applications using the project has been discussed in this project.",
    "keywords": "IoT; esp8266; Arduino IDE; PIR Sensors; Home Automation; Electricity Conservation; ThingSpeak 1",
    "released": 2020,
    "link": "https://doi.org/10.1109/ICSTCEE49637.2020.9277417",
    "interesting": "-"
  },
  {
    "title": "Using WebIDE as a distance learning tool for high school programming",
    "abstract": "During COVID-19 pandemics, not unlike their peers in other parts of the world, the high-school students in Bosnia and Herzegovina needed to get accustomed to learning from their homes. This proved to be particularly difficult for those who were scheduled to learn basic C++ programming, not only the inperson support by their teachers is invaluable in these early stages of learning, but many of them did not have access to adequate hardware or software. A web-based integrated development environment (WebIDE) was deployed, and a number of sample assignments were created. Altogether, over 130 students from 5 schools participated actively, solving a total of 65 assignments (as of June 1st). Based on questionnaire results, overall the experiment was deemed successful, and the continued use of WebIDE after life returns to normal was justified.",
    "keywords": "distance learning; webide; introductory programming; K-12 education; COVID-19",
    "released": 2020,
    "link": "https://doi.org/10.23919/MIPRO48935.2020.9245263",
    "interesting": "+"
  },
  {
    "title": "Exploring Developer Preferences for Visualizing External Information Within Source Code Editors",
    "abstract": "Developers increasingly rely on external tools and services which causes development information to be scattered across different information silos. To access this information, developers need to access different applications, presentation files, and web services. This paper investigates mechanisms for incorporating external information sources into Integrated Development Environments using visual mechanisms to support common software development activities. Through a developer survey and a small experiment we find that developers prefer minimal representations for incorporating external information sources into their source code editors, and that they are able to use this information when performing their development tasks.",
    "keywords": "Integrated Development Environments; external information; actionable information; information overload",
    "released": 2020,
    "link": "https://doi.org/10.1109/VISSOFT51673.2020.00008",
    "interesting": "-"
  },
  {
    "title": "A Node-Style Visual Programming Environment for the nuXmv Model Checker",
    "abstract": "In this paper, we introduce visual programming for supporting to conduct model checking. We focus on the nuXmv model-checker and propose a visual programming language for describing an input model for nuXmv. Our visual programming language provides a node-graph style interface, where a data flow of a target system is represented as nodes and edges. We adopt the Node-RED visual scripting system to implement our visual programming language and develop a programming environment that can be executed in a web browser.",
    "keywords": "model checking; nuXmv; visual programming",
    "released": 2020,
    "link": "https://doi.org/10.1109/GCCE50665.2020.9291945",
    "interesting": "-"
  },
  {
    "title": "Integrated Development Environment for EEG-Driven Cognitive-Neuropsychological Research",
    "abstract": "Background: EEG-driven research is paramount in cognitive-neuropsychological studies, as it provides a non-invasive window to the underlying neural mechanisms of cognition and behavior. A myriad collection of software and hardware frameworks has been developed to alleviate some of the technical barriers involved in EEG-driven research. Methods: we propose an integrated development environment which encompasses the entire technical “data-collection pipeline” of cognitive-neuropsychological research, including experiment design, data acquisition, data exploration and analysis in a state-of-the-art user interface. Our framework is based on a unique integration between a python-based web framework, time-oriented databases and object-based data schemes. Results: we demonstrated our framework with the recording and analysis of an n-Back task completed by 15 elderly (ages 50 to 80) participants. This case study demonstrates the highly utilized nature of our integrated framework with a challenging target population. Furthermore, our results may provide new insights into the correlation between brain activity and working memory performance in elderly people, who are prone to experience accelerated decline in executive prefrontal cortex functioning. Conclusion: our framework extends the range of EEG-driven experimental methods for assessing cognition available for cognitive-neuroscientists, allowing them to concentrate on the creative part of their work instead of technical aspects.",
    "keywords": "Emotiv; Python; working memory in elderly",
    "released": 2020,
    "link": "https://doi.org/10.1109/JTEHM.2020.2989768",
    "interesting": "-"
  },
  {
    "title": "IoT based Air Pollution Monitoring device using Raspberry Pi and Cloud Computing",
    "abstract": "Nowadays, pollution is remaining as a major issue of concern. Air pollution is basically a mixture of various dangerous particles and toxic gases in the environment. The release of suspended particles, hazardous gases, dust pollutants cause depletion of ozone layer. In this paper, various sensors are used to identify carbon dioxide gas present in the air, humidity, environment temperature, and atmospheric pressure. Raspberry pi 3 and Arduino UNO are boards used in interfacing above mentioned sensors. MQ-135 is air pollution gas sensor interfaced with Arduino uno and DHT11 temperature and humidity sensor is interfaced with Raspberry pi 3 along with HW-611 e/p 280 atmospheric pressure detection sensor. As soon as atmospheric pressure sensor detects air pressure with humidity and temperature the result obtained will automatically get fed in ThingSpeak IOT app. After wards, derived value on IOT can be read. To run Arduino uno board Arduino IDE software have been used. Arduino IDE software is an open source software that makes easy code writing, compiling and then it uploads the code on the basis of circuitry designed in UNO board. Raspberry pi installation requires a long running process and to run the circuitry a software named Putty is required. Coding is done in Python as Putty work with python. Installation of Raspbian OS in the fresh flashed SD card is the basic step to give power to raspberry pi. The models have been implemented on ThingSpeak using cloud computing. Sensors used in the presented work have been interfaced to their respective board in order to perform detection of various parameters in real time and obtain detection results simultaneously.",
    "keywords": "Temperature sensor; DHT11; Humidity sensor; Atmospheric sensor; HW-611 e/p 280; Arduino Uno; Raspberry pi 3; Raspbian OS; Putty software; python; ThingSpeak; IOT; Arduino IDE; CO2 Gas",
    "released": 2020,
    "link": "https://doi.org/10.1109/ICECA49313.2020.9297648",
    "interesting": "-"
  },
  {
    "title": "Open ecosystem for future industrial Internet of things (IIoT): Architecture and application",
    "abstract": "Advanced sensing, data analysis and communication techniques have led to the emergence and tremendous development of industrial internet of things (IIoT) in recent years, which raises revolution in condition monitoring and maintenance for electrical assets. An open ecosystem for future IIoT is proposed in this paper and the architecture of the open ecosystem is discussed. An open development environment needs to be established for users to interact with power devices and servers freely via web or mobile applications installed on user terminals, increasing IIoT scalability and flexibility. The core technologies of open ecosystem in future IIoT are discussed, which include comprehensive sensing techniques, wide-area communication tools, Big Data service infrastructure, data analysis algorithms and intelligent maintenance schemes. An application of future IIoT ecosystem in wind farm maintenance is then presented. It is demonstrated that the efficiency and effectiveness of wind farm maintenance can be improved with the support of open ecosystem of future IIoT, providing an innovative insight for electrical assets monitoring and maintenance with high reliability.",
    "keywords": "Industrial internet of things (IIoT); IIoT-based development environment; open ecosystem; wind farm maintenance",
    "released": 2020,
    "link": "https://doi.org/10.17775/CSEEJPES.2019.01810",
    "interesting": "-"
  },
  {
    "title": "Visual Programming Environments for End-User Development of intelligent and social robots, a systematic review",
    "abstract": "Robots are becoming interactive and robust enough to be adopted outside laboratories and in industrial scenarios as well as interacting with humans in social activities. However, the design of engaging robot-based applications requires the availability of usable, flexible and accessible development frameworks, which can be adopted and mastered by researchers and practitioners in social sciences and adult end users as a whole. This paper surveys Visual Programming Environments aimed at enabling a paradigm fostering the so-called End-User Development of applications involving robots with social capabilities. The focus of this article is on those Visual Programming Environments that are designed to support social research goals as well as to cater for professional needs of people not trained in more traditional text-based computer programming languages. This survey excludes interfaces aimed at supporting expert programmers, at allowing industrial robots to perform typical industrial tasks (such as pick and place operations), and at teaching children how to code. After having performed a systematic search, sixteen programming environments have been included in this survey. Our goal is two-fold: first, to present these software tools with their technical features and Authoring Artificial Intelligence modeling approaches, and second, to present open challenges in the development of Visual Programming Environments for end users and social researchers, which can be informative and valuable to the community. The results show that the most recent such tools are adopting distributed and Component-Based Software Engineering approaches and web technologies. However, few of them have been designed to enable the independence of end users from high-tech scribes. Moreover, findings indicate the need for (i) more objective and comparative evaluations, as well as usability and user experience studies with real end users; and (ii) validations of these tools for designing applications aimed at working “in-the-wild” rather than only in laboratories and structured settings. © 2020 Elsevier Ltd",
    "keywords": "End-User Development; Human–robot interaction; Robotics; Social robot; Visual Programming Environment",
    "released": 2020,
    "link": "https://doi.org/10.1016/j.cola.2020.100970",
    "interesting": "-"
  },
  {
    "title": "Gothrough: A tool for creating and visualizing impossible 3D worlds using portals",
    "abstract": "Portals are commonly used in video games (e.g., games like Portal, Antichamber, and the classic Asteroids). In this work we introduce GoThrough, a tool that enables users with little to no previous knowledge to add transformative portals to 3D scenes in the Unity game engine. We map the existing literature in portals, both in terms of academic works and web resources, as well as entertainment usages. Then, we introduce an approach for portals to work robustly both in terms of geometry and rendering, and explore common pitfalls (as well as how to handle them). The tool is shown to work in a variety of example scenarios, and has been evaluated quantitatively for performance, providing real-time performance in a variety of scenarios. User tests have also been conducted in order to analyse GoThrough qualitatively. With a SUS score of 87.5, we concluded that GoThrough is intuitive enough to be used by non-experts, making the process of creating impossible 3D worlds much less cumbersome. © 2020 IEEE",
    "keywords": "Development tools; Escher-like worlds; Portals; Scene composition; Spatial distortions",
    "released": 2020,
    "link": "https://doi.org/10.1109/SBGames51465.2020.00023",
    "interesting": "-"
  },
  {
    "title": "Voiceye: A multimodal inclusive development environment",
    "abstract": "People with physical impairments who are unable to use traditional input devices (i.e. mouse and keyboard) are often excluded from technical professions (e.g. web development). Alternative input methods such as eye gaze tracking and speech recognition have become more readily available in recent years with both being explored independently to support people with physical impairments in coding activities. This paper describes a novel multimodal application (\"Voiceye\") that combines voice input, gaze interaction, and mechanical switches as an alternative approach for writing code. The system was evaluated with non-disabled participants who have coding experience (N=29) to assess the feasibility of the application in writing HTML and CSS code. Results found that Voiceye was perceived positively and enabled successful completion of coding tasks. A follow-up study with disabled participants (N=5) demonstrated that this method of multimodal interaction can support people with physical impairments in writing and editing code. © 2020 ACM.",
    "keywords": "Assistive technology; Eye gaze tracking; Programming tools; Speech recognition",
    "released": 2020,
    "link": "https://doi.org/10.1145/3357236.3395553",
    "interesting": "-"
  },
  {
    "title": "The impact of gamification on students’ learning, engagement and behavior based on their personality traits",
    "abstract": "The gamification of education can enhance levels of students’ engagement similar to what games can do, to improve their particular skills and optimize their learning. On the other hand, scientific studies have shown adverse outcomes based on the user’s preferences. The link among the user’s characteristics, executed actions, and the game elements is still an open question. Aiming to find some insights for this issue, we have investigated the effects of gamification on students’ learning, behavior, and engagement based on their personality traits in a web-based programming learning environment. We have conducted an experiment for four months with 40 undergraduate students of first-year courses on programming. Students were randomly assigned to one of the two versions of the programming learning environment: a gamified version composed of ranking, points, and badges and the original non-gamified version. We have found evidence that gamification affected users in distinct ways based on their personality traits. Our results indicate that the effect of gamification depends on the specific characteristics of users. First part title: Studying the impact of gamification on learning and engagement based on the personality traits of students © 2020, Smiderle et al.",
    "keywords": "Gamification; Personality; Programming Environment",
    "released": 2020,
    "link": "https://doi.org/10.1186/s40561-019-0098-x",
    "interesting": "-"
  },
  {
    "title": "Investigating Best Practices in the Design of Automated Feedback to Improve Students' Performance and Learning",
    "abstract": "Timely feedback is essential for students to learn and improve their performance. However, it is hard for computing instructors to provide real-time feedback for every student, particularly during homework or online classes. While researchers have put tremendous effort into developing algorithms to generate automated feedback, little work has evaluated how this feedback actually helps in practice, or what specific design choices make it more or less effective. In my dissertation, I am designing and evaluating different features of automated feedback, specifically next-step hints. Inspired by educational theories and effective human feedback, this work has the goal of discovering automated feedback design choices that can improve students' performance and learning. © 2020 Owner/Author.",
    "keywords": "automated feedback; programming environments",
    "released": 2020,
    "link": "https://doi.org/10.1145/3372782.3407107",
    "interesting": "-"
  },
  {
    "title": "Jacamo-web is on the fly: An interactive multi-agent system IDE",
    "abstract": "This paper presents jacamo-web, an interactive programming IDE for developing Multi-Agent Systems (MAS). The standard programming method usually follows the sequence of compile, link and execute the application. Alternatively, the so-called interactive programming provides a way to modify a system while it is running. Besides saving developing time, it maintains the system’s availability since the application is kept running while it is being changed. To illustrate jacamo-web interactive functions, we have developed a MAS for the financial market. It checks data of companies and applies known formulae to suggest whether to buy assets or not. © Springer Nature Switzerland AG 2020.",
    "keywords": "Incremental compiler; Interactive programming; Just-in-time programming; Multi-agent oriented programming; On-the-fly programming",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-51417-4_13",
    "interesting": "-"
  },
  {
    "title": "Online gait generation for an exoskeleton used in lower limb rehabilitation",
    "abstract": "Providing walking assistance for mild hemiplegia patients with lower limb rehabilitation exoskeleton has gained considerable attention. The patients' motion characteristics should be emphasized, meanwhile the planning gait should always maintain the balance ability in the walking procedure. In this paper, an online balance gait generation strategy is proposed for an exoskeleton used in lower limb rehabilitation. In the present research, the online gait generation strategy is explained and consists of a gait planning and a gait control strategy. In the gait planning strategy, the healthy swing foot trajectory has been learned, modelled and modified for next cycles' exoskeleton motion by applying improved differential evolution Adaptive Hopf (iDE AHopf) oscillators. Meanwhile to illustrate the human motion intention, the dynamic step length estimation method is utilized to estimate the step length. The discrete step planner determines the motion of the exoskeleton's centre of gravity (CoG). In the gait control strategy, the online balance gait regulation could regulate the exoskeleton joint reference adaptively to confirm the maximum zero-moment-point (ZMP) walking stability according to the PID controller feedback joint signal. Finally, the corresponding simulation results demonstrate the effectiveness of the proposed strategy by verifying the gait learning rate and ZMP stability margin. © 2020, National Institute for R and D in Informatics.",
    "keywords": "IDE AHopf oscillators learning; Lower limb exoskeleton; Online gait generation; ZMP adaption",
    "released": 2020,
    "link": "https://doi.org/10.24846/V29I2Y202006",
    "interesting": "-"
  },
  {
    "title": "Learn Android Studio 4: Efficient Java-Based Android Apps Development",
    "abstract": "Build and deploy your Java-based Android apps using the popular and efficient Android Studio 4 suite of tools, an integrated development environment (IDE) for today's Android developers. With this book, you'll learn the latest and most productive tools in the Android tools ecosystem, ensuring quick Android app development and minimal effort on your part.  Among these tools, you'll use the new Android Studio 4 features, including an upgraded CPU profiler UI, a new build speed window, the multi-preview feature, and the live layout inspector. After reading and using this book, you'll be able to efficiently build complete Java-based Android apps that run on any Android smartphone, tablet, smart watch and more. You'll also be able to publish those apps and sell them online and in the Google Play store. © 2020 by Ted Hagos.",
    "keywords": "Android; Android Studio 3; apps; Canary; code; development; Google; IDE; integrated development; Java; mobile; software; source; Studio",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-1-4842-5937-5",
    "interesting": "-"
  },
  {
    "title": "Metadata Action Network Model for Cloud Based Development Environment",
    "abstract": "Cloud-based software development solutions (entitled as Platform-as-a-Service, Low-Code platforms) have been promoted as a game changing paradigm backed by model-driven architecture and supported by various cloud-based services. With the engagement of a sheer number of platform users (experienced, novel, or citizen developers) these platforms generate invaluable data and that can be considered as user metadata actions. As cloud-based development solutions provide novice users with a new development experience (performing data actions that altogether leads to a successful software app), users often times face with uncertainty about development performance; how good or complete is app development? Thus, the issue addressed in this research is how to measure user performance by using digital trace data generated on the cloud platform from a Network Science perspective. This research proposes a novel approach to leveraging digital trace data on Platform-as-a-Service (PaaS) from a Network Science perspective. The proposed approach considers the importance of digital trace data as metadata actions on PaaS and introduces a network model (so-called Metadata Action Network), which is claimed to be the result of reconstruction of events of developer’s actions. We show suitability of the proposed approach to better understanding of real-world digital trace data on PaaS solution and elaborate basic performance analytics on a PaaS solution with research and practical implications. © 2020, The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG.",
    "keywords": "Analytics; Cloud computing; Development performance; Digital trace data; Network science; PaaS",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-45697-9_52",
    "interesting": "-"
  },
  {
    "title": "A framework for collaborative and interactive agent-oriented developer operations",
    "abstract": "Considering the increasing prevalence of autonomous systems in today's society, one could expect that agent-oriented programming (AOP) is gaining traction among mainstream software engineering practitioners. However, the tools and frameworks that are used and developed in the academic multi-agent systems engineering community struggle to keep up with recent developments in the software industry in regards to how complex information systems are developed and maintained. An important aspect of recent changes in software engineering practices is the application of technologies that support the increasingly fast iteration of a programming-testing-deployment cycle. Such approaches require intense collaboration that crosses boundaries between traditionally separated roles like software development, quality assurance, and operations; these approaches are often referred to as DevOps. In this paper, we work towards the integration of DevOps and AOP by introducing an extension of jacamo-web, an Integrated Development Environment (IDE) that supports the collaborative, web-based development and real-time continuous integration of autonomous agents and Multi-Agent Systems (MAS). © 2020 International Foundation for Autonomous Agents and Multiagent Systems (IFAAMAS). All rights reserved.",
    "keywords": "Agent-oriented programming; Engineering multi-agent systems; IDE; Iterative software development",
    "released": 2020,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85095099107&partnerID=40&md5=37d4578209a90068a46802863cc75097",
    "interesting": "-"
  },
  {
    "title": "Visual programming environment based on data visualization grammar specification",
    "abstract": "This paper presents a web-based platform for construction and execution of data visualization workflow. The environment enables construction of data visualization workflow with the visual programming interface and provides the ability of previewing the visualisation workflow result in real-Time. The use of visual programming makes the workflow composition faster and it's also lowers entry threshold for the process of data visualization. In this paper we discuss the architecture and main building blocks of the data visualization workflow. © 2020 Elsevier B.V.. All rights reserved.",
    "keywords": "data visualisation; visual programming; visualization grammar",
    "released": 2020,
    "link": "https://doi.org/10.1016/j.procs.2020.11.045",
    "interesting": "-"
  },
  {
    "title": "A Web-Component-Based Cross-Platform Mobile Application Development Environment for Ordinary Users",
    "abstract": "The rapid progress of the mobile internet has been promoting the popularity of mobile devices, and mobile application development is getting more pervasive. However, state of the art development environments have a high learning barrier for ordinary users. In this paper, we take consideration of ordinary users’ requirements and propose a WYSIWYG cross-platform web-component-based mobile applications creation environment for ordinary users. This environment has a WYSIWYG visual editor with drag-and-drop web component. A web component library model is proposed to standardize customized libraries. A cross-platform application model based on composite web components is imported to implement a rapid application build approach with one-click buttons, which helps ordinary users generate installing packages within simple operations for multiple platforms. A native plugin model is proposed to assist web components to invoke native functionalities. The experiment result shows that ordinary users could easily start to create mobile applications in our environment. © Springer Nature Switzerland AG 2020.",
    "keywords": "Cross-platform; Mobile application; Mobile service; Web component",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-45989-5_22",
    "interesting": "-"
  },
  {
    "title": "Composing Flexibly-Organized Step-by-Step Tutorials from Linked Source Code, Snippets, and Outputs",
    "abstract": "Programming tutorials are a pervasive, versatile medium for teaching programming. In this paper, we report on the content and structure of programming tutorials, the pain points authors experience in writing them, and a design for a tool to help improve this process. An interview study with 12 experienced tutorial authors found that they construct documents by interleaving code snippets with text and illustrative outputs. It also revealed that authors must often keep related artifacts of source programs, snippets, and outputs consistent as a program evolves. A content analysis of 200 frequently-referenced tutorials on the web also found that most tutorials contain related artifactsA-duplicate code and outputs generated from snippetsA-that an author would need to keep consistent with each other. To address these needs, we designed a tool called Torii with novel authoring capabilities. An in-lab study showed that tutorial authors can successfully use the tool for the unique affordances identified, and provides guidance for designing future tools for tutorial authoring. © 2020 Owner/Author.",
    "keywords": "authoring; code editors; code evolution; consistency; literate programming; programming tutorials",
    "released": 2020,
    "link": "https://doi.org/10.1145/3313831.3376798",
    "interesting": "-"
  },
  {
    "title": "Design and Development of an Integrated Development Environment for the Driving Simulation Software Mave",
    "abstract": "At the University of Applied Sciences Kaiserslautern, empirical user interface studies in the automotive sector are being conducted at the driving simulation environment K3F. To improve the workflow, the driving simulation software Mave is being developed specifically designed for the setup of empirical automotive studies. A major problem is the use of different technologies for the realization of the different study components. Driving tasks are implemented via scripts; user interfaces are based on Web UI components and virtual environments are defined by several geographic data formats. The sum of these technologies is difficult to handle if a user does not have in-depth technical knowledge. The goal of this contribution is to design and develop an integrated development environment that makes it easier for new users to get started with each of these elements and to make further work more efficient. An easier start is possible by providing many example scenarios that solve different tasks. Working on own scenarios is simplified through an integrated documentation and context-aware code completion. In addition, error sources are reduced by a syntactic validation of code. © 2020, Springer Nature Switzerland AG.",
    "keywords": "Driving simulation; Integrated development environment; Scripting",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-60703-6_81",
    "interesting": "-"
  },
  {
    "title": "Programmer experience: a set of heuristics for programming environments",
    "abstract": "The definition of user experience (UX) is broad and covers several aspects. The job of any programmer is very specific and demanding. He/she uses different systems or tools to carry out their programming tasks. We consider a programmer as a specific case of user, who employs programming environments and other software development artifacts. We therefore consider this particular kind of UX as Programmer eXperience (PX). Several authors have defined different aspects of PX, including, among others, language features, programming learning factors or programmer performance. Usability is a relevant aspect of UX, as well as an important aspect of programming environments. Heuristic evaluation is an inspection method that allows evaluating the usability of interactive software systems. We developed a set of heuristics following the methodology proposed by Quiñones et al. We defined a new set of 12 specific heuristics that incorporate concepts of UX and usability of programming environments. These heuristics have been validated following also that methodology. The results obtained in different effectiveness criteria were satisfactory. However, the set of heuristics could be further refined and validate in new scenarios or case studies. © Springer Nature Switzerland AG 2020.",
    "keywords": "Heuristic evaluation; Programmer eXperience; Programming environments; Usability; User eXperience",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-49576-3_15",
    "interesting": "-"
  },
  {
    "title": "Creating It from SCRATCh: A Practical Approach for Enhancing the Security of IoT-Systems in a DevOps-Enabled Software Development Environment",
    "abstract": "DevOps describes a method to reorganize the way different disciplines in software engineering work together to speed up software delivery. However, the introduction of DevOps-methods to organisations is a complex task. A successful introduction results in a set of structured process descriptions. Despite the structure, this process leaves margin for error: Especially security issues are addressed in individual stages, without consideration of the interdependence. Furthermore, applying DevOps-methods to distributed entities, such as the Internet of Things (IoT) is difficult as the architecture is tailormade for desktop and cloud resources. In this work, an overview of tooling employed in the stages of DevOps processes is introduced. Gaps in terms of security or applicability to the IoT are derived. Based on these gaps, solutions that are being developed in the course of the research project SCRATCh are presented and discussed in terms of benefit to DevOps-environments. © 2020, Springer Nature Switzerland AG.",
    "keywords": "Cyber security; DevOps; IoT",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-55583-2_20",
    "interesting": "-"
  },
  {
    "title": "Towards a modern ontology development environment",
    "abstract": "Ontologies provide engineers and developers with an unambiguous, verifiable, and expandable knowledge base related to a certain domain. Every project that requires control over consistent knowledge, which is especially relatable when using artificial intelligence with datasets increasing in size every second, would reap benefits from adding ontologies to the equation. It is a powerful asset enabling the development of a project with integrity between platforms or teams. Unfortunately, the cost of entry for a developer into the ontology engineering area is high, as it has been proven over the last decades that developing an ontology is a complex, collaborative task, which requires the support of an adequate methodology as well as software tools. The current paper's objective is twofold. First, it provides a survey on the methodology and software tools used for the creation of the ontology, its maintenance and collaboration. The paper investigates how the tools evolved over the years and what trends have emerged. Second, as the result of the analysis conducted, we show that current solutions have deficiencies and a technological debt; therefore, we present our plan to build a modern tool that uses state-of-the-art technology. © 2020 The Authors. Published by Elsevier B.V.",
    "keywords": "Knowledge Representation and Management; Knowledge-Based Systems; Ontology Engineering; Semantic Web",
    "released": 2020,
    "link": "https://doi.org/10.1016/j.procs.2020.09.070",
    "interesting": "-"
  },
  {
    "title": "Debugging tool for mobile numerical code learning system",
    "abstract": "Today most students have a smartphone. Students learning numerical analysis can practice coding using their smartphone in the class-room without going to the computer lab. The tool NAPHP[1] makes it easy to practice coding using PHP in an internet web browser without installing a coding app on your smartphone. This paper introduces a debugging tool for the NAPHP. © 2020 KSCAM.",
    "keywords": "Numercal Analysis; PHP; Programming tool",
    "released": 2020,
    "link": "https://doi.org/10.14317/jami.2020.255",
    "interesting": "-"
  },
  {
    "title": "Multi-User and Web-based Parametric Modeling with Multiple Visual Programming Tools",
    "abstract": "This paper presents a new framework for Web-based parametric modeling for design collaboration, allowing multiple users to work on the shared Web-based model in the process of building design and modeling, performance simulation, and optimization. The Web-based model viewer displays a shared model. Two visual programming tools: Grasshopper and Dynamo, are used on users' local computers connected to the Web. Two working prototypes of modeling methods were developed to control and modify building models on the Web. Two case studies with three tests each were conducted on a simplified residential building model. In Case Study 1, two simulated users tested the parametric capabilities on transformations including scaling, translation, and rotation of the shared Web-based model using Grasshopper and Dynamo. In Case Study 2, two simulated users collaborated on the shared Web-based model through Grasshopper in the process of optimization for different building performance objectives, in terms of daylight, energy use, and roof coverage. Web-based parametric modeling is expected to provide opportunities for collaboration in parametric design and optimization. Findings and technical limitations of the framework are discussed in the paper. © 2020, Education and research in Computer Aided Architectural Design in Europe. All rights reserved.",
    "keywords": "Building Performance Simulation; Collaborative Design; Optimization; Parametric Modeling; Visual Programming; Web-based Modeling",
    "released": 2020,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85124673638&partnerID=40&md5=5bc474c4eb6869e32c781600c916c329",
    "interesting": "-"
  },
  {
    "title": "WebAR development tools: An overview",
    "abstract": "Web augmented reality (WebAR) development tools aimed at improving the visual aspects of learning are far from being visual and available themselves. This causing problems of selecting and testing WebAR development tools for CS undergraduates mastering inweb-design basics. The research is aimed at conducting comparative analysis of WebAR tools to select those appropriated for beginners. © 2020 CEUR-WS. All rights reserved.",
    "keywords": "A-Frame; AR.js; Augmented reality software tools; JSARToolKit; Three.js; WebAR",
    "released": 2020,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85103286088&partnerID=40&md5=03eab73a4afa16cb1a9ea39acb6e802c",
    "interesting": "-"
  },
  {
    "title": "Flexible Techniques for Fast Developing and Remotely Controlling DIY Robots, with AI Flavor",
    "abstract": "During the last years we are witnessing a very successful osmosis between innovative and cost-effective credit card - sized computers and education. These computers, equipped with low cost sensors or actuators, can be the “heart” of various DIY robotic artefacts. This environment allows for a mixture of thinking and making activities that can be very meaningful in terms of pedagogy and science. Indeed, similar practices, usually referred as STEM or STEAM activities, are applied in many educational institutions, from primary schools up to universities, with most of the effort to focus on secondary school students. The overall process, although promising at the beginning, is not always straightforward to keep up with. More specifically, as students get more experience, they develop a hunger for more complicated scenarios that usually demand features like remote interaction with simple Artificial Intelligence – A.I. capabilities or sophisticated control of their robotic artefacts. At this moment, trainers should be able to propose simple and stable techniques to their students for implementing such features in their constructions. This paper proposes flexible methods for this to be done by exploiting the very popular MIT App Inventor and Snap! visual programming environments, in conjunction with a modified tiny web server module, written in Python, that runs on a Raspberry Pi credit card - sized computer. Furthermore, this paper reports on simple techniques being used to make robust enough robots by low cost everyday/recyclable materials like cardboard, wood, plastic bottles or broken toys. © Springer Nature Switzerland AG 2020.",
    "keywords": "AI; App Inventor; DIY robots; Raspberry Pi; Remote control; Snap!; Visual programming tools",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-18141-3_14",
    "interesting": "-"
  },
  {
    "title": "A Note on Wired and Wireless Sensor Communication Using Arduino Board and NodeMCU",
    "abstract": "This paper presents two experiments of Wired communication and Wireless sensor communication based on Internet of Things to deal with real-time data of several sensors in Wireless Sensor Networks. The inspiration for writing this paper is to send the real-time data of wireless sensor in the cloud. This paper will discuss the complete process of implementation using a microcontroller board and Wi-Fi module. At the end of the paper, the results of the two experiments will be elaborated. As there are two experiments, there will be two different results. So, this paper will compare both the results and describe the whole processes of implementation. © 2020, Springer Nature Singapore Pte Ltd.",
    "keywords": "Arduino IDE (Integrated Development Environment); Internet of Things (IoT); NodeMCU ESP8266; ThingSpeak; Wireless sensor networks (WSNs)",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-981-13-8406-6_28",
    "interesting": "-"
  },
  {
    "title": "Detection and Monitoring of Forest Fire Using Serial Communication and Wi-Fi Wireless Sensor Network",
    "abstract": "Enhancements in the communication technologies have led to the origin of Wireless Sensor Networks. They allow inter-transmission of the information with or without using the Internet facilities. The detection of forest fire is one of the crucial utilizations of WSN, and our matter of concern is to focus on the detection of fire and monitoring the transfer of information. In this regard, we design an efficient real-time setup which accumulates the information from various places, and uploads them on the remote web server. Through Wi-Fi, the information from numerous places having lack of Internet facility is transmitted to an intermediary server, and same is uploaded on the remote web server using the Internet. We employ NodeMCU micro-controller which has built-in ESP 8266 Wi-Fi module for establishing steadfast communication within the network. Moreover, we implement the proposed elucidation on the Arduino Integrated Development Environment (IDE). © 2020, Springer Nature Switzerland AG.",
    "keywords": "Arduino IDE; ESP 8266; Internet; NodeMCU; Wireless fidelity (Wi-Fi); Wireless Sensor Network (WSN)",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-40305-8_23",
    "interesting": "-"
  },
  {
    "title": "Human Tracking System Based on GPS and IOT (Internet of Things)",
    "abstract": "Human safety is an important issue due to the sudden rise of crimes and accidents. To resolve this issue we propose a Human Tracking System based on GPS (Global Position System) and Internet of Things (IOT) that has dual security features. The proposed system incorporates the available technical know how in sensors(GPS,gravity etc.)to track, monitor and assist a person in different situations [3, 11]. The proposed system may be utilized by children in crowded areas and by anyone who wants to get assistance at the time of distress like patients. Our proposed concept of developing such a device is to create an environment where anyone can be located at any time thus reducing the cost and efforts involved to track them by several agencies. The system will alert the right agencies if a person, like a child or a patient, is in need of assistance. © Springer Nature Switzerland AG 2020.",
    "keywords": "Arduino IDE software; Arduino UNO; ESP2866 WiFi module; Thing speck cloud server and fritzing software (design circuit diagram); Ultimate Adafruit GPS (Global Positioning System) shield",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-3-030-24643-3_61",
    "interesting": "-"
  },
  {
    "title": "Web environment for program analysis and transformation onto reconfigurable architectures",
    "abstract": "Experience of designing different versions of web-based development environment (IDE) for Optimizing parallelizing system and compiler onto reconfigurable architecture is described. Designed system is based on existing tools and frameworks such as Jupyter Notebook and Eclipse Che. Set of requirements for Optimizing parallelizing system components is developed to make it possible to integrate them into web-based development environment accessible through the Internet. Designing portable environment for compiler development, compiler technology demonstration and teaching parallel program development is also described. Newly developed program transformations are shown to be used during program optimizations for FPGA inside the designed web environment. Means of program transformation visualization are described for use with Jupyter Notebook. The work shown demonstrates possibility to organize remote access to library of instruments and tools for program optimizations currently under development that would be convenient for application developers. Copyright © 2020 for this paper by its authors.",
    "keywords": "Cloud computing; Containerization; FPGA; Integrated development environment; Parallelizing compiler; Program transformations; Wed IDE",
    "released": 2020,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85078480732&partnerID=40&md5=d25ac4a258b594f3919d472e85357997",
    "interesting": "-"
  },
  {
    "title": "Assignment Tracking on Android Platform",
    "abstract": "Student assessment in terms of ‘assignment tracking’ is essentially needed in order to understand students’ cognition level in a learning process. Students are asked to write programs to solve problems, and then, those are evaluated. The traditional offline method of this formative assessment by pen-and-paper mode is time-consuming and tedious. There are many online assessment methodologies too. Android OS-based smartphones becoming so popular are being effectively used in the domain of education. Online formative assessment process for Java programming on android platform is proposed in this paper. The ‘Assignment Tracker’ application is developed and designed using official IDE, Android Studio 3.1. Android OS supports the Dalvik bytecode instead of traditional JVM. So, a client–server architecture is proposed. The students on client side can execute Java programming on their android mobiles and request the server for compiling and execution. A third-party Web server is utilized to build up the connection between client and server. On implementation, the overall system proves fruitful and effective as an advanced formative assessment technique. © Springer Nature Singapore Pte Ltd. 2020.",
    "keywords": "Android OS; Assessment; Client–server architecture; IDE; Java programing; JVM; Spring framework; Third-party web server",
    "released": 2020,
    "link": "https://doi.org/10.1007/978-981-13-7166-0_49",
    "interesting": "-"
  },
  {
    "title": "Analyzing learners’ engagement and behavior in MOOCs on programming with the codeboard IDE",
    "abstract": "Massive Open Online Courses (MOOCs) can be enhanced with the so-called learning-by-doing, designing the courses in a way that the learners are involved in a more active way in the learning process. Within the options for increasing learners’ interaction in MOOCs, it is possible to integrate (third-party) external tools as part of the instructional design of the courses. In MOOCs on computer sciences, there are, for example, web-based Integrated Development Environments (IDEs) which can be integrated and that allow learners to do programming tasks directly in their browsers without installing desktop software. This work focuses on analyzing the effect on learners’ engagement and behavior of integrating a third-party web-based IDE, Codeboard, in three MOOCs on Java programming with the purpose of promoting learning-by-doing (learning by coding in this case). In order to measure learners’ level of engagement and behavior, data was collected from Codeboard on the number of compilations, executions and code generated, and compared between learners who registered in Codeboard to save and keep a record of their projects (registered learners) and learners who did not register in Codeboard and did not have access to these extra features (anonymous learners). The results show that learners who registered in Codeboard were more engaged than learners who did not register (in terms of number of compilations and executions), spent more time coding and did more changes in the base code provided by the teachers. The main implication of this study suggests the need for a trade-off between designing MOOCs that allow a very easy and anonymous access to external tools aimed for a more active learning, and forcing learners to give a step forward in terms of commitment in exchange for benefitting from additional features of the external tool used.",
    "keywords": "MOOCs; Programming; Learners’ engagement; Codeboard; Learning analytics; edX",
    "released": 2020,
    "link": "https://doi.org/10.1007/s11423-020-09773-6",
    "interesting": "+"
  },
  {
    "title": "A survey of neural network accelerator with software development environments",
    "abstract": "Recent years, the deep learning algorithm has been widely deployed from cloud servers to terminal units. And researchers proposed various neural network accelerators and software development environments. In this article, we have reviewed the representative neural network accelerators. As an entirety, the corresponding software stack must consider the hardware architecture of the specific accelerator to enhance the end-to-end performance. And we summarize the programming environments of neural network accelerators and optimizations in software stack. Finally, we comment the future trend of neural network accelerator and programming environments.",
    "keywords": "neural network accelerator; compiling optimization; programming environments",
    "released": 2020,
    "link": "https://doi.org/10.1088/1674-4926/41/2/021403",
    "interesting": "-"
  },
  {
    "title": "CRITERIA FOR THE SELECTION OF EDUCATIONAL PROGRAMMING ENVIRONMENT FOR THE FORMATION OF PROSPECTIVE PRIMARY SCHOOL TEACHERS’ ICT COMPETENCE",
    "abstract": "One of the main tasks of institutions of higher pedagogical education is the teacher training for life in the information society and for computer technology and software application in professional activity. The article reveals the conditions for choosing programming environment as a means of developing ICT competence of future primary school teachers. The analysis of Ukrainian and foreign scientists’ works shows that block visual programming languages have significant advantages over the text ones at the initial stage of programming training. The groups of criteria that influence the choice of visual programming environment are defined. The availability of support for performing basic mathematical and logical operations, the possibility to write formulas in mathematical form as well as the availability and support of the basic algorithmic constructions refer to the group of criteria related to the features of the programming environment. The criteria related to the possibility of using the environment at the initial stage of programming languages training contain the simplicity and convenience of the interface, the availability of instructions and manuals, the versions of programs that can be used free of charge. The technological criteria include the following indicators: a crossover form, the support for robotic designers, the availability of mobile and online versions, a license type, the support and the development of the environment. The paper presents a comparative analysis of present-day popular visual programming environments by all criteria and indicators (Alice, Google Blockly, Kodu, Scratch, Snap!). It has been determined that according to the mentioned above criteria and indicators, the most expedient, suitable and effective visual block programming environment for the formation and the development of ICT competence of future primary school teachers, despite some certain shortcomings, is Scratch and Scratch-like environments.",
    "keywords": "a programming language; programming environment; block programming environment; selection criteria; a primary school teacher",
    "released": 2020,
    "link": "https://doi.org/10.33407/itlt.v78i4.2912",
    "interesting": "-"
  },
  {
    "title": "Design and evaluation of a block-based environment with a data science context",
    "abstract": "As computing becomes pervasive across fields, introductory computing curricula needs new tools to motivate and educate the influx of learners with little prior background and divergent goals. We seek to improve curricula by enriching it with authentic, real-world contexts and powerful scaffolds that can guide learners to success using automated tools, thereby reducing the strain on limited human instructional resources. To address these issues, we have created the BlockPy programming environment, a web-based, open-access, open-source platform for introductory computing students (https://www.blockpy.com). BlockPy has an embedded data science context that allows learners to connect the educational content with real-world scenarios through meaningful problems. The environment is block-based and gives guiding feedback to learners as they complete problems, but also mediates transfer to more sophisticated programming environments by supporting bidirectional, seamless transitions between block and text programming. Although it can be used as a stand-alone application, the environment has first-class support for the latest Learning Tools Interoperability standards, so that instructors can embed the environment directly within their Learning Management System. In this paper, we describe interesting design issues that we encountered during the development of BlockPy, an evaluation of the environment from fine-grained logs, and our future plans for the environment.",
    "keywords": "Data science; Tools; Programming environments; Programming profession; Engineering profession; Games; Computer science education; introductory computing; block-based programming; data science; automatic guidance",
    "released": 2020,
    "link": "https://doi.org/10.1109/TETC.2017.2729585",
    "interesting": "-"
  },
  {
    "title": "Hybrid VNS-LP algorithm for online optimal coordination of directional overcurrent relays",
    "abstract": "Optimal coordination of directional overcurrent relays (DOCRs) in interconnected power systems is a highly constrained, non-convex and non-linear optimisation problem. In this study, use of a series of linear programming (LP) problems in a variable neighbourhood search (VNS) framework is proposed, in which pickup current settings can be considered either as continuous or discrete variables. Therefore, the proposed hybrid algorithm (VNS-LP) is suitable for coordination problem-solving in a network with different types of DOCRs. Furthermore, two versions of the VNS algorithm are proposed, the first of which is very easy to implement, while, the other is somewhat more sophisticated, and at the same time much faster and possibly suitable for online coordination in smart grids applications. One advantage of the second algorithm is that it relies only on elementary arithmetic and requires low RAM, which makes it implementable in any low-level programming environment. This, in turn, can increase the interoperability, which is of crucial importance when automating tasks. The efficiency of the proposed algorithm was investigated in several test systems. Numerical results indicate that the two proposed approaches outperform the previous methods. Moreover, the coordination problem is solved in a reasonably short time using a faster approach.",
    "keywords": "smart power grids; power system interconnection; optimisation; overcurrent protection; relay protection; search problems; power system protection; online optimal coordination; directional overcurrent relays; DOCR; interconnected power systems; nonconvex optimisation problem; nonlinear optimisation problem; linear programming problems; variable neighbourhood search framework; pickup current settings; continuous variables; discrete variables; coordination problem-solving; VNS algorithm; online coordination; smart grids applications; low-level programming environment; hybrid VNS-LP algorithm; VNS framework; elementary arithmetic; RAM",
    "released": 2020,
    "link": "https://doi.org/10.1049/iet-gtd.2019.1811",
    "interesting": "-"
  },
  {
    "title": "Rotary machine vibration monitoring and smart balance correction",
    "abstract": "During the rotary machine operation process, seemingly small amounts of abnormal vibration can often cause serious damage to the machinery over time and even increase the risk of accidents. Although professional vibration engineers can determine the current health status of a machine by interpreting the vibration spectrum information and predicting which components will fail, if even ordinary operators can send feedback regarding the vibration signals reaching the human-machine interface through a system when an abnormality is detected in the machine, the abnormality can be made known and processed in time. This can prevent the magnified impact of rotary inertia, thereby lowering the risk of major damage and the failure of machinery and equipment, as well as effectively saving on equipment maintenance costs. This study mainly adopted LabVIEW and Arduino IDE to develop a control program and human-machine monitoring interface. As the initial experiment on rotary machine vibration monitoring and smart balance correction, the measurement system setup in this study was applied to determine vibration abnormality as well as to carry out continuous online automatic balance correction. Experimental verification was carried out using active correction and smart correction. In terms of active online balance correction, the amplitude correction rate was 96%, the double-frequency correction rate was 102.9%, and the correction process was performed in 5 min. In terms of smart balance correction, the amplitude correction rate was 103.8%, the double-frequency correction rate was 103.3%, and the correction process was performed in 3 min. Through feedback signaling, the operator can effectively learn the current health status of the mechanical equipment from the human-machine interface.",
    "keywords": "LabVIEW; Arduino IDE; human-machine monitoring interface; vibration monitoring; smart balance correction",
    "released": 2020,
    "link": "https://doi.org/10.1177/1687814020936032",
    "interesting": "-"
  },
  {
    "title": "Perspectives for effective integration of e-learning tools in university mathematics instruction for developing countries",
    "abstract": "This paper analyses student views on an e-learning intervention that incorporated a content development tool and computer algebra systems, aimed at improving performance and applicability of mathematics knowledge. The study deliberately relied on open source tools, with high usability both online and offline, that can be customized to address the peculiarities of mathematics instruction in developing countries. Repeated ANOVA and logistic regression were among the statistical methods used to analyze the data. Key findings showed that usability and detailed feedback were the qualities of computer algebra system that were most desired by students. Content quality, problem solving abilities and internet availability were key factors for mathematical e-learning satisfaction. The research showed that the use of an interactive content development tool and computer algebra systems can help the teachers to be more innovative and adopt project-based examination formats that encourage knowledge applicability. The e-learning tools helped the students to self-regulate and discover their own knowledge, which increased their chances of handling application type problems. Among others, the study recommended set up of mathematical e-laboratories which can be accessed by students for at least 3 days per week.",
    "keywords": "Assessment and feedback; Dynamic and interactive content; Content development tool; Computer algebra systems; Knowledge application; Logistic regression",
    "released": 2020,
    "link": "https://doi.org/10.1007/s10639-019-09995-z",
    "interesting": "-"
  },
  {
    "title": "AUTOMATIC DETECTION OF VIDEOS’ SCENES WITH AGGRESSION UTILIZING MOVIES’ TRANSCRIPTS BY USING TEXT MINING TECHNIQUES",
    "abstract": "The world is witnessing revolutionary evolution of internet and with the advent of social media; users are empowered to easily post contents on the web at any time and from any place in the form of opinions, comments, and feelings. Manual approaches of detecting and analyzing such huge amount of posts are not feasible and there is a need for automated methods and techniques to discover the knowledge and patterns of the text content without human involvement. Text mining refers to the process of extracting interesting and significant patterns or knowledge from text documents. YouTube is known for its free provision of video sharing service. The content of YouTube videos may sometimes comprise of images or sequence(s) of images with unwanted material, such as aggression, which is the reason of emergence of many social problems, particularly among children such as demonstration of aggressive behavior and bullying at home, school and public places. The research work reports performance of machine learning classifiers that were applied on video transcripts of YouTube videos to detect aggression. The dataset constructed for the purpose of research work, consists of English video scenes transcripts that were collected from the web and were annotated manually as violent and non-violent. Various experiments were performed on the dataset using different machine learning (ML) classifiers with different text preprocessing settings in RapidMiner and Python environments and thus predictive classifier models were constructed and tested. In RapidMiner environment, the SVM classifier model outperformed the other classifiers achieving highest accuracy of 79% after preprocessing step of removal of stop words. In Python programming environment, NB classifier outperformed the other classifiers in majority of experiments with different preprocessing settings, achieving highest accuracy of 82.5%, when stemming was performed in preprocessing stage along with other preprocessing steps. The automatic process of aggression detection in video scenes can be used by concerned authorities to enforce their cultural priorities.",
    "keywords": "Video transcript; Aggression detection; Machine learning; Vector Space Model; Term Frequency- Inverse Document Frequency; Natural Language Toolkit; Decision Tree; Naive Bayes; K-Nearest Neighbor; Support Vector Machine; Weka - RIpple-DOwn Rule learner",
    "released": 2020,
    "link": "https://doi.org/10.22937/IJCSNS.2020.20.09.24",
    "interesting": "-"
  },
  {
    "title": "xOOHDM: Integrated development environment for creating and executing models in web applications design",
    "abstract": "Web applications have several characteristics that differentiate them from conventional applications. However, they are often developed without considering such characteristics, even though there are specific methods for the design of these applications. This work proposes the combined use of the OOHDM method and executable models in an integrated environment for the model-driven development of Web applications. This environment provides a DSML for navigation modeling using the notations of the OOHDM and automatically generates the corresponding executable model, which permits simulating and testing this navigation without the need of code generation. It allows developers addressing specific aspects of web applications, such as hypertext, and identifying and fixing design problems beforehand via model execution.",
    "keywords": "Papyrus; OOHDM; Executable UML; Executable Model; DSML",
    "released": 2019,
    "link": "https://doi.org/10.1145/3350768.3352732",
    "interesting": "-"
  },
  {
    "title": "Reliable cloud software development architectures and business models case study: RIDEaaS and GAE launcher",
    "abstract": "Development of cloud applications directly on the cloud infrastructure has become a common approach. Reliability concerns have also become more of a challenge during the last years. Our goal is to assert the potentials deriving from an integrated development environment, adopting software reliability concepts and fault tolerant techniques, as part of the cloud core services. As a methodology, we propose the implementation of a new cloud service Reliable Integrated Development Environment as a Service to become part of the existing core services. Our objectives are to 1) fulfill the need of having a development environment independent from personal desktop environments; 2) code development environment should be offered directly from the cloud service providers. With fault tolerant technique integration, we also suggest that the reliability of the cloud system should be handled from the cloud developers at software level when cloud quality assurance services fail to do so at their different levels. We also propose potential business models to become part of this core service for the major cloud providers. We introduce a new High Availability Coding model providing a roadmap for the future.",
    "keywords": "reliable integrated development environment; cloud software development; cloud SDK; Cloud systems",
    "released": 2019,
    "link": "https://doi.org/10.1145/3351556.3351586",
    "interesting": "-"
  },
  {
    "title": "Good-bye localhost: A cloud-based web IDE for teaching java EE web development to non-computer science majors",
    "abstract": "While cloud- and web-based Integrated Development Environments (IDE) are used in practice and education for some time, these are mainly intended for classical web development. Support for enterprise platforms such as Java Enterprise Edition (EE) is typically lacking. However, in higher education, web-based cloud IDE are particularly useful in software development courses for non-computer science major students, since they could help to overcome the participants’ limited IT skills. Thus, a respective easy-to-use web IDE is required. Therefore, in this paper a software platform for a web-based cloud IDE for educational purposes is proposed and evaluated, which in particular supports Java EE and is suitable for non-computer science majors. The platform was evaluated in a classroom experiment. The results indicate that it is useful and beneficial for the students, allowing the lecturer and the students to focus more on the actual learning objectives.",
    "keywords": "web development education; non-computer science majors; higher education; cloud computing; Java EE",
    "released": 2019,
    "link": "https://doi.org/10.1109/ICSE-Companion.2019.00108",
    "interesting": "+"
  },
  {
    "title": "Towards web collaborative modelling for the user requirements notation using eclipse che and theia IDE",
    "abstract": "Collaborative modelling has become a necessity when developing a complex system or in a team of modellers with a diverse set of expertise. Textual notations have a long history in software engineering because of their fast editing style, simple usage, and scalability. Therefore, we propose a novel collaborative modelling framework for the graphical User Requirements Notation (URN) which we call tColab. It uses the text-based TGRL (Textual Goal-oriented Requirement Language) to build URN goal models and then automatically generates corresponding graphical models. This framework is based on the architecture of Eclipse Che and Theia. On one side, Theia provides support for LSP (Language Server Protocol) so that textual models can be built and their corresponding graphical models can be generated in a browser IDE (Integrated Development Environment). On the other hand, Eclipse Che adds support for collaboration where multiple modellers can contribute to building the textual models in an online collaborative manner. This initiative aims to replace the jUCMNAV tool, which is the most comprehensive URN modelling tool to date but only supports a single user.",
    "keywords": "user requirements notation; theia; sprotty; jUCMNav; eclipse che; URN; TURN; TGRL; LSP; ELK",
    "released": 2019,
    "link": "https://doi.org/10.1109/MiSE.2019.00010",
    "interesting": "-"
  },
  {
    "title": "IDVE: An integrated development and verification environment for JavaScript",
    "abstract": "Program verifiers statically check programs based on source code annotations such as invariants, pre- and postconditions. These annotations can be more precise than simple types. For example, a sorting routine might be annotated with a postcondition stating that its result is sorted.However, the verification process for these annotations can become complex. Therefore, simple error messages may not be sufficient to help the programmer resolve verification issues. In order to improve the programming experience for verified programming, this paper presents IDVE, an integrated development and verification environment that lets users interactively inspect and debug verification issues. The goal of IDVE is to provide a development tool that assists users with program verification analogous to how interactive step-by-step debugging avoids manual \"printf debugging\". IDVE enables programmers to interactively manipulate assumptions and assertions of verification conditions with a novel verification inspector, and IDVE automatically generates tests that serve as executable and debuggable counterexamples.In addition to presenting the approach and implementation of the integrated development and verification environment, we also conducted a user study with 18 participants to evaluate how the proposed features of the environment are perceived. Participants with and without prior experience with program verifiers had to solve a series of simple programming and verification tasks and answer an online survey. Features of IDVE were generally seen as helpful or potentially helpful but user interface design is an essential factor for their utility.",
    "keywords": "JavaScript; interactive debugging; program verification; programming environments; test generation",
    "released": 2019,
    "link": "https://doi.org/10.1145/3328433.3328453",
    "interesting": "-"
  },
  {
    "title": "Exploring the use of video reflection as a professional development tool",
    "abstract": "The use of video recording in the classroom has the potential to improve pre- and in-service teacher practice. This poster explores the use of video as a virtual-visit and professional development tool for computer science educators at the high school level. The Mobile Computer Science Principles (CSP) program offers a rigorous professional development (PD) and curriculum for new and experienced computer science teachers. With support from the National Science Foundation, the program was able offer a stipend to teachers who completed the research requirements, which for the online program included recording, reflecting on, and submitting a 10-minute unedited video of educators implementing a chosen lesson in their course. In addition to the video submission and reflection, teachers reviewed and commented on others videos in a protected online environment. Researchers have begun examining the teacher reflections and the comments. This poster presents preliminary common themes and findings from teacher video reflections, video comments, focus group data, and an end of course survey. Trends surrounding student engagement, teacher confidence, and teacher views of effective pedagogical strategies such as growth mindset and pair programming have emerged. Results show that while computer science educators can often feel isolated in their school environment, video serves as a powerful tool for promoting connectedness and individual reflection. Creating a space where teachers can reflect on their own teaching is an important professional development opportunity. Results show that while computer science educators can often feel isolated in their school environment, video serves as a powerful tool for promoting connectedness and individual reflection. The use of video helps teachers to how to develop and implement best teaching practices and pedagogical strategies effectively into their classroom.",
    "keywords": "best practices; computer science principles; k-12; pedagogy; professional development; video reflection",
    "released": 2019,
    "link": "https://doi.org/10.1145/3291279.3341213",
    "interesting": "-"
  },
  {
    "title": "CodeBuddy (collaborative software development environment): In- and out-class practice for remote pair-programming with monitoring coding students’ progress",
    "abstract": "Pair-programming is an Agile technique in Extreme Programming (XP) where traditionally two programmers need to be collocated and work together at one workstation. Previous research has shown that pair-programming is very beneficial in software engineering education. However, learning and practicing pair-programming are mostly limited in a class where students can only learn to collaboratively program with another student in controlled or laboratory settings. Although nowadays there exist some collaborative tools, such as CodePilot, Google Colaboratory and Git, they are not specifically pair-programming-oriented. This impedes a pairing’s ability to discuss effective strategies in problem solving, to form productive or mutually learning pairs, and to predict pair compatibility. To encourage students in out-class practice of pair-programming, we present a demonstration of a novel web-based software development environment, called CodeBuddy, for remote pair-programming. CodeBuddy provides instructors and students with several features for managing laboratory classes and practicing pair-programming. Examples of CodeBuddy’s features include: coding screen mirroring between a pair, output terminal to show compiled results, face-to-face like communication channels (i.e., video calling and instant text messaging), automatic and manual role switching, code quality analysis for monitoring coding students’ progress and recommending a pair with targeted pairing goals, implicit code reviews using face detection for tracking a reviewer’s engagement, line-by-line code commenting, etc. The demonstration consists of a walkthrough of two use-case scenarios: an instructor assigns a problem-solving task and two students remotely work together in a pair using CodeBuddy on two different workstations to solve it.",
    "keywords": "agile software development; pair programming; remote collaboration and learning; software engineering",
    "released": 2019,
    "link": "https://doi.org/10.1145/3287324.3293750",
    "interesting": "-"
  },
  {
    "title": "ChainIDE: A Cloud-Based Integrated Development Environment for Cross-Blockchain Smart Contracts",
    "abstract": "Blockchain has become novel solutions for many traditional issues in computer science and finance. Recently, with the release of Libra blockchain from Facebook, the decentralized finance concepts have another huge development. However, there are already many different blockchain systems existing now and the development of blockchain systems have become more and more complicated since each kind of blockchain development environment will consume time to be built. To make the programming on different blockchain systems more easily, we propose a novel cloud-based solution, namely ChainIDE, for the development of blockchain-based smart contracts on multiple kinds of blockchain systems. With chainIDE, cross-chain developing of smart contracts on different blockchain systems can be easily done without any time consumed by building the environment. Based on the operation statistics in this paper, we served more than 310,000 compilations in the past 30 days which makes us the most popular cloud-based cross-chain development platform in the world.",
    "keywords": "Blockchain; Smart Contract; Cross-chain Platform; Libra; Cloud IDE",
    "released": 2019,
    "link": "https://doi.org/10.1109/CloudCom.2019.00055",
    "interesting": "-"
  },
  {
    "title": "Gamifying the Code Genie Programming Tool",
    "abstract": "The Code Genie programming environment was built by the researcher and the author of this paper as part of a Ph.D. study to encourage high school student for coding in JavaScript language. This environment was tested and used in three coding workshops. The participated students had several suggestions in their feedback comments. One of the common suggestions was adding a tutorial section to the environment. Gamification elements and the suggested tutorial section were added to the Code Genie web Integrated Development Environment (IDE). This update is introduced and discussed in this paper.",
    "keywords": "computer programming for high school students; computer science for girls; art with coding; animation; code sharing; STEM tool for k12; Code Genie development environment; web IDE",
    "released": 2019,
    "link": "https://doi.org/10.1109/EIT.2019.8833771",
    "interesting": "+"
  },
  {
    "title": "Mining Developer's Behavior from Web-Based IDE Logs",
    "abstract": "The birth of cloud-based development environments makes available an increasing number of data coming out from the interaction of different developers with a diverse level of expertise. This data, if opportunely captured and analyzed, can be useful to understand how developers head the coding activities and can suggest members of developers community how to improve their performances. This paper presents a framework allowing to generate event logs from cloud-based IDE. These event logs are then examined using a process mining technique to extract the developers' coding processes and compare them in the shared coding environment. The approach can be used to discover emergent and interesting developers' behavior. Thus, we compare the coding process extracted by developers with different skills. To validate our approach, we describe the results of a study in which we investigate the coding activities of forty students of an advanced Java programming course performing a given programming task-during four assignments. Results also prove that users with different performances possess distinct attitudes highlighting that the adopted process mining technique can be useful to comprehend how developers can improve their coding skills.",
    "keywords": "process mining; development workflows; source code; IDE logging",
    "released": 2019,
    "link": "https://doi.org/10.1109/WETICE.2019.00065",
    "interesting": "-"
  },
  {
    "title": "Automatic Smart and Safety Monitoring System for Kitchen Using Internet of Things",
    "abstract": "One of the most important places in any house is the kitchen. Many safety measures has to be taken into account while using the kitchen. The reasons that leads to unexpected explosions are an uncontrolled fire, excessive rise in temperature, the presence of leakage gas etc., The explosions has to be immediately recognized and cleared. The main purpose of the paper is that to identify, address the safety of kitchen. This smart and safety monitoring system is modeled by these types of sensors namely, DTH11 sensor monitors temperature and humidity of the kitchen, IR flame sensor detects the existence of fire in the surroundings of kitchen and the leakage of gas in the kitchen is detected by using MQ-3 sensor. The interfacing of these sensors is done by using Arduino UNO and the controlling of this safety system is done by relay. The different colored LED's indicates different situations that are occurred in the kitchen. In increase in leakage in gas and temperature in the kitchen will be reduced by the performance of the relay. The buzzer will be in ON condition when there is the presence of fire. The monitoring and controlling of this system is done by every 15 seconds. By using the Wi-Fi module the data about kitchen will be transmitted to user.",
    "keywords": "Arduino UNO; ESP8266; Arduino IDE; Internet of Things; Thingspeak web server",
    "released": 2019,
    "link": "https://doi.org/10.1109/ICCS45141.2019.9065663",
    "interesting": "-"
  },
  {
    "title": "Integrated Power Management with Automated Attendance System",
    "abstract": "Optimal energy management in smart spaces requires intelligent and reliable energy-aware-based context sensing and technologies that are capable of recognizing and analyzing the power consumption. In this system, we propose a efficient and reliable power management system with inclusion of automated attendance. The main objective is to automatically control the fan and lights inside any space involving number of people. The next objective is automated attendance. ID cards containing barcode data is sufficient for their identity, show case their real time data, their usage additional fine system for being late. Priority of this work, is made to ensure that this system is affordable to all with assurance of data integrity and authority.",
    "keywords": "RFID tags; arduino; IDE; IoT; automated attendance; tag reader; web server; bill generation and SMS alert",
    "released": 2019,
    "link": "https://doi.org/10.1109/ICCCT2.2019.8824905",
    "interesting": "-"
  },
  {
    "title": "A Cloud-based Development Environment using HLA and Kubernetes for the Co-simulation of a Corporate Electric Vehicle Fleet",
    "abstract": "Decision makers in modern enterprises need to assess so-called \"what-if\" scenarios and select the best of breed among the available alternatives. Although simulation plays a pivotal role in niche cases, it is an undervalued tool in the broader enterprise context. Its proliferation has not kept up with recent technological advances such as big data, cloud computing, graphics processing units clusters, and cross-layer enterprise integration. Based on such new developments, new capabilities can be realized that go beyond single-purpose simulations, and are an excellent fit for studying heterogeneous, independently developed System-of-Systems (SoS), in a multitude of scenarios in complex and dynamic enterprise environments. Co-simulation efforts can provide new insights on the enterprise operations including compelling visualizations of possible simulated alternatives, thereby assisting decision makers in their strategy selection. To move beyond niche applications, however, simulated systems need to integrate in real-time, a continually increasing amount of data (both real and simulated), stemming from various domains and their systems. This work presents a way to achieve such distributed simulations in modern enterprise environments, based on HighLevel Architecture (HLA), as well as their coordination via the Run-Time Infrastructure (RTI). In an example scenario featuring a co-simulation of a corporate electric vehicle fleet, it is shown how various software subsystems interact to enable business users to visually investigate scenarios, as well as how such a system can be deployed and operated within a modern enterprise IT landscape.",
    "keywords": "",
    "released": 2019,
    "link": "https://doi.org/10.1109/SII.2019.8700423",
    "interesting": "-"
  },
  {
    "title": "An Intelligent Recycling Bin Using Wireless Sensor Network Technology",
    "abstract": "Planning the trash container and recycling management for all the rubbish produced in community service is an enormous task. Waste and recycled items collection or rubbish disposal are contributing to community cleanliness and people's health. Everyone must hold responsibility in the conservation of any resources. Any city council or building management office need a good management system which has proper schedule for collecting the rubbish at different places and when it is necessary. The centralized system can ensure the community cleanliness and provides efficient process to any garbage collector. This paper provides the solution to the problem which is an intelligent management system of recycling bins using wireless sensor network technology which is applicable in any high-rise building.",
    "keywords": "Firebase Cloud Messaging (FCM); Wireless Sensor; IDE",
    "released": 2019,
    "link": "https://doi.org/10.1109/I2CACIS.2019.8825044",
    "interesting": "-"
  },
  {
    "title": "JavaScript Development Environment for Programming Education Using Smartphones",
    "abstract": "A development environment that allows programming at any time or place is required for supporting programming education. Currently, smartphones are more popular than personal computers. Therefore, if a development environment for smartphones is available then students can learn to program in a normal room, with no personal computer, or on the way to school. A browser-based development environment can be realized using JavaScript as a learning language. In this paper, we describe the design, implementation, and evaluation of a JavaScript development environment. Our development environment is suitable for smartphones and is easy to use even with a small screen.",
    "keywords": "Programming Education, Smartphone, JavaScript",
    "released": 2019,
    "link": "https://doi.org/10.1109/CANDARW.2019.00058",
    "interesting": "+"
  },
  {
    "title": "A Scheme for Latency Analysis of Different Cryptography Methods for Security in 5G Era",
    "abstract": "In this paper, we present a scheme for performance analysis of different cryptography methods namely symmetric ciphers, and asymmetric ciphers to encrypt and decrypt the text, and audio data for online secure data access in the browser window using LabVIEW approach on myRIO hardware module for 5G systems. In this work, the text message with the different payloads is encrypted and decrypted. Similarly, the same process repeated for audio data. First, the text, and audio data are converted into string format; then the data format is encrypted using different cryptography methods from the sender side. On the receiver side, same cryptography method is used to decrypt the data with a generated key associated among the parties. In the case of symmetric ciphers, AES, Blowfish, DES, and IDEA are used to encrypt and decrypt the data. Further, the asymmetric ciphers, RSA, ECC, and DSA are used to encrypt and decrypt the data. LabVIEW programming tools are used to develop a scheme of cryptography methods. Finally, latency analysis is made on text, and audio data with symmetric and asymmetric ciphers.",
    "keywords": "Symmetric ciphers; AES; Blowfish; DES; IDEA; asymmetric ciphers; RSA; ECC; DSA",
    "released": 2019,
    "link": "https://doi.org/10.1109/I2CT45611.2019.9033754",
    "interesting": "-"
  },
  {
    "title": "Prototype of Visual Programming Environment for C Language Novice Programmer",
    "abstract": "For the education of beginning programmers, visual programming that develops programs by combining blocks has attracted significant attention. An environment for generating code in a conventional programming language is also provided. However, existing environments are not fully visualized. In this investigation, we prototyped a development environment for the C language in which users can intuitively understand the concept of variable declarations and include statements, and an execution environment that visualizes the state of evaluation of expressions and changes in the values of variables before and after the execution of the statement. It also has step-forward and step-backward functions. This programming environment is a web application developed with JavaScript. For step-by-step evaluation of an expression, it converts the expression internally to reverse Polish notation and visualizes the change in the terms in the expression. To implement the step-backward function, it has a history-of-execution context. We determined experimentally that students who are not proficient in C can program more accurately and quickly in this environment than with text-based coding.",
    "keywords": "visual programming, block-based, C language, novice programmer, web application, interpreter",
    "released": 2019,
    "link": "https://doi.org/10.1109/IIAI-AAI.2019.00037",
    "interesting": "-"
  },
  {
    "title": "Remote Arduino programming with Blockly web interface",
    "abstract": "Arduino development boards are often used in high school education environments as a education platform to teach basics of computer science. This often requires elaborate manual installation of supporting software tools, such as drivers, integrated programming environments and compilers. This paper describes architecture designed for remote programming of Arduino boards utilizing Raspberry Pi devices as a bridge between cloud platform for Arduino development and the Arduino development boards. It also describes web interface created for the platform built with this architecture that allows block-based creation of basic Arduino applications utilizing Blockly library.",
    "keywords": "Blockly; Arduino development board; Remote programming; Arduino IDE",
    "released": 2019,
    "link": "https://doi.org/10.1109/iCCECE46942.2019.8941764",
    "interesting": "-"
  },
  {
    "title": "Arduino-based IDE for Embedded Multi-processor System-on-Chip",
    "abstract": "Contrary to cloud computing, edge computing shifts some of the computational loads to the edge device to accommodate real-time and complex processing. Multicore processors are commonly employed to accommodate the high computational requirements. Meanwhile, skills required to build such a complex program is still uncommon due to the limited exposure to multicore environment in embedded system. There is a need for platform that facilitates learning and development of multicore processor in embedded system, while keeping the learning curve relatively easy. Arduino IDE is a widely used and user-friendly platform, but officially only supports single core processors. This work proposes a design of multicore IDE for embedded system based on modification on the Arduino IDE. Implementation of the design is not discussed to keep the proposed design general and reusable.",
    "keywords": "Edge computing; embedded system; multicore development; Arduino IDE",
    "released": 2019,
    "link": "https://doi.org/10.1109/CONMEDIA46929.2019.8981862",
    "interesting": "-"
  },
  {
    "title": "A Programming Environment for Visual IoT on Raspberry Pi",
    "abstract": "The recent emergence of low-cost single-board computers such as Raspberry Pi and Arduino, which are used as sensing devices with connectivity to the Internet gateways and cloud services, has led to Internet of Things (IoT) architectures in the real world. Visual IoT is one of the classes of IoT that poses crucial end-to-end challenges due to the need for sensing and processing of visual data. One of the significant roles of the visual IoT is information extraction from images by using image processing and image recognition techniques. In this paper, we first introduce a programming environment for visual IoT on Raspberry Pi camera system, and then discuss a couple of sample applications. The first one is an application for real-time information extraction based on Open Source Computer Vision Library (OpenCV) and the second one is an augmented reality (AR)-oriented application based on Open Vector Graphic (OpenVG).",
    "keywords": "Internet of Things; Raspberry Pi; visual IoT; MVNO; mobile networks; OpenCV; OpenVG",
    "released": 2019,
    "link": "https://doi.org/10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00180",
    "interesting": "-"
  },
  {
    "title": "Bootstrapping MDE Development from ROS Manual Code - Part 2: Model Generation",
    "abstract": "In principle, Model-Driven Engineering (MDE) addresses central aspects of robotics software development. Domain experts could leverage the expressiveness of models; implementation details over different hardware could be handled by automatic code generation. In practice, most evidence points to manual code development as the norm, despite several MDE efforts in robotics. Possible reasons for this disconnect are the wide ranges of applications and target platforms making all-encompassing MDE IDEs hard to develop and maintain, with developers reverting to writing code manually. Acknowledging this, and given the opportunity to leverage a large corpus of open-source software widely adopted by the robotics community, we pursue modeling as a complement, rather than an alternative, to manually written code. Our previous work introduced metamodels to describe components, their interactions, and their resulting composition, as inspired by, but not limited to, the de-facto standard Robot Operating System (ROS). In this paper we put such metamodels into use through two contributions. First, we automate the generation of models from manually written artifacts through extraction from source code and runtime system monitoring. Second, we make available an easy-to-use web infrastructure to perform the extraction, together with a growing database of models so generated. Our aim with this tooling, publicly available both as-a-service and as source code, is to lower the MDE barrier for practitioners and leverage models to 1) improve the understanding of manually written code; 2) perform correctness checks; and 3) systematize the definition and adoption of best practices through large-scale generation of models from existing code. A comprehensive example is provided as a walk-through for robotics software practitioners.",
    "keywords": "ROS; models; development environments",
    "released": 2019,
    "link": "https://doi.org/10.1109/MODELS.2019.00-11",
    "interesting": "-"
  },
  {
    "title": "Development Environment for Hybrid Applications on Heterogeneous Clusters",
    "abstract": "The evolution of cluster computers based on multicores, many cores and GPGPU accelerators is encouraging application developers to write hybrid parallel programs. Hybrid parallel programming is quite complex as it requires use of multiple programming paradigms such as MPI, OpenMP, CUDA/OpenCL to exploit the varied computational power available in a system. The paper brings out the challenges faced by application developers desiring to use heterogeneous HPC clusters. It describes a unified development environment which eases the complete development lifecycle of hybrid parallel programs on a HPC cluster. The software is capable of providing access to multiple clusters of different architectures, owing to the modularity of design and web based approach. The paper also serves as a good resource for researchers interested to gain an insight into hybrid parallel programming.",
    "keywords": "Hybrid parallel programming; Heterogeneous CPU-GPU architecture; Integrated Development Environment; petascale programming; programmer productivity",
    "released": 2019,
    "link": "https://doi.org/10.1109/IACC48062.2019.8971597",
    "interesting": "-"
  },
  {
    "title": "Exploring Virtual Reality as an Integrated Development Environment for Cyber-Physical Systems",
    "abstract": "Cyber Physical Systems (CPS) development approaches tend to start from the physical (hardware) perspective, and the software is the final element in the process. However, this approach is unfit for the more software-intensive world that is increasingly iterative, connected, and constantly online. Many constraints prevent the application of iterative, incremental, and agile development methodologies, which now are the norm for many other fields of software. Time-consuming system validation can only start when both hardware and software components are ready, which implies that the software delivery and quality is almost always the final bottleneck in the CPS development and integration. Also organizational issues raise concerns - CPS development teams are nowadays often geographically distributed, which can result in delays in the process, shortcomings, and even mistakes. In this paper, we propose using our envisioned open-source Virtual Reality-based Integrated software Development Environment (VRIDE) for developing the next generation, increasingly software-intensive CPSs in efficient ways.",
    "keywords": "Reality (VR), Cyber-Physical Systems (CPS), Integrated Development Environment (IDE), Embedded Systems, Virtualization, Digital Twin, Virtual Twin, Simulation, Agile Software Development, Collaboration",
    "released": 2019,
    "link": "https://doi.org/10.1109/SEAA.2019.00027",
    "interesting": "-"
  },
  {
    "title": "Agent-based ergonomic user interface development environment: Analysis phase",
    "abstract": "Internet around the world has become the prime source to satisfy the requirement of Entrepreneurs, customer and end users. As user comfort is the primary goal of all the entrepreneurs, the end user interacts through the internet to mine the knowledge. The user interacts the internet by apps and web. To attract the users, the user interface (UI) designers focus on Visual presentations to abet users to interact, comprehend, and navigate to the information. The work presents that how visual perceptions of Web page intricacy by perceptive users' behavior, the indispensable cognitive effort for interaction with the UI can be understood. The work presents an extension of current methods for designing UI using model-based technics, with the methods essential for the design of adaptive capacities required in different phases of development. These developments can be fused in Agent-Based Ergonomic User Interface Development Environment. This technique is bolstered by a solution based on Multi-Agent System (MAS) which offer adaptive capabilities to users, designed using the anticipated technique of Agent-Based Ergonomic User Interface Development Environment (AB-EUIDE). In [27] author has presented the various phases of the AB-EUIDE Framework. In this article author presents the analysis phase of the AB-EUIDE and explains how a compromise is done between Adaptation and Ergonomics while designing the user interface. © BEIESP.",
    "keywords": "Adaptation; Analysis phase; And Multi-Agent System (MAS); Ergonomic user interface (EUI)",
    "released": 2019,
    "link": "https://doi.org/10.35940/ijitee.A3997.119119",
    "interesting": "-"
  },
  {
    "title": "Robot programming at different abstraction levels",
    "abstract": "The teaching of programming is an important issue related to Educational Robotics whereas in many cases students have different levels of knowledge in programming. Since several robots have a specific programming language, some students are excluded from the class due to their poor knowledge in the area. This paper presents the possibility of abstraction in the programming complexity by making use of the web environment multi-platform W-Educ. The presented approach allows different groups of users to perform the same activity making use of different resources. © 2019 IEEE.",
    "keywords": "Educational Robotics; Language Abstraction Levels; Programming Environment",
    "released": 2019,
    "link": "https://doi.org/10.1109/LARS-SBR-WRE48964.2019.00087",
    "interesting": "-"
  },
  {
    "title": "VPPE: A Novel Visual Parallel Programming Environment",
    "abstract": "Parallel programming continues to be a challenging task despite the many advances in parallel architectures and their wide availability in the cloud. The need both to partition the workload among various processing elements and to specify communication between them to share code and data, and to coordinate their tasks, requires from the developer a deep understanding of the problem, the parallel architecture and the programming language used in order to develop efficient parallel applications. This problem can be reduced significantly through the use of visual programming languages to hide most aspects related to the specification of communication and processes management. This paper presents VPPE, a novel Visual Parallel Programming Environment that allows developers to program parallel applications through organising workflows of interconnected icons. VPPE is a cloud environment that supports icons for specifying: I/O operations, workflow organisation, communication, and processing. Processing computing patterns supported so far include Single Program Multiple Data, Multiple Program Multiple Data, Pipeline, and Master–Slave. The paper highlights the design of VPPE based on a context-free graph grammar, its current implementation based on Java-MPI, its use in developing various parallel applications, and its evaluation compared to Java-MPI text-based programming. © 2019, Springer Science+Business Media, LLC, part of Springer Nature.",
    "keywords": "Cloud computing; Graph grammar; Hyperedge replacement grammar; Parallel patterns; Workflow",
    "released": 2019,
    "link": "https://doi.org/10.1007/s10766-019-00639-w",
    "interesting": "-"
  },
  {
    "title": "Support for full life cycle cloud-native application management: Dynamic TOSCA and SWITCH IDE",
    "abstract": "Motivated by the complexity and difficulty of engineering time-critical cloud applications, we investigated the methodology and software workbench to provide full application life cycle support to the software engineer. For this purpose we present a novel high-level concept that is concentrated on exchanging the complex, dynamic data using OASIS TOSCA standard, mainly used in static contexts. This methodology enables specifying an application logic, provisioning, deploying, monitoring, and dynamical adaptation to changing conditions. It can be applied effectively to the interchange of dynamically changing data in order to maintain Quality of Service. By extending TOSCA with dynamic mapping of Qualify of Service and runtime attributes related to the application and underlying architecture we show that TOSCA can be used to exchange data and reconfigure on-demand compute resources whilst the application is in the process of design, infrastructure provisioning, runtime or adaptation. To demonstrate that our novel research contributions can be realised, we implemented SWITCH IDE, which showcases this concept through its development workflow which offers application and underlying infrastructure description, manipulation and reconfiguration of QoS and runtime attributes. Our approach differs in that it supports the concept of dynamic TOSCA by directly enabling application runtime to be reconfigured on the fly. © 2019 Elsevier B.V.",
    "keywords": "Co-programming; Graph-based service modelling; Orchestration; Quality of service; Time-critical cloud application; TOSCA",
    "released": 2019,
    "link": "https://doi.org/10.1016/j.future.2019.07.027",
    "interesting": "-"
  },
  {
    "title": "A Multi-Agent Placement System for Virtual Network Functions in a Cloud-Based Architecture",
    "abstract": "This paper introduces a multi-agent system to enhance virtual network functions placement. The suggested system consists of a number of proactive agents aiming at providing a virtual network functions configuration depending on the state of the environment. Some of these agents are developed to determine an adequate target configuration based on available information and after a negotiation interaction; while other agents are designed to perceive the environment, as well as to act as managers in the decision process. The communication and the cooperation of these agents allow efficient placement of virtual network functions on distributed data-centers, possibly using multiple agent platforms. The results have demonstrated that our approach can enhance the solution by providing an adequate and automatic configuration without the intervention of any human decision-maker. © 2019 IEEE.",
    "keywords": "agent oriented-programming; Java agent development environment.; multi-agent system; virtual network functions placement",
    "released": 2019,
    "link": "https://doi.org/10.1109/SYNASC49474.2019.00043",
    "interesting": "-"
  },
  {
    "title": "A Development Environment for FIWARE-based Internet of Things Applications",
    "abstract": "The development of Internet of Things (IoT) applications has to face important issues such as the inherent device heterogeneity in terms of capabilities, computing power, network protocols, and energy requirements. To address this challenge, IoT middleware platforms have been proposed to abstract away the specificities of such devices, promoting interoperability among them, and easing application development. One of these proposals is FIWARE, an open, generic platform developed in the European Community to leverage the development of Future Internet applications. Given a set of FIWARE components required for a specific application under development, their deployment and configuration can be made either manually or using a container-based approach. However, setting up an environment composed by the main FIWARE components might sometimes not be a trivial process. This paper introduces FIWARE-Lab@RNP, a Web virtual laboratory for prototyping and experimenting applications based on the FIWARE platform. The main concern of FIWARE-Lab@RNP is enabling the use of FIWARE resources through the Internet in a transparent way, thus relieving users from the need of deploying and operating a FIWARE instance on their development or owned environment. The virtual laboratory provides functionalities for easily creating, configuring, and managing instances of FIWARE components, devices, context entities, and services while attempting to minimize the learning curve regarding these tasks. © 2019 Association for Computing Machinery. ACM ISBN 978-1-4503-7028-8/19/12...$15.00",
    "keywords": "Application development; FIWARE; Internet of Things; IoT applications; Middleware",
    "released": 2019,
    "link": "https://doi.org/10.1145/3366610.3368100",
    "interesting": "-"
  },
  {
    "title": "End-User Programmers Repurposing End-User Programming Tools to Foster Diversity in Adult End-User Programming Education",
    "abstract": "Efforts to improve diversity in computing have mostly focused on K-12 and university student populations, so there is a lack of research on how to provide these benefits to adults who are not in school. To address this knowledge gap, we present a case study of how a nine-member team of end-user programmers designed an educational program to bring job-relevant computing skills to adult populations that have traditionally not been reached by existing efforts. This team conceived, implemented, and delivered Cloud Based Data Science (CBDS), a data science course designed for adults in their local community in historically marginalized groups that are underrepresented in computing fields. Notably, nobody on the course development team was a full-time educator or software engineer. To reduce the amount of time and cost required to launch their program, they repurposed end-user programming skills and tools from their professions, such as data-analytic programming and reproducible scientific research workflows. This case study demonstrates how the spirit of end-user programming can be a vehicle to drive social change through grassroots efforts. © 2019 IEEE.",
    "keywords": "data science; diversity in computing; end-user programming",
    "released": 2019,
    "link": "https://doi.org/10.1109/VLHCC.2019.8818824",
    "interesting": "-"
  },
  {
    "title": "Intelligent Energy Meter for Smartcity",
    "abstract": "Efficient energy utilization is an important subject in the world that is filled with most of the non-renewable resources. In this paper, we are presenting Intelligent Energy meter, which is a smart Electricity measuring device that is connected to the internet via Wi-Fi that helps the direct communication with the Electricity consumers and the Electricity suppliers in terms of the number of units consumed, billing and control of the electricity flow. This electricity meter makes use of the BlynkIoT platform which provides free cloud and connectivity for the IoT devices. The proposed project is aimed at eliminating the human effort for the collection of the electricity bill from every consumer by automating the billing system through the Internet and online payment methods. This device is different from the existing systems not only in terms of the consumer authentication provided in the payment gateway and also in utilizing the industry grade online payment technology -paytm for the secured online payment. © 2019 IEEE.",
    "keywords": "Arduino IDE; Blynk; Current sensor; Node MCU",
    "released": 2019,
    "link": "https://doi.org/10.1109/ICAIT47043.2019.8987310",
    "interesting": "-"
  },
  {
    "title": "HyperSpark: A Data-Intensive Programming Environment for Parallel Metaheuristics",
    "abstract": "Metaheuristics are search procedures used to solve complex, often intractable problems for which other approaches are unsuitable or unable to provide solutions in reasonable times. Although computing power has grown exponentially with the onset of Cloud Computing and Big Data platforms, the domain of metaheuristics has not yet taken full advantage of this new potential. In this paper, we address this gap by proposing HyperSpark, an optimization framework for the scalable execution of user-defined, computationally-intensive heuristics. We designed HyperSpark as a flexible tool meant to harness the benefits (e.g., scalability by design) and features (e.g., a simple programming model or ad-hoc infrastructure tuning) of state-of-the-art big data technology for the benefit of optimization methods. We elaborate on HyperSpark and assess its validity and generality on a library implementing several metaheuristics for the Permutation Flow-Shop Problem (PFSP). We observe that HyperSpark results are comparable with the best tools and solutions from the literature. We conclude that our proof-of-concept shows great potential for further research and practical use. © 2019 IEEE.",
    "keywords": "Framework; Hyperheuristics; Optimization; Parallel Metaheuristics; Programming Model",
    "released": 2019,
    "link": "https://doi.org/10.1109/BigDataCongress.2019.00024",
    "interesting": "-"
  },
  {
    "title": "MOBILE LEARNING SYSTEM FOR NUMERICAL ANALYSIS BY USING PHP",
    "abstract": "Programming tools are essential for students learning numerical analysis. It is troublesome to go to a laboratory where a computer is located after taking a lecture. Nowadays most students have mobile phones which can be used for programming practice through the Internet. PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language. However, PHP has many inconveniences, such as adding a dollar symbol ($) to every varable. This paper introduces a slightly modified language, NAPHP, and a system which is designed for students to use their own mobile phone to write down the language NAPHP and run it on the web page. The system NAPHP-SYS is an educational tool that turns NAPHP into PHP, run PHP code and show the results on the web. © 2019 Korean SIGCAM and KSCAM.",
    "keywords": "Numercal Analysys; PHP; programming tool",
    "released": 2019,
    "link": "https://doi.org/10.14317/jami.2019.157",
    "interesting": "-"
  },
  {
    "title": "Analysis of Cross-Platform Mobile App Development Tools",
    "abstract": "With the emergence of different cross-platform alternatives, there is a need to explore the various approaches the developer must take. We perform this study in the hopes of shedding more light on their differences and highlighting the critical aspects which make them unique. The examination of these WORA (Write Once, Run Anywhere) mobile App tools is done on the basis of different approaches, i.e., Native apps, Web apps, Hybrid apps, Interpreted apps and Widget-based apps. The study performed shall enable us to illustrate the results on the basis of these categories. © 2019 IEEE.",
    "keywords": "Angular; Cordova; cross platform tools; evaluation; Flutter; mobile development; mobile frameworks; native apps; React Native",
    "released": 2019,
    "link": "https://doi.org/10.1109/I2CT45611.2019.9033872",
    "interesting": "-"
  },
  {
    "title": "E-ring: A non-invasive electricity consumption monitoring system",
    "abstract": "Monitoring electricity consumption has a key role in reducing energy consumption. This monitoring can be frequent (several times per week) or continuous. Recent studies showed that such monitoring can reduce residential energy consumption by as much as 15%. The development of energy management systems in the monitoring systems and intelligent energy meters have been going for a while. In this paper, we will present a new electricity monitoring device called 'E-ring'. E-ring is a non-invasive tool mainly made from a current transformer clamp meter that clamps to the main electricity cables of the user's home and measures the electrical consumption and sends the measured data to an online server and then makes it accessible from the user's mobile phone using a specially-developed mobile application. It has many advantages such as low data rate, low price, and real-time access to the consumption data and simultaneously calculate the estimated price for the household/industrial electricity bill with a tolerance of around 2%. © 2019 IEEE.",
    "keywords": "Arduino IDE; Current transformer; Electricity consumption; Energy Efficiency; Monitoring system",
    "released": 2019,
    "link": "https://doi.org/10.1109/JEEIT.2019.8717379",
    "interesting": "-"
  },
  {
    "title": "Blockchain based smart contract for sealed--bid auction",
    "abstract": "In this growing world, Internet has changed so much to an extent that it turned into a powerful tool in every aspects of our lives.E-auction is one of those things which helps the bidders to take part in an auction online over the air. In a sealed bid third parties need to pay an extra cost to help the buyers and sellers carry out their exchange without any hassle. But there can be a breach of trust by the third parties. Owners of the auction or the company that is auctioning can have direct entry to it when the auction is run on a decentralized platform. When the users auction off something on the chain, the smart contract takes control of the auctioned asset and thereafter it manages the bids associated. In this paper, we execute a smart contract for a verifiable sealed-bid auction on the Ethereum blockchain. The type of auction used is sealed-bid in which the bidders submit their bids privately and each bidder can participate only once. As per the biddings received, the highest bidder wins and pays the highest corresponding highest submitted bid. Additionally, before the auction ends the bidder can withdraw the bid after submitting it. In such a case the bidder will have another chance to place the bid. This smart contract implementation abides by the true essence of a sealed-bid, to be precise, no information about the biddings is leaked to the bidders except for the highest bid. ©BEIESP.",
    "keywords": "Blockchain; Ethereum; Metamask; Remix IDE; Sealed-bid Auction; Smart Contract",
    "released": 2019,
    "link": "https://doi.org/10.35940/ijeat.F8083.088619",
    "interesting": "-"
  },
  {
    "title": "Cloud computing development environment: from code logic to dataflow diagram; [云计算应用服务开发环境: 从代码逻辑到数据流图]",
    "abstract": "Cloud applications possess excellent flexibility and scalability, but often require developers to master various cloud computing techniques and build networked systems from scratch, which is difficult and complex for most developers. Recent years have witnessed the emergence of numerous development environments which support partial or complete life-cycle of cloud applications, driven by the growing demand for cloud applications and services from all sectors of the national economy. Based on the study of multiple mainstream development environments for cloud applications, we classify them into three categories: home-brewed development environments by users, spontaneously maintained standard components by communities, and managed development environments by public clouds. The third category (managed environments) are further divided into four generations: editor-style, application-level, function-level, and integrated development environments. Through in-depth mining of a series of typical cases, we summarize the four major evolution trends of the development environments for cloud applications: virtualization, lightweight, intelligence, and visualization. Based on our implemented development environment, named Cloud Studio, we explore the possible form and paradigm of the development environments for cloud applications in the future, especially the transformation in terms of core concept: from micro-level code logic to macro-level dataflow diagram. We expect our efforts in implementing Cloud Studio can effectively lower the requirements on cloud application developers, accelerate the development progress, and promote the formation of the core competence of China’s cloud computing industry. © 2019 Science Press (China). All rights reserved.",
    "keywords": "application development; cloud computing; data flow diagram; development environment; software engineering",
    "released": 2019,
    "link": "https://doi.org/10.1360/N112018-00264",
    "interesting": "-"
  },
  {
    "title": "Implementation of FPGA building platform as a cloud service",
    "abstract": "The building environment for field-programmable gate array (FPGA) development has a number of requirements such as using high-end computers for faster hardware compilation and installing the various versions of FPGA computer-aided design (CAD) tools specified by different projects while at the same avoiding conflicts between these tools. These requirements make it difficult to enable FPGA development on a wide range of devices, which is critical for developers from different application domains if they are to leverage FPGAs to their full extent. In this work, we propose an FPGA project building platform that reduces hardware costs by sharing high-performance servers between developers and enables a variety of FPGA CAD tools to be available in one platform by using container technology. The evaluation of the proposed platform showed that it provides shared and clean building environments without having significant performance overhead. © 2019 Association for Computing Machinery.",
    "keywords": "FPGA development environment; FPGA development method; Platform-as-a-Service",
    "released": 2019,
    "link": "https://doi.org/10.1145/3337801.3337814",
    "interesting": "-"
  },
  {
    "title": "Web-STAR: A visual web-based IDE for a story comprehension system",
    "abstract": "We present Web-STAR, an online platform for story understanding built on top of the STAR reasoning engine for STory comprehension through ARgumentation. The platform includes a web-based integrated development environment, integration with the STAR system, and a web service infrastructure to support integration with other systems that rely on story understanding functionality to complete their tasks. The platform also delivers a number of social features, including a community repository for public story sharing with a built-in commenting system, and tools for collaborative story editing that can be used for team development projects and for educational purposes. Copyright © Cambridge University Press 2018.",
    "keywords": "argumentation; collaboration; reasoning; story understanding; visual programming; web-based IDE",
    "released": 2019,
    "link": "https://doi.org/10.1017/S1471068418000443",
    "interesting": "-"
  },
  {
    "title": "OnlineSPARC: A programming environment for answer set programming",
    "abstract": "Recent progress in logic programming (e.g. the development of the answer set programming (ASP) paradigm) has made it possible to teach it to general undergraduate and even middle/high school students. Given the limited exposure of these students to computer science, the complexity of downloading, installing, and using tools for writing logic programs could be a major barrier for logic programming to reach a much wider audience. We developed onlineSPARC, an online ASP environment with a self-contained file system and a simple interface. It allows users to type/edit logic programs and perform several tasks over programs, including asking a query to a program, getting the answer sets of a program, and producing a drawing/animation based on the answer sets of a program. Copyright © Cambridge University Press 2018.",
    "keywords": "answer set programming; CS education; integrated development environment; logic programming; visualization",
    "released": 2019,
    "link": "https://doi.org/10.1017/S1471068418000509",
    "interesting": "+"
  },
  {
    "title": "Modeling and developing the information system for a programming contest 'programmers' league'",
    "abstract": "The paper dwells on a web-based information system for various sports programming contests that allow assessing the participants' program code quality in programming languages (Java, C, C++, C#, Python). The designed system was used as a tool for programming contest 'Programmers' league'. The experiment of the research the authors carried out at Sholom-Aleichem Priamursky State University. It ensured the advantage of developing and using a system of this kind, especially more flexible settings for contests, multi-stage leagues, implementing scoring systems, including bonus points for participants. © 2019 IEEE.",
    "keywords": "ACM; Contest; Higher education; Information system; Programming environment; Sports programming",
    "released": 2019,
    "link": "https://doi.org/10.1109/Eastonf.2019.8725361",
    "interesting": "-"
  },
  {
    "title": "Situation Analytics and Model-based User Interface Development: A Synergetic Approach for Building Runtime-Adaptive Business Applications",
    "abstract": "Situation analytics can be used to recognize the changing behavior, emotional state, cognitive load and environmental context of a user during complex task processing. This article discusses the SitAdapt 2.0 architecture that combines a situation analytics platform with pattern-and model-based user interface construction tools in order to build runtime-adaptive interactive business applications with enhanced user experience and task-accomplishment characteristics. The article focuses on the software components and tools for observing and tracking the user, data types for modeling situations, recognizing situations, and modeling structural changes and actions for generating the dynamic adaptations. The situation recognition capabilities and adaptive functionality of the system are demonstrated for web-applications for long-distance travel booking and a beauty products web-portal. © 2019 Christian Märtin et al.",
    "keywords": "Adaptive User Interfaces; E-business Applications; Emotion Recognition; HCI-patterns; Model-based User Interface Development Environments (MBUID); Situation Analytics; User Tracking",
    "released": 2019,
    "link": "https://doi.org/10.7250/csimq.2019-20.01",
    "interesting": "-"
  },
  {
    "title": "pyiron: An integrated development environment for computational materials science",
    "abstract": "To support and accelerate the development of simulation protocols in atomistic modelling, we introduce an integrated development environment (IDE) for computational materials science called pyiron (http://pyiron.org). The pyiron IDE combines a web based source code editor, a job management system for build automation, and a hierarchical data management solution. The core components of the pyiron IDE are pyiron objects based on an abstract class, which links application structures such as atomistic structures, projects, jobs, simulation protocols and computing resources with persistent storage and an interactive user environment. The simulation protocols within the pyiron IDE are constructed using the Python programming language. To highlight key concepts of this tool as well as to demonstrate its ability to simplify the implementation and testing of simulation protocols we discuss two applications. In these examples we show how pyiron supports the whole life cycle of a typical simulation, seamlessly combines ab initio with empirical potential calculations, and how complex feedback loops can be implemented. While originally developed with focus on ab initio thermodynamics simulations, the concepts and implementation of pyiron are general thus allowing to employ it for a wide range of simulation topics. © 2019 The Authors",
    "keywords": "Complex simulation protocols; Integrated development environment; Modelling workflow",
    "released": 2019,
    "link": "https://doi.org/10.1016/j.commatsci.2018.07.043",
    "interesting": "+"
  },
  {
    "title": "Native Code Generation as a Service",
    "abstract": "With the widespread use of mobile applications in daily life, it has become crucial for enterprise software companies to quickly develop these applications for multiple platforms. Cross-platform mobile application development is one of the most adopted solutions for rapid development. Since most of these solutions do not generate native code for the underlying platform, the artefacts generally do not satisfy the requirements defined at the beginning of the project. This study designed and implemented a native code generation framework called Nativator built as a cloud service. The framework, which is capable of producing native code for iOS and Android platforms using web-based user interfaces, was implemented based on an open source compiler platform called \"Roslyn\". Four case studies were performed to analyze the execution performance of the applications built with the proposed framework. The experimental results demonstrated that the execution performance of the applications built with Nativator is comparable with the applications generated via the state-of-the-art mobile application development framework called Xamarin. Because this framework was implemented as a cloud service, it has several advantages over traditional approaches such as access from anywhere, no installation and flexible and more resources from cloud infrastructure. © 2019 World Scientific Publishing Company.",
    "keywords": "cloud computing; code generation; Cross-platform framework; cross-platform mobile application development tool; Rosyln",
    "released": 2019,
    "link": "https://doi.org/10.1142/S0218194019500128",
    "interesting": "-"
  },
  {
    "title": "A Domain Ontology for Software Requirements Change Management in Global Software Development Environment",
    "abstract": "Ontology and its role in both software engineering and knowledge management fields have been widely reported in the literature. Numerous studies have proven the effectiveness of using ontologies to support the process of requirements engineering. One of the main problems facing requirements engineering is that the requirements are exposed to change. In fact, this problem swells even more in global software development (GSD) environment. Given that this problem is unavoidable, we need to improve the requirements change management (RCM) process. In this paper, a systematic domain ontology for RCM especially in GSD environment is proposed. A hybrid method combining Methontology and the 101 method is used for its development; Web Ontology Language (OWL) for its representation; and Protégé for its implementation. It was validated using ontology content evaluation and competency question evaluation methods. Also, it was verified using both ontology taxonomy evaluation and FOCA evaluation methods. Validation and verification results showed that the proposed ontology was successfully built. Building this ontology can be considered as a base contribution in supporting the RCM process in GSD. © 2013 IEEE.",
    "keywords": "global software development; ontology; requirement change management; Requirement engineering",
    "released": 2019,
    "link": "https://doi.org/10.1109/ACCESS.2019.2909839",
    "interesting": "-"
  },
  {
    "title": "Circuitsmaster: An online end-user development environment for IoT electronics",
    "abstract": "Even though Arduino has made creating products with electronics more accessible, a significant number of users still have difficulties with it. An online tool CircuitsMaster.com (CM), aiming make the design of electronics with Arduino faster and easier is presented in this paper. Three diverse needs of designers that wish to include electronics with Arduino in their projects are explained. CM uses a combination of end-user development paradigms to answer to these needs. Based on results from a user evaluation, those who used CM were significantly faster in creating typical electronics assignments when compared to subjects who did not use CM. Therefore, such tools seem to have a salient role to play for designers that wish to develop IoT products. © Springer Nature Switzerland AG 2019.",
    "keywords": "Arduino; CircuitsMaster; Electronics; End-user development; IoT",
    "released": 2019,
    "link": "https://doi.org/10.1007/978-3-030-34255-5_10",
    "interesting": "-"
  },
  {
    "title": "Experimental evaluation of the virtual environment efficiency for distributed software development",
    "abstract": "At every software design stage nowadays, there is an acute need to solve the problem of effective choice of libraries, development technologies, data exchange formats, virtual environment systems, characteristics of virtual machines. Due to the spread of various kinds of devices and the popularity of Web platforms, lots of systems are developed not for the universal installation on a device (box version), but for a specific architecture with the subsequent provision of web services. Under these conditions, the only way for estimating the efficiency parameters at the design stage is to conduct various kinds of experiments to evaluate the parameters of a particular solution. Using the example of the Web platform of digital psychological tools, the methods for experimental parameter evaluation were developed in the article. The mechanisms and technologies for improving the efficiency of the Vagrant and Docker cloud virtual environment were also proposed in the paper. A set of basic criteria for evaluating the effectiveness of the configuration of the virtual development environment has been determined to be rapid deployment; increase in the speed and decrease in the volume of resources used; increase in the speed of data exchange between the host machine and the virtual machine. The results of experimental estimates of the parameters that define the formulated efficiency criteria are given as: processor utilization involved (percentage); the amount of RAM involved (GB); initialization time of virtual machines (seconds); time to assemble the component completely (Build) and to reassemble the component (Watch) (seconds). To improve the efficiency, a file system access driver based on the NFS protocol was studied in the paper. © 2018 The Science and Information (SAI) Organization Limited.",
    "keywords": "Distributed software development; Docker; Increase development efficiency; NFS; Vagrant; Virtual development environment; Virtual machines; Webpack",
    "released": 2019,
    "link": "https://doi.org/10.14569/ijacsa.2019.0100539",
    "interesting": "-"
  },
  {
    "title": "Teachers’ Perspectives on Learning and Programming Environments for Secondary Education",
    "abstract": "Teaching and learning programming is a challenge. Although several learning and programming environments have been proposed for classes, there seems to be more dissent than consensus as to which tools are preferable over others. This paper investigates teachers’ perspectives on popular learning and programming environments used in secondary computer science education in Germany. The environments investigated are: BlueJ, Scratch, Greenfoot, Eclipse, MIT App Inventor, Processing IDE, and Alice. Based on prior research, a catalogue of environment features supporting the learning processes of students was constructed. Using these criteria, an online-survey was conducted with computer science teachers in North Rhine-Westphalia, Germany. In the survey, the participating teachers evaluated the selected tools’ adequacy for teaching object-oriented programming. The findings support the results of prior research conducted with students, stressing the importance of a simple and user-friendly graphical user interface (GUI) as well as the option to visualise classes and objects. Contrary to prior studies, the results show that teachers do not see the editor as equally important, as students do, and that there is no consensus about the role of the area of application for choosing an integrated development environment (IDE). Student-friendly debugging messages as well as a step-by-step execution of programs were identified as important features. Although no tool excelled for every criterion, the clear favourite was BlueJ. © IFIP International Federation for Information Processing 2019.",
    "keywords": "Educational programming environments; Object-oriented-programming; Teaching and learning programming",
    "released": 2019,
    "link": "https://doi.org/10.1007/978-3-030-23513-0_5",
    "interesting": "+"
  },
  {
    "title": "Using Spinoza Log Data to Enhance CS1 Pedagogy",
    "abstract": "Active learning in Computer Science classrooms often involves having students solve programming problems in class using a web-based interpreter. Spinoza is one such system which captures all of the student attempts and uses it to provide actionable learning analytics for the instructor. In this paper we present several new pedagogical applications of the log data from Spinoza, including two approaches to team formation and an in depth analysis of the Solve-Then-Debug debugging pedagogy in Spinoza. We provide some initial evidence that the Team Formation strategies may be effective methods for forming either diverse or homogeneous teams. The second application we examine in depth is the Solve-Then-Debug pedagogy in which students who correctly solve a Spinoza programming problem are then asked to analyze and debug the most common errors that the class has made so far on that problem. This is a social debugging process and in this paper we provide a detailed explanation of the learning goals for each step of this pedagogy. We also give an example of how students engaged with one particular Solve-Then-Debug problem. This provides initial evidence that the Solve-Then-Debug pedagogy engages students in effective program bug analysis activity. © 2019, Springer Nature Switzerland AG.",
    "keywords": "Classroom orchestration; Educational data mining; Hierarchical clustering; Learning analytics; Machine learning; Markov Models; Near-peer mentoring; Online IDEs; Peer led team learning; Solve-Then-Debug; Study group formation",
    "released": 2019,
    "link": "https://doi.org/10.1007/978-3-030-21151-6_2",
    "interesting": "-"
  },
  {
    "title": "A Method to Enhance the Security Capability of Python IDE",
    "abstract": "The majority of applications running on the Internet are web applications; however, these applications are vulnerable to arbitrary code execution and database manipulation by Cross-Site Scripting or SQL injection attacks. The fundamental reason of these vulnerabilities is that web applications use a string type for assembling heterogeneous computer languages’ syntax for a particular language. To cope with these vulnerabilities, we propose a language-based scheme, in which the programming language itself provides security capabilities by a method of the syntax embedded in Python. Furthermore, the proposed solution supports backward compatibility and higher portability to other languages as well as Python. To improve the debugging difficulty caused by a language-based scheme, we propose a trace-processor that has post-mortem debug ability. We implement the proposed solution as a development environment, named Python-S, based on CPython’s source code. Python-S successfully displays the protection capabilities for the SQL injection attack. © 2019, Springer Nature Switzerland AG.",
    "keywords": "Code injection; Programming language; Python; Web application",
    "released": 2019,
    "link": "https://doi.org/10.1007/978-3-030-35653-8_27",
    "interesting": "-"
  },
  {
    "title": "Security in the cloud: Understanding your responsibility",
    "abstract": "The popularity of public cloud services continues to grow with Gartner predicting the total worldwide revenue to almost double from $145 billion in 2017 to $278 billion in 20211. Many cloud service types are components of this growth including Software-as-a-Service (SAAS), Platform-as-a-Service (PAAS) and Infrastructure-as-a-Service (IAAS). The use of cloud services brings many possible benefits such as scalability, high performance and availability, flexibility, cost effectiveness and security 2. However; each of these benefits comes with some responsibilities and requires a detailed knowledge of the specific cloud services used. For example, in Amazon Web Services (AWS) shared responsibility model for security, AWS is responsible for securing the facilities, physical security of hardware, network infrastructure, and the virtualization infrastructure. The cloud service customer is responsible for securing and managing the applications that run in the cloud, the operating systems, data-at-rest, data-in-transit, policies and other responsibilities. This paper works through several different use cases and provides the details for properly securing the services with which Army Research Laboratory (ARL) researchers interact. The use cases include sample configurations and descriptions required to fulfill the customer security responsibilities in a public cloud environment. Cloud services used include AWS Elastic Computer Cloud (EC2) Windows and Linux instances, Relational Database Services (RDS), Simple Cloud Storage Service (S3), Glacier S3 Storage, and DynamoDB. Challenges and approaches associated with delegating temporary security credentials, Identity and Access Management (IAM) service, and securing data-at-rest and data-in-transit will also be discussed. © 2019 SPIE.",
    "keywords": "Algorithm development environment; Amazon Web Services; AODR; AWS; Cloud computing; Cloud-based security; Database; MMSDB; Secure data environment; Sensor information testbed; Shared security model; Signature data processing; SITCORE",
    "released": 2019,
    "link": "https://doi.org/10.1117/12.2521821",
    "interesting": "-"
  },
  {
    "title": "Synchronous cloud instruction: A model to improve students' learning experience",
    "abstract": "This paper describes an instructional model based on the application of Cloud9 which is a cloud-based Integrated Development Environment (IDE). Cloud9's synchronous code sharing capabilities are leveraged to further engage Information Systems students in the learning process in an introductory web development course. This model actively engages students in a synchronized collaborative code writing process during lectures and labs where student work and contributions are incorporated into the presentations, group discussions, and individual work. The contribution of this work is showing how synchronized cloud IDEs can be leveraged to create and enhance an active learning experience in the form of pair programming, collaborative code writing lectures and labs, and cooperative code reviews. Reported data includes student perceptions and faculty impressions as captured through group discussions, interviews and surveys. © 2019 Association for Information Systems. All rights reserved.",
    "keywords": "Active Learning; Cloud IDE; Collaborative Learning; Pedagogy",
    "released": 2019,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084023651&partnerID=40&md5=a741a3673c9faaad08b3efc70df80320",
    "interesting": "-"
  },
  {
    "title": "How “Friendly” Integrated Development Environments Are?",
    "abstract": "Programmers and software developers are using different Integrated Development Environments (IDEs) to perform their daily work. IDEs are often complex applications, not friendly for novice programmers, with a learning process of several weeks and with usability and satisfaction of use not always as good as expected. The Programmer eXperience (PX) is a particular case of User eXperience (UX), based on the use of the IDEs and other artifacts. We have found studies about the programmer’s behavior and work, and also articles addressed the usability and new tools proposals for IDEs. In this work, we conducted a survey to evaluate the usability of several IDEs. The survey was based on the System Usability Scale (SUS), which we adapted for the purpose of our research. We focus the study on popular IDEs such as Dev-C++, Eclipse and NetBeans. The survey was conducted in two Chilean universities and one Spanish university, with students enrolled in two undergraduate programs in Informatics Engineering. The results obtained show that the IDEs evaluated have several issues related to the usability perceived by our participants. An interview was conducted with six experienced programmers that are working in different programming environments, in order to consult them on what aspects they would like to improve the IDEs. Their comments indicate that IDEs should incorporate connection with other programmers, and also, they claim for more intuitive interfaces and understandable error messages. © 2019, Springer Nature Switzerland AG.",
    "keywords": "Integrated Development Environment; Interview; Programmer eXperience; Survey; Usability; User eXperience",
    "released": 2019,
    "link": "https://doi.org/10.1007/978-3-030-21902-4_7",
    "interesting": "+"
  },
  {
    "title": "Angular for material design: Leverage angular material and typescript to build a rich user interface for web apps",
    "abstract": "Build Angular applications faster and better with TypeScript and Material Design. You will learn how to build a web interface and use Google's open source Angular Material library of ready-made and easy-to-use components. This book uses Angular with TypeScript (a superset to JavaScript) to enable use of data types and take advantage of programming constructs such as classes, interfaces, generic templates, and more. You also will utilize various Angular features, including data binding, components, services, etc. You will build a single page application with the help of routing capabilities available out of the box (Angular CLI) and interface with remote services over HTTP. You will: Build an application using Angular, TypeScript, and Angular Material Understand Angular concepts such as components, directives, services, and more Use TypeScript features, including data types, classes, interfaces, generic templates, etc. Build a single page application (SPA) with routing features and integrate it with server-side remote services © 2020 by Venkata Keerti Kotaru.",
    "keywords": "Angular version 6.0; API; Integrated development environment (IDE); JavaScript; Material design; TypeScript; User interface (UI); Web pages",
    "released": 2019,
    "link": "https://doi.org/10.1007/978-1-4842-5434-9",
    "interesting": "-"
  },
  {
    "title": "Job recommendation system based on machine learning and data mining techniques using RESTful API and Android IDE",
    "abstract": "In the current Capitalist world with an abundance of different state-of-the-art industries and fields cropping up, ushering in an influx of jobs for motivated and talented professionals, it is not difficult to identify your field and to persevere to get a job in the respective field but lack of information and awareness render the task difficult. This problem is being tackled by Job Recommendation systems. But not every aspect from the wide spectrum of factors is incorporated in the existing systems. For the \"Job Recommendation System - Vitae\" machine learning and data mining techniques were applied to a RESTful Web Server application that bridges the gap between the Frontend (Android Application) and the Backend (MongoDB instance) using APIs. The data communicated through APIs is fed into the database and the Recommendation System uses that data to synthesize the results. To make the existing systems even more reliable, here efforts have been done to come up with the idea of a system that uses a wide variety of factors and is not only a one-way recommendation system. © 2019 IEEE.",
    "keywords": "Android Application; Content Based filtering; Data mining; Job Recommendations; Machine Learning; Recommendation Systems; RESTful API",
    "released": 2019,
    "link": "https://doi.org/10.1109/CONFLUENCE.2019.8776964",
    "interesting": "-"
  },
  {
    "title": "GNU radio-based cloud development environment for software-defined radio users",
    "abstract": "Software-defined radio (SDR) is used for R&D such as cognitive radio. Because sampling devices and personal computers configuring the SDR environment have fixed configurations, some reconfiguration is needed when the SDR application requires different data sources and computational resources. To enable reconfiguration, we present a cloud platform that has scalable computing resources and data sources deployed over a wide area. We use the existing SDR development environment (SDRDE) and implement it on the cloud platform. It is necessary to transfer the SDR environment to the cloud by separating the UI and data management from the existing SDRDE. In this study, we selected the GNU Radio Companion (GRC) as the base platform and implemented an SDRDE for an unspecified number of users by separating the UI. In addition, we used task parallel and distributed computing for the SDR application. In this study, we focus on compatibility with the base implementation and lifting the limits of computational resources. We confirmed the compatibility with GRC in terms of user skill sets and software assets and evaluated the system response time. Further, the relationship between CPU utilization and instructions per cycle during SDR application execution shows that in general, this approach is effective. © 2019 Information Processing Society of Japan.",
    "keywords": "Cloud computing; Development environment; GNU Radio; Software-defined radio; Task parallel and distributed computing",
    "released": 2019,
    "link": "https://doi.org/10.2197/ipsjjip.27.287",
    "interesting": "-"
  },
  {
    "title": "JupyTEP IDE as an online tool for earth observation data processing",
    "abstract": "The paper describes a new tool called JupyTEP integrated development environment (IDE), which is an online integrated development environment for earth observation data processing available in the cloud. This work is a result of the project entitled JupyTEP IDE-Jupyter-based IDE as an interactive and collaborative environment for the development of notebook style EO algorithms on network of exploitation platforms infrastructure carried out in cooperation with European Space Agency. The main goal of this project was to provide a universal earth observation data processing tool to the community. JupyTEP IDE is an extension of Jupyter software ecosystem with customization of existing components for the needs of earth observation scientists and other professional and non-professional users. The approach is based on configuration, customization, adaptation, and extension of Jupyter, Jupyter Hub, and Docker components on earth observation data cloud infrastructure in the most flexible way; integration with accessible libraries and earth observation data tools (sentinel application platform (SNAP), geospatial data abstraction library (GDAL), etc.); adaptation of existing web processing service (WPS)-oriented earth observation services. The user-oriented product is based on a web-related user interface in the form of extended and modified Jupyter user interface (frontend) with customized layout, earth observation data processing extension, and a set of predefined notebooks, widgets, and tools. The final IDE is addressed to the remote sensing experts and other users who intend to develop Jupyter notebooks with the reuse of embedded tools, common WPS interfaces, and existing notebooks. The paper describes the background of the system, its architecture, and possible use cases.",
    "keywords": "Docker; eEarth observation data processing; IDE; IPython; Jupyter notebook; web application; web processing service",
    "released": 2019,
    "link": "https://doi.org/10.3390/rs11171973",
    "interesting": "-"
  },
  {
    "title": "<I>whatsapp</i> use among african international distance education (IDE) students: Transferring, translating and transforming educational experiences",
    "abstract": "Much of the research on how social media is embedded into the educational practices of higher education students has a Western orientation. In concentrating on a case study of the varied ways in which African International Distance Education (IDE) students actively use social media to shape their learning experiences, we discuss an under-researched group. The paper draws on analysis of 1295 online questionnaires and 165 in-depth interviews with IDE students at UNISA, South Africa, one of the largest providers of IDE globally. WhatsApp emerges as “the” key social media tool that opens up opportunities for IDE students to transfer, translate and transform their educational journey when studying “at a distance”. Although WhatsApp does provide a “space of opportunity” for some students, this is framed through socio-technical marginalisation, itself a reflection of demographic legacies of inequality. Exploring social media practices though the case of African IDE students places these students centre stage and adds to the awareness of the multiple centres from which international education is practiced.",
    "keywords": "African international distance education; social media; WhatsApp; South Africa",
    "released": 2019,
    "link": "https://doi.org/10.1080/17439884.2019.1628048",
    "interesting": "-"
  },
  {
    "title": "Real-time and online monitoring of glucose contents by using molecular imprinted polymer-based IDEs sensor",
    "abstract": "A highly sensitive, selective, reversible, and reusable glucose sensor is developed by using molecularly imprinted polymer-based artificial receptors onto interdigital transducer. Sensor receptors were synthesized through bulk imprinting technology by using styrene as monomer, ethylene glycol dimethacrylate (EGDMA) as cross-linker, and AIBN as free radical initiator. Topography of the synthesized receptors was investigated by scanning electron microscopy (SEM). Fabricated sensor showed concentration-dependent linear and reversible response with lower limit of detection of 30 ppb and upper limit of detection similar to 500 ppm. Furthermore, newly fabricated sensor is highly selective towards its analyte of interest in the presence of other competing agents, and the regeneration of sensor response has been assessed with the percentage error of less than 2% under the period of 1 year at room temperature and pressure conditions. The reported sensor may have potential technological applications in the field of medical diagnostics, food, and pharmaceutical industry.",
    "keywords": "Molecular imprinted polymers; Electrochemical sensors; Glucose; Sensitivity; Selectivity; Limit of detection",
    "released": 2019,
    "link": "https://doi.org/10.1007/s12010-019-03049-3",
    "interesting": "-"
  },
  {
    "title": "GLIDE (git-learning IDE; integrated development environment): In-class collaboration in web engineering curriculum for youths (abstract only)",
    "abstract": "Despite software engineering’s inherently collaborative nature, collaboration with others hasn’t been the primary way for students to learn how to program. Although various collaboration frameworks, such as Git, are widely used in software engineering, they’ve been treated as separate skills to acquire in addition to learning programming languages, rather than ways of learning, working, and thinking while learning to program. One collaborative software development task that students often want to engage in is building websites. However, the complexity of web syntax and architecture has been a hurdle in teaching and learning web design and development, especially for beginners without sufficient technical background. Specifically, syntactic barriers in several different languages for a webpage, inherent coupling of content and design in HTML, difficulty in understanding server-client model, and need for hosting resources for deployment contribute to a steep learning curve in building websites \"from scratch\". This work aims to address these issues by developing GLIDE (Git-Learning Integrated Development Environment) - a set of tools and curriculum that support in-class collaborative development in web engineering courses. GLIDE structures the website development process as a teacher-guided Git workflow for a team of students collaborating in groups in a Git repository. The application also provides a web programming model that separates content, from design, from implementation, allowing students to take on different roles and responsibilities during the development process. This demo presents a tutorial on how a group of students can build websites collaboratively with teacher’s assistance based on the GLIDE software platform and curriculum.",
    "keywords": "web engineering curriculum; k-12 cs education; collaborative software engineering",
    "released": 2018,
    "link": "https://doi.org/10.1145/3159450.3162203",
    "interesting": "-"
  },
  {
    "title": "Coding tutorials for any programming language or interactive tutorials for c and arduino: (Abstract only)",
    "abstract": "Any CS educator has to explain sooner or later a portion of code or a structured text to learners. The Codecast tool http://www.codecast.info has been specially designed by CS educators and developed initially for MOOCs to replace non-interactive screencasts. This workshop is a hands-on lab to Codecast: an open-source innovative tool to create in-browser interactive coding tutorials. Codecast supports syntax highlighting for over 110 languages and as of 2017 can compile/interpret and execute a subset of the C and Arduino languages. In this workshop, participants will explore how, using our Codecast tool, a CS educator can explain the creation of a computer program while their audio as well as their interactions with the code editor and interpreter are being recorded for interactive playback. Workshop participants will furthermore experience how different aspects of the coding process like testing, running, debugging and optimizing can be illustrated with the help of several data, memory and algorithm visualization modules. Participants will create recordings and experience (like learners) how they can be played back interactively by taking control over and modify the coding process at any time. Codecast enables the learner to interact directly with the code and experiment with different ideas while listening to the instructor’s explanation. The learner can make changes to the code, test it with different inputs, run the code step-by-step to better understand its behavior and visualize other parts of the algorithm or the data. Workshop participants will also integrate their creations in their online curricula.",
    "keywords": "programming editor; online courses; mooc; interactive tutorials; integrated development environment; computer science education; coding tutorials; code editor; c programming language",
    "released": 2018,
    "link": "https://doi.org/10.1145/3159450.3162381",
    "interesting": "-"
  },
  {
    "title": "Iconic framework for cooperative coding",
    "abstract": "The description of an innovative framework built on top of Web-based visual programming environment is the primary aim of this contribution. In the last decade, many frameworks oriented to visual languages have been introduced in literature to improve the skill on programming languages, but at the best of our knowledge, no framework has been specially designed to support collaborative work on heterogeneous distributed environments. Therefore, SIRENE introduces a new framework in which beginners and experts can cooperate to develop algorithms by using a visual and iconic paradigm. Students, in the classroom or connected from everywhere, can be involved into the definition of the algorithm, can asynchronously modify the common working space, show a visual function to expert, thus the server hosts a shared space in which the algorithms can be visualised and modified by all of the SIRENE clients. SIRENE is primarily a visual framework oriented to collaborative approaches in which each user can visualise the evolution or implementation of some algorithms and modify it during its development by other users.",
    "keywords": "Web-based Iconic Interface; Visual Programming Environments; Interactive learning control; Collaborative Coding; Application Programming Interfaces",
    "released": 2018,
    "link": "https://doi.org/10.1145/3274005.3274016",
    "interesting": "-"
  },
  {
    "title": "WebLinux: A scalable in-browser and client-side linux and IDE",
    "abstract": "\"WebLinux\" is a web app tool providing a standard Linux OS and an IDE in the browser, including a terminal, a code editor and a file browser. It provides a client-side and offline Linux OS environment based on a Javascript emulated processor. By avoiding the use of a Virtual Machine or any Linux server, Weblinux enables learners to directly start experimenting with the Linux OS without installing any software. The tool is entirely client-side which makes it extremely scalable and easy to deploy within a large community of online learners.",
    "keywords": "scalability; openrisc; linux; javascript; in-browser IDE; emulator; education; browser; MOOC; CLI",
    "released": 2018,
    "link": "https://doi.org/10.1145/3231644.3231703",
    "interesting": "+"
  },
  {
    "title": "PowerStation: Automatically detecting and fixing inefficiencies of database-backed web applications in IDE",
    "abstract": "Modern web applications are built using a myriad of software components, and each of them exposes different programming models (e.g., application logic expressed in an imperative language, database queries expressed using declarative SQL). To improve programmer productivity, Object Relational Mapping (ORM) frameworks have been developed to allow developers build web applications in an object-oriented manner. Despite such frameworks, prior work has found that developers still struggle in developing performant ORM-based web applications. This paper presents PowerStation, a RubyMine IDE plugin for optimizing web applications developed using the Ruby on Rails ORM. Using automated static analysis, PowerStation detects ORM-related inefficiency problems and suggests fixes to developers. Our evaluation using 12 real-world applications shows that PowerStation can automatically detects 1221 performance issues across them. A tutorial on using PowerStation can be found at https://youtu.be/rAV8CGuSj6k.",
    "keywords": "performance anti-patterns; database-backed applications; RubyMine Plugin; Object-Relational Mapping frameworks",
    "released": 2018,
    "link": "https://doi.org/10.1145/3236024.3264589",
    "interesting": "-"
  },
  {
    "title": "Improving regression testing in continuous integration development environments (keynote)",
    "abstract": "In continuous integration development environments, software engineers frequently integrate new or changed code with the mainline codebase. Merged code is then regression tested to help ensure that the codebase remains stable and that continuing engineering efforts can be performed more reliably. Continuous integration is advantageous because it can reduce the amount of code rework that is needed in later phases of development, and speed up overall development time. From a testing standpoint, however, continuous integration raises several challenges. Chief among these challenges are the costs, in terms and time and resources, associated with handling a constant flow of requests to execute tests. To help with this, organizations often utilize farms of servers to run tests in parallel, or execute tests \"in the cloud\", but even then, test suites tend to expand to utilize all available resources, and then continue to expand beyond that. We have been investigating strategies for applying regression testing in continuous integration development environments more cost-effectively. Our strategies are based on two well-researched techniques for improving the cost-effectiveness of regression testing – regression test selection (RTS) and test case prioritization (TCP). In the continuous integration context, however, traditional RTS and TCP techniques are difficult to apply, because these techniques rely on instrumentation and analyses that cannot easily be applied to fast-arriving streams of test suites. We have thus created new forms of RTS and TCP techniques that utilize relatively lightweight analyses, that can cope with the volume of test requests. To evaluate our techniques, we have conducted an empirical study on several large data sets. In this talk, I describe our techniques and the empirical results we have obtained in studying them.",
    "keywords": "Continuous integration; large scale testing; regression testing",
    "released": 2018,
    "link": "https://doi.org/10.1145/3278186.3281454",
    "interesting": "-"
  },
  {
    "title": "Putting in all the stops: Execution control for JavaScript",
    "abstract": "Scores of compilers produce JavaScript, enabling programmers to use many languages on the Web, reuse existing code, and even use Web IDEs. Unfortunately, most compilers inherit the browser’s compromised execution model, so long-running programs freeze the browser tab, infinite loops crash IDEs, and so on. The few compilers that avoid these problems suffer poor performance and are difficult to engineer. This paper presents Stopify, a source-to-source compiler that extends JavaScript with debugging abstractions and blocking operations, and easily integrates with existing compilers. We apply Stopify to ten programming languages and develop a Web IDE that supports stopping, single-stepping, breakpointing, and long-running computations. For nine languages, Stopify requires no or trivial compiler changes. For eight, our IDE is the first that provides these features. Two of our subject languages have compilers with similar features. Stopify’s performance is competitive with these compilers and it makes them dramatically simpler. Stopify’s abstractions rely on first-class continuations, which it provides by compiling JavaScript to JavaScript. We also identify sub-languages of JavaScript that compilers implicitly use, and exploit these to improve performance. Finally, Stopify needs to repeatedly interrupt and resume program execution. We use a sampling-based technique to estimate program speed that outperforms other systems.",
    "keywords": "IDEs; JavaScript; continuations",
    "released": 2018,
    "link": "https://doi.org/10.1145/3192366.3192370",
    "interesting": "-"
  },
  {
    "title": "Predicting developers’ IDE commands with machine learning",
    "abstract": "When a developer is writing code they are usually focused and in a state-of-mind which some refer to as flow. Breaking out of this flow can cause the developer to lose their train of thought and have to start their thought process from the beginning. This loss of thought can be caused by interruptions and sometimes slow IDE interactions. Predictive functionality has been harnessed in user applications to speed up load times, such as in Google Chrome’s browser which has a feature called \"Predicting Network Actions\". This will pre-load web-pages that the user is most likely to click through. This mitigates the interruption that load times can introduce. In this paper we seek to make the first step towards predicting user commands in the IDE. Using the MSR 2018 Challenge Data of over 3000 developer session and over 10 million recorded events, we analyze and cleanse the data to be parsed into event series, which can then be used to train a variety of machine learning models, including a neural network, to predict user induced commands. Our highest performing model is able to obtain a 5 cross-fold validation prediction accuracy of 64",
    "keywords": "IDE monitoring; developer commands; machine learning; neural network",
    "released": 2018,
    "link": "https://doi.org/10.1145/3196398.3196459",
    "interesting": "-"
  },
  {
    "title": "PerformanceHat: Augmenting source code with runtime performance traces in the IDE",
    "abstract": "Performance problems observed in production environments that have their origin in program code are immensely hard to localize and prevent. Data that can help solve such problems is usually found in external dashboards and is thus not integrated into the software development process. We propose an approach that augments source code with runtime traces to tightly integrate runtime performance traces into developer workflows. Our goal is to create operational awareness of performance problems in developers’ code and contextualize this information to tasks they are currently working on. We implemented this approach as an Eclipse IDE plugin for Java applications that is available as an open source project on GitHub. A video of PerformanceHat in action is online: https://youtu.be/fTBBiylRhag",
    "keywords": "development workflow; program analysis; software performance engineering",
    "released": 2018,
    "link": "https://doi.org/10.1145/3183440.3183481",
    "interesting": "-"
  },
  {
    "title": "Matlab Programming Environment Based on Web",
    "abstract": "Matlab is a mathematics software, which is the industry leader in numerical calculation, but this software takes up a lot of system memory and is extremely cumbersome to install. As various types of modeling rise and the intensity and frequency of discipline penetration are deepened and accelerate gradually, Matlab has gradually entered more people's field of vision. In order to simplify the programming environment and improve the convenience, a Matlab programming environment based on Web is proposed in this paper. Compared with the traditional Matlab programming environment, the main features of the system are that it does not need to deploy any development environment locally, and users can write and run Matlab code through the browser of mobile phone, tablet, computer; at the same time, the system also supports standard input, parameter input, and image output. Through the research and testing of the system, the programming environment has strong feasibility, excellent user experience, good concurrency and stability.",
    "keywords": "Matlab; Web; programming environment; online programming",
    "released": 2018,
    "link": "https://doi.org/10.1109/ITOEC.2018.8740716",
    "interesting": "+"
  },
  {
    "title": "Exploring the Relationship Between Programming Difficulty and Web Accesses",
    "abstract": "This work addresses difficulty in web-supported programming. We conducted a lab study in which participants completed a programming task involving the use of the Java Swing/AWT API. We found that information about participant web accesses offered additional insight into the types of difficulties faced and how they could be detected. Difficulties that were not completely solved through web searches involved finding information on AWT/Swing tutorials, 2-D Graphics, Components, and Events, with 2-D Graphics causing the most problems. An existing algorithm to predict difficulty that mined various aspects of programming-environment actions detected more difficulties when it used an additional feature derived from the times when web pages were visited. This result is consistent with our observation that during certain difficulties, subjects had little interaction with the programming environment, they made more web visits during difficulty periods, and the new feature added information not available from features of the modified existing algorithm. The vast majority of difficulties, however, involved no web interaction and the new feature resulted in higher number of false positives, which is consistent with the high variance in web accesses during both non-difficulty and difficulty periods.",
    "keywords": "interactive programming environments; affective computing; distributed help; web foraging; intelligent tutoring",
    "released": 2018,
    "link": "https://doi.org/10.1109/VLHCC.2018.8506511",
    "interesting": "-"
  },
  {
    "title": "BlueJ-UML: Learning Object-Oriented Programming Paradigm Using Interactive Programming Environment",
    "abstract": "Most of the students coming from various different backgrounds find software programming a difficult subject to learn and master, especially in learning the concept of object-oriented programming. Because they must be able to model physical beings into virtualized objects and define complex object relationships in their designs for object interactions in a very abstract fashion that is not easily understood. This study is an attempt to introduce a unique interactive learning platform to students learning Java programming, which was designed with a set of object-oriented programming pedagogical considerations in mind. This study further extends and enhances with model-driven software development technique, such that to supporting unified modelling language (UML) class diagrams and code fragments generation in order to ease the learning needs of students, a unique way to learn fundamental programming concepts. This paper introduces a new online interactive platform and environment called BlueJ-UML, which is to help students to learn and practice object-oriented programming in class. It also evaluates the success outcome of the proposed new learning method through a Technology Acceptance Model Framework, and that followed by a comprehensive statistical analysis to assess improved academic performance of the students. The result was encouraging: student programming capability had been significantly elevated and was positively correlated to their overall perception and adoption of this new technique introduced in the class.",
    "keywords": "Interactive Programming Environment, Object-oriented Programming, Technology Acceptance Model, Online Platform and Environment",
    "released": 2018,
    "link": "https://doi.org/10.1109/ISET.2018.00020",
    "interesting": "-"
  },
  {
    "title": "A Novel Automated Construction Scheme for Efficiently Developing Cloud Manufacturing Services",
    "abstract": "Cloud manufacturing (CMfg) has emerged as a next-generation manufacturing paradigm that has potential to revolutionize the manufacturing industry. In further promotion of CMfg, how to build CMfg services in an automatic and efficient manner is an essential and challenging subject. Currently, there is no literature addressing such issue. Aimed at facilitating rapid construction of CMfg services, this letter proposes a novel automated construction scheme for developing CMfg services, called Manufacturing Service Automated Construction Scheme (MSACS). First, we develop a three-phase workflow of MSACS to address the issues of how to construct CMfg services automatically using standalone software library package (SSLP). Next, we design a system architecture of MSACS to delineate how to implement MSACS. Then, we depict the designs of MSACS's core components. Finally, we apply MSACS to conduct industrial case studies to build the automatic virtual metrology cloud service and intelligent yield management cloud service for an intelligent manufacturing platform. Testing results demonstrate that MSACS can automatically construct the target CMfg services in a very efficient manner after uploading the required SSLPs. Thus, MSACS can significantly alleviate the burden of engineers in building CMfg services, and in turn can facilitate the promotion of CMfg.",
    "keywords": "Intelligent and flexible manufacturing; middleware and programming environments; cloud manufacturing service; fast automated construct scheme",
    "released": 2018,
    "link": "https://doi.org/10.1109/LRA.2018.2799420",
    "interesting": "-"
  },
  {
    "title": "If Docker is the Answer, What is the Question?",
    "abstract": "The recent rise of cloud computing poses serious challenges for software engineering because it adds complexity not only to the platform and infrastructure, but to the software too. The demands on system scalability, performance and reliability are ever increasing. Industry solutions with widespread adoption include the microservices architecture, the container technology and the DevOps methodology. These approaches have changed software engineering practice in such a profound way that we argue that it is becoming a paradigm shift. In this paper, we examine the current support of programming languages for the key concepts behind the change in software engineering practice and argue that a novel programming language is required to support the new paradigm. We report a new programming language CAOPLE and its associated Integrated DevOps Environment CIDE and demonstrate the utility of both.",
    "keywords": "Cloud computing; Microservices; Container technology; DevOps; Service agent orientation; Software engineering paradigms; Parallel and distributed programming models; Software development methodology; Programming languages; Integrated Software Development Environment.",
    "released": 2018,
    "link": "https://doi.org/10.1109/SOSE.2018.00027",
    "interesting": "-"
  },
  {
    "title": "Milo: A visual programming environment for Data Science Education",
    "abstract": "Most courses on Data Science offered at universities or online require students to have familiarity with at least one programming language. In this paper, we present, “Milo”, a web-based visual programming environment for Data Science Education, designed as a pedagogical tool that can be used by students without prior-programming experience. To that end, Milo uses graphical blocks as abstractions of language specific implementations of Data Science and Machine Learning(ML) concepts along with creation of interactive visualizations. Using block definitions created by a user, Milo generates equivalent source code in JavaScript to run entirely in the browser. Based on a preliminary user study with a focus group of undergraduate computer science students, Milo succeeds as an effective tool for novice learners in the field of Data Science.",
    "keywords": "",
    "released": 2018,
    "link": "https://doi.org/10.1109/VLHCC.2018.8506504",
    "interesting": "-"
  },
  {
    "title": "Predicting Developers' IDE Commands with Machine Learning",
    "abstract": "When a developer is writing code they are usually focused and in a state-of-mind which some refer to as flow. Breaking out of this flow can cause the developer to lose their train of thought and have to start their thought process from the beginning. This loss of thought can be caused by interruptions and sometimes slow IDE interactions. Predictive functionality has been harnessed in user applications to speed up load times, such as in Google Chrome's browser which has a feature called \"Predicting Network Actions\". This will pre-load web-pages that the user is most likely to click through. This mitigates the interruption that load times can introduce. In this paper we seek to make the first step towards predicting user commands in the IDE. Using the MSR 2018 Challenge Data of over 3000 developer session and over 10 million recorded events, we analyze and cleanse the data to be parsed into event series, which can then be used to train a variety of machine learning models, including a neural network, to predict user induced commands. Our highest performing model is able to obtain a 5 cross-fold validation prediction accuracy of 64%.",
    "keywords": "IDE Monitoring; Machine Learning; Neural Network; Developer Commands",
    "released": 2018,
    "link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8595185",
    "interesting": "-"
  },
  {
    "title": "ChipDE - A Development Environment for System Verilog-Based Digital IC Design",
    "abstract": "A new software tool - ChipDE, which represents an efficient development environment for description of digital integrated circuits (IC) based on SystemVerilog language is presented. The proposed ChipDE tool provides various features, such as text editing, file/project browser, syntax-highlighting, code auto-completion, go to definition, block diagram drawing, generation of SystemVerilog code from block diagrams and generation of block diagrams from SystemVerilog code. The proposed ChipDE tool can significantly reduce the digital IC development time, enrich the documentation using the block diagrams and improve the overall readability and maintainability of designed digital integrated circuits and systems. Moreover, the proposed software solution can be used for didactic purposes, since the tool reduces the difficulty and time needed to learn SystemVerilog language, and helps to learn the basic design concepts and practical examples of digital IC designs.",
    "keywords": "",
    "released": 2018,
    "link": "https://doi.org/10.1109/ICETA.2018.8572078",
    "interesting": "-"
  },
  {
    "title": "The Code Genie Programming Environment",
    "abstract": "Computer programming is not easy and many educators and developers have been trying to create a development environment that makes programming easier and more interesting for K12 students. This paper demonstrates one of these efforts by introducing a newly developed educational environment that could help high school students learn computer programming language. Code Genie was designed to integrate art, animation, and code sharing in teaching programming. Using this web-based learning environment, students can learn how to write a program in a JavaScript language, and how to produce artwork from coding, then share it with others. JavaScript was chosen for its popularity, simplicity and because it is a real programming language that is currently used by software developers who create real software products. The Code Genie learning environment and the motivation behind developing it for high school students are discussed in this paper. It was tested during three coding workshops. Student responses to the tool's usefulness and ease of use will be explained.",
    "keywords": "computer programming for high school students; computer science for girls; art with coding; animation; code sharing; STEM tool for k12",
    "released": 2018,
    "link": "https://doi.org/10.1109/EIT.2018.8500194",
    "interesting": "+"
  },
  {
    "title": "PerformanceHat – Augmenting Source Code with Runtime Performance Traces in the IDE",
    "abstract": "Performance problems observed in production environments that have their origin in program code are immensely hard to localize and prevent. Data that can help solve such problems is usually found in external dashboards and is thus not integrated into the software development process. We propose an approach that augments source code with runtime traces to tightly integrate runtime performance traces into developer workflows. Our goal is to create operational awareness of performance problems in developers' code and contextualize this information to tasks they are currently working on. We implemented this approach as an Eclipse IDE plugin for Java applications that is available as an open source project on GitHub. A video of PerformanceHat in action is online: https://youtu.be/fTBBiylRhag",
    "keywords": "software performance engineering; program analysis; development workflow",
    "released": 2018,
    "link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8449440",
    "interesting": "-"
  },
  {
    "title": "Ocean Color Algorithm Development Environment for High-Speed Data Processing of GOCI-II",
    "abstract": "Geostationary Ocean Color Imager-II (GOCI-II), the follow-up satellite sensor platform of GOCI, will be launched in Mar. 2019. For estimating ocean color information from this new sensor data, the dedicated ocean color algorithms will be newly developed. However, the existing ocean color algorithm development methodology without consideration for the highspeed data processing will not be employed because the amount of GOCI-II data will be significantly large and their data will have to be processed and distributed in real time. In this study, therefore, we designed the ocean color algorithm development environment (OCADE) to support high-performance computing and storage using the parallelism. Also, OCADE enables the source code projects for GOCI-II ocean color products to be automatically built and deployed. We expect that GOCI - II ocean color algorithm developers will easily create and manage their parallelized source code projects at any time and any place through the OCADE cloud service. Additionally, they will be able to validate the output and evaluate the processing performance under OCADE in real-time. We believe that OCADE will contribute to the field of massive satellite data processing.",
    "keywords": "algorithm development environment; GOCI-II; ocean color",
    "released": 2018,
    "link": "https://doi.org/10.1109/IGARSS.2018.8517983",
    "interesting": "-"
  },
  {
    "title": "RAZER—A HRI for Visual Task-Level Programming and Intuitive Skill Parameterization",
    "abstract": "Maintaining competitiveness and mitigating health issues test caused by unergonomic working conditions are two main reasons for automating production processes. But such automation is expensive, also because test experts are required to program the robots. One approach to lowering these costs is to enable shop-floor workers to program robots by providing task-level programming tools. Task-level programming is an established approach, yet appropriate workflows for experts and shop-floor workers remain to be defined. The objective of this letter is to evaluate RAZER, a framework for robot task-level programming, in which skill programming and parameter interface definitions are integrated. The framework provides workflows for both experts-creating skills and providing their parameter interfaces-and for shop-floor workers-using these skills to create executable robot tasks in an intuitive human-robot interface (HRI). The HRI is a graphical user interface that runs in a browser, and provides access to other man-machine interface, such as programming by demonstration. Two pilot and two user studies proof that RAZER fulfills the demands of both experts and novice users.",
    "keywords": "Software; middleware and programming environments; human-centered automation; intelligent and flexible manufacturing; factory automation; human factors and human-in-the-loop",
    "released": 2018,
    "link": "https://doi.org/10.1109/LRA.2018.2798300",
    "interesting": "-"
  },
  {
    "title": "A block programming environment enabling online peer assessment for promoting collaborative learning",
    "abstract": "This paper reports a development of a block programming environment enabling online peer assessment for promoting Collaborative Learning (CL). Many investigations about CL have indicated that peer assessment plays an important role for activation of CL. In this research, we develop a block programming environment. This environment consists of three systems, (1) a block assembly system, (2) a browsing system, and (3) a server system. Client side systems (the block assembly system and the browsing system) has been implemented by Blockly for novice programming learners. A part of the server system has been implemented by Firebase. This environment helps novice programming learners to program through CL. © 2018 Asia-Pacific Society for Computers in Education. All rights reserved.",
    "keywords": "Automatic evaluation of a code; Collaborative learning; Peer assessment",
    "released": 2018,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060014156&partnerID=40&md5=31386a1534ac5815bb9782520934d58b",
    "interesting": "-"
  },
  {
    "title": "Interactive bulk synchronous parallel functional programming in a browser",
    "abstract": "This paper presents the design and implementation of a sequential simulator for the parallel functional language BSML based on the parallel computation model Bulk Synchronous Parallelism (BSP). This simulator is implemented in sequential, runs in any browser, and provides a graphical representation of the parallel executions. Due to the pure functional nature of BSML, the results obtained by this simulator are the same than the results that could be obtained by executing the program in parallel. © 2018 IEEE.",
    "keywords": "Functional programming; High performance computing; Parallel programming; Software development tools and support",
    "released": 2018,
    "link": "https://doi.org/10.1109/SmartWorld.2018.00273",
    "interesting": "-"
  },
  {
    "title": "Definition and evaluation of a COSMIC measurement procedure for sizing Web applications in a model-driven development environment",
    "abstract": "Context. Model-driven development approaches facilitate the production of Web applications. Among them, the Object-Oriented Hypermedia method (OO-H) has been successfully used for the development of industrial Web applications. Similarly to other development approaches, it is important also in this context to put measures in place to support project managers in resource allocation, cost and schedule control, and productivity monitoring. Objective. This motivated us to define a measurement procedure, named OO-HCFP, specifically conceived for OO-H Web applications based on COSMIC, a second-generation functional size measurement method. Method. We present mapping and measurement rules devised to automatically derive size measures from OO-H models. We also carry out an empirical study to evaluate whether our proposed measurement procedure, OO-HCFP, is useful for estimating the effort needed to realise industrial Web applications developed with OO-H. Results. The estimates obtained by using OO-HCFP are more accurate than those obtained by using other measurement approaches based on Function Points and design measures. Conclusions. The proposed approach can be profitably exploited to size Web applications developed with OO-H. Based on our experience, we also provide some guidelines to support the formulation of COSMIC measurement procedures for other model-driven approaches. © 2018 Elsevier B.V.",
    "keywords": "COSMIC; Functional size measurement; Model-driven development; OO-H method; Web applications",
    "released": 2018,
    "link": "https://doi.org/10.1016/j.infsof.2018.07.012",
    "interesting": "-"
  },
  {
    "title": "A Smart Context-Aware Program Assistant Based on Dynamic Programming Event Modeling",
    "abstract": "In software development, there is a great demand for online information and resources. The traditional way for the developers to access online resources is through formulating keywords and searching in the web browser. The search results are limited by the keywords and the web browser also ignores the developers' working and search context. Tools that integrate information retrieval into the IDE are available, but they fail to perceive the developers' dynamic working context and use in the process of online search. In this paper, we present a context-aware program assistant called amAssist. amAssist monitors the developers' development events and models their working context dynamically, then integrates them with the entire online search process~(e.g. keywords formulation, customized searching, search results annotation, etc.). We integrate amAssist into the Eclipse IDE. Our preliminary user study showed that by using our program assistant, developers can formulate keywords more accurately and acquire online information and resources more rapidly. Demo video: https://youtu.be/X4Tkjhc6wfU. © 2018 IEEE.",
    "keywords": "Context Sensing; Dynamic Programming Event Modeling; In IDE Searching; Program Assistant",
    "released": 2018,
    "link": "https://doi.org/10.1109/ISSREW.2018.00-36",
    "interesting": "-"
  },
  {
    "title": "Programming Tools for Rapid NFV-Based Media Application Development in 5G Networks",
    "abstract": "The emergence of virtualisation and Infrastructure-as-a-Service (IaaS) have dramatically transformed the telecom industry through network function virtualisation (NFV). A recently introduced cloud-native concept, Platform as a Service (PaaS), ensures to further boost the performance, portability and cost efficiency of the NFV. The 5G-MEDIA project proposes the application of a serverless paradigm known as Function-as-a- Service (FaaS) to NFV for the media applications exploiting the 5G technologies. In addition to integration of FaaS, the 5G-MEDIA application/service development kit (SDK) supports microservice-based application development for both hypervisor-based and containerized approaches, specifically supporting Docker, unikernel and LXC. In this paper, we provide an overview of the 5G-MEDIA SDK which is built to support NFV-based next generation media applications and to achieve a development time in the order of minutes. Furthermore, implementations of FaaS Emulation and FaaS command line interface (CLI) tools are also presented. © 2018 IEEE.",
    "keywords": "5G; 5G MEDIA; NFV; SDK",
    "released": 2018,
    "link": "https://doi.org/10.1109/NFV-SDN.2018.8725610",
    "interesting": "-"
  },
  {
    "title": "Prioritizing challenges of agile process in distributed software development environment using analytic hierarchy process",
    "abstract": "Software organizations are increasingly combining agile methodologies and distributed software development (DSD) for efficiently and effectively built software products. There are numerous challenges associated with scaling agile methods in a distributed environment. Our study is intended to explore and prioritize the challenges for scaling agile practices in the DSD environment. This study was divided into 3 stages. In the first stage, 22 challenges were identified from literature review and grouped into 4 categories: management, team, technology, and process based on discussion with experts. In the second stage, an online questionnaire study was conducted to validate the identified challenges. Finally, analytic hierarchy process method was used to prioritize challenges and their categories based on their relative importance. The results highlighted that management is a most significant category as compared with the other categories. Similarly, lack of management commitments, lack of effective communication, lack of knowledge sharing, etc are identified as the most significant challenges that need to be focused by the organizations for scaling agile methodologies. On the basis of the research findings, we could conclude that the identified challenges along with their categories provide a robust framework to scale agile methodologies in the DSD environment. © 2018 John Wiley & Sons, Ltd.",
    "keywords": "agile development; AHP; challenges; distributed software development; multiple-criteria decision making",
    "released": 2018,
    "link": "https://doi.org/10.1002/smr.1979",
    "interesting": "-"
  },
  {
    "title": "Degrees of tenant isolation for cloud-hosted software services: a cross-case analysis",
    "abstract": "A challenge, when implementing multi-tenancy in a cloud-hosted software service, is how to ensure that the performance and resource consumption of one tenant does not adversely affect other tenants. Software designers and architects must achieve an optimal degree of tenant isolation for their chosen application requirements. The objective of this research is to reveal the trade-offs, commonalities, and differences to be considered when implementing the required degree of tenant isolation. This research uses a cross-case analysis of selected open source cloud-hosted software engineering tools to empirically evaluate varying degrees of isolation between tenants. Our research reveals five commonalities across the case studies: disk space reduction, use of locking, low cloud resource consumption, customization and use of plug-in architecture, and choice of multi-tenancy pattern. Two of these common factors compromise tenant isolation. The degree of isolation is reduced when there is no strategy to reduce disk space and customization and plug-in architecture is not adopted. In contrast, the degree of isolation improves when careful consideration is given to how to handle a high workload, locking of data and processes is used to prevent clashes between multiple tenants and selection of appropriate multi-tenancy pattern. The research also revealed five case study differences: size of generated data, cloud resource consumption, sensitivity to workload changes, the effect of the software process, client latency and bandwidth, and type of software process. The degree of isolation is impaired, in our results, by the large size of generated data, high resource consumption by certain software processes, high or fluctuating workload, low client latency, and bandwidth when transferring multiple files between repositories. Additionally, this research provides a novel explanatory framework for (i) mapping tenant isolation to different software development processes, cloud resources and layers of the cloud stack; and (ii) explaining the different trade-offs to consider affecting tenant isolation (i.e. resource sharing, the number of users/requests, customizability, the size of generated data, the scope of control of the cloud application stack and business constraints) when implementing multi-tenant cloud-hosted software services. This research suggests that software architects have to pay attention to the trade-offs, commonalities, and differences we identify to achieve their degree of tenant isolation requirements. © 2018, The Author(s).",
    "keywords": "Application component; Case study research; Cloud patterns; Cloud-hosted software services; Cross-case analysis; Degree of isolation; Global software development; Multitenancy; Software development tools",
    "released": 2018,
    "link": "https://doi.org/10.1186/s13677-018-0121-8",
    "interesting": "-"
  },
  {
    "title": "Evaluations of JaguarCode: A web-based object-oriented programming environment with static and dynamic visualization",
    "abstract": "To increase program comprehension and overcome learning obstacles of Object-Oriented Programming (OOP), various visualization techniques have been adopted in educational OOP environments. Some provide software development with visual notations without source code, while others support programming with visual aids. Our research supports Java programming along with UML diagrams (class, object, and sequence) and dynamic execution traces of program synchronized in a web-based programming environment - JaguarCode. It aims to help students better understand the static structure and dynamic behavior of Java programs, as well as object-oriented design concepts. This paper reports on the evaluation results of JaguarCode to investigate its effectiveness and user satisfaction through quantitative and qualitative experiments. The experimental results revealed that having both static and dynamic visualizations did positively impact the correctness of program understanding and tracing problems, while the visual representations did affect students’ understanding on the program execution of the problems to higher accuracy. It was also observed that students were satisfied with the aspects of those visualizations provided in JaguarCode. © 2018 Elsevier Inc.",
    "keywords": "Object-oriented; Programming environment; Static and dynamic visualization; UML diagram; Web-based",
    "released": 2018,
    "link": "https://doi.org/10.1016/j.jss.2018.07.037",
    "interesting": "+"
  },
  {
    "title": "Semantic interoperability for the IoT: Analysis of JSON for linked data",
    "abstract": "Some Internet of Things (IoT) platforms achieve syntactic interoperability by adopting JavaScript Object Notation (JSON) to represent the message payload produced by devices. This chapter presents an empirical analysis for the overhead of JSON-Linked Data (LD) using the European standard for IoT semantic interoperability - the Smart Appliances REFerence (SAREF) ontology - compared to similar data represented as JSON in IoT scenarios, following the experimentation in software engineering methodology. JSON-LD is a lightweight syntax to serialize RDF, providing semantics to JSON data at web-scale, conceived to introduce linked data in web-based programming environments. The research results show that a small message has the biggest impact when porting from JSON to JSON-LD: 0.19% of the total transaction time. This is the worst-case scenario, meaning that migrating from JSON to JSON-LD is feasible for most IoT solutions. © ISTE Ltd 2018.",
    "keywords": "Linked data; Semantic interoperability; Syntactic interoperability; Web-based programming environments",
    "released": 2018,
    "link": "https://doi.org/10.1002/9781119564034.ch20",
    "interesting": "-"
  },
  {
    "title": "IOT based controlling of hybrid energy system using ESP8266",
    "abstract": "In this paper, authors have focused on controlling of hybrid energy system using IOT. There is various combination of energy and all of them are alternative to each other like solar energy, wind energy, bio fuel, fuel cell, etc. But the need of controlling of hybrid energy system arises when it is installed for domestic or commercial purpose. At this point IOT plays an important role in controlling system. The main criteria being switching between the two sources of energy i.e. solar and wind energy without any inconvenience through a website using ESP8266 Wi-Fi module. The data is transmitted wirelessly through website to ESP8266 module which controls the sources of energy. The transmitted data is controlled remotely using IOT. This enables user to have flexible control mechanism remotely through a secured internet web connection. This system helps the user to control the sources of energy, manually and remotely using smart phone or personal computer. This system is very efficient, cheaper and flexible in operation. © 2018 IEEE.",
    "keywords": "Arduino IDE; Controlling of Hybrid System; ESP8266; Home Automation; IOT; Router",
    "released": 2018,
    "link": "https://doi.org/10.1109/ETECHNXT.2018.8385294",
    "interesting": "-"
  },
  {
    "title": "Code Authority Control Method Based on File Security Level and ACL in WebIDE",
    "abstract": "WebIDE as an online integrated development environment, easy to create security issues due to authority control. Aiming at the problem of authority management between user and code file in WebIDE, a code file authority control method based on file security level and ACL is presented. The security levels of the file are divided, and the mapping relationship between the security level and the file is constructed. Then, an authorization code is generated according to the rules, authorizing it to any devices according to the security level and the expiration time. Finally, the ACL policy is used to bind the user to the device, and to implement the mutual constraint and control of the permissions between users, devices, and files. The experimental results show that the method has the characteristics of high safety and good performance. © 2018 IEEE.",
    "keywords": "access control list; permission control; software security; WebIDE",
    "released": 2018,
    "link": "https://doi.org/10.1109/IRCE.2018.8492957",
    "interesting": "-"
  },
  {
    "title": "Cloud computing for energy requirement and solar potential assessment",
    "abstract": "The objective of this research is to derive an approach for the assessment of solar potential using cloud computing for a better energy planning. This approach is used to calculate energy requirement and solar potential having precise prediction probability. The energy requirement has been calculated based on the inputs such as the number of fans, tube lights, and electric pump with their wattage and usage hours. The assessment of the solar potential is based on the input parameters such as Global Horizontal Irradiance (GHI), sunshine hours, India Meteorological Department (IMD) data, cloud cover, tilted irradiance, etc. It is executed by software developed in Eclipse IDE (Integrated Development Environment), an open-source toolkit. Perl script has been used to convert the GHI onto the tilted surface which efficiently quantifies the collected solar irradiance. The IMD data are used for predicting the number of cloudy and rainy days for further estimation of solar potential. Cloud computing is used in uploading of the software module on the cloud. Google App Engine is used to deploy project information on the cloud. It has been found that enough solar potential is available to install Solar Photovoltaic (SPV) modules at Meerpur, India using software tool developed. © 2018, Korean Spatial Information Society.",
    "keywords": "Eclipse IDE; Energy utilization; GAE; GHI; Remote sensing; Solar potential",
    "released": 2018,
    "link": "https://doi.org/10.1007/s41324-018-0181-3",
    "interesting": "-"
  },
  {
    "title": "Test-driven development for generated portable Javascript apps",
    "abstract": "With the advent of HTML 5, we can now develop rich web apps in Javascript that rival classical standalone apps. Nevertheless, developing in Javascript is still challenging and error prone because of the language's ambiguous semantics and quirks. In this paper, we advocate that the popular solution of using another language with better semantics and constructs is not enough. Developers should be provided with an IDE that eases the integration of Javascript libraries and enables testing an application across the many available Javascript interpreters. We introduce PharoJS,1 an infrastructure that allows Test-Driven Development (TDD) in Pharo Smalltalk of applications that ultimately run on a Javascript interpreter. PharoJS makes it possible to run interactive tests within the Pharo IDE, so as to fully exploit the debugging and development environment, while UI and libraries reside on the Javascript side. © 2018 Elsevier B.V.",
    "keywords": "Crossplatform; IDE; Javascript transpilation; Test-driven development; Web development",
    "released": 2018,
    "link": "https://doi.org/10.1016/j.scico.2018.02.003",
    "interesting": "-"
  },
  {
    "title": "Development of Intelligent Behaviors for Social Robots via User-Friendly and Modular Programming Tools",
    "abstract": "The expected adoption of robots able to interact with people in real-world scenarios brings the need to move from easy-to-use to easy-to-develop robot architectures. In this paper, we discuss how a component-based methodology, a block and web-based interface, and a behavior tree approach to the development of robot behaviors can be used together to enable the adoption of the end-user development (EUD) paradigm. The proposed framework (i) mainly uses easy-to-install, cross-platform and modular tools, (ii) is ROS, ZeroMQ and nanomsg compatible, (iii) enables the creation of platform-independent applications, and (iv) can be easily expanded with new sensory devices or robots. In order to evaluate the proposed software framework, an example of a human-robot interaction application using a NAO robot is presented and discussed. © 2018 IEEE.",
    "keywords": "",
    "released": 2018,
    "link": "https://doi.org/10.1109/ARSO.2018.8625839",
    "interesting": "-"
  },
  {
    "title": "Energy efficient home automation using IoT",
    "abstract": "India is the 4th largest consumer of energy, so it has to strive relentlessly for alternative methods to achieve effective reduction in consumption of energy. Because of inadequate energy infrastructure and extensive energy usage, intelligent energy management systems need to be incorporated in order to use energy more efficiently and to make an effective safe environment not only in industries but also in other ways of our day to day lives. Smart home automation can manage and monitor household energy efficiently and it also ensures safety. In this paper, an intelligent home automation technique is implemented using Internet of Things which will overcome the existing energy usage problems to a great extent. IoT makes use of a combination of intelligent software applications along with electronic devices to build an effective data exchange network. To implement this, a low cost and low power consuming embedded Wi-Fi module ESP8266 is used to operate a relay channel, which acts as a switch to control household appliances. Here Thinger.io provides cloud infrastructure through which mobile and ESP8266 to communicate with each other via REST API. © 2018 IEEE.",
    "keywords": "Arduino IDE; ESP8266; Internet of things; REST; smart home automation",
    "released": 2018,
    "link": "https://doi.org/10.1109/IC3IoT.2018.8668155",
    "interesting": "-"
  },
  {
    "title": "SoEasy: A software framework for easy hardware control programming for diverse IoT platforms",
    "abstract": "Many Internet of Things (IoT) applications are emerging and evolving rapidly thanks to widespread open-source hardware platforms. Most of the high-end open-source IoT platforms include built-in peripherals, such as the universal asynchronous receiver and transmitter (UART), pulse width modulation (PWM), general purpose input output (GPIO) ports and timers, and have enough computation power to run embedded operating systems such as Linux. However, each IoT platform has its own way of configuring peripherals, and it is difficult for programmers or users to configure the same peripheral on a different platform. Although diverse open-source IoT platforms are widespread, the difficulty in programming those platforms hinders the growth of IoT applications. Therefore, we propose an easy and convenient way to program and configure the operation of each peripheral using a user-friendly Web-based software framework. Through the implementation of the software framework and the real mobile robot application development along with it, we show the feasibility of the proposed software framework, named SoEasy. © 2018 by the authors. Licensee MDPI, Basel, Switzerland.",
    "keywords": "Internet of things; IoT development tool; Visual programming tool; Web of things",
    "released": 2018,
    "link": "https://doi.org/10.3390/s18072162",
    "interesting": "-"
  },
  {
    "title": "Wifröst: Bridging the information gap for debugging of networked embedded systems",
    "abstract": "The rise in prevalence of Internet of Things (IoT) technologies has encouraged more people to prototype and build custom internet connected devices based on low power microcontrollers. While well-developed tools exist for debugging network communication for desktop and web applications, it can be difficult for developers of networked embedded systems to figure out why their network code is failing due to the limited output af-fordances of embedded devices. This paper presents WiFröst, a new approach for debugging these systems using instrumentation that spans from the device itself, to its communication API, to the wireless router and back-end server. WiFröst automatically collects this data, displays it in a web-based visualization, and highlights likely issues with an extensible suite of checks based on analysis of recorded execution traces. © 2018 Copyright held by the owner/author(s).",
    "keywords": "Debugging; Embedded systems; IDE; Internet of things",
    "released": 2018,
    "link": "https://doi.org/10.1145/3242587.3242668",
    "interesting": "-"
  },
  {
    "title": "Developing ASP Programs with ASPIDE and L oIDE",
    "abstract": "In order to facilitate the design of applications of Answer Set Programming (ASP), some tools for ASP-program development were proposed in the last years. In this paper we describe ASPIDE, a comprehensive IDE for ASP, and LoIDE a recently-developed web-based editor for logic programs. © 2018, Springer-Verlag GmbH Germany, part of Springer Nature.",
    "keywords": "Declarative Languages; Integrated development environment (IDE); Logics; Web-based applications",
    "released": 2018,
    "link": "https://doi.org/10.1007/s13218-018-0534-z",
    "interesting": "-"
  },
  {
    "title": "A visual programming environment for introducing distributed computing to secondary education",
    "abstract": "The paper introduces a visual programming language and corresponding web and cloud-based development environment called NetsBlox. NetsBlox is an extension of Snap! and builds upon its visual formalism as well as its open source code base. NetsBlox adds distributed programming capabilities by introducing two well-known abstractions to block-based programming: message passing and Remote Procedure Calls (RPC). Messages containing data can be exchanged by two or more NetsBlox programs running on different computers connected to the Internet. RPCs are called on a client program and are executed on the NetsBlox server. These two abstractions make it possible to create distributed programs such as multi-player games or client–server applications. We believe that NetsBlox not only teaches basic distributed programming concepts but also provides increased motivation for high-school students to become creators and not just consumers of technology. © 2018 Elsevier Inc.",
    "keywords": "Computer science education; Distributed programming; Visual programming",
    "released": 2018,
    "link": "https://doi.org/10.1016/j.jpdc.2018.02.021",
    "interesting": "-"
  },
  {
    "title": "AjiL: Enabling model-driven microservice development",
    "abstract": "The development of microservice-based architectures typically involves tedious development tasks, e.g., to configure the necessary infrastructural components or to establish the interface-based communication between services. Therefore, this paper presents AjiL, a tool which aims to ease the necessary development effort with the means of graphical modeling and code generation. It comprises three major components: based on the lightweight Aji Modeling Language, the Aji Editor can create microservice system diagrams, which can be used by the Aji Spring Cloud Generator to generate system foundations. © 2018 Association for Computing Machinery.",
    "keywords": "Development Tool; Graphical Domain-specific Modeling Language; Microservice Architecture; Model-driven Engineering",
    "released": 2018,
    "link": "https://doi.org/10.1145/3241403.3241406",
    "interesting": "-"
  },
  {
    "title": "Migrating Google Cloud SDK to the cloud case study: GAE launcher",
    "abstract": "In this paper we propose the implementation and migration of the existing cloud SDK (Software Development Kit) on the cloud platform. Moreover an integrated development environment (IDE) fully supporting Google Cloud Python SDK (Software Development Kit) on the cloud infrastructure has been part of the ongoing development within the scope of this work. Our architecture fulfills the need to have an IDE environment totally independent from personal desktop environments. The working architecture and a business model of the online IDE and SDK are presented. Further discussion is made how this migration could become part of the rest of cloud infrastructures and maybe provided as a core service . © 2018 IADIS. All rights reserved.",
    "keywords": "Cloud services; Google cloud SDK; Integrated development environment",
    "released": 2018,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052528888&partnerID=40&md5=bd8bb994cd498bde7059b1e11982fe20",
    "interesting": "-"
  },
  {
    "title": "VISUFLOW: A debugging environment for static analyses",
    "abstract": "Code developers in industry frequently use static analysis tools to detect and fix software defects in their code. But what about defects in the static analyses themselves? While debugging application code is a difficult, time-consuming task, debugging a static analysis is even harder. We have surveyed 115 static analysis writers to determine what makes static analysis difficult to debug, and to identify which debugging features would be desirable for static analysis. Based on this information, we have created Visijflow, a debugging environment for static data-flow analysis. Visuflow is built as an Eclipse plugin, and supports analyses written on top of the program analysis framework Soot. The different components in Visuflow provide analysis writers with visualizations of the internal computations of the analysis, and actionable debugging features to support debugging static analyses. A video demo of Visuflow is available online: https://www.youtube.com/watch?v=BkEfBDwiuH4 © 2018 Authors.",
    "keywords": "Debugging; Empirical software engineering; IDE; Static analysis; survey; user study",
    "released": 2018,
    "link": "https://doi.org/10.1145/3183440.3183470",
    "interesting": "-"
  },
  {
    "title": "An integrated academic system prototype using accidents and crises management as PBL",
    "abstract": "This paper aims to describe the agile development of an integrated system for accidents and crises management. This academic project prototype was developed at the Brazilian Aeronautics Institute of Technology, on the second Semester of 2015. The project has involved 80 undergraduate and graduate students at the same time from four different electronic and computer engineering courses. The Scrum Framework was combined with Problem-Based Learning (PBL), to develop a prototype within just 17 academic weeks. The prototype was developed as a Proof of Concept (PoC) and applied within a natural disaster scenario management, involving the four segments of: Civil Defense, Health Care, Fire Department, and Police Department. At the end of the project, it was possible to deliver an integrated academic system project prototype, associating a Control Room with Web Applications connected through Cockpit Display Systems (CDSs). Students were able to work geographically dispersed, using free cloud-based tools, and the Safety Critical Application Development Environment (SCADE), from®;ANSYS Esterel Technologies, combining multiple types of hardware like Raspberry Pi and Arduino, and different sets of open-source tools. © Springer International Publishing AG 2018.",
    "keywords": "Problem-based learning; Real-time embedded systems; Safety critical application development environment; Scrum framework; Software quality",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-3-319-54978-1_55",
    "interesting": "-"
  },
  {
    "title": "Learn Android Studio 3 with Kotlin: Efficient Android App Development",
    "abstract": "Build Android apps using the popular and efficient Android Studio 3 suite of tools, an integrated development environment (IDE) with which Android developers can now use the Kotlin programming language. With this book, you’ll learn the latest and most productive tools in the Android tools ecosystem, ensuring quick Android app development and minimal effort on your part. Along the way, you’ll use Android Studio to develop apps tier by tier through practical examples. These examples cover core Android topics such as Activities, Intents, BroadcastReceivers, Services and AsyncTask. Then, you’ll learn how to publish your apps and sell them online and in the Google Play store. What You’ll Learn, Use Android Studio 3 to quickly and confidently build your first Android apps, Build an Android user interface using activities and layouts, event handling, images, menus and the action bar, Incorporate new elements including fragments, Learn how data is persisted, Use Kotlin to build apps, Who This Book Is For, Those who may be new to Android Studio 3 or Android Studio in general. You may or may not be new to Android development in general. Some prior experience with Java is also recommended. © 2018 by Ted Hagos.",
    "keywords": "Android; Android Studio; App; Development; Google; IDE; Kotlin; Mobile; Programming; Software; Tool",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-1-4842-3907-0",
    "interesting": "-"
  },
  {
    "title": "Experiments with the interactive specializer that implements the partial evaluation method for a subset of the Java language",
    "abstract": "Metacomputation methods have been developing for more than 30 years but have not been widely used. The paper discusses the possible causes of this phenomenon. On that basis the conclusion about the need to embed the specializer in the development environment with a user-friendly graphical interface is made. This specializer should be suitable for implementation of human-machine dialogue, organized in such a way that the user understands what is happening in the specializer, received valuable and interesting information about the code, was able to correct the source code for better specialization and manage the specialization process. The paper discusses the implementation of an interactive specializer based on partial evaluation for a subset of the Java language. This specializer is immersed in the popular Eclipse development environment (IDE). For the first time on the basis of the graphical interface, the programmer's dialogue with the specialization sub-system, interactive tools for compiling a task for specialization and managing the process of specialization were implemented. An example of the successful application of the developed specializer to a program in the Java language that calculates the power function (the so-called \"Ershov example\") is given. Based on this example, the advantages of an interactive specializer over the classic command-line approach are demonstrated. In many cases, the residual programs (programs that obtained as a result of specialization) work several times faster than the original ones. © 2018 CEUR-WS. All rights reserved.",
    "keywords": "Integrated development environment; Interactive program specialization; Object-oriented language; Partial evaluation; Program analysis; Program transformation",
    "released": 2018,
    "link": "https://doi.org/10.20948/abrau-2018-10",
    "interesting": "-"
  },
  {
    "title": "Merging situation analytics and model-based user interface development for building runtime-adaptive business applications",
    "abstract": "Situation analytics can be used to recognize the changing behavior, emotional state and environmental context of a user during complex task processing. This paper discusses the SitAdapt 2.0 architecture that combines a situation analytics platform with pattern- and model-based user interface construction tools in order to build runtime-adaptive interactive business applications with enhanced user experience and task-accomplishment characteristics. The paper focuses on the software components and tools for observing and tracking the user, modeling situations, recognizing situations, and modeling and generating structural changes and actions for generating the dynamic adaptations. The adaptive functionality of the system is demonstrated for a web-application for long-distance travel booking. © Springer Nature Switzerland AG 2018.",
    "keywords": "Adaptive user interfaces; E-business applications; Emotion recognition; HCI-patterns; Model-based user interface development environments (MBUID); Situation analytics; User tracking",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-3-319-99951-7_12",
    "interesting": "-"
  },
  {
    "title": "Datalyzer: Streaming data applications made easy",
    "abstract": "Nowadays, streaming data are continuously generated from thousands of sources, including social networks, mobile apps, sensors, e-commerce transactions, and many more. Hence, it becomes very useful to build applications able to process these data, with the purpose of filtering interesting parts, monitor their run-time evolution, persist valuable chunks, trigger events upon certain conditions are met and provide analytics. While several frameworks and systems have emerged to create this kind of applications, these systems tend to be low-level, based on complicated APIs, challenging to install and configure for end-users, and requiring from high performant hardware for their execution. Our goal is to lower the entry level to develop, deploy and run streaming applications. To accomplish this goal, we propose Datalyzer, an approach to create streaming data applications on the cloud based on a visual language. This way, Datalyzer provides a facility to describe streaming data sources in an open way, and a visual language to describe the execution flow of the streaming application. Datalyzer is based on model-based development principles, where code is generated automatically, and then compiled, deployed and executed on the cloud. As a proof of concept, we describe a case study in enterprise systems, and how it can be built using our prototype tool. © Springer International Publishing AG, part of Springer Nature 2018.",
    "keywords": "Cloud-based development environments; Code generation; Data monitoring; Data transformation; Model-based development; Streaming data",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-3-319-91662-0_34",
    "interesting": "-"
  },
  {
    "title": "Cloud-based security architecture supporting Army Research Laboratory's collaborative research environments",
    "abstract": "Designing, operating and maintaining any system in today's complex Information Technology (IT) environments requires understanding and mitigating various levels of risk to the organization or to individuals associated with the operation of a system. How this risk is managed is critical to the organizations success. Multiple assets, technologies and skilled personnel are needed to select an appropriate set of security controls needed to protect individuals, operations and assets of the organization, and build or refine a security architecture based on best practices and risk management frameworks to adapt to ever changing threats. Developing secure applications and collaborating within a cloud-based environment adds both challenges and mitigations. Cloud environments are scalable and with the proper design and use can be secure and cost-effective. Special attention, processes and techniques associated with authentication and authorization require the formation and maintenance of users, groups, roles and policies. The U.S. Army Research Laboratory (ARL) provides America's Soldiers the technological edge through scientific research, technology development, and analysis. ARL provides scientific and technological innovation in a variety of technical disciplines, through direct in-house laboratory efforts and joint programs with government, industry, and academia. ARL's Open Campus is a collaborative endeavor, with the goal of building a science and technology ecosystem that will encourage groundbreaking advances in basic and applied research areas of relevance to the Army. Through the Open Campus framework, ARL scientists and engineers work collaboratively and side-by-side with visiting scientists in ARL's facilities, and as visiting researchers at collaborators' institutions. Through the relationships formed and the availability of secure, dynamic and scalable environments, rapid development, sharing and transition of technologies is possible. This technical paper proposes a cloud-based security architecture to support multiple Open Campus Initiatives at the Army Research Laboratory including the Sensor Information Testbed COllaborative Research Environment (SITCORE) and the Automated Online Data Repository (AODR). These initiatives create a highly-collaborative research laboratory and testbed environment focused on sensor data and information fusion. Coupling the existing Open Campus Initiatives with an additional cloud-based architecture allowing encrypted communication, authentication, and on-demand access provides a scalable and secure environment supporting the data, algorithm, and collaborative needs of scientists, researchers and entrepreneurs. © 2018 SPIE.",
    "keywords": "algorithm development environment; Amazon Web Services; AODR; AWS; Cloud computing; Cloud-based security; database; MMSDB; secure data environment; sensor information testbed; signature data processing; SITCORE",
    "released": 2018,
    "link": "https://doi.org/10.1117/12.2307033",
    "interesting": "-"
  },
  {
    "title": "ASSEMBLE: A collaborative business process development tool",
    "abstract": "Business Process (BP) development is a challenging task for small and medium organizations who do not have sufficient resources for design, coding, and management of their BPs. Cloud infrastructure and service-oriented middleware can be leveraged for rapid development and deployment of BPs of such organizations. BP development in the cloud-based environment can be done collaboratively by exploiting the knowledge of existing BPs of related organizations. In this paper, we present ASSEMBLE, a tool for collaborative BP development in the cloud. ASSEMBLE implements our service mapping approach that utilizes the attribute, structural and semantics information of service operations of existing BPs in a given domain to help a user organization to compose its BP. Given a collection of related BPs and available service operations of a user organization, ASSEMBLE computes a mapping between service operations of the user organization and BP operations of other organizations. The tool also generates the executable BP code in standard BPEL language for deployment on a process execution engine on the user organization's site or on the cloud. © 2018 Authors.",
    "keywords": "Business Process Development; Service Mapping; Web Services",
    "released": 2018,
    "link": "https://doi.org/10.1145/3183440.3195017",
    "interesting": "-"
  },
  {
    "title": "A visual MapReduce program development environment for heterogeneous computing on clouds",
    "abstract": "This paper is aimed at proposing a visual MapReduce program development environment called VMR for heterogeneous computing on Clouds. This development environment mainly has three advantages as follows. First, it allows users to drag and drop graphical blocks instead of text typing for editing programs. Therefore, users can save their effort and time spent on MapReduce programming especially when they analyze data on clouds through mobile devices. Second, it can automatically translate the blocks of users’ MapReduce programs into three different versions including Java, C and CUDA of source codes, and select one of these three versions according to the processor architecture of allocated resources for execution. Consequently, users can transparently and effectively exploit heterogeneous resources in clouds for executing their MapReduce programs while they has no need to individually write programs for each of different processor architectures by themselves. Third, it can enable clouds to outsource the computation tasks of MapReduce programs to mobile devices in order for increasing job throughput or program performance. © 2018 Association for Computing Machinery.",
    "keywords": "Google blockly; Hadoop; Heterogeneous computing; MapReduce; XML-to-MR translator",
    "released": 2018,
    "link": "https://doi.org/10.1145/3219788.3219800",
    "interesting": "-"
  },
  {
    "title": "A framework for achieving the required degree of multitenancy isolation for deploying components of a cloud-hosted service",
    "abstract": "Multitenancy allows multiple tenants to access a single instance of a cloud offering. While several approaches exist for implementing multitenancy, little attention has been paid to implementing the required degree of isolation since there are varying degrees of isolation that can be implemented for each tenant. This paper presents a framework for achieving the required degree of isolation between tenants accessing a cloud offering so that the required performance, resource utilisation and access privilege of one tenant does not affect other tenants when there are workload changes. The framework is composed of two main constituents: 1) component-based approach to multitenancy isolation through request re-routing (COMITRE); 2) an optimisation model for providing optimal solutions for deploying components of a cloud-hosted service. We demonstrate using a case study of: 1) a cloud-hosted bug tracking system; 2) a synthetic dataset, the possibility of providing the required degree of isolation and optimal deployment solutions. © 2018 Inderscience Enterprises Ltd.",
    "keywords": "Bug tracking system; Cloud-hosted service; Components; Degree of isolation; Global software development; Multitenancy; Optimal solution; Optimisation model; Software development tools; Tenants; Workload",
    "released": 2018,
    "link": "https://doi.org/10.1504/ijcc.2018.095399",
    "interesting": "-"
  },
  {
    "title": "Using fine grained programming error data to enhance CS1 pedagogy",
    "abstract": "The paper reports on our experience using the log files from Spinoza, an online IDE for Java and Python, to enhance the pedagogy in Introductory Programming classes (CS1). Spinoza provides a web-based IDE that offers programming problems with automatic unit-testing. Students get immediate feedback and can resubmit until they get a correct program or give up. Spinoza stores all of their attempts and provides orchestration tools for the instructor to monitor student programming performance in real-time. These log files can be used to introduce a wide variety of effective pedagogical practices into CS1 and this paper provides several examples. One of the simplest is forming recitation groups based on features of student's problem solving behavior over the previous week. There are many real-time applications of the log data in which the most common errors that students make are detected during an in-class programming exercise and those errors are then used to either provide debugging practice or to provide the examples of buggy programming style. Finally, we discuss the possible use of machine learning clustering algorithms in recitation group formation. Copyright © 2018 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
    "keywords": "Classroom Orchestration; Educational Data Mining; Hierarchical Clustering; Learning Analytics; Machine Learning; Markov Models; Near-peer Mentoring; Online IDEs; Peer Led Team Learning; Study Group Formation",
    "released": 2018,
    "link": "https://doi.org/10.5220/0006666400280037",
    "interesting": "-"
  },
  {
    "title": "Pedagogy of programming education for higher education using block based programming environment",
    "abstract": "As the modern society utilizes various devices based on the Information, Communication Technology (ICT), the importance of the computer program has been increased. As the needs of the education of engineering increases, many researchers studied the pedagogy of the engineering education and the learning contents development. In general, the education of the programming language accompanies with the syntax learning and logic developments. The block-based programming language helps to build the logic of the students. Therefore, Block-based programming languages are used in the entry course to the engineering departments. However, the block-based learning languages are limited to develop conventional applications. The application of the block-based programming language requires the particular middleware to execute, and usually, the application cannot utilize the functionalities of the hardware. Therefore, students should learn the high-level programming language regardless of the block-based programming language to develop the ICT services. Unlike other pedagogy, this paper introduces the education contents and programming environment with high-level programming. Notably, this paper proposes the hybrid approaches to help students to build their programming logic and programming syntax. © Springer International Publishing AG, part of Springer Nature 2018.",
    "keywords": "Human-computer-interactive learning; Programming education environment; Web-based programming",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-3-319-91803-7_3",
    "interesting": "-"
  },
  {
    "title": "Teaching introductory web development using scrimba: An interactive and cooperative development tool",
    "abstract": "New software applications may influence the way we teach. Scrimba facilitates live stream coding, ease of sharing code and an interesting new video format. What looks like a video is actually an audio stream combined with a dynamic code display. The viewer hears the audio while the code is generated as if it were a normal video tutorial. However, as the format is audio combined with text, the viewer may at any time stop the \"video\" and edit the code. How can educators use Scrimba to activate students and engage them in cooperative activities? We have investigated different use cases using Scrimba in two introductory web development courses. After an initial pilot, we evaluated the use of Scrimba in a course with 200 students. Data was collected through a survey (N=107) and semi-structured interviews with ten students. The students provided multiple reasons why the live stream of the coding in a classroom was useful. They also saw the value of being able to watch something that looks like a video, but with the possibility of jumping into the code and start to build upon it. The main finding, however, was how the ease of sharing code within a classroom setting created new opportunities. The entire class could engage in debugging activities, they could display multiple solutions for each other and they could create cooperative assignments. These are not new activities, but the activities were enhanced because of the reduced time in order to be able to cooperate and interact. We argue that the students became live coding participants and not only spectators through the introduction of a new software application. We further discuss these findings in the context of blended learning. Our findings should be relevant and interesting for anyone involved in teaching computer programming topics, and especially within web development. © The Authors, 2018. All Rights Reserved.",
    "keywords": "Active learning; Blended learning; Cooperative learning; Scrimba; Tool; Web development",
    "released": 2018,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057997672&partnerID=40&md5=328be8512b7e362e84a5c697f1111a9b",
    "interesting": "-"
  },
  {
    "title": "Efficient smart emergency response system for fire hazards using IoT",
    "abstract": "The Internet of Things pertains to connecting currently unconnected things and people. It is the new era in transforming the existed systems to amend the cost effective quality of services for the society. To support Smart city vision, Urban IoT design plans exploit added value services for citizens as well as administration of the city with the most advanced communication technologies. To make emergency response real time, IoT enhances the way first responders and provides emergency managers with the necessary up-to-date information and communication to make use of those assets. IoT mitigates many of the challenges to emergency response including present problems, like a weak communication network and information lag. In this paper, it is proposed that an emergency response system for fire hazards is designed by using IoT standardized structure. To implement this proposed scheme a low-cost Expressive wi-fimodule ESP-32, Flame detection sensor, Smoke detection sensor (MQ-5), Flammable gas detection sensor and one GPS module are used. The sensors detects the hazard and alerts the local emergency rescue organizations like fire departments and police by sending the hazard location to the cloud-service through which all are connected. The overall network utilizes a light weighted data oriented publish-subscribe message protocol MQTT services for fast and reliable communication. Thus, an intelligent integrated system is designed with the help of IoT. © 2015 The Science and Information (SAI) Organization Limited.",
    "keywords": "Aurduino IDE; GPS; Internet of Things (IoT)",
    "released": 2018,
    "link": "https://doi.org/10.14569/IJACSA.2018.090143",
    "interesting": "-"
  },
  {
    "title": "Wise Computing: Toward Endowing System Development with Proactive Wisdom",
    "abstract": "A broad, long-term research project is described, which will lead to the computer becoming an equal member of the system-development team, continuously making proactive contributions, akin to those expected from an experienced and knowledgeable customer or user, a conscientious QA engineer, a strict regulatory auditor, an engineering-team leader, or the organization's CTO. The web extra at https://youtu.be/mmrv8ZACbpU describes the authors' novel 'wise computing' approach and demonstrates one possible application. The second web extra at https://youtu.be/DtpvMxMwYPM extends the discussion of the authors' novel 'wise computing' approach and presents a case study. © 2017 IEEE.",
    "keywords": "programming environments/construction tools; programming paradigms; software construction; Software engineering",
    "released": 2018,
    "link": "https://doi.org/10.1109/MC.2018.1451652",
    "interesting": "-"
  },
  {
    "title": "A web-based programming environment for introductory programming courses in higher education",
    "abstract": "Choosing the right programming environment has a great influence on the efficiency of the educational, learning and problem solving processes. While there are many good examples for such environments for the younger generation, which involve block-based programming, gamified learning, appropriate language of the tasks and user interface design, introductory programming courses in higher education rarely take into account the role of the programming environment. In this article we have analyzed a typical problem solving process in an introductory programming course with a special focus on the programming environment. We have found that many distracting factors may make the learning process difficult. Based on our investigation we introduce a web-based programming environment which takes into account the special needs of newcomers to the programming land. This environment tries to exclude the distracting factors and support the problem solving process in a right way. Beside our methodological considerations, the technical background of supporting traditional programming languages, such as C++, in the web browser is also presented. Finally we make methodological recommendations how this tool can be a part of the teaching and learning process through different types of tasks and learning organizing methods. © 2018, Eszterhazy Karoly College. All rights reserved.",
    "keywords": "Development environment; Higher education; Programming; Teaching; Web",
    "released": 2018,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056321785&partnerID=40&md5=b3d20421d785f1399004cc7e4e05b8de",
    "interesting": "+"
  },
  {
    "title": "Bridging the industry-academia collaboration gap: A focus towards final year projects",
    "abstract": "Industry-Academia collaboration is much necessary in order to provide benefit to this global village of technology. Indeed, there are many factors which are still needed to be considered in order to make use of computer science in IT industry. As an illustration, acceptance of the FYPs of students in IT industry and their usefulness, providing cost benefits to the students who carry out FYPs, elevating the factor of awareness of FYPs conducted/in process, in the industry, and improving liaisons of universities with industries in order to enhance the process of conducting FYPs. The focus of this research revolves around the question that \"Are the FYPs in computer science discipline beneficial for the IT industry of Pakistan, and is there any collaboration between IT industry and Academia of Pakistan?\" The results are outlined after exploring the answers to this question. For this purpose, at least 112 computer sciences graduated and post graduated personnel from different IT sectors and academia of Pakistan were surveyed using convenient sampling procedure to study the importance of their FYPs in the industry and a web based platform is suggested to bridge the gap between Industry and Academia of Pakistan. Indeed, accomplishing all of these tasks will help IT industry to get well-structured projects and students who are pre exposed to IT practices. Consequently, the linkage between industry and academia will be developed through joint and integrated research programs, offering apprenticeship to the students, industry expert opinion in curriculum designing, and appointing faculty members with sound knowledge of the industry. © 2018 Association for Computing Machinery.",
    "keywords": "Collaboration; CrowdSourcing; E-services; Emerging applications; Software development environment",
    "released": 2018,
    "link": "https://doi.org/10.1145/3195612.3195620",
    "interesting": "-"
  },
  {
    "title": "WIDE: Centralized and collaborative approach to teaching web development",
    "abstract": "Teaching Web development is an increasingly important and complex task due to multiple technologies that students have to master and implement in each particular solution. This fact imposes the specific learning approach and development environment as a collaborative learning tool. It is particularly important in the learning scenarios that include large groups of students and computers that are not intended solely for teaching Web development as well. The authors of this paper find, based on their past experiences, that a disproportionately large amount of time is expended on troubleshooting infrastructure problems, and that collaboration amongst students is unsatisfactory. This paper presents a solution for centralized and collaborative work on learning Web development, as well as observations made during the course of its development and the first year of deployment. © 2018 Taiwan Academic Network Management Committee. All rights reserved.",
    "keywords": "Collaboration; E Web development; Education; On-line IDE",
    "released": 2018,
    "link": "https://doi.org/10.3966/160792642018081904004",
    "interesting": "+"
  },
  {
    "title": "LoIDE: A web-based IDE for logic programming preliminary report",
    "abstract": "Logic-based paradigms are nowadays widely used in many different fields, also thanks to the availability of robust tools and systems that allow the development of real-world and industrial applications. In this work, we present LoIDE, an advanced and modular web-editor for logic-based languages that also integrates with state-of-the-art solvers. © Springer International Publishing AG 2018.",
    "keywords": "Development; Logic programming; Web-based applications",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-3-319-73305-0_10",
    "interesting": "+"
  },
  {
    "title": "Computational Intelligence via Applications",
    "abstract": "The constant mobile revolution and the increasing urge for smartphone usage are really hiking up the market for mobile applications. The growth in the customer demand for mobile applications is rapidly increasing. According to the research report, there are more than 102,062, million apps downloaded globally presently. It is expected rise to 268,692, million by 2017. As the mobile applications are getting highly adaptive, the best way to make the artificial or computational reach the people is through mobile applications. This can be easily achieved as we can keep a larger amount of knowledge base on the servers, and it can be further accessed by the applications via Internet. In this paper present a simple and a open source approach for this by making an application possessing artificial intelligence, which is globally being used as “G-Connect”. © Springer Nature Singapore Pte Ltd 2018.",
    "keywords": "Computational intelligence; IDE (Integrated Development Environment); Knowledge base; Mobile and web applications; Ubiquitous access",
    "released": 2018,
    "link": "https://doi.org/10.1007/978-981-10-4555-4_20",
    "interesting": "-"
  },
  {
    "title": "A distributed modular platform for the development of cloud based applications",
    "abstract": "In this paper we describe the CIRANO platform, a modular Integrated Development Environment (IDE) for cloud based applications. The proposed platform is built to support Model Driven Development (MDD) and team collaboration, facilitating the rapid development of advanced applications in the cloud. The paper presents at a first stage the state of the art in the field of cloud IDEs and describes the design, implementation and technical details of the CIRANO platform. The main features of the proposed platform are presented in two case studies concerning the development of an application from scratch and porting of an existing application. The paper discusses the findings in comparison with existing tools and proposes extensions of the platform as future work. © 2017 Elsevier B.V.",
    "keywords": "Cloud based development; Cloud Integrated Development Environment; Model Driven Development",
    "released": 2018,
    "link": "https://doi.org/10.1016/j.future.2017.02.035",
    "interesting": "-"
  },
  {
    "title": "Mosaicode and the visual programming of web application for music and multimedia",
    "abstract": "The development of audio application demands a high knowledge about this application domain, traditional programming logic and programming languages. It is possible to use a Visual Programming Language to ease the application development, including experimentations and creative exploration of the language. In this paper we present a Visual Programming Environment to create Web Audio applications, called Mosaicode. Different from other audio creation platforms that use a visual approach, our environment is a source code generator based on code snippets to create complete applications.",
    "keywords": "Webaudio; Mosaicode; Visual Programming Language; Specific Domain (Programming) Languages; Graphical Programming Environment",
    "released": 2018,
    "link": "https://doi.org/10.5216/mh.v18i1.53577",
    "interesting": "-"
  },
  {
    "title": "Implementing dementia care mapping as a practice development tool in dementia care services: A systematic review",
    "abstract": "Dementia Care Mapping (DCM) is an observational tool set within a practice development process. Following training in the method, DCM is implemented via a cyclic process of briefing staff, conducting mapping observations, data analysis and report preparation, feedback to staff and action planning. Recent controlled studies of DCM’s efficacy have found heterogeneous results, and variability in DCM implementation has been indicated as a potential contributing factor. This review aimed to examine the primary research evidence on the processes and the barriers and facilitators to implementing DCM as a practice development method within formal dementia care settings. PUBMED, PsycINFO, CINAHL, The Cochrane Library-Cochrane reviews, HMIC (Ovid), Web of Science and Social Care Online were searched using the term “Dementia Care Mapping”. Inclusion criterion was primary research studies in any formal dementia care settings where DCM was used as a practice development tool and which included discussion/critique of the implementation processes. Assessment of study quality was conducted using the Mixed Methods Appraisal Tool. Twelve papers were included in the review, representing nine research studies. The papers included discussion of various components of the DCM process, including mapper selection and preparation; mapping observations; data analysis, report writing and feedback; and action planning. However, robust evidence on requirements for successful implementation of these components was limited. Barriers and facilitators to mapping were also discussed. The review found some consensus that DCM is more likely to be successfully implemented if the right people are selected to be trained as mappers, with appropriate mapper preparation and ongoing support and with effective leadership for DCM within the implementing organization/unit and in organizations that already have a person-centered culture or ethos. Future development of the DCM tool should consider ways to save on time taken to conduct DCM cycles. More research to understand the ingredients for effective DCM implementation is needed.",
    "keywords": "dementia; practice development; staff training; person-centered care",
    "released": 2018,
    "link": "https://doi.org/10.2147/CIA.S138836",
    "interesting": "-"
  },
  {
    "title": "End-user web development tool for tilting interactions",
    "abstract": "Tilting gestures allow end-users to use motion gestures to interact with their mobile devices. While there exist solutions for integrating motion gestures into web applications, they require programming skills to set up the gesture configuration. To allow end-users to easily introduce tilting interactions into their websites, we developed WP-TAT, a WordPress plugin that allows tilt-and-touch gestures to be easily integrated into WordPress websites without any programming. We present WP-TAT and show its potential by describing various demonstrator applications and reporting on a preliminary user study. Moreover, we also discuss how web applications could be adapted to cater for motion gestures.",
    "keywords": "web interaction framework; motion sensors; end-user development",
    "released": 2017,
    "link": "https://doi.org/10.1145/3102113.3102117",
    "interesting": "-"
  },
  {
    "title": "Plagiarism networks: Finding instances of copied answers in an online introductory programming environment",
    "abstract": "We followed the submissions of automatically evaluated weekly programming assignments on an introductory programming course and searched for identical solutions submitted by students. Our dataset covers three iterations of the course, from 2014 to 2016. From this systematic longitudinal sampling, we were able to scan for plagiarism patterns and build social networks of shared answers. As a result, we present the social networking graphs of identical student-submitted answers over the past three years in which the course has been arranged.",
    "keywords": "plagiarism; online exercises; computer science education; CS1",
    "released": 2017,
    "link": "https://doi.org/10.1145/3141880.3141906",
    "interesting": "-"
  },
  {
    "title": "DS.js: Turn any webpage into an example-centric live programming environment for learning data science",
    "abstract": "Data science courses and tutorials have grown popular in recent years, yet they are still taught using production-grade programming tools (e.g., R, MATLAB, and Python IDEs) within desktop computing environments. Although powerful, these tools present high barriers to entry for novices, forcing them to grapple with the extrinsic complexities of software installation and configuration, data file management, data parsing, and Unix-like command-line interfaces. To lower the barrier for novices to get started with learning data science, we created DS.js, a bookmarklet that embeds a data science programming environment directly into any existing webpage. By transforming any webpage into an example-centric IDE, DS.js eliminates the aforementioned complexities of desktop-based environments and turns the entire web into a rich substrate for learning data science. DS.js automatically parses HTML tables and CSV/TSV data sets on the target webpage, attaches code editors to each data set, provides a data table manipulation and visualization API designed for novices, and gives instructional scaffolding in the form of bidirectional previews of how the user’s code and data relate.",
    "keywords": "novice programmers; live programming; data science",
    "released": 2017,
    "link": "https://doi.org/10.1145/3126594.3126663",
    "interesting": "-"
  },
  {
    "title": "Characterizing developer behavior in cloud based IDEs",
    "abstract": "Background: Cloud based integrated development environments (IDEs) are rapidly gaining popularity for its native support and potential to accelerate DevOps. However, there is little research of how developers behave when interacting with these environments.Aims: To develop empirical knowledge about how developers behave when interacting with cloud based IDEs to deal with programming tasks at various difficulty levels.Method: We conducted a user study using a cloud based IDE, JazzHub. We collected and coded session trace data, self-reported effort and frustration levels, and screen recordings.Results: We built a Markov activity transition model that describes the transitions among common development activities such as coding, debugging, and searching for information. It also captures extended interactions with remote resources. We correlated activity transition with different code growth trajectories. Conclusion: The findings are an early step toward realizing the potential for enhanced interactions in cloud based IDEs. Our study provides empirical evidence that may inspire the future evolution of cloud based IDE designs and features.",
    "keywords": "developer behavior; code growth trajectory; cloud based IDE; activity transition",
    "released": 2017,
    "link": "https://doi.org/10.1109/ESEM.2017.27",
    "interesting": "-"
  },
  {
    "title": "Exploring coordination models for ad hoc programming teams",
    "abstract": "Software development is a complex task with inherently interdependent sub-components. Prior work on crowdsourcing software engineering has addressed this problem by performing an a priori decomposition of the task into well-defined microtasks that individual crowd workers can complete independently. Alternatively, ad hoc teams of experts recruited from online crowds can remotely collaborate, avoiding the up-front cost to end users of task decomposition. However, these temporary ad hoc teams can lead to high coordination costs during the session itself. In this paper, we explore the types and causes of these coordination costs for transient software teams in existing collaborative programming tools: a version control system and a real-time shared editor. Based on our findings, we suggest design elements of shared programming environments that help teams effectively self-coordinate on their task.",
    "keywords": "software development tools; crowdsourcing; ad hoc teams",
    "released": 2017,
    "link": "https://doi.org/10.1145/3027063.3053268",
    "interesting": "-"
  },
  {
    "title": "Designing a live development experience for web-components",
    "abstract": "Explorative and live development environments flourish when they can impose restrictions. Forcing a specific programming language or framework, the environment can better enhance the experience of editing code with immediate feedback or direct manipulation. Lively Kernel’s user interface (UI) framework Morphic provides such a development experience when working with graphical objects in direct way giving immediate feedback during development. Our new development environment Lively4 achieves a similar development experience, but targeting general HTML elements. Web Components as a new Web standard provide a very powerful abstraction mechanism. Plain HTML elements provide direct building blocks for tools and applications. Unfortunately, Web Components miss proper capabilities to support run-time development. To address this issue, we use object migration to provide immediate feedback when editing UI code. The approach is evaluated by discussing known problems, resulting best practices and future work.",
    "keywords": "Web-based Programming Environment; Web Components; Live Programming; JavaScript",
    "released": 2017,
    "link": "https://doi.org/10.1145/3167109",
    "interesting": "-"
  },
  {
    "title": "A web-based IDE for teaching with any language (abstract only)",
    "abstract": "This workshop introduces participants to CS50 IDE (cs50.io), a web-based integrated development environment based on Amazon’s Cloud9 (c9.io). Not only does the IDE enable students to work on programming projects within a browser, without need for local downloads or installations, it also provides students with an integrated terminal window and full sudo privileges. Underneath the hood is a Docker \"container\" that allows students to experiment with the underlying Ubuntu Linux OS, installing and configuring software at will, adapting it to their particular projects’ needs. The IDE supports any compiler, interpreter, or other software that can be installed via a Linux command-line, while the IDE itself provides a fully-featured text editor for text files and source code that reside on the underlying instance. The Cloud9 GUI is fully extensible through a plugin system and is leveraged by CS50 IDE to provide additional functionality for students. Among the additional features implemented through this mechanism are a GUI-based file submission system, an optional \"less comfortable\" mode that simplifies the GUI to provide a scaffolded experience for students new to programming, and a GUI front end for the GNU Project Debugger, a CLI debugger for many languages, including C. This workshop will highlight useful features of the IDE in the context of classrooms (including the collaborative nature of a workspace to allow pair programming or provide alternative one-on-one instruction), provide tips for writing or adapting assignments based on its architecture, and introduce developing plugins for full customization.",
    "keywords": "linux; docker; debugger; cloud9; cloud-based IDE; IDE; GDB; CS50",
    "released": 2017,
    "link": "https://doi.org/10.1145/3017680.3017839",
    "interesting": "+"
  },
  {
    "title": "Model-driven engineering IDE for quality assessment of data-intensive applications",
    "abstract": "This article introduces a model-driven engineering (MDE) integrated development environment (IDE) for Data-Intensive Cloud Applications (DIA) with iterative quality enhancements. As part of the H2020 DICE project (ICT-9-2014, id 644869), a framework is being constructed and it is composed of a set of tools developed to support a new MDE methodology. One of these tools is the IDE which acts as the front-end of the methodology and plays a pivotal role in integrating the other tools of the framework. The IDE enables designers to produce from the architectural structure of the general application along with their properties and QoS/QoD annotations up to the deployment model. Administrators, quality assurance engineers or software architects may also run and examine the output of the design and analysis tools in addition to the designer in order to assess the DIA quality in an iterative process.",
    "keywords": "quality-assessment; model-driven engineering; ide; eclipse; data-intensive technologies",
    "released": 2017,
    "link": "https://doi.org/10.1145/3053600.3053633",
    "interesting": "-"
  },
  {
    "title": "CODECAST: An innovative technology to facilitate teaching and learning computer programming in a c language online course",
    "abstract": "This paper introduces the CODECAST tool: an in-browser C language interpreter, paired with an event and voice recorder and player that facilitates teaching and learning to program by synchronizing audio with source code edition, visualization, step by step execution and testing.",
    "keywords": "teaching; programming; online learning; mooc; code visualization; code test; code execution; code editor; code edition; audio",
    "released": 2017,
    "link": "https://doi.org/10.1145/3051457.3053970",
    "interesting": "-"
  },
  {
    "title": "A visual programming environment for learning distributed programming",
    "abstract": "This paper introduces NetsBlox, a visual programming environment for learning distributed programming principles. Extending both the visual formalism and open source code base of Snap!, NetsBlox provides two accessible distributed programming abstractions to simplify the process of creating networked applications: message passing and Remote Procedure Calls (RPC). Messaging passing allows NetsBlox applications to send data to other connected NetsBlox clients. Remote Procedure Calls enable seamless integration of third party services, such as Google Maps, weather, traffic and other public domain data sources, into NetsBlox applications. Other RPCs help coordinating distributed clients which may be difficult for novice programmers allowing the user to more quickly create captivating and sophisticated applications. These abstractions empower users to develop networked programs, including multi-player games and client-server applications. By providing networking support, NetsBlox not only allows users to learn distribute programming concepts but also makes programming more engaging by incorporating diverse services available on the web.",
    "keywords": "visual programming; snap!; distributed programming; computer science education",
    "released": 2017,
    "link": "https://doi.org/10.1145/3017680.3017741",
    "interesting": "-"
  },
  {
    "title": "User-generated variables: Streamlined interaction design for feature requests and implementations",
    "abstract": "Programmers write source code that compiles to programs, and users execute the programs to benefit from their features. While issue-tracking systems help communication between these two groups of people, feature requests have usually been written in text with optional figures that follows community guidelines and needs human interpretation to understand what to implement in which part of the source code. To make this process more direct, intuitive, and efficient, a streamlined interaction design called \"User-Generated Variables (UGV)\" is proposed. First, the users can declare parameters that they want to tweak in existing programs without reading or understanding the source code. Then, the system turns the proposal into variable declarations in the relevant part of the source code. Finally, the programmers are notified of the proposal and can implement the actual features to reflect changes in the variable value. The proposed interaction is implemented in two existing Web-based Integrated Development Environments, and its user experience is briefly tested with eight users and programmers. Its technical requirements, limitations, and potentials are discussed. The content of this paper with live examples is available at http://junkato.jp/ugv.",
    "keywords": "programming experience; live programming; integrated development environment; User-generated content (UGC)",
    "released": 2017,
    "link": "https://doi.org/10.1145/3079368.3079403",
    "interesting": "-"
  },
  {
    "title": "App lab: A powerful JavaScript IDE for rapid prototyping of small data-backed web applications (abstract only)",
    "abstract": "App Lab (https://code.org/applab) is Code.org’s rapid-prototyping environment for creating HTML, CSS, and JavaScript-powered web applications. It was created as part of a rich set of instructional resources designed for teachers of the new AP Computer Science Principles (CSP) course. Yet, App Lab far exceeds the needs of CSP, and would be an appropriate learning environment for students in any CS0/CS1 class, even at the university level. App Lab gives novice programmers access to capabilities previously reserved for courses that require sophisticated tech setup and knowledge of both front and backend web development, server-side scripting, databases, etc. This demonstration aims to give a brief overview of App Lab and its purpose and then move quickly into demonstrating the more advanced features of App Lab that few people know are even there! The audience should come away with knowledge and access to exemplars that highlight App lab’s possibilities, and see some of its richer features in action. Finally we will end with a discussion about how best to integrate App Lab into existing courses.App Lab was developed as part of collaboration between Code.org and David Bau (Google), creator of PencilCode.net.",
    "keywords": "IDE; Javascript; K12; app lab; database; education; web applications",
    "released": 2017,
    "link": "https://doi.org/10.1145/3017680.3022382",
    "interesting": "-"
  },
  {
    "title": "TECHNOLOGY THAT EDUCATORS OF COMPUTING HAIL (TECH)using Cloud9, a powerful cloud-based IDE in the classroom",
    "abstract": "Welcome to the latest TECH column, a column that features a guest columnist, discussing technologies that educators find useful in their classrooms. The guest columnist is selected from those who have presented at a SIGCSE Technical Symposium session. This issue’s guest columnist, Jeff Solin, offers his ideas on Cloud9.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.1145/3043953",
    "interesting": "-"
  },
  {
    "title": "f3.js: A parametric design tool for physical computing devices for both interaction designers and end-users",
    "abstract": "Although the exploration of design alternatives is crucial for interaction designers and customization is required for end-users, the current development tools for physical computing devices have focused on single versions of an artifact. We propose the parametric design of devices including their enclosure layouts and programs to address this issue. A Web-based design tool called f3.js is presented as an example implementation, which allows devices assembled from laser-cut panels with sensors and actuator modules to be parametrically created and customized. It enables interaction designers to write code with dedicated APIs, declare parameters, and interactively tune them to produce the enclosure layouts and programs. It also provides a separate user interface for end-users that allows parameter tuning and dynamically generates instructions for device assembly. The parametric design approach and the tool were evaluated through two user studies with interaction designers, university students, and end-users.",
    "keywords": "integrated development environment; parametric design; personal fabrication; physical computing",
    "released": 2017,
    "link": "https://doi.org/10.1145/3064663.3064681",
    "interesting": "-"
  },
  {
    "title": "Formalization IDEs integrated with a verifying compiler",
    "abstract": "This demonstration will illustrate both a web- and desktop-based formalization IDE (F-IDE) that are backed by a verifying compiler for the RESOLVE specification and programming language. Each IDE we demo supports construction of mathematical developments, formal interface specifications of generic, object-based concepts, and alternative implementations annotated with internal assertions to enable verification. While the first portion of the demo will illustrate the language and verification in the context of the web-based environment, the second half will demonstrate features of a newer desktop-based IDE that provides additional modern IDE amenities beyond those offered by the web-based version. Each IDE we present integrates feedback for mathematical and programmatic type checking, proving, among others, and permit users to generate and run executable, property-preserving Java.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.1145/3098572.3098580",
    "interesting": "-"
  },
  {
    "title": "Sandstone HPC: A domain-general gateway for new HPC users",
    "abstract": "The complexity of high-performance computing (HPC) resources poses many challenges to new users. A number of science gateways have been developed to increase the productivity of novice users by hiding the underlying infrastructure, however these solutions tend not to teach HPC skills that transfer easily outside of the gateway. In this paper we introduce a domain-general gateway, Sandstone HPC, that represents the HPC environment more naturally to novice users by abstracting the command-line interface and providing contextual help. We assess the degree to which Sandstone HPC improves upon the usability of the command-line interface by analyzing the results of a usability study conducted on both environments. We will also detail how the architecture promotes long-term sustainability and a community-development model.",
    "keywords": "High-Performance Computing; User Studies; Web-Based IDE",
    "released": 2017,
    "link": "https://doi.org/10.1145/3093338.3093360",
    "interesting": "-"
  },
  {
    "title": "Analyzing the learning process (in Programming) by using data collected from an online IDE",
    "abstract": "Computer programming courses require a lot of practice. Nevertheless, the difficulties found when trying to install the computer programming environment used in the university courses prevent many students from practicing at home. Hence, they can only practice during the computer laboratory lessons, or when the laboratories are available for the students. This limitation negatively affects the learning process. In order to reduce this obstacle, we have replaced the conventional IDE used in our courses by a web-based IDE called Codeboard. Among other advantages, this environment has the ability to collect statistics about the number of accesses to the developed projects, the number of compilations and runs of the corresponding programs, and the number of global accesses per day. Thus, it enables teachers to monitor the activities of the students both in lectures and at home. After using this tool for a semester, in this paper we report the statistics that are collected when using Codeboard, the limitations we have found in this tool, and how they could be easily overcome in order to perform a better analysis. We also report on the results of this preliminary experience by comparing the results of three consecutive courses (taught by the same instructors and using the same materials) in order to evaluate the influence of Codeboard on the learning process.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.1109/ITHET.2017.8067822",
    "interesting": "+"
  },
  {
    "title": "Initial Evaluation of JaguarCode: A Web-Based Object-Oriented Programming Environment with Static and Dynamic Visualization",
    "abstract": "Various visualization techniques have been adopted to educational Object-Oriented Programming (OOP) environments. Some provide software development with visual notations without source code, while others support programming with visual aids. Our research supports Java programming along with static UML class diagrams and dynamic execution trace of program synchronized in a webbased programming environment - JaguarCode. It aims to help students better understand static structure and dynamic behavior of Java programs, and object-oriented design concepts. This paper reports on an initial evaluation of JaguarCode to investigate its effectiveness and user satisfaction through quantitative and qualitative experiments. The experimental results revealed that having both static and dynamic visualizations did positively impact the correctness of program understanding and tracing problems, and the visual representations did affect students' understanding on program execution of the problems to higher accuracy. It was also observed that students were satisfied with the aspects of those visualizations provided in JaguarCode.",
    "keywords": "object-oriented programming; static and dynamic visualization; web-based programming environment; Java",
    "released": 2017,
    "link": "https://doi.org/10.1109/CSEET.2017.32",
    "interesting": "+"
  },
  {
    "title": "Web based programming tool with speech recognition for visually impaired users",
    "abstract": "Today programming requires to be able to code textually, but it also requires to be visual. Therefore, both of these have left visually impaired users in a very difficult position when it comes for learning and applying programming. There are tools that enable visually impaired users to use computers, but none of them has been specialized to aid the visually impaired users in various programming issues. The aim of this project is to develop a web application, especially for visually impaired people to facilitate to learn programming concepts. Designed solution is an application, based on speech recognition, semantic analysis, user interaction, and braille engine, which can use as a smart programming tool for visually impaired and differently abled people. It's a method of implementing a new way to help and motivate disable people, to use latest technologies in Information Technology and software engineering aspects. Here, researchers are focusing on Java language because it is considered as simple rather than other languages that programmers use today. This research helps to all visually impaired people, who are interested in coding, by teaching programming concepts and empower them to achieve the best future by giving programming theories simply with coding examples. Guide the user gradually by giving voice commands what to do next, and what can you try out according to their skills. It is expected to address the research gap in code generation according to voice commands.",
    "keywords": "Visually Impaired Programming; Speech Recognition; Automatic Speech Recognition; Natural Language Processing; Braille",
    "released": 2017,
    "link": "https://doi.org/10.1109/SKIMA.2017.8294132",
    "interesting": "-"
  },
  {
    "title": "A distributed simulation system for training and testing MOBA game programming",
    "abstract": "Multiplayer Online Battle Arena or MOBA is one of the most popular game types at the present. The MOBA games have been developed from Real Time Strategy (RTS) games. The goal of MOBA games is to destroy the enemy main base or to get points by killing the enemy members up to the required number. Players of MOBA games usually practice their game skills by playing with a bot. As creating a bot is difficult and rather complex, therefore this paper proposes an idea to develop a distributed simulation system for training game coding and testing game codes by displaying results in a mini map (2-D map). A MOBA game API is also provided for cooperating with the simulation software and so is software supporting many users for their bot programming. In addition, users can use this software to test their bot codes or to practice bot programming in a unique style launched by their own idea and to see the results from the monitor. The software can also introduce a playing plan from the code that the user has already programmed.",
    "keywords": "Distributed Simulation; Multiplayer Online Battle Arena; Game Development Tool; Game Programming Training and Testing",
    "released": 2017,
    "link": "https://doi.org/10.1109/ECTICon.2017.8096346",
    "interesting": "-"
  },
  {
    "title": "Toward Evidence-Based Software Engineering: Lessons Learned in Healthcare Application Development",
    "abstract": "The authors look back at their journey of implementing, rolling out, and evolving a collaboration tool to support evidence-based healthcare and reflect on how software engineers could benefit from similar methods.",
    "keywords": "architectural decisions; evidence; guidelines; healthcare; web application development; GRADEpro Guideline Development Tool; GRADEpro GDT; software development; software engineering",
    "released": 2017,
    "link": "https://doi.org/10.1109/MS.2017.3571572",
    "interesting": "-"
  },
  {
    "title": "Data centre temperature monitoring with ESP8266 based Wireless Sensor Network and cloud based dashboard with real time alert system",
    "abstract": "The Internet of Things (IoT) system proposed in this paper is an advanced solution for monitoring the temperature at different points of location in a data centre, making this temperature data visible over internet through cloud based dashboard and sending SMS and email alerts to predefined recipients when temperature rises above the safe operating zone and reaches certain high values. This helps the datacenter management team to take immediate action to rectify this temperature deviation. Also this can be monitored from anywhere anytime over online dashboard by the senior level professionals who are not present in the data centre at any point in time. This Wireless Sensor Network (WSN) based monitoring system consists of temperature sensors, ESP8266 and Wi-Fi router. ESP8266 is a low power, highly integrated Wi-Fi solution from Espress if. The ESP8266 here, in this prototype, connects to `Ubidots' cloud through its API for posting temperature data to the cloud dashboard on real time and the cloud event management system generates alerts whenever the high temperature alert event is fired. Cloud events need to be configured for different alerts beforehand through the user friendly user interface of the platform. It's to be noted that the sensor used here can be leveraged to monitor the relative humidity of the data center environment as well along with the temperature of the data center. But for this prototype solution focus is kept entirely on the temperature monitoring.",
    "keywords": "IoT; Internet of Things; WSN; Wireless Sensor Network; Data Centre; Sensor; Cloud; ESP8266; Data Center; Arduino IDE; cloud based event management system; DHT 11; DHT 22; Real time dashboard; Environmental monitoring",
    "released": 2017,
    "link": "https://doi.org/10.1109/DEVIC.2017.8073958",
    "interesting": "-"
  },
  {
    "title": "Developing tool for Odoo platform",
    "abstract": "Enterprise Resourse Planning (ERP) is business process management software that allows an organization to use a system of integrated applications to manage the business and automate many back office functions. Odoo ERP is powerful open source platform for the business applications which have a suite of closely integrated applications that was build to cover all business areas. The idea of this research is to design and developing an odoo platform tool that help the Odoo developers to create an odoo modules in a fast, easy and flixable way. This tool reduces coding significantly; the developer is only insert the names of the database's tables and fields then the module files will be generated automatically. Also the platform provides a community to make communication between Odoo developers other so that they can interact, exchange the knowledge, skills and the experience from each other's. In addition, the platform contains a module repository to control the changes that made by the developer in the modules and get back the changes at any time. The platform also provides help and good documentation that serve as user manual for the developer. The result of this research showed that creating of modules became very easy and faster, where the time of creating modules decreased for more than 50% relatively.",
    "keywords": "Odoo; Cloud Computing; IDE; Python; Platform as a Service; Module",
    "released": 2017,
    "link": "https://doi.org/10.1109/ICCCCEE.2017.7867677",
    "interesting": "-"
  },
  {
    "title": "Distributed software development of a cloud solution for collaborative manufacturing networks",
    "abstract": "Distributed software development poses extra difficulties in terms of communication, coordination and awareness. Those difficulties usually imply more time consumption that causes productiveness reduction deriving finally in delays. So, projects where such kind of development is needed have to deal with them in order to ensure the success of the project. The case project has adopted this development approach due to its nature. The main goal of the project is to develop a cloud solution for enhancing collaboration and transparency between manufacturing companies forming a collaborative network. In order to implement it, the overall solution has been divided into several pieces, having many interdependencies among them. Thus, different working teams geographically spread from different organizations have participated in the implementation, integration, verification and validation tasks. This paper explains how the case project has organized the working teams, infrastructure, procedures and practices to guarantee the success of the project.",
    "keywords": "distributed software development; development environments; cloud software development; working teams; infrastructure; procedures and practices; micro service architecture",
    "released": 2017,
    "link": "https://doi.org/10.1109/ICE.2017.8279959",
    "interesting": "-"
  },
  {
    "title": "Training and development tool for the open innovation quality management system",
    "abstract": "The purpose of the paper is to contribute to learning, knowledge creation and knowledge transfer obtained through a web-based role-play simulation environment as a training and development tool for the new phenomena of Open Innovation (OI) concepts of organizations. This paper is based on the survey realized within the OI-NET project. Learning objectives for OI course were chosen by the expert team of the project. A new approach to education using OIMS-RPS has been tested on a sample of PhD students from different study fields at the University. The study is limited by the complexity of the actual Open Innovation environment, measurability of any real enhancement achieved and the possible verification of empirical results.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.1109/ICETA.2017.8102543",
    "interesting": "-"
  },
  {
    "title": "A smart city development kit for designing Web and mobile Apps",
    "abstract": "Smart City services' effectiveness is enabled by the integration and availability of data coming from city operators on different domains: mobility, energy, health, water, telecom, tourism, culture, etc. They may be open and private data, static and real time. The most cases, smart city developers still have to develop their applications by studying several data sets and API sources, recovering the data models, reconciliating and aggregating data manually, creating applications exploiting low level Web Service and/or REST Call without the support of development tools, and neither of a semantic data aggregator. In this paper, an innovative tool for smart city web and mobile Apps development is presented. It exploits the Km4City data aggregator and semantic model, and includes: (i) tools for assisting developers for generating calls to Smart City API via visual queries on a graphical user interface; and (ii) open source Apps Development Kit for shortening the development. Finally, the paper reports about experimental results performed in the usage of the tool in the context of a large national project called Sii-Mobility which involved several developers. The same approach is presently adopted by other large projects as well.",
    "keywords": "smart city; smart city development tools; smart city API",
    "released": 2017,
    "link": "https://doi.org/10.1109/UIC-ATC.2017.8397569",
    "interesting": "-"
  },
  {
    "title": "Usage of single-chip computers for control MIMO systems",
    "abstract": "This paper deals with usage of single-chip computers for controlling MIMO systems. The aim is to design a general control system, which is easy to use and easy to implement for other MIMO systems. The performance of control system is limited by the performance of used MCU (PIC 16F876A) and its peripherals (2×PWM, 8×A/D, MAC,...). The key tasks of MCU are communication with upper level and implementation of required control action together with data collection. The serial interface provides communication between control system (PC) and MCU. SCADA/HMI system monitors a controlled system. The application is accessible via Internet browser in local area network (LAN). © 2017 IEEE.",
    "keywords": "C language; Communication interface; Data processing; Eagle; MCU; Measurement; mikroC; MPLAB X IDE; SCADA/HMI; Signal processing",
    "released": 2017,
    "link": "https://doi.org/10.1109/CarpathianCC.2017.7970428",
    "interesting": "-"
  },
  {
    "title": "COMFIT: A development environment for the Internet of Things",
    "abstract": "This paper presents COMFIT (Cloud and Model based IDE for the Internet of Things), a development environment for the Internet of Things that was built grounded on the paradigms of model driven development and cloud computing. COMFIT is composed of two different modules: (1) the App Development Module, a model-driven architecture (MDA) infrastructure, and (2) the App Management and Execution Module, a module that contains cloud-based web interface connected to a server hosted in the cloud with compilers and simulators for developing Internet of Things (IoT) applications. The App Development Module allows the developers to design IoT applications using high abstraction artifacts (models), which are tailored to either the application perspective or the network perspective, thus creating a separation between these two concerns. As models can be automatically transformed into code through the App Development Module, COMFIT creates an environment where there is no need of additional configurations to properly compile or simulate the generated code, integrating the development lifecycle of IoT applications into a single environment partially hosted in the client side and partially in the cloud. In its current version, COMFIT supports two operating systems, namely Contiki and TinyOS, which are widely used in IoT devices. COMFIT supports automatic code generation, execution of simulations, and code compilation of applications for these platforms with low development effort. Finally, COMFIT is able to interact with IoT-lab, an open testbed for IoT applications, which allows the developers to test their applications with different configurations without the need of using local IoT devices. Several evaluations were performed to assess COMFIT's key features in terms of development effort, quality of generated code, and scalability. © 2016 Elsevier B.V.",
    "keywords": "Cloud computing; IDE; Internet of Things; Model-driven development; Testbeds; Wireless sensor networks",
    "released": 2017,
    "link": "https://doi.org/10.1016/j.future.2016.06.031",
    "interesting": "-"
  },
  {
    "title": "Mobile application for checking the status of stock availability in pharmacy",
    "abstract": "The term mobile application is a way by which computer program is developed to be implemented on smart handled devices and andriod phones and so on. To develop an pharmacy application the android platform is used. This will accelerate the development and helps to build an high quality application for the mobile devices. The pharmacy application sets up an online communication between system admin and clientele. It is helpful for clientele to interrogate queries and state their concerns to the application regarding their medicines. This application will facilitate the clientele to get access to the medicine without walking through every pharmacy in the tracked location. © 2017 IEEE.",
    "keywords": "Android platform; eclipse IDE; Java ADT; pharmacy stock; sqlite database",
    "released": 2017,
    "link": "https://doi.org/10.1109/ICAMMAET.2017.8186727",
    "interesting": "-"
  },
  {
    "title": "Endorse your brand: Self development tool for agile employment",
    "abstract": "In today's high paced world where time management stands next to God, it becomes very essential to manage all our roles as well as goals, in order to complete the given task on time. The inability of an individual to do so might lead to serious consequences. At times one might feel extreme pressure and cannot stop worrying about tomorrow's job and pending deadlines. Along with this one has to also acquire skills that make him stand out from the rest of the crowd, which means he has to learn new technologies and keep himself abreast and up-to-date. In order to keep moving on and continue to live in this competitive world, one has to nurture themselves in the right way so that they can cope up with the ever increasing work pressure and at the same time keep oneself ready for competition. In this paper we are proposing a solution to manage all the activities by creating a goal oriented approach to scheduling activities at hand. This dynamic timetable will provide reminders on regular basis, and ensure that you complete each and every task on time without pressure and chaos. © 2017 IEEE.",
    "keywords": "Agile Development; Data Analysis; Social Networking",
    "released": 2017,
    "link": "https://doi.org/10.1109/CSCITA.2017.8066552",
    "interesting": "-"
  },
  {
    "title": "Geoyasgui: The geosparql query editor and result set visualizer",
    "abstract": "The Netherlands' Cadastre, Land Registry and Mapping Agency - in short Kadaster - collects and registers administrative and spatial data on property and the rights involved. This includes for ships, aircraft and telecommunications networks. Doing so, Kadaster protects legal certainty. The Kadaster publishes many large authoritative datasets including several key registers of the Dutch Government (Topography, Addresses and Buildings). Furthermore Kadaster is also developing and maintaining the PDOK shared service, in which about 100 spatial datasets are being published in several formats, including an incredible amount of detailed geospatial objects. Geospatial objects include all plots of land, all buildings, all roads and all lampposts. These objects are spatially and/or conceptually related, but are maintained by different data curators. As a result these datasets are syntactically and architecturally disjoint, and using them together currently requires non-trivial human labor. In response to this, Kadaster is currently publishing its geo-spatial data assets as Linked Open Data. The standardized query language for Linked Open Geodata is GeoSPARQL. Unfortunately, current tooling does not support writing and evaluating GeoSPARQL queries. This paper presents GeoYASGUI, a GeoSPARQL editor and result-set viewer with IDE capabilities. GeoYASGUI is not a new software product, but an integration of and a collection of updates to existing Open Source libraries. With GeoYASGUI it becomes possible to query the rich Open Data assets of the Kadaster. © Authors 2017.",
    "keywords": "GeoSPARQL; IDE; Linked open data; Open government; Semantic web",
    "released": 2017,
    "link": "https://doi.org/10.5194/isprs-archives-XLII-4-W2-39-2017",
    "interesting": "-"
  },
  {
    "title": "Toward full elasticity in distributed static analysis: The case of callgraph analysis",
    "abstract": "In this paper we present the design and implementation of a distributed, whole-program static analysis framework that is designed to scale with the size of the input. Our approach is based on the actor programming model and is deployed in the cloud. Our reliance on a cloud cluster provides a degree of elasticity for CPU, memory, and storage resources. To demonstrate the potential of our technique, we show how a typical call graph analysis can be implemented in a distributed setting. The vision that motivates this work is that every large-scale software repository such as GitHub, BitBucket or Visual Studio Online will be able to perform static analysis on a large scale. We experimentally validate our implementation of the distributed call graph analysis using a combination of both synthetic and real benchmarks. To show scalability, we demonstrate how the analysis presented in this paper is able to handle inputs that are almost 10 million lines of code (LOC) in size, without running out of memory. Our results show that the analysis scales well in terms of memory pressure independently of the input size, as we add more virtual machines (VMs). As the number of worker VMs increases, we observe that the analysis time generally improves as well. Lastly, we demonstrate that querying the results can be performed with a median latency of 15 ms. © 2017 Association for Computing Machinery.",
    "keywords": "Development environments and tools; Distributed and concurrent systems; Parallel; Performance and scalability; Program analysis; Program comprehension and visualization",
    "released": 2017,
    "link": "https://doi.org/10.1145/3106237.3106261",
    "interesting": "-"
  },
  {
    "title": "Quality of Service Models for Microservices and Their Integration into the SWITCH IDE",
    "abstract": "As demands on new software increase, new approaches are needed to help developers ensure Quality of Service (QoS) for their offered service. In this paper we present a QoS modeling approach that complements and extends the standard microservice and component-based software engineering tools by giving the software engineer information on what Non-Functional Requirements (NFRs) and quality constraints have critical influence on QoS. This concept extends the co-programing concept of programing the software and infrastructure with the ability to do this in a more informed manner. The result of this are Qualitative Metadata Markers (QMM) that provide guidelines for changing the infrastructure that can be used by humans or specialized decision-making algorithms. © 2017 IEEE.",
    "keywords": "Cloud computing; microservices; QoS model; software engineering",
    "released": 2017,
    "link": "https://doi.org/10.1109/FAS-W.2017.150",
    "interesting": "-"
  },
  {
    "title": "Metadata-based code example embedding",
    "abstract": "In practice, developers usually seek different ways to save time and effort. Thus, they use different tools (such as search engines, issue tracking, or Q&A sites) to collaborate and find code examples that meet their specific needs. However, such tools only support the traditional find-alter-embed approach of code examples while ignoring the origin and location of these sources. Such information can be very useful to assist software development tasks such as bug-fixing, teamwork, and knowledge transfer, through direct notification of critical changes made to the code example, or access to the original source including its discussions, issues, and bug reports. In this paper, we propose a new approach that consists of collecting meta information about a code example to automatically track critical changes to it and its origin and provide feedback to both developers and the online community. We report on our vision, approach and challenges, and draft a software architecture to implement our research idea. © 2017 Association for Computing Machinery.",
    "keywords": "Code Example Embedding; Collaborative Software Development; Development Environment; Mining Software Repositories; Software process",
    "released": 2017,
    "link": "https://doi.org/10.1145/3121257.3121258",
    "interesting": "-"
  },
  {
    "title": "Automated risk identification using NLP in cloud based development environments",
    "abstract": "In typical software development practice, the risk assessment is not being done in an integrated manner along with the SDLC life cycle. Mostly, risk assessment is a reactive process carried out either during the deployment process or during the evaluation of software for business. Humans are involved in the risk assessment process which is time consuming, error prone and expensive. The risks identified is also not immediately reflected upon the various people in the software development value chain. This causes the churning rate to find or alleviate risks in the future. In typical SDLC, risks may be developed while coding and it may be evident and would takes different shape as different version of the software gets updated over a period of time. Security aspects of the software solution depends on the code which needs to be consistently tracked on a continuous basis to monitor changes and its related risks, without which vulnerabilities and weakness identification will be reactive. It is always essential to identify risks based on the experience from others that is where the use of risk assessment frameworks would be handy along with vulnerability and weakness database such as common weakness enumeration, common vulnerability enumeration and Exploit DB. In this paper, NLP is implemented using deep learning techniques. This paper addresses the need for automated risk assessments with the help of NLP to auto identify the risks on the analysis of weakness and vulnerabilities. © 2017 Springer-Verlag Berlin Heidelberg",
    "keywords": "Deep learning; NLP; Risk assessment; Risk identification; Vulnerabilities; Weakness",
    "released": 2017,
    "link": "https://doi.org/10.1007/s12652-017-0503-7",
    "interesting": "-"
  },
  {
    "title": "Integration of static worst-case execution time & stack usage analysis for embedded systems software in a cloud-based development environment",
    "abstract": "New applications relying on embedded systems technologies often come with an increased number of features and functionalities. For instance, improved safety, reliability, usability or reduced power consumption are commonly encountered aspects. Those in turn, however, come usually at the cost of increased complexity. Managing the latter can become challenging, especially when looking at (worst-case) execution times or memory usage of embedded systems. In particular, many applications, e.g., safety-critical or real-time applications, require knowledge about the worst-case execution time and stack usage to make a clear statement on important system parameters such as the overall performance or schedulability with regard to critical deadlines. Assessing these properties require elaborate tool support and profound knowledge and skills of the developers. In this paper, an evaluation of static analysis tools and the required steps to integrate these in a existing development environment is presented. The toolchain is either considered to be offline or deployed within a cloud-based integrated development environment. The cloud-approach enables ubiquitous access to the results and a unique visualization across multiple platforms. Additionally, the results are demonstrated along with a small use case. © Copyright 2017 ASME.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.1115/DETC2017-67402",
    "interesting": "-"
  },
  {
    "title": "Ontology testing based on requirements formalization in collaborative development environments",
    "abstract": "In the last years, ontologies are commonly developed in collaborative environments where there are several experts involved in the development process. When the ontology engineers deliver an ontology the users expect a complete ontology which fulfils all the requirements they ask for. However, in most cases the ontology engineers cannot prove this completeness, as they did not carry out any testing process. Adopting testing as an activity in ontology development will lead to an improvement on the quality of ontologies regarding its completeness, as they are going to be tested before its publication. In the PhD proposed, we introduce an ontology testing framework whose aim is to assure both ontology engineers and users the completeness of an ontology.",
    "keywords": "",
    "released": 2017,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85033703332&partnerID=40&md5=d71601f60afd1bac3d037a47d5a72fb7",
    "interesting": "-"
  },
  {
    "title": "Flexible Programming Tool Enabling Synergy between Human and Robot",
    "abstract": "This paper discusses a method for flexible robot programming and execution control, through the enablement of human-robot collaborative tasks. This method considers data that are initially generated, in an offline programming tool and are corrected online by considering feedback from force and vision sensors. A number of tasks are dynamically assigned to both human and robot resources. The user tests the programming result via an external control system. The initially assigned tasks can be re-assigned online. The method has been implemented, at the top of ROS, as an android application and has been applied to automotive and aeronautics industries for the execution of screwing and insert operations. © 2017 The Authors",
    "keywords": "human robot collaboration; human robot interaction; offline program generation; robot programming; ROS",
    "released": 2017,
    "link": "https://doi.org/10.1016/j.promfg.2017.07.131",
    "interesting": "-"
  },
  {
    "title": "Luna Moth A Web-based Programming Environment for Generative Design",
    "abstract": "Current Generative Design (GD) tools require installation and regular updates. On top of that, programs that are created using them are stored as files, which have to be moved and shared manually with others. On the other hand, web applications are accessible using just a web browser and they can also store information remotely, meaning that it does not need to be moved and is easily shared with others. Consequently, GD tools should also be available as web applications to get the same functionality. We present Luna Moth, an IDE for GD available from the web that shows the relationship between a program and its results and integrates into the architect's workflow. Then, we give examples where Luna Moth's features help the architect during the programming process. Finally, we compare Luna Moth's performance with other IDEs, namely, Grasshopper, OpenJSCAD, and Rosetta. © 2017, Education and research in Computer Aided Architectural Design in Europe. All rights reserved.",
    "keywords": "Design tool integration; Generative Design; Web application",
    "released": 2017,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85068381359&partnerID=40&md5=1fcb96f682930b8656c69414b981336e",
    "interesting": "-"
  },
  {
    "title": "Web-based platform for subtitles customization and synchronization in multi-screen scenarios",
    "abstract": "This paper presents a web-based platform that enables the customization and synchronization of subtitles on both single- and multi-screen scenarios. The platform enables the dynamic customization of the subtitles' format (font family, size, color⋯) and position according to the users' preferences and/or needs. Likewise, it allows configuring the number of subtitles lines to be presented, being able to restore the video playout position by clicking on a specific one. It also allows the simultaneous selection of various subtitle languages, and applying a delay offset to the presentation of subtitles. All these functionalities can also be available on (personal) companion devices, allowing the presentation of subtitles in a synchronized manner with the ones on the main screen and their individual customization. With all these functionalities, the platform enables personalized and immersive media consumption experiences, contributing to a better language learning, social integration and an improved Quality of Experience (QoE) in both domestic and multi-culture environments. © 2017 Copyright is held by the owner/author(s).",
    "keywords": "Accessibility; IDES; Multi-Screen scenarios; QoE; Social integration; Subtitles; Synchronization; Web",
    "released": 2017,
    "link": "https://doi.org/10.1145/3084289.3089913",
    "interesting": "-"
  },
  {
    "title": "XLogoOnline: A single-page, browser-based programming environment for schools aiming at reducing cognitive load on pupils",
    "abstract": "For more than twelve years, our chair has been introducing primary school children to algorithmic thinking by teaching them how to program in Logo. The key element of the proposed didactic approach consists in reducing the extraneous cognitive load on the pupils. We developed and stepwise refined the required teaching materials that allow for introducing only a few instructions in a programming language, which is gradually extended simply relying on modular design. XLogoOnline is our new browser-based, single-page programming environment for schools which is perfectly attuned to our curriculum. We argue that the platform reduces the extraneous cognitive load on the pupils thanks to a heavily-simplified workflow, appropriate for young children, and present evaluations that confirm high usability and acceptance across ages. © Springer International Publishing AG 2017.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-71483-7_18",
    "interesting": "-"
  },
  {
    "title": "Designing and analysis of user profiling system for cloud computing security using fuzzy guided genetic algorithm",
    "abstract": "On one side the Cloud Computing offers scalable virtual computing resources in the form of web-services on pay-as-you-go basis; but on other side, it also raises the concerns regarding the security threats to the Cloud environment from outside and inside the environment. The existing security systems are not able to withstand the dynamic nature of threats, so some sort of augmentations are required to the existing security systems which will enable the security systems to work in more prominent way. Inter-VM attacks possess such kind of threats from inside the Cloud environment. User profiling can be helpful in this situation by analyzing the usage patterns of the users and by providing the plausible interpretation from those usage patterns to the security system and then, the security system, based on those interpretations, act in reactive and proactive manner to the analyzed threat situation. This paper is the based on the findings from our last paper, where we had found that the designing of User Profiling System based on Artificial Intelligence techniques: Fuzzy and Genetic Algorithms are individually not sufficient to deliver a comprehensive User Profiling System but it might be possible to use these two approaches in a hybrid way to design a comprehensive User Profiling System for Cloud Computing security. Hence, we used hybrid approach Fuzzy guided Genetic Algorithm to design a User Profiling System and found that it covered all the research gaps, which we had analyzed in our previous work and even it fulfill all the seven principles of the evaluating framework. © 2016 IEEE.",
    "keywords": "Datacenters; Distributed Computing; E-assests; Fuzzy Systems; Genetic Algorithms; Genetic Engineering; IDEs; One-time ownership cost model; Pay-as-you-go; Virtual Computing",
    "released": 2017,
    "link": "https://doi.org/10.1109/CCAA.2016.7813823",
    "interesting": "-"
  },
  {
    "title": "Harmonik = ++(Web IDE)",
    "abstract": "IDE (Integrated Development Environment) that is needed by developers to write sourcecode for computer programming is also starting to shift from desktop to web platform. As implemented in the cloud, Web IDE (WIDE) can be accessed online through browsers and on mobile devices. WIDE takes many advantages and becomes popular in recently years. Unfortunately, there is no tool found yet in currently WIDE to support translating novice programmers' algorithm into programming language before they become experts in techniques of writing computer programs. This study goal is to design a tool to support novice programmers' early learning of programming before they step into coding, compiling, running, and debugging in WIDE. Software development method used in this study is Rational Unified Process (RUP). Conclusion of this study is block-code tool can help novice programmers to learn programming language in early phase, and motivate them better. © 2017 The Authors. Published by Elsevier B.V.",
    "keywords": "Browser IDE; Cloud IDE; Integrated Development Environment; Mobile IDE; Online IDE; Web IDE",
    "released": 2017,
    "link": "https://doi.org/10.1016/j.procs.2017.10.044",
    "interesting": "-"
  },
  {
    "title": "Interconnected Linguistic Architecture",
    "abstract": "The context of the reported research is the documentation of software technologies such as object/relational mappers, web-application frameworks, or code generators. We assume that documentation should model a macroscopic view on usage scenarios of technologies in terms of involved artifacts, leveraged software languages, transformation and conformance relationships, I/O behavior, and others. In previous work, we referred to such documentation also as ‘linguistic architecture’. The corresponding models may also be referred to as ‘megamodels’ while adopting this term from the technological space of modeling/modeldriven engineering. This work is an inquiry into making such documentation more useful by means of connecting (mega)models, systems, and developer experience in several ways. To this end, we adopt an approach that is primarily based on prototyping (i.e., implementation of a megamodeling infrastructure with all conceivable connections) and experimentation with showcases (i.e., documentation of concrete software technologies). The knowledge gained by this research is a notion of interconnected linguistic architecture on the grounds of connecting primary model elements, inferred model elements, static and runtime system artifacts, traceability links, system contexts, knowledge resources, plugged interpretations of model elements, and IDE views. A corresponding suite of aspects of interconnected linguistic architecture is systematically described. As to the grounding of this research, we describe a literature survey which tracks scattered occurrences and thus demonstrates the relevance of the identified aspects of interconnected linguistic architecture. Further, we describe the MegaL/Xtext+IDE infrastructure which realizes interconnected linguistic architecture. The importance of this work lies in providing relatively formal, ontologically rich, navigable, and verifiable documentation of software technologies, thereby helping developers to better understand how to use technologies in new systems (prescriptive mode) or how technologies are used in existing systems (descriptive mode). © Johannes Härtel, Lukas Härtel, Marcel Heinz, Ralf Lämmel, and Andrei Varanovich.",
    "keywords": "Documentation; IDE; Linguistic architecture; MegaL; Megamodeling; Ontology engineering; Software technology; Traceability; Xtext",
    "released": 2017,
    "link": "https://doi.org/10.22152/programming-journal.org/2017/1/3",
    "interesting": "-"
  },
  {
    "title": "Exside: Component based object oriented expert system’s integrated development environment",
    "abstract": "This paper describes the design and development of a component-based object oriented Expert System's Integrated Development Environment (ExSIDE). It is integrated with (i) a user-friendly manual and automated knowledge acquisition and management tool (ExSIDE_KAMT);(ii) an independent and customizable runtime module (ExSIDE_RTM); (iii) an object-oriented in-process Component Object Model (COM)-based inference engine (ExSIDE_IE); (iv) an object-oriented out-of-process COM-based inference engine (ExSIDE_IESvr); (v) and a PHP based inference engine (ExSIDE_PHP). ExSIDE_RTM can function independently as an Expert System Shell (ESS) and helps user to develop Expert Systems rapidly. ExSIDE_IE and ExSIDE_IES can be integrated with COM-supporting general purpose and scientific application development tools such as variants of C/C++/C#, BASIC (Visual BASIC®, REALbasic®), Java, MATLAB®, LabVIEW®, and Mathematica® to develop more advanced Expert Systems. Finally, ExSIDE_IE and ExSIDE_PHP can be used with Active Server Pages (ASP) and PHP technologies to generate web based Expert Systems. The unique framework of the ExSIDE enables rapid development of Expert Systems' on PC and web for technical and non-technical users. The overall system was developed successfully, and its usability was demonstrated via five unique Expert Systems case studies discussed in this paper. © 2017, Politeknik Negeri Padang. All rights reserved.",
    "keywords": "COM Components; Decision Tree; Expert System; Object Oriented",
    "released": 2017,
    "link": "https://doi.org/10.30630/joiv.1.3.27",
    "interesting": "-"
  },
  {
    "title": "Work in progress: Identifying and analyzing original projects in an open-ended blocks programming environment",
    "abstract": "Tens of millions of people have used online blocks programming environments like App Inventor to learn how to program and build personally meaningful programs and apps. We want to improve blocks programming environments and pedagogies by using learning analytics to identify common problems and then address them. For most users, there is no information about which projects are original (built from scratch by individuals or groups based on their own ideas and current programming skills) vs. unoriginal (based on tutorials, class exercises, etc.). To understand what App Inventor users are learning and what misconceptions they have, we need to filter out unoriginal projects and focus on original ones. Here we describe two key aspects of our work in progress towards this goal. First, we have developed feature-vector representations of App Inventor projects that formalize a notion of structural similarity between them. This representation facilitates filtering out unoriginal work like tutorials and can be used within a group of learners to distinguish classroom activities from original projects. Second, we have developed a graph clustering technique based on project creation timestamps to discover groups of App Inventor users that appear to be taking a course together - essential information for distinguishing original vs. unoriginal work that is not explicitly represented in our datasets.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.18293/DMSVLSS2017-021",
    "interesting": "-"
  },
  {
    "title": "A formal modeling tool for exploratory modeling in software development",
    "abstract": "The software development process is front-loaded when formal specification is deployed and as a consequence more problems are identified and solved at an earlier point of time. This places extra importance on the quality and efficiency of the different formal specification tasks. We use the term \"exploratory modeling\" to denote the modeling that is conducted during the early stages of software development before the requirements are clearly understood. We believe tools that support not only rigorous but also flexible construction of the specification at the same time are helpful in such exploratory modeling phases. This paper presents a web-based IDE named VDMPad to demonstrate the concept of exploratory modeling. VDMPad has been evaluated by experienced professional VDM engineers from industry. The positive evaluation resulting from such industrial users are presented. It is believed that flexible and rigorous tools for exploratory modeling will help to improve the productivity of the industrial software developments by making the formal specification phase more efficient. © 2017 The Institute of Electronics, Information and Communication Engineers.",
    "keywords": "Formal specification; Integrated development environment; Lightweight formal methods; VDM",
    "released": 2017,
    "link": "https://doi.org/10.1587/transinf.2016FOP0003",
    "interesting": "-"
  },
  {
    "title": "Supporting comprehension of unfamiliar programs by modeling cues",
    "abstract": "Developers need to comprehend a program before modifying it. In such cases, developers use cues to establish the relevance of a piece of information with a task. Being familiar with different kinds of cues will help the developers to comprehend a program faster. But unlike the experienced developers, novice developers fail to recognize the relevant cues, because (a) there are many cues and (b) they might be unfamiliar with the artifacts. However, not much is known about the developers’ choice of cue. Hence, we conducted two independent studies to understand the kind of cues used by the developers and how a tool influences their cue selection. First, from our user study on two common comprehension tasks, we found that developers actively seek the cues and their cue source choices are similar but task dependent. In our second exploratory study, we investigated whether an integrated development environment (IDE) influences a developer’s cue choices. By observing their interaction history while fixing bugs in Eclipse IDE, we found that the IDE’s influence on their cue choices was not statistically significant. Finally, as a case in point, we propose a novel task-specific program summarization approach to aid novice developers in comprehending an unfamiliar program. Our approach used developers cue choices to synthesize the summaries. A comparison of the synthesized summaries with the summaries recorded by the developers shows both had similar content. This promising result encourages us to explore task-specific cue models, which can aid novice developers to accomplish complex comprehension tasks faster. © 2016, Springer Science+Business Media New York.",
    "keywords": "Cues; Developer interaction; Information scent; Integrated development environment; Program comprehension; Summarization",
    "released": 2017,
    "link": "https://doi.org/10.1007/s11219-015-9303-5",
    "interesting": "-"
  },
  {
    "title": "Evaluation of formal IDEs for human-machine interface design and analysis: The case of CIRCUS and PVSio-web",
    "abstract": "Critical human-machine interfaces are present in many systems including avionics systems and medical devices. Use error is a concern in these systems both in terms of hardware panels and input devices, and the software that drives the interfaces. Guaranteeing safe usability, in terms of buttons, knobs and displays is now a key element in the overall safety of the system. New integrated development environments (IDEs) based on formal methods technologies have been developed by the research community to support the design and analysis of high-confidence human-machine interfaces. To date, little work has focused on the comparison of these particular types of formal IDEs. This paper compares and evaluates two state-of-the-art toolkits: CIRCUS, a model-based development and analysis tool based on Petri net extensions, and PVSio-web, a prototyping toolkit based on the PVS theorem proving system. © 2017, Open Publishing Association. All rights reserved.",
    "keywords": "",
    "released": 2017,
    "link": "https://doi.org/10.4204/EPTCS.240.1",
    "interesting": "-"
  },
  {
    "title": "Secure multi-agent integrated password management (MIPM) application",
    "abstract": "Rapid development of the Internet and increasing number of available Web applications require users to memorize the passwords for authentication. Password management system is a solution to store login information such as password and help users to log in automatically. In preventing from password leaking, this project was integrated with the multi-agents using Java Agent Development Environment (JADE). The purpose of the embedded agents is act as the third party software to ease the encryption process. The application agent sends data to Crypto Agent using Agent Communication Language (ACL) message, a method of communication between agents. Upon receiving, crypto agent encrypts the data using AES 128-bit encryption algorithm. AES will facilitate the process of the encryption and decryption, and withstand the application from the brute force attack. As whole, MIPM is a development on android application that provide secure platform to store their login account information such as their username, emails and passwords. While, the implementation of the multi-agent communication in this project can be expanded to be commercialize for any web applications development.",
    "keywords": "AES encryption; Java agent development environment; Multi-agent; Password management",
    "released": 2017,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032950059&partnerID=40&md5=8f1924e1ba0d338d58a060aa72cf6826",
    "interesting": "-"
  },
  {
    "title": "IDEArq-C14: A Spatial Data Infrastructure for the Radiocarbon Chronology of Iberian Recent Prehistory; [IDEArq-C14: Una Infraestructura de Datos Espaciales para la cronología radiocarbónica de la Prehistoria Reciente ibérica]",
    "abstract": "IDEArq is an information system designed for the dissemination of archaeological data on the Internet through its geospatial dimension under open access conditions. IDEArq is a Spatial Data Infrastructure (IDE), an open-source georeferenced information distribution platform designed according to international standards and norms. The data can be consulted through a web service from different applications (web browsers, GIS software) and through the cartographic visualizer of the IDEArq geoportal. IDEArq-C14 is integrated in IDEArq. It is a file of radiocarbon dating from archaeological sites in the Iberian Peninsula. The chrono-cultural scope of the data ranges from the Epipaleolithic / Mesolithic to the Iron Age, although it includes previous (Paleolithic) or later (Roman and Medieval) dates for deposits that also present these phases of occupation. The dating is accessible through the sites to which they are linked. Each site is georeferenced and described by a series of basic attributes (place name, administrative units, chrono-cultural and typological descriptors, general description). In turn, the data belonging to it are shown in list form, with the following attributes: laboratory acronym, BP date with standard deviation, material, method of measurement, stratigraphic context and observations.",
    "keywords": "",
    "released": 2017,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040519334&partnerID=40&md5=2271bc6b090ab5e843731bc3f4d01578",
    "interesting": "-"
  },
  {
    "title": "CodePilot: Scaffolding end-to-end collaborative software development for novice programmers",
    "abstract": "Novice programmers often have trouble installing, configuring, and managing disparate tools (e.g., version control systems, testing infrastructure, bug trackers) that are required to become productive in a modern collaborative software development environment. To lower the barriers to entry into software development, we created a prototype IDE for novices called CodePilot, which is, to our knowledge, the first attempt to integrate coding, testing, bug reporting, and version control management into a real-time collaborative system. CodePilot enables multiple users to connect to a web-based programming session and work together on several major phases of software development. An eight-subject exploratory user study found that first-time users of CodePilot spontaneously used it to assume roles such as developer/tester and developer/assistant when creating a web application together in pairs. Users felt that CodePilot could aid in scaffolding for novices, situational awareness, and lowering barriers to impromptu collaboration. © 2017 ACM.",
    "keywords": "Collaborative IDE; Novice programmers; Pair programming",
    "released": 2017,
    "link": "https://doi.org/10.1145/3025453.3025876",
    "interesting": "+"
  },
  {
    "title": "User centered integration of Internet of Things devices",
    "abstract": "This paper discusses an IoT framework which allows rapid and easy setup and customization of end-to-end solutions for field data collection and presentation; it is effective in the development of both informative and transactional applications for a wide range of application fields, such as home, industry and environment. On the \"far-end\" of the chain are the IoT devices gathering the signals; they are developed used a full Model Based approach, where programming is not required: the TaskScript technology is used to this purpose, which supports a choice of physical boards and boxes equipped with a range of Input and Output interfaces, and with a Tcp/Ip interface. The development of the needed specific IoT devices takes advantage of the available \"standard\" hardware; the software development of the algorithms for sampling, conditioning and uploading signals to the Cloud is supported by a graphical-only IDE. On the \"near-end\" of the chain is the presentation Interface, through which users can browse through the information provided by their IoT devices; it is implemented in a Conversational way, using the Bot paradigm: Bots are conversational automatons, to whom users can \"chat\". They are accessed via mainstream Messenger programs, such as Telegram(C), Skype(C) or others, available on smartphones, tablets or desktops; unlike apps, bots do not need installation on the user device. A message Broker has been implemented, to mediate among the far-end and the near-end of the chain, providing the needed services; its behavior is driven by a set of rules provided on a per-device basis, at configuration level; the Broker is able to store messages received from the devices, process and forward them to the specified recipient(s) according to the provided rules; finally, finally is it is able to send transactional commands, from users back to the requested device, to implement not only field observation but also field control. IoT solutions implemented with the proposed solution are user friendly: users can literally \"chat with their devices\", asking for information, providing commands, and receiving alert notifications, all with their favorite (mobile) terminal. To demonstrate de effectiveness of the proposed scenario, several solutions have been set up for industrial applications; such \"mobile dashboards\" are presently used by managers and technicians to keep track of their machines and plants. © 2017 SPIE.",
    "keywords": "Graphical IDE; Intelligent Sensors; Internet of Things; Model-Based Design; Reactive Systems",
    "released": 2017,
    "link": "https://doi.org/10.1117/12.2265394",
    "interesting": "-"
  },
  {
    "title": "KSD: An ontology-driven yet semantically transparent application development tool",
    "abstract": "To come up with a semantic web application, it requires skills from two major backgrounds: (a) domain experts to model and populate a semantic knowledge base; and (b) application developers to understand the domain ontology and then build an interface for end users. Learning and using such tools is an overhead and slows down the development process. To address these problems, our paper proposes KSD - Knowledge Serializer and De-serializer tool, that takes an ontology as an input and represents it in a structured form (like JSON, XML) while preserving the underlying semantic information. This format is adaptable to the changes in the underlying ontology and can be used to create user interface, web services and other application modules. © Springer International Publishing AG 2017.",
    "keywords": "Ontology-driven user interface; Semantic data processing; Semantic user interface; Serialization",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-55961-2_23",
    "interesting": "-"
  },
  {
    "title": "Recommendflow: Use topic model to automatically recommend stack Overflow Q&A in IDE",
    "abstract": "Developers often look information in the web during software development and maintenance. That means they spend time to formulate query, retrieve documents and process the results from many sources of information. Stack Overflow, one of the most popular question and answer sites and the most important information sources for developers, has become one of the most important information sources for developers. In this paper, we proposed a new approach that use LDA model and Q&A meta-information to automatically generate query from code context and recommend the retrieval Q&A to developers. We implemented the approach in Recommendflow, an Eclipse plugin. We considered one existing recommendation model as baseline and conducted an experiment to compare our approach with baseline. Our experiment on the test data set shows that LDA-based model outperforms existing Stack Overflow recommendation model. © 2017, ICST Institute for Computer Sciences, Social Informatics and Telecommunications Engineering.",
    "keywords": "Crowd knowledge; Q&A; Recommend system; Software development; Topic model",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-59288-6_50",
    "interesting": "-"
  },
  {
    "title": "Semantics-supported collaborative creation of interactive 3D content",
    "abstract": "Interactive 3D techniques offer a new quality in the design of user interfaces of computer applications, in particular when 3D applications are accessible remotely over the internet. A critical element for building practical 3D applications is adequate 3D synthetic content. However, designing high-quality interactive 3D content is a complex and challenging task. This difficulty is one of the major obstacles preventing widespread use of 3D techniques on the web in many promising application domains. In this paper, a new approach to 3D content creation is presented. The approach employs a range of techniques for simplification of the content creation process, but its main novelty lies in the fact that properly structured content can be created by communities of designers, regardless of whether they explicitly collaborate or not. Appropriate organization and consistency of the user-contributed content is enforced by the use of semantic web techniques with external domain ontologies. The presented approach is consistent both with the existing content creation pipelines and business models, aiming at enhancing and not replacing the current practices in digital content creation. A prototype of a tool for 3D content design implemented as an extension to the Unity IDE is also presented. © Springer International Publishing AG 2017.",
    "keywords": "3D content; 3D web; Content creation; Semantic web; Unity IDE",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-60928-7_33",
    "interesting": "-"
  },
  {
    "title": "An overview of the U.S. Army Research Laboratory's Sensor Information Testbed for Collaborative Research Environment (SITCORE) and Automated Online Data Repository (AODR) capabilities",
    "abstract": "The Sensor Information Testbed COllaberative Research Environment (SITCORE) and the Automated Online Data Repository (AODR) are significant enablers of the U.S. Army Research Laboratory (ARL)'s Open Campus Initiative and together create a highly-collaborative research laboratory and testbed environment focused on sensor data and information fusion. SITCORE creates a virtual research development environment allowing collaboration from other locations, including DoD, industry, academia, and collation facilities. SITCORE combined with AODR provides end-toend algorithm development, experimentation, demonstration, and validation. The AODR enterprise allows the U.S. Army Research Laboratory (ARL), as well as other government organizations, industry, and academia to store and disseminate multiple intelligence (Multi-INT) datasets collected at field exercises and demonstrations, and to facilitate research and development (R and D), and advancement of analytical tools and algorithms supporting the Intelligence, Surveillance, and Reconnaissance (ISR) community. The AODR provides a potential central repository for standards compliant datasets to serve as the \"go-to\" location for lessons-learned and reference products. Many of the AODR datasets have associated ground truth and other metadata which provides a rich and robust data suite for researchers to develop, test, and refine their algorithms. Researchers download the test data to their own environments using a sophisticated web interface. The AODR allows researchers to request copies of stored datasets and for the government to process the requests and approvals in an automated fashion. Access to the AODR requires two-factor authentication in the form of a Common Access Card (CAC) or External Certificate Authority (ECA) © COPYRIGHT SPIE.",
    "keywords": "algorithm development environment; Amazon Web Services; AODR; Cloud computing; database; HDF5 format; MMSDB; sensor information testbed; signature data; SITCORE",
    "released": 2017,
    "link": "https://doi.org/10.1117/12.2267309",
    "interesting": "-"
  },
  {
    "title": "Survey on compatibility issues in cross platform mobile applications using development tools",
    "abstract": "Mobile devices and mobile computing have made tremendous advances and become ubiquitous in the last few years. As a result, the landscape has become seriously fragmented which brings lots of challenges for the mobile development process. Whilst native approach of mobile development still is the predominant way to develop for a particular mobile platform, recently there is shifting towards cross-platform mobile development as well. In this thesis, a survey of the literature has been performed to see the trends in cross platform mobile development over the last few years. With the result of the survey, it is argued that the web-based approach and in particular, hybrid approach, of mobile development serves the best for cross-platform development. Using the hybrid approach, a prototype application has also been developed and built into native application for different platforms. This has helped to get a better insight about the domain of cross-platform mobile development and its main advantage of the unification of the development and testing process. The results of this work indicate that even though cross platform tools are not fully matured they show great potential and reduce the cost associated in developing native mobile applications. Cross-platform mobile development is equally suitable for rapid development of high-fidelity prototypes of the mobile application as well as fairly complex, resource intensive mobile applications on its own right. As the upcoming future trends and the evolution of HTML5 continues to redefine the web, allowing its growth as a software platform, there remains great opportunities for cross-platform mobile development and hence provides an attractive alternative for the native mobile development. © 2017, Institute of Advanced Scientific Research, Inc. All rights reserved.",
    "keywords": "Compatibility; Cross platform; Cross platform tools; Mobile platform",
    "released": 2017,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85028761771&partnerID=40&md5=a657f785705075e959afff6eadff6b44",
    "interesting": "-"
  },
  {
    "title": "Skramble: An embeddable python programming environment for use in learning systems",
    "abstract": "Computing has recently been introduced as a core subject in British schools, meaning that children need to learn computer programming. Teachers have to be prepared to deliver the new curriculum and children need the correct environment and support to succeed. This paper discusses TuringLab, a challenge-based learning system for the Python programming language and proposes Skramble, an embeddable Python programming environment for use within existing learning systems. TuringLab has been used to teach children how to programme at a number of volunteer-led coding clubs. Children engaged well with the system, and the volunteers, who acted as teachers in these sessions, found it an extremely valuable educational tool. Skramble is an open source environment and is designed to abstract functionality such as code execution, error handling, syntax analysis, code testing, output capture and package management: allowing this feature-rich environment to be easily integrated into existing learning systems. © Springer International Publishing AG 2017.",
    "keywords": "Computer programming; Information technology; Online learning; Open source; Python programming",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-63184-4_11",
    "interesting": "-"
  },
  {
    "title": "XOOM: An end-user development tool for web-based wearable immersive virtual tours",
    "abstract": "XOOM is a novel interactive tool that allows non ICT-specialists to create web-based applications of Wearable Immersive Virtual Reality (WIVR) technology that use 360° realistic videos as interactive virtual tours. These applications are interesting for various domains that range from gaming, entertainment, cultural heritage, and tourism to education, professional training, therapy and rehabilitation. 360° interactive videos are displayed on smartphones placed on head-mounted VR viewers. Users explore the virtual environment and interact with active elements through head direction and movements. The virtual scenarios can be seen also on external displays (e.g., TV monitors or projections) to enable other users to participate in the experience, and to control the VR space if needed, e.g., for education, training or therapy purposes. XOOM provides the functionality to create applications of this kind, import 360° videos, concatenate them, and superimpose active elements on the virtual scenes, so that the resulting environment is more interactive and is customized to the requirement of a specific domain and user target. XOOM also supports automatic data gathering and visualizations (e.g., through heat-maps) of the users’ experience, which can be inspected for analytics purposes, as well as for user evaluation (e.g., in education, training, or therapy contexts). The paper describes the design and implementation of XOOM, and reports a case study in the therapeutic context. © Springer International Publishing AG 2017.",
    "keywords": "360° videos; Children; Head-mounted display; Virtual tour - end user development - therapy - neurodevelopmental disorder; Wearable immersive virtual reality",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-60131-1_36",
    "interesting": "-"
  },
  {
    "title": "Improved developer support for the detection of cross-browser incompatibilities",
    "abstract": "Various tools are available to help developers detect crossbrowser incompatibilities (XBIs) by testing the documents generated by their code.We propose an approach that enables XBIs to be detected earlier in the development cycle by providing support in the IDE as the code is being written. This has the additional advantage of making it clear to the developers where the sources of the problems are and how to fix them. We present wIDE which is an extension to an IDE designed specifically to support web developers. wIDE uses a compatibility knowledge base to scan the source code for XBIs. The knowledge base is extracted automatically from online resources and periodically updated to ensure that the compatibility information is always up-to-date. In addition, developers can query documentation from within the IDE to access descriptions and usage examples of code statements. We report on a qualitative user study where developers provided positive feedback about the approach, but raised some issues to address in future work. © Springer International Publishing AG 2017.",
    "keywords": "Compatibility; Documentation; IDE; Testing; Web applications",
    "released": 2017,
    "link": "https://doi.org/10.1007/978-3-319-60131-1_15",
    "interesting": "-"
  },
  {
    "title": "JavaScript applications for CS0/CS1: Getting hands-on with code.org’s app lab (abstract only)",
    "abstract": "App Lab (https://code.org/applab) is Code.org’s rapid-prototyping environment for creating HTML, CSS, and JavaScript-powered web applications. It was created as part of a rich set of instructional resources designed for teachers of the new AP Computer Science Principles (CSP) course. Yet, App Lab far exceeds the needs of CSP, and would be an appropriate learning environment for students in any CS0/CS1 class, even at the university level. App Lab gives novice programmers access to capabilities previously reserved for courses that require sophisticated tech setup and knowledge of both front and backend web development, server-side scripting, databases, etc.Rather than focusing on curriculum, this workshop will focus on how App Lab works as a programming tool in its own right, and how it was designed to aid and motivate student learning. Participants will get hands-on time with some of App Lab’s more advanced features guided by a Code.org product manager, while working with the education team to help understand the educational philosophy that went into its development. Participants will come away with exemplars that highlight App Lab’s possibilities, practice with some of its richer features, and do a hackathon to create something to share with each other (and the world)! Finally, we will end with a discussion about how best to integrate App Lab into existing courses.App Lab was developed as part of collaboration between Code.org and David Bau (Google), creator of PencilCode.net.A laptop is required for this session. All other materials will be provided.",
    "keywords": "web development; programming environment; javascript; cs1; cs0; code.org; app lab",
    "released": 2016,
    "link": "https://doi.org/10.1145/2839509.2844692",
    "interesting": "-"
  },
  {
    "title": "JooMDD: A model-driven development environment for web content management system extensions",
    "abstract": "Developing software extensions for Web Content Management Systems (WCMSs) like Joomla, WordPress, or Drupal can be a difficult and time consuming process. In this demo we present JooMDD, an environment for model-driven development of software extensions for the WCMS Joomla. JooMDD allows the rapid development of standardised software extensions requiring reduced technological knowledge of Joomla. This implies that even inexperienced developers are able to create their own functional WCMS extensions. This demonstrates that a model-driven approach is suitable for the domain of WCMSs.A supporting video illustrating the main features and a demonstration of JooMDD can be found at: https://youtu.be/Uy_WBIjPldI.",
    "keywords": "web content management systems; model-driven development; Joomla",
    "released": 2016,
    "link": "https://doi.org/10.1145/2889160.2889176",
    "interesting": "-"
  },
  {
    "title": "Using a visual programming environment and custom robots to learn c programming and k-12 STEM concepts",
    "abstract": "This paper presents a robot-Visual Programming Environment (VPE) interface that can support K-12 students to learn science, technology, engineering, and math (STEM) concepts. Specifically, we employ Google’s Blockly VPE to construct a blocks-based visual programming tool to facilitate easy programming of and interaction with physical robots. Through a careful and intentional integration of the Blockly VPE and physical robots, we illustrate that many K-12 level STEM concepts, which are traditionally treated through lectures and problem-solving, can be explored in a hands-on manner. The use of Blockly VPE obviates the need for prior experience with computer programming or familiarity with advanced programming concepts. Moreover, it permits students to learn various programming constructs, sequentially, starting from the fundamentals and gradually progressing to advanced concepts. The web-based Blockly VPE provides an interface that allows the user to browse through a block library and construct a block code for which a corresponding C program is automatically generated. The default web-based Blockly interface has been modified to permit the user to edit the resulting C program or to create an entirely new C program. Moreover, the Blockly VPE allows the user to wirelessly upload the C program to a Linux server running on a Raspberry Pi computer hosted on the robot. The Raspberry Pi compiles the received C program and serially transfers corresponding instructions to the robot’s embedded hardware. The efficacy of the proposed robot-VPE interface is examined through students’ experiences in conducting several illustrative robot-based STEM learning activities. The results of content quizzes and surveys show gains in students’ understanding of STEM concepts after participation in robotics activities with the VPE interface.",
    "keywords": "Visual Programming; Robotics; Puppet Robot; K-12 STEM Education; Interface; Blockly",
    "released": 2016,
    "link": "https://doi.org/10.1145/3003397.3003403",
    "interesting": "-"
  },
  {
    "title": "Jimbo: A collaborative IDE with live preview",
    "abstract": "Team collaboration plays a key role in the success of any multi-user activity. Software engineering is a highly collaborative activity, where multiple developers and designers work together to solve a common problem. Meaningful and effective designer-developer collaboration improves the user experience, which can improve the chances of success for the project. Learning to program is another activity that can be implemented in a more collaborative way, students can learn in an active style by working with others. The growth of online classes, from small structured seminars to massive open online courses (MOOCs), and the isolation and impoverished learning experience some students report in these, points to an urgent need for tools that support remote pair programming in a distributed educational setting.In this paper, we describe Jimbo, a collaborative integrated development environment (IDE) that we believe is beneficial and effective in both aforementioned activities. Jimbo integrates many features that support better collaboration and communication between designers and developers, to bridge communication gaps and develop mutual understanding. These novel features can improve today’s CS education by bringing students closer to each other and their instructors as well as training them to collaborate which is consistent with current practices in software engineering.",
    "keywords": "web development; user awareness; pair programming; live preview; distance learning; designer-developer collaboration; communication; collaborative learning; collaboration; Jimbo; IDE",
    "released": 2016,
    "link": "https://doi.org/10.1145/2897586.2897613",
    "interesting": "+"
  },
  {
    "title": "COPE: Vision for a change-oriented programming environment",
    "abstract": "Software engineering involves a lot of change as code artifacts are not only created once but maintained over time. In the last 25 years, major paradigms of program development have arisen – agile development with refactorings, software product lines, moving sequential code to multicore or cloud, etc. Each is centered on particular kinds of change; their conceptual foundations rely on transformations that (semi-) automate these changes.We are exploring how transformations can be placed at the center of software development in future IDEs, and when such a view can provide benefits over the traditional view. COPE, a Change-Oriented Programming Environment, looks at 5 activities: (1) analyze what changes programmers typically make and how they perceive, recall, and communicate changes, (2) automate transformations to make it easier to apply and script changes, (3) develop tools that compose and manipulate transformations to make it easier to reuse them, (4) integrate transformations with version control to provide better ways for archiving and understanding changes, and (5) develop tools that infer higher-level transformations from lower-level changes. Characterizing software development in terms of transformations is an essential step to take software engineering from manual development to (semi-) automated development of software.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1145/2889160.2889208",
    "interesting": "-"
  },
  {
    "title": "AB-EUIDE: An approach to the design of ergonomic user interfaces for cloud computing",
    "abstract": "Cloud computing is a rapidly growing technology for many organizations with dynamic scalability and services as virtual through the internet. The design of ergonomic user interface for cloud computing environment using the Multi-agent system for user well-being is required. In this paper, the usage of multi-agent system in designing of Agent-Based Ergonomic User Interface Development Environment for cloud computing is presented. The work is aimed for social, environment, human, personality and ICT developments.",
    "keywords": "AB EUIDE; Abstract user interface Model (AUI); Cloud Computing; Concrete user interface (CUI) Model; Domain Model (DM); Transformation model",
    "released": 2016,
    "link": "https://doi.org/10.1145/2905055.2905056",
    "interesting": "-"
  },
  {
    "title": "EasyApp: A cross-platform mobile applications development environment based on OSGi",
    "abstract": "*** The rapid development of mobile internet abstracts many non-professional persons to creating mobile applications. Traditional development process cannot meet their needs. In this paper, we present a cross-platform mobile development environment based on OSGi framework, EasyApp. It provides a highly-integrated, UI-friendly and easily-operating environment. Applications are comprehensively developed with web techniques. Users could create mobile applications with draggable widgets. Native APIs of mobile phone can be invoked with abundant plugins. After designing, users could package and download applications of multiple platforms. ***",
    "keywords": "End-user development; Mobile application; OSGi; Widgets communication",
    "released": 2016,
    "link": "https://doi.org/10.1145/2934872.2959074",
    "interesting": "-"
  },
  {
    "title": "The IDE as a scriptable information system",
    "abstract": "Software engineering is extremely information-intensive. Every day developers work with source code, version repositories, issue trackers, documentation, web-based and other information resources. However, three key aspects of information work lack good support: (i) combining information from different sources; (ii) flexibly presenting collected information to enable easier comprehension; and (iii) automatically acting on collected information, for example to perform a refactoring. Poor support for these activities makes many common development tasks time-consuming and error-prone. We propose an approach that directly addresses these three issues by integrating a flexible query mechanism into the development environment. Our approach enables diverse ways to process and visualize information and can be extended via scripts. We demonstrate how an implementation of the approach can be used to rapidly write queries that meet a wide range of information needs.",
    "keywords": "code queries; refactoring; software visualization",
    "released": 2016,
    "link": "https://doi.org/10.1145/2970276.2970329",
    "interesting": "-"
  },
  {
    "title": "The IDE portability problem and its solution in monto",
    "abstract": "Modern IDEs support multiple programming languages via plug-ins, but developing a high-quality language plug-in is a huge development effort and individual plug-ins are not reusable in other IDEs. We call this the IDE portability problem. In this paper, we present a solution to the IDE portability problem based on a language-independent and IDE-independent intermediate representation (IR) for editor-service products. This IR enables IDE-independent language services to provide editor services for arbitrary IDEs, using language-independent IDE plug-ins. We combine the IR with a service-oriented architecture to facilitate the modular addition of language services, the decomposition of language services into smaller interdependent services, and the use of arbitrary implementation languages for services. To evaluate the feasibility of our design, we have implemented the IR and architecture in a framework called Monto. We demonstrate the generality of our design by constructing language services for Java, JavaScript, Python, and Haskell and show that they are reusable in the Eclipse IDE and in a web-based IDE. We also evaluate the performance of Monto and show that Monto is responsive and has admissible performance overhead.",
    "keywords": "integrated development environments; reusable software",
    "released": 2016,
    "link": "https://doi.org/10.1145/2997364.2997368",
    "interesting": "-"
  },
  {
    "title": "Rethinking Online Code Editors for Authoring Web-Based Multimedia Presentations",
    "abstract": "In this demo, we present an online code editor that dynamically identifies and patches simple modifications in the source code of a Web document containing time-based elements (e.g., CSS3 and SVG animations, HTML5 audio and video) without the need to restart the playback of the whole document from the beginning. We hope that the functionalities shown in this demo can make learning to code more attractive.",
    "keywords": "online code editor; multimedia authoring tool; immediate feedback; coding assistance; programmatic visualization; playback control; HTML; CSS; JavaScript",
    "released": 2016,
    "link": "https://doi.org/10.1109/ISM.2016.0092",
    "interesting": "-"
  },
  {
    "title": "Synchronized static and dynamic visualization in a web-based programming environment",
    "abstract": "This paper presents an approach of static and dynamic visualizations synchronized along with source code in a web-based programming environment, JavelinaCode. Using JavelinaCode, student programmers can write Java programs directly in a frontend web browser without any software or plug-in installation. They are provided with a view of the static state of a Java program in UML class diagrams and the dynamic run-time state of the program by stepping forwards and backwards through program execution. A case study has revealed that our approach is useful, in particular, to trace and detect an object flow anomaly caused by method overriding and polymorphism. A preliminary comparison test result also has shown that through our web-based platform-independent environment, student programmers are freed from concern with continuous version changes and evolutions of the Java language, plug-ins, and operating systems.",
    "keywords": "object-oriented programming; static visualization; dynamic visualization; web-based programming environment",
    "released": 2016,
    "link": "https://doi.org/10.1109/ICPC.2016.7503733",
    "interesting": "-"
  },
  {
    "title": "Selecting the most appropriate web IDE for learning programming using AHP",
    "abstract": "The focus in computing today has shifted from the desktop environment to the Web. Tasks that were previously performed exclusively on desktop can now be done in Web environment. Web tools have the same features as their desktop counterparts and offer additional specific benefits. These tools do not need to be installed or updated nor are restricted to individual computer or operating system yet available anytime and from any location. Work can be done in collaboration and result can be easily shared. The same applies to programming which indicates that complete process of software development can now be done without the use of traditional desktop tools. The basic tool used in software development is an IDE (Integrated Development Environment) which allows writing, translating and testing programs. It is also commonly used in a learning programming process. Replacing desktop IDE with its Web equivalent in learning programming has potential to improve that process and bring some advantages related to new environment. This paper presents the use of AHP (Analytic Hierarchy Process) method for multi-criteria decision-making related to choosing the most appropriate Web IDE for learning programming and reports experience of its use in introductory programming course.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1109/MIPRO.2016.7522263",
    "interesting": "-"
  },
  {
    "title": "Web-based integrated development environment for event-driven applications",
    "abstract": "Event-driven programming is a popular methodology for the development of resource-constrained embedded systems. While it is a natural abstraction for applications that interface with the physical world, the disadvantage is that the control flow of a program is hidden in the maze of event handlers and call-back functions. TinyOS is a representative event-driven operating system, designed for wireless sensor networks, featuring a component-based architecture that promotes code reuse. In this paper, we present a web-based model-driven graphical design environment for TinyOS that visualizes the component hierarchy of an application, and captures its event-based scheduling mechanism. In contrast with existing visual environments, our representation explicitly captures the control flow of the application through events and commands, which makes it easier to understand the program logic than studying the source code. The design environment supports two-way code generation: mapping the visual representation to TinyOS source code, as well as building visual models from existing sources.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1109/SECON.2016.7506646",
    "interesting": "-"
  },
  {
    "title": "Impact of static and dynamic visualization in improving object-oriented programming concepts",
    "abstract": "In computer science education, the programming environment is just as crucial as the classroom environment. Students must be provided with adequate tools for developing an understanding of computer science paradigms. These paradigms include object-oriented programming (OOP) concepts, such as inheritance, polymorphism, and encapsulation. JavelinaCode is a web-based integrated development environment (IDE) for Java programming that provides students with both a static and dynamic visualization of code; the static structure of code at compile time and the dynamic execution of code at run time. The objective of this research is to present the differences between JavelinaCode and similar programming environment tools to demonstrate how JavelinaCode improves students' understanding of OOP concepts. Comparative analysis is conducted between JavelinaCode and programming environment tools, including BlueJ, Jeliot 3, AguiaJ, JIVE, and jGRASP. Each of these tools is evaluated on the basis of time constraints for download and installation, complexity of the download process and tool's interface, and the provision of static and dynamic visualizations. The results of the comparative analysis show that JavelinaCode provides students with a more effective tool for understanding OOP concepts than those considered. This is due to a simplified set up process and user interface and a better integrated set of visualizations. The combination of these factors contributes to a programming environment that emphasizes developing and running code.",
    "keywords": "object-oriented programming; static visualization; dynamic visualization; programming education; web-based programming environment",
    "released": 2016,
    "link": "https://doi.org/10.1109/FIE.2016.7757639",
    "interesting": "-"
  },
  {
    "title": "ROS Extension of Blue-Sky web based development environment for IoT",
    "abstract": "We extended Blue-Sky web-based development environment for distributed embedded systems that we developed to support Robot Operating System (ROS) robotic framework. ROS is built on publish/subscribe messaging model that is different from Blue-Sky. To solve the problem, we extended Blue-Sky in order to handle publish/subscribe message from ROS to Blue-Sky. ROS-Blue-Sky proxy runs as a ROS node to collect the messaging data from roscore in order to monitor and trace the access data of the Blue-sky and ROS mixed environments. As a result of the proxy extension, we can conveniently use the ROS feature from Blue-Sky nodes, trace and monitor the Blue-Sky and ROS nodes, and visualize the status in a web browser with a low overhead of the proxy.",
    "keywords": "IoT; CPS; ROS; Blue-Sky; Network Embedded Systems; Educational Support Framework; ICT",
    "released": 2016,
    "link": "https://doi.org/10.1109/ICT-ISPC.2016.7519232",
    "interesting": "-"
  },
  {
    "title": "Cloud-Based Development Environments",
    "abstract": "In this chapter we elaborate the fundamentals of platform as a service (PaaS) and outline core components of a typical PaaS. We focus on a specific cloud-computing layer, which is called application platform as a service (aPaaS). Emergence of this layer raises several questions regarding the existence of traditional development environments, tools, and the viability of alternative ecosystems along with new positions in the market. It is this questioning that shows the need for making sense of what underpins the very idea of aPaaS and how the idea is manifested in the market, and finally what implications can be drawn for academics and practitioners We articulate basic approaches to aPaaS and discuss metadata aPaaS by using our industry experience as well as a review of recent studies on this subject. This leads to a concise comparison of leading PaaS solutions.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1002/9781118821930.ch6",
    "interesting": "-"
  },
  {
    "title": "Node.DPWS: Efficient Web Services for the Internet of Things",
    "abstract": "Interconnected computing systems in various forms will soon permeate our lives, realizing the Internet of Things (IoT) and letting us enjoy novel, enhanced services that promise to improve our everyday life. Nevertheless, this new reality introduces significant challenges in terms of performance, scaling, usability, and interoperability. Leveraging the benefits of service-oriented architectures (SOAs) can help alleviate many of the issues that developers, implementers, and users alike must face in the context of the IoT. Node.DPWS is a novel implementation of the Devices Profile for Web Services (DPWS) based on the Node.js platform. It comprises the first set of DPWS libraries available to Node.js developers and can be used to deploy lightweight, efficient, and scalable Web services over heterogeneous nodes, including devices with limited resources. A performance evaluation on typical embedded devices validated the benefits of Node.DPWS compared to alternative DPWS libraries.",
    "keywords": "Web services; development tools; software libraries; software development; standards; ubiquitous computing; software engineering; DPWS; Devices Profile for Web Services; Node.DPWS; Node.js",
    "released": 2016,
    "link": "https://doi.org/10.1109/MS.2015.155",
    "interesting": "-"
  },
  {
    "title": "Implementation of a web-based programming tool for distributed, connected Arduino systems",
    "abstract": "Embedded systems are ubiquitous in day to day life. Many of such systems are (1) numerous, (2) widely distributed over a large geographical area, and (3) often connected to a network. Software enhancements and bug-fixes to software running on such remotely deployed embedded systems might sometimes need to be done. The large numbers of systems that might need to be re-programmed, and/or the remote/inaccessible location of such systems often poses a major hurdle in the process. Several industrial solutions for re-programming distributed embedded systems do exist, viz., systems that use Remote Terminal Units, Programmable Logic Controllers or Programmable Automation Controllers. However, these systems are both complex and expensive. We propose a method to remotely program microcontroller-based distributed embedded systems. Such microcontroller-based solutions are the systems of choice for low-cost, high-volume, distributed embedded systems. Our approach is simple and is more suitable when a direct network connection to each of the distributed embedded systems is available. We use a simple web-based interface to write programs on a modern browser, and download the program onto a light-weight server attached to the remote embedded system. The server checks the code for errors and then updates the embedded system with the new version of the software. This solution is more amenable for low-cost systems and where each system is directly connected to the Internet. We believe that this model of reprogramming remote, connected embedded systems will help reduce the time to market, cost, maintenance effort and digital footprint of such systems.",
    "keywords": "Arduino; Remote programming; firmware update",
    "released": 2016,
    "link": "https://doi.org/10.1109/ICACCI.2016.7732276",
    "interesting": "+"
  },
  {
    "title": "An effective visual programming tool for learning and using robotics middleware",
    "abstract": "To encourage further use of robotics middleware, thereby, increasing the efficiency of the development process, we propose a Web-based visual programming tool for beginners. We first suggest the following requirements: (1) to utilize robotics middleware; (2) to easily build a development environment; (3) to combine variables and commands to operate various types of robots in a straightforward manner; and (4) to easily reference both objects in visual programming and source code. Consequently, we compare our work with existing visual programming tools for programming education and for robot control. Finally, we confirm the effectiveness of our tool. We detail our programming tool for learning and using Robotics Technology (RT) middleware. In particular, we use HTML5, CSS, and JavaScript to implement a Web-based GUI that automatically generates RT-Component source code. This code is then transferred through the XML-RPC process and launched on the server machine.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1109/SII.2016.7843991",
    "interesting": "-"
  },
  {
    "title": "Remote implementation of GNU radio-based SDR development environment",
    "abstract": "Software-defined radio (SDR) is used in several areas, such as the verification and implementation of radio prototypes. The SDR environment is generally configured with an analog-to-digital converter (ADC) and a personal computer (PC). However, since ADCs and PCs are fixed configurations, reconfigurations are needed in order to respond to different data sources and computing environments when the radio protocol or SDR are indefinite. To enable this reconfiguration, we present a cloud platform that has scalable computing resources and data sources deployed in a wide area, using an existing SDR development environment. In order to apply the existing SDR development environment to the cloud platform, UI separation and data management are required. In this manuscript, we implement an SDR environment for many unspecified users through UI separation by selecting the GNU Radio Companion (GRC) as the platform. We focused on compatibility and flexibility with regard to the configuration, in order to allow the user to adjust the resources consumed by the PC. The results show that one particular implementation of the remote SDR execution and development is suitable. In addition, we confirmed the compatibility with GRC in terms of user skills and software assets, and achieved distributed processing to allocate resources between the client and cloud according to the user's discretion, by dividing the processing of the SDR on the basis of the function unit.",
    "keywords": "GNU Radio; software-defined radio; cloud",
    "released": 2016,
    "link": "https://doi.org/10.1109/APCC.2016.7581497",
    "interesting": "-"
  },
  {
    "title": "Supporting Learners in Online Courses Through Pair Programming and Live Coding",
    "abstract": "Pair programming has been shown to be a beneficial and popular technique for engaging students and improving learning outcomes in programming and related classes. While using pair programming in a collocated classroom setting is relatively straightforward, there is a strong lack of good tools and options for distributed classroom settings. The growth of such classes, from small structured seminars to massive open online courses (MOOCs), and the isolation and impoverished learning experience some students report in these, points to an urgent need for tools that support remote pair programming in a distributed educational setting. This paper explores the requirements and needs of online learners in Computer Science through a literature survey. To validate these requirements, we implement a collaborative development environment aimed at improving the learning experience through pair programming and a tights code-artifact feedback loop. We conclude by presenting the results of a user study in both collocated and distributed classroom settings.",
    "keywords": "Collaborative learning; distance learning; live programming; remote pair-programming; MOOC; educational tools; IDE; user awareness; live coding; collaborative coding; communication",
    "released": 2016,
    "link": "https://doi.org/10.1109/COMPSAC.2016.200",
    "interesting": "-"
  },
  {
    "title": "Implementing an Open-Access, Data Science Programming Environment for Learners",
    "abstract": "A key retention issue when educating computing novices is ensuring that the frustrations of mastering programming fundamentals do not demotivate and discourage students from studying the discipline. In particular, non-CS majors often struggle to find relevance in traditional computing curricula that tend to either emphasize abstract concepts, focus on non-practical entertainment (e.g., game and animation design), or rely on decontextualized settings. To address these issues, this paper introduces BlockPy, a block-based environment for Python (http://www.blockpy.com). BlockPy is a web-based, open-access programming environment that supports introductory programming with an emphasis on data science. It promotes long-term transfer by scaffolding an introduction to textual programming (Python) through a block-based programming view, ideal for beginners of any background. By supporting the latest Learning Tools Interoperability (LTI) standards, BlockPy is designed to support both informal learners and formal class settings. Specifically, it can be configured to provide guiding feedback for its interactive programming problems, so as to support learners at their own pace. The results from a pilot study of the initial deployment and utilization of BlockPy indicate the potential of the environment to address many of the problems faced by novice learners.",
    "keywords": "Computer science education; Computer aided instruction; Data analysis; Web services",
    "released": 2016,
    "link": "https://doi.org/10.1109/COMPSAC.2016.132",
    "interesting": "-"
  },
  {
    "title": "CIDE: An Integrated Development Environment for Microservices",
    "abstract": "Microservices is a flexible architectural style that has many advantages over the alternative monolithic style. These include better performance and scalability. It is particularly suitable, and widely adopted, for cloud-based applications, because in this architecture a software system consisting of a large suite of services of fine granularity, each running its own process and communicating with the others. However, programming such systems is more complex. In this paper we report on CIDE, an integrated software development environment that helps with this. CIDE supports programming in a novel agent-oriented language called CAOPLE and tests their execution in a cluster environment. We present the architecture of CIDE, discuss its design based on the principles of the DevOps software development methodology, and describe facilities that support continuous testing and seamless integration, two other advantages of Microservices.",
    "keywords": "Integrated Software Development Environment (IDE); Microservices; Service-Oriented Architectures; Agent-Oriented Programming; Programming Languages and Tools",
    "released": 2016,
    "link": "https://doi.org/10.1109/SCC.2016.112",
    "interesting": "-"
  },
  {
    "title": "An end-user oriented tool suite for development of mobile applications",
    "abstract": "In this paper, we show an end-user oriented tool suite for mobile application development. The advantages of this tool suite are that the graphical user interface (GUI), as well as the application logic can both be developed in a rapid and simple way, and web-based services on the Internet can be integrated into our platform by end-users. This tool suite involves three sub-systems, namely ServiceAccess, EasyApp and LSCE. ServiceAccess takes charge of the registration and management of heterogeneous services, and can export different form of services according to the requirements of the other sub-systems. EasyApp is responsible for developing GUI in the form of mobile app. LSCE takes charge of creating the application logic that can be invoked by mobile app directly. Finally, a development case is presented to illustrate the development process using this tool suite. © 2016 ACM.",
    "keywords": "Cross-platform; End-user development; Mobile application; Visual development environment",
    "released": 2016,
    "link": "https://doi.org/10.1145/2970276.2970279",
    "interesting": "-"
  },
  {
    "title": "Leveraging virtual business model innovation: a framework for designing business model development tools",
    "abstract": "This paper presents a framework for developing tool support for the design and management of new business models. Existing IT tools supporting the process of designing, innovating, and evaluating a company's business model are currently not leveraging the full potential of tool support, because they do not make use of theoretical and empirical knowledge around business model development. Against this backdrop, we analyze existing knowledge on business model design and management, resulting in a first systematization of the activities that are necessary for developing and managing new business models. In order to complement this knowledge and to identify the requirements for supporting these activities, a series of expert interviews is conducted. Based on the results of the interview series, a new business model development tool is created and evaluated. The learnings of this development process are then consolidated in a unified framework. This framework constitutes a new solution for systematically designing tool support for business model development and extends existing literature by highlighting the importance of collaboration between participants in a business model development project. It also provides designers of new business model development tool with an empirically based conceptualization to guide their efforts. © 2016 Wiley Publishing Ltd",
    "keywords": "action design research; business model design; design support tools; online knowledge collaboration theory; virtual collaboration",
    "released": 2016,
    "link": "https://doi.org/10.1111/isj.12103",
    "interesting": "-"
  },
  {
    "title": "FESAS IDE: An integrated development environment for autonomic computing",
    "abstract": "While Autonomic Computing can ease the maintenance of systems through adaptations [1], the development of Autonomic Computing systems itself introduces a high complexity. Literature suggests that reusable processes for the development and reusable components in the adaptation logic can reduce the complexity. Existing approaches aim to reduce this complexity with tools and frameworks for specific tasks in the development of the adaptation logic of Autonomic Computing systems. However, to the best of our knowledge, none of these approaches offer an Integrated Development Environment (IDE) for it. In this paper, we extend FESAS - our framework for building reusable adaptation logic components - with Eclipse plug-ins integrated into the FESAS IDE for a simplified development of MAPE components as well as a process for deployment of the components. In this paper, we present these tools. Further, we evaluate their potential to ease the development of self-adaptive systems within five example cases. Last, we discuss the benefits and limitations of the FESAS IDE. © 2016 IEEE.",
    "keywords": "Autonomic Computing; Framework; IDE; Self-Adaptive Systems",
    "released": 2016,
    "link": "https://doi.org/10.1109/ICAC.2016.49",
    "interesting": "-"
  },
  {
    "title": "Clean your variable code with FeatureIDE",
    "abstract": "FeatureIDE is an open-source framework to model, develop, and analyze feature-oriented software product lines. It is mainly developed in a cooperation between University of Magdeburg and Metop GmbH. Nevertheless, many other institutions contributed to it in the past decade. Goal of this tutorial is to illustrate how FeatureIDE can be used to clean variable code, whereas we will focus on dependencies in feature models and on variability implemented with preprocessors. The hands-on tutorial will be highly interactive and is devoted to practitioners facing problems with variability, lecturers teaching product lines, and researchers who want to safe resources in building product line tools. © 2016 ACM.",
    "keywords": "Antenna; Configuration; Eclipse; Feature modeling; Feature-oriented software development; Integrated development environment; Preprocessors; Software product lines",
    "released": 2016,
    "link": "https://doi.org/10.1145/2934466.2956655",
    "interesting": "-"
  },
  {
    "title": "Interactex: An integrated development environment for smart textiles",
    "abstract": "Construction kits and development environments have dramatically reduced the time and expertise required for the development of physical interactive devices. The field of smart textiles, however, still lacks of established tools that support their development. In this paper, we introduce Interactex, a visual programming environment specifically designed for smart textiles. Interactex supports different activities related to smart textile development, including application development, testing and circuit design. Interactex's visual programming semantics span across mobile phone and smart textile enabling users to take advantage of capabilities present on both devices without writing source code. We also provide evidence from two user studies that Interactex lowers entrance barrier to smart textile development and facilitates rapid prototyping of smart textiles. © 2016 ACM.",
    "keywords": "Development environment; Rapid prototyping; Smart textiles; TangoHapps; Visual programming",
    "released": 2016,
    "link": "https://doi.org/10.1145/2971763.2971776",
    "interesting": "-"
  },
  {
    "title": "Prompter: Turning the IDE into a self-confident programming assistant",
    "abstract": "Developers often require knowledge beyond the one they possess, which boils down to asking co-workers for help or consulting additional sources of information, such as Application Programming Interfaces (API) documentation, forums, and Q&A websites. However, it requires time and energy to formulate one’s problem, peruse and process the results. We propose a novel approach that, given a context in the Integrated Development Environment (IDE), automatically retrieves pertinent discussions from Stack Overflow, evaluates their relevance using a multi-faceted ranking model, and, if a given confidence threshold is surpassed, notifies the developer. We have implemented our approach in Prompter, an Eclipse plug-in. Prompter was evaluated in two empirical studies. The first study was aimed at evaluatingPrompter’s ranking model and involved 33 participants. The second study was conducted with 12 participants and aimed at evaluating Prompter’s usefulness when supporting developers during development and maintenance tasks. Since Prompter uses “volatile information” crawled from the web, we also replicated Study I after one year to assess the impact of such a “volatility” on recommenders like Prompter. Our results indicate that (i) Prompter recommendations were positively evaluated in 74 % of the cases on average, (ii) Prompter significantly helps developers to improve the correctness of their tasks by 24 % on average, but also (iii) 78 % of the provided recommendations are “volatile” and can change at one year of distance. While Prompter revealed to be effective, our studies also point out issues when building recommenders based on information available on online forums. © 2015, Springer Science+Business Media New York.",
    "keywords": "Empirical studies; Mining software repositories; Recommenders; Stack overflow",
    "released": 2016,
    "link": "https://doi.org/10.1007/s10664-015-9397-1",
    "interesting": "-"
  },
  {
    "title": "Context-based IDE command recommender system",
    "abstract": "Software developer's working process could benefit from the support of an active help system that is able to recommend applicable and useful integrated development environment (IDE) commands. While previous work focused on predic- tion methods that can identify what developers will eventu- ally discover autonomously, and without taking into account the characteristics of their working tasks, we want to build a system that recommends only commands that lead to bet- ter work performance. Since we cannot expect that devel- opers are willing to invest a significant effort to use our rec- ommender system (RS), we are developing a context-aware multi-criteria RS based on implicit feedback. We already created and evaluated context and user mod- els. We also acquired a data set with more than 100,000 command executions. Currently, we are developing RS al- gorithm for predicting the scores of performance and effort expectancy and developer's intention to use a specific com- mand. We are also developing a user interface, that has to be persuasive, effective, and effcient. To date, a user interface for IDE command RS has not been developed. © 2016 Copyright held by the owner/author(s).",
    "keywords": "Command; Context; Integrated development environment; Recommen-dation",
    "released": 2016,
    "link": "https://doi.org/10.1145/2959100.2959106",
    "interesting": "-"
  },
  {
    "title": "Playful e-participation with minecraft as development tool for urban redesign: A case study",
    "abstract": "Accessing ICTs among citizens, especially youth, is gaining momentum as it is assumed to contribute to increased participation and general improvement in citizens' present and future welfare. The move to create opportunities for engagement of youth in processes of urban planning represents one common vision for empowering local communities with ICT platforms, with which they can face existing concerns on existing public spaces and actively contribute in revitalizing planning processes through civic engagement. This paper is based on a local government case study, an initiative for using Minecraft as a citizen participation tool for urban redesign in local development. The aim is to examine how this initiative has approached the common vision of access, utilization, participation, and engagement of citizens in the community. By presenting this vision of access to ICT promotion for civic engagement among citizens and youths, this paper aims to provide a practical illustration of how serious games may be used in urban planning and to explore the potential by applying the application in the context of local governments. We draw interesting lessons from this case and implications for e-Participation. © 2016.",
    "keywords": "Citizen participation; E-government; E-municipality; E-participation; Playful public participation",
    "released": 2016,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040229925&partnerID=40&md5=6c298962768d00c0ff1cbd22f969411b",
    "interesting": "-"
  },
  {
    "title": "Design and implementation of target tracking software Development Environment",
    "abstract": "Target tracking software that running on airborne radar is usually developed by hard coding in C language. This method is not efficient, large amount of time and money is spent during the development process. In this paper, we present an integrated development environment for target tracking software, which is Target tracking software Development Environment (TDE). TDE supports the whole process of target tracking software development including design, implementation, testing and assessment. It provides most of the algorithms and function blocks widely used in target tracking software, and enables developers to construct the software in a short time, and then test and verify it in simulation. The example shows that TDE is effective and highly improved the development efficiency. © 2015 IEEE.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1109/FSKD.2015.7382304",
    "interesting": "-"
  },
  {
    "title": "Programmers Are Users Too: Human-centered methods for improving programming tools",
    "abstract": "Human-centered methods can help researchers better understand and meet programmers' needs. Because programming is a human activity, many of these methods can be used without change. However, some programmer needs require new methods, which can also be applied to domains other than software engineering. This article features five Web extras. The video at https://youtu.be/4PH9-qi-yTQ demonstrates Azurite, an Eclipse plug-in with a selective undo feature that lets programmers more easily backtrack their code. The video at https://youtu.be/gOSlR62-rd8 describes Graphite, an Eclipse plug-in offering active code completion, a simple but powerful technique that integrates useful code-generation tools directly into the editor. The video at https://youtu.be/zyrqcYxqDtI describes HANDS, a new programming system that emphasizes usability by building on children's and beginning programmers' natural problem-solving tendencies. The video extra at https://youtu.be/80EctbI7PFc describes Whyline, a debugging tool that lets developers ask questions about their program's output and behavior. The video at https://youtu.be/3L4MK2dG-6k demonstrates the prototype for Whyline, a debugging tool that lets developers pose questions about their program's output. © 1970-2012 IEEE.",
    "keywords": "A/B testing; contextual inquiry; data mining; end-user software engineering; evaluation studies; exploratory lab studies; HCI; human-centered computing; human-computer interaction; log analysis; natural-programming elicitation; rapid prototyping; software development; software engineering; software psychology; studies of program constructs; think-aloud usability evaluation; user interfaces",
    "released": 2016,
    "link": "https://doi.org/10.1109/MC.2016.200",
    "interesting": "-"
  },
  {
    "title": "Towards gaze control in programming environments",
    "abstract": "Elaborated gaze tracking devices are hitting the consumer market. This gives an existing human-computer interaction technique the chance to be widely applied in software applications. Programmers can benefit from this development. They tend to work on multiple or large screens to interact with diverse tools in parallel. When programmers switch between reading and typing, the keyboard focus might not be where expected. Such distractions leave the programmer dissatisfied. Gaze information can help to determine which tool a programmer focusses on. Our goal is to explore the use of gaze information for programming environments. Specifically, we investigate a case where a programmer's view focus and the intended keyboard focus correlate. For specific programming tasks, our work shows that it is beneficial to set the keyboard focus to a programmer's view focus. © 2016 Copyright held by the owner/author(s). Publication rights licensed to ACM.",
    "keywords": "Gaze control; Gaze tracking; Integrated development environment; Programming environment",
    "released": 2016,
    "link": "https://doi.org/10.1145/2984380.2984384",
    "interesting": "-"
  },
  {
    "title": "A new meta-heuristics for optimum design of loop layout in flexible manufacturing system with integrated scheduling",
    "abstract": "Flexible manufacturing system is the inception of an innovative manufacturing revolution that will credibly lead the manufacturing trade to levels of automation which is to be taken granted currently in the process-related industries. This paper speaks about multi-objective optimization related to flexible manufacturing systems (FMS) scheduling which act as a constraint in configuring the loop layout in optimum manner by various algorithms, i.e., meta-heuristics like genetic algorithm (GA), simulated annealing (SA), etc. The various loop layout problems are tested for enactment of objective function with respect to computational time and number of iterations involved in GA and SA. A simulation code is generated using programming language and executed using integrated development environment (IDE) tool. A comparative analysis of simulation results of different meta-heuristics with literature results has been done. The performance of this GA is proved to be the best among all the algorithms considered for this work. © 2015, Springer-Verlag London.",
    "keywords": "Flexible manufacturing systems; Genetic algorithm; IDE tool; Loop layout; Simulated annealing",
    "released": 2016,
    "link": "https://doi.org/10.1007/s00170-015-7715-9",
    "interesting": "-"
  },
  {
    "title": "Cloud-based Interaction Control technologies for robotics integrated development environment (R-env™)",
    "abstract": "Communication robots are able to detect the surrounding situation through cameras or sensors, and they use motion to show non-verbal expressions. Furthermore, automobiles and personal devices such as vacuum cleaners are being robotized with the application of verbal communication technology. In the near future, it will become very important for various robots to be able to connect to and work together with devices that surround us in order to support human activities and enhance our lives. This article introduces R-env™, a cloud-based Interaction Control technology. © 2016, Nippon Telegraph and Telephone Corp. All rights reserved.",
    "keywords": "Cloud robotics; Multi-modal interaction; Networked robot",
    "released": 2016,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84973351127&partnerID=40&md5=d7b63a0389440c52c01300ec20ff9852",
    "interesting": "-"
  },
  {
    "title": "It Is Cold. and Lonely.",
    "abstract": "The next generation of software-intensive systems will be taught instead of programmed. This poses considerable pragmatic challenges in how we develop, deliver, and evolve them. The Web extra at https://youtu.be/-tAxyi5Cma0 is an audio podcast of author Grady Booch reading his column. © 2016 IEEE.",
    "keywords": "deep learning; development tools; ethics; software development; software engineering",
    "released": 2016,
    "link": "https://doi.org/10.1109/MS.2016.85",
    "interesting": "-"
  },
  {
    "title": "FaceMashup: An end-user development tool for social network data",
    "abstract": "Every day, each active social network user produces and shares texts, images and videos. While developers can access such data through application programming interfaces (APIs) for creating games, visualizations and routines, end users have less control on such information. Their access is mediated by the social application features, which limits them in combining sources, filtering results and performing actions on groups of elements. In order to fill this gap, we introduce FaceMashup, an end user development (EUD) environment supporting the manipulation of the Facebook graph. We describe the tool interface, documenting the choices we made during the design iterations. Data types are represented through widgets containing user interface (UI) elements similar to those used in the social network application. Widgets can be connected with each other with the drag and drop of their inner fields, and the application updates their content. Finally, we report the results of a user-test on the FaceMashup prototype, which shows a good acceptance of the environment by end-users. © 2016 by the authors; licensee MDPI, Basel, Switzerland.",
    "keywords": "Direct manipulation; End user development; Facebook; Graph API; Social network",
    "released": 2016,
    "link": "https://doi.org/10.3390/fi8020010",
    "interesting": "-"
  },
  {
    "title": "Tool-assisted loop invariant development and analysis",
    "abstract": "Identification of an adequate invariant is valuable for reasoning about the correctness of code involving a loop, informally or formally. Almost every modern system for automated verification demands that programmers annotate their code with assertions, such as invariants to facilitate automation. But many learners struggle to grasp how to arrive at an assertion that remains an invariant and is sufficiently strong to prove subsequent assertions reliant on the outcome of the loop. The objective of this research is to present a method to help understand the difficulties students face in developing suitable loop invariants, and assist them in the process. We describe results from an experimentation in a software engineering classroom where students were charged with developing verified component-based code using a web-based front end for a verifying compiler. We collected data in the background as students attempted to produce verified code with loop invariants in in-class activities and take-home projects. Initial results show what kinds of information we can expect to see and what kinds of feedback might be useful. © 2016 IEEE.",
    "keywords": "Annotations; Automation; Components; Experimentation; IDE; Objects; Specification; Verifier",
    "released": 2016,
    "link": "https://doi.org/10.1109/CSEET.2016.28",
    "interesting": "-"
  },
  {
    "title": "OAM: An ontology application management framework for simplifying ontology-based semantic web application development",
    "abstract": "Although the Semantic Web data standards are established, ontology-based applications built on the standards are relatively limited. This is partly due to high learning curve and efforts demanded in building ontology-based Semantic Web applications. In this paper, we describe an ontology application management (OAM) framework that aims to simplify creation and adoption of ontology-based application that is based on the Semantic Web technology. OAM introduces an intermediate layer between user application and programming and development environment in order to support ontology-based data publishing and access, abstraction and interoperability. The framework focuses on providing reusable and configurable data and application templates, which allow the users to create the applications without programming skill required. Three forms of templates are introduced: database to ontology mapping configuration, recommendation rule and application templates. We describe two case studies that adopted the framework: activity recognition in smart home domain and thalassemia clinical support system, and how the framework was used in simplifying development in both projects. In addition, we provide some performance evaluation results to show that, by limiting expressiveness of the rule language, a specialized form of recommendation processor can be developed for more efficient performance. Some advantages and limitations of the application framework in ontology-based applications are also discussed. © 2016 World Scientific Publishing Company.",
    "keywords": "knowledge-based application development tools; ontology application framework; ontology-based data publishing and access; Semantic Web application framework",
    "released": 2016,
    "link": "https://doi.org/10.1142/S0218194016500066",
    "interesting": "-"
  },
  {
    "title": "Development the software applications for mobile medical systems based on OS android",
    "abstract": "In this paper the methods and tools to develop specialized software for mobile medicine (m-health navigator) on the base OS Android are given. The results of test studies using the developed software are shown. © 2016 National University Lviv Polytechnic.",
    "keywords": "Integrated Development Environment Android Studio; m-health; OC Android; software",
    "released": 2016,
    "link": "https://doi.org/10.1109/TCSET.2016.7452190",
    "interesting": "-"
  },
  {
    "title": "Enhancing team collaboration through integrating social interactions in a Web-based development environment",
    "abstract": "This paper presents the design and evaluation of a Web-based collaborative learning environment called EduCo for learning and practicing team-based exercises in computer science and software engineering courses. EduCo's defining characteristic is integrating a number of services for software development activities, for example, project management, requirements engineering, design, and programming into integrated shared workspaces with social-networking facilities to enhance collaboration among students and instructors. We conducted a controlled experiment to evaluate the effectiveness of the system in doing a three-iteration programming project. A total of 126 second-year students who attended an object-oriented programming course participated in the experiment. The results show that while the system was not found to affect student programming performance, it improved student engagement and satisfaction when working in teams. These results imply that the system's shared workspaces and social-networking services have the potential to enhance learning outcomes of students working in teams when these features are integrated into collaborative learning environments. © 2016 Wiley Periodicals, Inc. Comput Appl Eng Educ 24:529–545, 2016; View this article online at wileyonlinelibrary.com/journal/cae; DOI 10.1002/cae.21729. © 2016 Wiley Periodicals, Inc.",
    "keywords": "collaborative environment; programming language; social environment; social network",
    "released": 2016,
    "link": "https://doi.org/10.1002/cae.21729",
    "interesting": "+"
  },
  {
    "title": "Image recognition method using modular systems",
    "abstract": "In this paper, we implemented an open source based IDE (Integrated Development Environment) that modularizes various deep-learning techniques in different environments. This modularization system can schematize a complex structure deep-learning analysis into a simple form that help user to understand and use very difficult deep learning techniques conveniently. © 2015 IEEE.",
    "keywords": "Caffe; Deeplearning; IDE(integrated development environment); Moduler",
    "released": 2016,
    "link": "https://doi.org/10.1109/CSCI.2015.71",
    "interesting": "-"
  },
  {
    "title": "Design and implementation of an IDE for learning programming languages using a gamification service",
    "abstract": "This chapter presents the architecture and design of enki, an Integrated Development Environment (IDE) for learning programming languages on massive open online courses (moocs). this environment can be used as a tool by a learning management system (lms) and a typical lms such as moodle can launch it using the learning tool interoperability (lti) api. student authentication tokens are passed via lti, thus integrating enki in the single sign-on domain of the academic institution. the proposed tool has a web user interface similar to those of reference ides, where the learner has access to different integrated tools, from viewing tutorial videos, to solving programming exercises that are automatically evaluated. enki uses several gamification strategies to engage learners, including generic gamifications services provided by odin and the sequencing of educational resources. the course content (videos, pdfs, programming exercises) is progressively disclosed to the learner as he successfully completes exercises. this is similar to what happens in a game, where new levels are unlocked as the previous are completed, thus contributing to the sense of achievement. © 2017 by IGI Global. All rights reserved.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.4018/978-1-5225-1034-5.ch014",
    "interesting": "-"
  },
  {
    "title": "Implementation of end-user development success factors in mashup development environments",
    "abstract": "The Future Internet is expected to be composed of a mesh of interoperable web services accessed from all over the Web. This approach has been supported by many software providers who have provided a wide range of mash up tools for creating composite applications based on components prepared by the respective provider. These tools aim to achieve the end-user development (EUD) of rich internet applications (RIA); however, most, having failed to meet the needs of end users without programming knowledge, have been unsuccessful. Thus, many studies have investigated success factors in order to propose scales of success factor objectives and assess the adequacy of mashup tools for their purpose. After reviewing much of the available literature, this paper proposes a new success factor scale based on human factors, human-computer interaction (HCI) factors and the specialization-functionality relationship. It brings together all these factors, offering a general conception of EUD success factors. The proposed scale was applied in an empirical study on current EUD tools, which found that today's EUD tools have many shortcomings. In order to achieve an acceptable success rate among end users, we then designed a mashup tool architecture, called FAST-Wirecloud, which was built taking into account the proposed EUD success factor scale. The results of a new empirical study carried out using this tool have demonstrated that users are better able to successfully develop their composite applications and that FAST-Wirecloud has scored higher than all the other tools under study on all scales of measurement, and particularly on the scale proposed in this paper. © 2016 Elsevier B.V. All rights reserved.",
    "keywords": "End-user development; HCI success factors; Mash up tool; Service front-ends; Service-oriented architectures",
    "released": 2016,
    "link": "https://doi.org/10.1016/j.csi.2016.02.006",
    "interesting": "-"
  },
  {
    "title": "An environment for End-User Development of Web mashups",
    "abstract": "End-User Development aims to find novel ways that are suitable and intuitive for end users to create their own applications. We present a graphical environment in which users create new mashups by directly selecting interaction elements, content and functionalities from existing Web applications without requiring the intervention of expert developers. Then, users just need to exploit a copy-paste metaphor to indicate how to compose the selected interactive content and functionalities in the new mashup. The environment is enabled by a Web-based platform accessible from any browser, and is suitable for users without particular programming skills. We describe the architecture of our platform and how it works, including its intelligent support, show example applications, and report the results of first user studies. © 2015 Elsevier Ltd. All rights reserved.",
    "keywords": "End User Development; User interface development tools; Web mashups",
    "released": 2016,
    "link": "https://doi.org/10.1016/j.ijhcs.2015.10.008",
    "interesting": "-"
  },
  {
    "title": "Instrumentation and control of a DC motor through a web platform",
    "abstract": "How to control and monitor devices when I'm not at home? It is a question that until the last century did not have an overwhelming answer from the engineering field. The technological development of recent years has allowed us to perform this task by using software and hardware tools: monitoring different devices from our smartphone comes down to simply downloading an app or entering a website. This article presents an application that can be example of how to answer the aforementioned question. © 2016 IEEE.",
    "keywords": "Digital control; implementation; programming; programming tools",
    "released": 2016,
    "link": "https://doi.org/10.1109/IESummit.2016.7459776",
    "interesting": "-"
  },
  {
    "title": "Platforms for Cyber-Physical Systems - Fractal operating system and integrated development environment for the physical world",
    "abstract": "It is a commonplace observation that the available computational power is increasingly going into technical systems in contrast to classical information systems. According to [2], the predicted 2017 global semiconductor billings in the fields of communication, consumer electronics, automotive, and industrial with a total volume of 246.9 bn US$ will nearly double the volume of data processing with 153.3 bn US$. As a result, the size of the software of those technical systems exceeds the size of information systems. According to [4] the total code size of an average modern high-end car with more than 100 million lines of codes exceeds the total size of a modern operating system with about 80 million lines of code. Thus, information and communication technologies increasingly automate not only management processes but also technical processes in the physical world. © 2016 IEEE.",
    "keywords": "",
    "released": 2016,
    "link": "https://doi.org/10.1109/EITEC.2016.7503688",
    "interesting": "-"
  },
  {
    "title": "Measuring Navigation Efficiency in the IDE",
    "abstract": "While coding, developers construct and maintain mental models of software systems to support the task at hand. Although source code is the main product of software development, the process involves navigating and inspecting entities beyond the ones that are edited by the end of a task. Developers use various user interfaces (UI) offered by the Integrated Development Environment (IDE) to navigate the complex, and often hidden, relationships between program entities. These UIs impose fixed navigation costs, in terms of the number of interactions that a developer is required to perform to reach an entity of interest. It is unclear to what extent the actual navigation effort differs from an ideal setting, and if there is any room for actual improvement. We present a preliminary empirical study, where we analyzed a corpus of IDE interaction data coming from 6 developers totaling more than 20 days of development activity. To measure the navigation efficiency, we compute a combination of different ideal settings and compare them against the observed navigation events. Our findings reveal that, on average, developers perform 1.5 to 19 times more navigation events than the ideal case. While different factors make the ideal setting unfeasible, we believe that this calls for novel approaches to support the navigation in integrated development environments. © 2016 IEEE.",
    "keywords": "efficiency; empirical study; ide; interaction data; navigation effort; productivity",
    "released": 2016,
    "link": "https://doi.org/10.1109/IWESEP.2016.11",
    "interesting": "-"
  },
  {
    "title": "Programming with examples to develop data-intensive user interfaces",
    "abstract": "The programming-with-examples workflow lets developers create interactive applications with the help of example data. It takes a general programming environment and adds dedicated user interfaces for visualizing and managing the data. This lets both programmers and users understand applications and configure them to meet their needs. © 1970-2012 IEEE.",
    "keywords": "DejaVu; GUI; IDE; integrated development environment; Picode; programming with examples; software development; software engineering; TextAlive; user interface design; user interfaces",
    "released": 2016,
    "link": "https://doi.org/10.1109/MC.2016.217",
    "interesting": "-"
  },
  {
    "title": "ADM-based migration from Java swing to RIA applications",
    "abstract": "Companies are investing a lot of resources and effort for migrating their legacy applications and adapting them with the rapid technological changes. For this reason, the authors are interested in the modernization of desktop applications developed in Java Swing to Web 2.0 applications. Therefore, an ADM approach is applied in order to develop a tool named FlexMigration allowing automatic reverse engineering of Swing GUI to obtain a RIA GUI. The usefulness of this tool is the automation of the migration process with the extraction of the actions encapsulated in possible anonymous classes. As an illustration, they present along this paper a reengineering of a small legacy chat application. The authors explain its migration process to generate a similar Flex Graphical User Interface. Copyright © 2016, IGI Global.",
    "keywords": "Abstract syntax tree meta-model (ASTM); Anonymous inner class; Architecture-driven modernization (ADM); Graphical user interface meta-model (GUIM); Java development tool (JDT); Knowledge discovery model (KDM); Model driven engineering (MDE); Reverse engineering; Rich internet application (RIA)",
    "released": 2016,
    "link": "https://doi.org/10.4018/IJISSS.2016040108",
    "interesting": "-"
  },
  {
    "title": "Tracking Developers' Eyes in the IDE",
    "abstract": "With recorded eye gaze sessions, researchers will be able to determine all the locations that developers examine in software development artifacts. This will pave the way to further improve IDEs to support developers in various software engineering tasks. Toward that goal, researchers developed iTrace, software that interfaces with an eye tracker and IDE to capture eye gaze on software artifacts and map them to their semantic meaning. © 2016 IEEE.",
    "keywords": "eye tracking; IDE; integrated development environment; iTrace; software development; software engineering",
    "released": 2016,
    "link": "https://doi.org/10.1109/MS.2016.84",
    "interesting": "-"
  },
  {
    "title": "The TuringLab programming environment an online python programming environment for challenge based learning",
    "abstract": "Computing has recently been introduced as a core subject in British schools, meaning that children need to learn computer programming. Teachers have to be prepared to be able to deliver the new curriculum, but many of them do not feel confident teaching it as they have no formal background in Computer Science. Also, when learning to programme, children need the correct environment and support to succeed. This paper presents TuringLab, an environment to assist teachers in delivering the practical elements of the computing curriculum, while also proving to be engaging and challenging for the children. Teachers can create programming challenges for their pupils and see how they are progressing (or struggling) during completion of the challenges. Students can undertake challenges in an engaging environment which displays a graphical output of their code and assists in understanding errors they may encounter. TuringLab has been used to teach children how to programme at a number of volunteer-led coding clubs. Children engaged well with TuringLab, and the volunteers, who acted as teachers in these sessions, found TuringLab an extremely valuable educational tool. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
    "keywords": "Computer programming; Information technology; Online learning; Python programming",
    "released": 2016,
    "link": "https://doi.org/10.5220/0005802701030113",
    "interesting": "+"
  },
  {
    "title": "Building a warehouse control system using RIDE",
    "abstract": "There is a growing interest in the use of Autonomous Guided Vehicles (AGVs) in the Warehouse Control Systems (WCS) in order to avoid installing fixed structures that complicate and reduce the flexibility to future changes. In this paper a highly flexible and hybrid operated WCS, developed using the Robotics Integrated Development Environment (RIDE), is presented. The prototype is a forklift with cognitive capabilities that can be operated manually or autonomously and it is now being tested in a warehouse located in the Parque Tecnológico Logístico (PTL) of Vigo. The main advantages and drawbacks on this kind of implementation are also discussed in the paper. © Springer International Publishing Switzerland 2016.",
    "keywords": "Autonomous guided vehicle; Navigation; Robot control architecture; Warehouse control system",
    "released": 2016,
    "link": "https://doi.org/10.1007/978-3-319-27149-1_59",
    "interesting": "-"
  },
  {
    "title": "Putting cloud 9 IDE on the wheels for programming Cyber-Physical / Internet of Things Platforms: Providing educational prototypes",
    "abstract": "The paper describes the development of educational Cyber-Physical Robotic Platforms, remotely controlled via cloud technologies. The platform is implemented using Parallax ActivityBot kit (only for mechanical part), controlled by Arduino, and includes a Quad core ARM-processor Mini PC MK802 V5 LE running Xubuntu Linux. The programming on the developed platform could be performed in JavaScript and HTML, providing the web interface for controlling the system through Wi-Fi. Programming the platform is possible through the Cloud9 IDE web interface, enabling rewriting the code or running different programs by the user. Four equal platforms were implemented to address the need for the easily accessible educational Cyber-Physical Robotic Platforms / Internet of Things hardware for students and tested in the experiment. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.",
    "keywords": "Computer Cloud; Cyber-Physical System; ECMAScript; HTML5; Internet of Things; Iot; JavaScript; Node.Js; Robot operating system; Robotic Platform; ROS",
    "released": 2016,
    "link": "https://doi.org/10.5220/0005985204280435",
    "interesting": "+"
  },
  {
    "title": "Connecting the Internet of Things rapidly through a model driven approach",
    "abstract": "Currently, developing Internet of Things (IoT) applications requires tremendous efforts and a wide range of expertise. This may discourage inexperienced developers entering the IoT development. Filling this gap, we propose a model driven tool called IoTLink that allows inexperienced developers to wire physical devices visually, creating the necessary foundation for their IoT applications. Based on the visual model, IoTLink is able to generate a complete Java project including an extendable Java code. When the Java code is compiled and executed, it encapsulates the complexity of communicating with devices and services. It abstracts them as virtual objects that can be accessed through different communication means that are commonly used on the internet such as web service and MQTT. IoTLink was evaluated against Java development in a controlled experiment. The result shows that IoTLink was able to outperform classical Java development in terms of the development time and users satisfactions. © 2016 IEEE.",
    "keywords": "code generation; development tool; Internet of Things; mashup; model driven development; usability study",
    "released": 2016,
    "link": "https://doi.org/10.1109/WF-IoT.2016.7845416",
    "interesting": "-"
  },
  {
    "title": "Initial 2016 HOLACloud Roadmap",
    "abstract": "The HOLACloud initial 2016 roadmap has been generated by a process similar to that for 2015 using the input to the CLOUD Forward Conference 2016. The analysis of the position papers, and ideas from the scientific papers, provided the synopsis of future R&I (Research and Innovation) topics. These are: advanced systems development method(s) based on model-driven technology; placement and locality of data, software, resources and users; autonomic SLA management pervasively through the software stack including trust, security and privacy; interoperability both across hybrid CLOUD platforms and across heterogeneity of data and software. Business models for CLOUD Computing and beyond featured less prominently than in 2015.",
    "keywords": "big data; complete computing; edge; elasticity; environmental; fog; locality; non-functional requirements; placement; systems development environment",
    "released": 2016,
    "link": "https://doi.org/10.1016/j.procs.2016.08.296",
    "interesting": "-"
  },
  {
    "title": "Workflow supporting toolset for diagram-based collaborative ontology development implemented in the open budget domain",
    "abstract": "We present a live demo of a use case and a technical solution that addresses the problem of organizing the collaborative ontology development with deliverables including the diagrams and various views of the data model. The use case describes the real life situation, in which the geographically distributed team was challenged with a task of producing the open budget ontology and consequently was to select the tool set to support such development. The technical solution is based on the combination of 3 basic tools: Prot´eg´e - to provide a collaborative environment for ontology creation and modification, Ontodia.org - to visualize and publish results in a form of diagrams and GitHub - to host the repository of the project, whilst Ontodia is integrated with the last. The preliminary version of the produced ontology can be accessed at: https://github.com/k0shk/pfontology. Ontodia with GitHub integration capabilities is fully operational and can be tested here: http://www.ontodia.org. © Springer International Publishing AG 2016.",
    "keywords": "Collaborative ontology development; Ontology development tool set; Ontology production tools; Semantic data visualization",
    "released": 2016,
    "link": "https://doi.org/10.1007/978-3-319-47602-5_35",
    "interesting": "-"
  },
  {
    "title": "Integrating computing to stem curriculum via codeboard",
    "abstract": "Introductory programming has always suffered from low performance rates. These low performance rates are closely tied to high failure rates and low retention in introductory programming classes. The goal of this research is to develop models and instrumentation capable of giving insight into STEM student performance, learning patterns and behavior. This insight is expected to shed some light on low performance rates and also pave the way for formative measures to be taken. CodeBoard is a programming platform capable of managing and assesse student programming via using a functional test-driven approach. Instructors develop programming assignments along with corresponding test cases, which are then used as grading templates to evaluate student programs. The second phase of this research involves developing models for measuring and capturing events relevant to student performance over time. The preliminary results show that this Code Board is promising. © Springer International Publishing Switzerland 2016.",
    "keywords": "Active learning; Cloud computing; Introductory programming; Programming environments",
    "released": 2016,
    "link": "https://doi.org/10.1007/978-3-319-42089-9_36",
    "interesting": "-"
  },
  {
    "title": "An online logic programming development environment",
    "abstract": "Recent progress in logic programming, particularly answer set programming, has enabled us to teach it to undergraduate and high school students. We developed an online answer set programming environment with simple interface and self contained file system. It is expected to make the teaching of answer set programming more effective and help us to reach more students. © 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.",
    "keywords": "",
    "released": 2016,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007155025&partnerID=40&md5=21ec92781fee192e8aa2a2b2e8744db4",
    "interesting": "-"
  },
  {
    "title": "Renew 2.5 – Towards a comprehensive integrated development environment for Petri net-based applications",
    "abstract": "RENEW (The Reference Net Workshop) is an extensible Petri net IDE that supports the development and execution of high-level Petri nets and other modeling techniques. The Reference net formalism – the major formalism for RENEW – includes concepts such as net instances, synchronous channels and seamless Java integration. It combines the advantages of Petri nets and object-oriented programming for the development of concurrent and distributed software systems. Modeling support of RENEW focuses on convenience and ease for Petri net development. An outstanding feature is the support for multi-formalism simulation. The plugin architecture of RENEW enables the developers to extend the IDE for instance with additional formalisms. Alternatively to the inline mode – within the graphical user interface – the Simulator can also be run in a headless server fashion. Several configurations of RENEW are available, which are constituted through selections of plugins providing specialized functionality for multiple platforms. In this manner the RENEW family constitutes a product line architecture. RENEW is available free of charge including the Java source code. In this contribution we provide information about RENEW’S functionality and architecture as well as the development of the tool set over the last decade. © Springer International Publishing Switzerland 2016.",
    "keywords": "High-level Petri nets; Integrated development environment (IDE); Java; Nets-within-nets; Plugin architecture; Reference nets",
    "released": 2016,
    "link": "https://doi.org/10.1007/978-3-319-39086-4_7",
    "interesting": "-"
  },
  {
    "title": "Evaluation of collaborative development environments for software engineering courses in higher education",
    "abstract": "Collaborative Development Environments (CDEs) play a significant role in modern software engineering by integrating multiple crucial tools and functions for the development process at a single point and therefore by providing elemental support for the collaboration of the developers and utilizing synergetic effects through the combination of these tools and social functions. To prepare students optimally they should be trained to use those systems effectively. In this paper we define a criteria list for the evaluation of CDEs to be able to decide which CDE or combination of tools is most suitable for the use in a certain software engineering course in higher education. We build this work on our accumulated experiences and findings of six years of project support for students and scientists in a computer science department. © Springer International Publishing Switzerland 2016.",
    "keywords": "CDEs; Collaboration; Higher education; Software engineering",
    "released": 2016,
    "link": "https://doi.org/10.1007/978-3-319-39910-2_34",
    "interesting": "-"
  },
  {
    "title": "Research on Architecture and Integrated Environment of Cloud Manufacturing",
    "abstract": "Objective: In this study, the relationship from the abstract angle among the service oriented architecture, cloud computing and cloud manufacturing was analyzed in order to meet the urgent needs of the software architecture and development tools supporting for the manufacturing cloud and point out that cloud manufacturing inheritance and extend the former two parts. Methodology: In the face of manufacturing resources, the integration of Service Oriented Architecture (SOA) and cloud computing. Results: Cloud manufacturing service architecture was proposed and the public availability of free open source tools was selected to build a platform based on the eclipse for cloud manufacturing services integrated development environment. Conclusion: The case study indicates that the integrated development environment has good scalability and can promptly respond to cloud manufacturing application requirements. © 2016 Guangyu Zhou and Kun Gao.",
    "keywords": "Cloud manufacturing; Intergrade development environment; Open source software; Service-oriented architecture; Web service",
    "released": 2016,
    "link": "https://doi.org/10.3923/jse.2016.457.465",
    "interesting": "-"
  },
  {
    "title": "Information system support for the WHO Clinical guideline development process: A case study approach",
    "abstract": "Clinical guideline developer organizations benefit from information systems' support in authoring and publishing guidelines on the web. The guideline development process is complex and time consuming, and requires collaboration among different stakeholders. Although different groups and organizations have their own approach to clinical guideline development, reflecting their methods and preferences, they all show similarities with a workflow proposed by the World Health Organization (WHO). Authoring clinical guidelines benefits from information systems' support, and this paper reviews how a selection of guideline development tools support the WHO workflow. The four selected tools in this study are: MAGICapp, GRADEpro, BRIDGE-Wiz and Håndboka, a web-based software application developed in Norway. Our hands-on experience in reviewing the four selected guideline development tools highlighted variations in workflow support. Our results show that the tools have different foci and none of the studied tools fully supports all steps in the proposed WHO workflow. Our comparison shows that GRADEpro supports more steps compared to the other tools. We elicited themes of requirements that need to be supported by a tool independently of individual and organizational perspective. Our study presents the area of focus for each reviewed tool, and sheds lights on improved information system support for guideline development.",
    "keywords": "Authoring tools; Clinical guideline development process; Guideline development tool; Information systems",
    "released": 2016,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016109882&partnerID=40&md5=7a7f4c8de4761138ee42a5f3f5847656",
    "interesting": "-"
  },
  {
    "title": "Use of web components to develop interactive, customizable and multi-device video consumption platforms",
    "abstract": "The recent and unceasing advances in Web technologies and components open the door to the development of a new wave of interactive, customizable and multi-device video consumption platforms. This chapter reviews various relevant Web technologies and components in the context of interactive media delivery and communication, and highlights a set of features and functionalities that can be provided by using these components. After that, two video consumption platforms that have been developed by combining these features and functionalities are presented. The first platform, called Wersync, enables the creation of different groups of geographically distributed users for consuming the same media content in a synchronized manner, while socially interacting via text and audiovisual chat channels. The second platform enables a dynamic customization and synchronization of subtitles in multi-screen scenarios. As a proof of evidence, links to demo videos showing the capabilities of both platforms are provided. © Springer International Publishing Switzerland 2016.",
    "keywords": "HTML5; IDES; Interactive media; Javascript; Online video; Subtitles customization; Synchronization; Web; WebRTC",
    "released": 2016,
    "link": "https://doi.org/10.1007/978-3-319-38907-3_4",
    "interesting": "-"
  },
  {
    "title": "An overview of platforms for cloud based development",
    "abstract": "This paper provides an overview of the state of the art technologies for software development in cloud environments. The surveyed systems cover the whole spectrum of cloud-based development including integrated programming environments, code repositories, software modeling, composition and documentation tools, and application management and orchestration. In this work we evaluate the existing cloud development ecosystem based on a wide number of characteristics like applicability (e.g. programming and database technologies supported), productivity enhancement (e.g. editor capabilities, debugging tools), support for collaboration (e.g. repository functionality, version control) and post-development application hosting and we compare the surveyed systems. The conducted survey proves that software engineering in the cloud era has made its initial steps showing potential to provide concrete implementation and execution environments for cloud-based applications. However, a number of important challenges need to be addressed for this approach to be viable. These challenges are discussed in the article, while a conclusion is drawn that although several steps have been made, a compact and reliable solution does not yet exist.",
    "keywords": "Cloud computing; Integrated Development Environment (IDE); Code repositories; Software modeling; Orchestration tools",
    "released": 2016,
    "link": "https://doi.org/10.1186/s40064-016-1688-5",
    "interesting": "+"
  },
  {
    "title": "Improved differential evolution-based elman neural network controller for squirrel-cage induction generator system",
    "abstract": "An improved differential evolution (IDE) algorithm-based Elman neural network (ENN) controller is proposed to control a squirrel-cage induction generator (SCIG) system for grid-connected wind power applications. First, the control characteristics of a wind turbine emulator are introduced. Then, an AC/DC converter and a DC/AC inverter are developed to convert the electric power generated by a three-phase SCIG to the grid. Moreover, the dynamic model of the SCIG system is derived for the control of the square of DC-link voltage according to the principle of power balance. Furthermore, in order to improve the transient and steady-state responses of the square of DC-link voltage of the SCIG system, an IDE-based ENN controller is proposed for the control of the SCIG system. In addition, the network structure and the online learning algorithm of the ENN are described in detail. Additionally, according to the different wind speed variations, a lookup table built offline by the dynamic model of the SCIG system using the IDE is provided for the optimisation of the learning rates of ENN. Finally, to verify the control performance, some experimental results are provided to verify the feasibility and the effectiveness of the proposed SCIG system for grid-connected wind power applications.",
    "keywords": "evolutionary computation; neurocontrollers; asynchronous generators; machine control; power grids; wind power plants; wind turbines; power generation control; invertors; voltage control; transient response; learning (artificial intelligence); AC-DC power convertors; improved differential evolution-based Elman neural network controller; squirrel-cage induction generator system; three-phase SCIG system; grid-connected wind power applications; wind turbine emulator control characteristics; AC-DC power converter; DC-AC power inverter; electric power conversion; DC-link voltage square control; power balance principle; steady-state responses; transient responses; IDE-based ENN intelligent controller algorithm; network structure; online learning algorithm; wind speed variations; lookup table; learning rate optimization; power grid",
    "released": 2016,
    "link": "https://doi.org/10.1049/iet-rpg.2015.0329",
    "interesting": "-"
  },
  {
    "title": "GeoSRM - online geospatial safety risk model for the GB rail network",
    "abstract": "RSSB and the University of Southampton’s GeoData Institute have collaborated to research and develop a toolkit for managing large volumes of rail risk data. The pilot system encompasses concepts of highly complex geospatial big data’, open standards, open source development tools and methodologies, and enables stakeholders to filter, analyse and visualise risk across the rail network, for a range of risk models. These include train derailments, suicides and passenger slip, trips and falls, and feature a wide range of spatially dependent parameters that affect the causal, escalation and consequence mechanisms. The risk has been calculated to a high resolution, splitting 2,100,000 m of track typically into 10 m sections. By creating geospatial representations of risk, the tool can help to identify risk hotspots and in this way contribute to the improvement of rail safety. Once scaled up to a National level and full range of risk models, the tool will deliver a powerful capability, unique across Europe. Further research is extending the prototype to incorporate live and historic environmental and related rail incident data to augment and improve the risk model.",
    "keywords": "railway safety; geographic information systems; risk analysis; public domain software; Big Data; online geospatial safety risk model; GB rail network; GeoSRM; RSSB; pilot system; rail risk data; geospatial big data; open source development tools; rail network; train derailments; geospatial representations; rail safety; University of Southampton GeoData Institute",
    "released": 2016,
    "link": "https://doi.org/10.1049/iet-its.2015.0038",
    "interesting": "-"
  },
  {
    "title": "Beyond open source: The TouchDevelop cloud-based integrated development environment",
    "abstract": "Software engineering tools and environments are migrating to the cloud, enabling more people to participate in programming from many more devices. To study this phenomenon in detail, we designed, implemented and deployed TouchDevelop (www.touchdevelop.com), a cloud-based integrated development environment (CIDE), which has been online for the past three years.TouchDevelop combines a cross-platform browser-based IDE for the creation of mobile+cloud apps, an online programmer/user community, and an app store. A central feature of TouchDevelop is to track all program edits, versions, runtime information, bugs, as well user comments, questions and feedback in a single cloud-based repository that is available publicly via Web APIs.In this paper, we examine a key feature of TouchDevelop that should be relevant to others creating CIDEs, namely the seamless integration of replicated workspaces, simplified version control and app publishing. An analysis of the TouchDevelop repository shows that this combination of capabilities allows users to easily create new versions of apps from existing apps, make changes to other users’ apps, and share their results from a variety of devices, including smartphones, tablets and traditional PCs.",
    "keywords": "",
    "released": 2015,
    "link": "https://dl.acm.org/doi/10.5555/2825041.2825057",
    "interesting": "-"
  },
  {
    "title": "The design of a programming environment to support greater social awareness and participation in early computing courses",
    "abstract": "Given the growing and widespread use of online social networking tools, coupled with social learning theory’s emphasis on learning through social participation in a community, we believe there is good reason to pursue the development of educational programming environments that support increased social interaction among learners. To that end, we have been exploring the design of a \"social programming environment\" to support students as they work on individual programming assignments, which are common in early computing courses. We present the design of OSBIDE, an Integrated Development Environment (IDE) plug-in that supports many common features of social networking environments, including an activity feed and a social recommender system that identifies learners who have encountered similar programming issues. We describe the iterative refinement of OSBIDE through its multi-semester deployment in CS 1 and CS 2 courses. Preliminary results indicate that students are generally enthusiastic about the environment’s ability to make programming more social. OSBIDE lays a strong foundation for future research into the relationships between learners’ programming and social activities, and their learning outcomes. It also has the potential to provide instructors with powerful resources for identifying and assisting struggling students.",
    "keywords": "",
    "released": 2015,
    "link": "https://dl.acm.org/doi/10.5555/2831373.2831399",
    "interesting": "-"
  },
  {
    "title": "An analysis of HTML and CSS syntax errors in a web development course",
    "abstract": "Many people are first exposed to code through web development, yet little is known about the barriers beginners face in these formative experiences. In this article, we describe a study of undergraduate students enrolled in an introductory web development course taken by both computing majors and general education students. Using data collected during the initial weeks of the course, we investigate the nature of the syntax errors they make when learning HTML and CSS, and how they resolve them. This is accomplished through the deployment of openHTML, a lightweight web-based code editor that logs user activity. Our analysis reveals that nearly all students made syntax errors that remained unresolved in their assessments, and that these errors continued weeks into the course. Approximately 20",
    "keywords": "computational literacy; code editors; Web development",
    "released": 2015,
    "link": "https://doi.org/10.1145/2700514",
    "interesting": "-"
  },
  {
    "title": "Detailed recordings of student programming sessions",
    "abstract": "Observation is important when we teach programming. It can help identify students that struggle, concepts that are not clearly presented during lectures, poor assignments, etc. However, as development tools become more widely available or courses move off-campus and online, we lose our ability to naturally observe students. Online programming environments provide an opportunity to record how students solve assignments and the data recorded allows for in-depth analysis. For example, file activities, mouse movements, text-selections, and text caret movements provide a lot of information on when a programmer collects information and what task is currently worked on. We developed CSQUIZ to allow us to observe students on our online courses through data analysis. Based on our experience with the tool in a course, we find recorded sessions a sufficient replacement for natural observations.",
    "keywords": "programming environments; programming behavior; programming assignment; measurement",
    "released": 2015,
    "link": "https://doi.org/10.1145/2729094.2754859",
    "interesting": "+"
  },
  {
    "title": "Varis: IDE support for embedded client code in PHP web applications",
    "abstract": "In software development, IDE services such as syntax highlighting, code completion, and \"jump to declaration\" are used to assist developers in programming tasks. In dynamic web applications, however, since the client-side code is dynamically generated from the server-side code and is embedded in the server-side program as string literals, providing IDE services for such embedded code is challenging. In this work, we introduce Varis, a tool that provides editor services on the client-side code of a PHP-based web application, while it is still embedded within server-side code. Technically, we first perform symbolic execution on a PHP program to approximate all possible variations of the generated client-side code and subsequently parse this client code into a VarDOM that compactly represents all its variations. Finally, using the VarDOM, we implement various types of IDE services for embedded client code including syntax highlighting, code completion, and \"jump to declaration\". The video demonstration for Varis is available at http://www.youtube.com/watch?v=w1TECeRXGrg.",
    "keywords": "",
    "released": 2015,
    "link": "https://dl.acm.org/doi/10.5555/2819009.2819140",
    "interesting": "-"
  },
  {
    "title": "Form follows function(): An IDE to create laser-cut interfaces and microcontroller programs from single code base",
    "abstract": "During the development of physical computing devices, physical object models and programs for microcontrollers are usually created with separate tools with distinct files. As a result, it is difficult to track the changes in hardware and software without discrepancy. Moreover, the software cannot directly access hardware metrics. Designing hardware interface cannot benefit from the source code information either. This demonstration proposes a browser-based IDE named f3.js that enables development of both as a single JavaScript code base. The demonstration allows audiences to play with the f3.js IDE and showcases example applications such as laser-cut interfaces generated from the same code but with different parameters. Programmers can experience the full feature and designers can interact with preset projects with a mouse or touch to customize laser-cut interfaces. More information is available at http://f3js.org.",
    "keywords": "integrated development environment; laser-cut interface; microcontroller; personal fabrication",
    "released": 2015,
    "link": "https://doi.org/10.1145/2815585.2817797",
    "interesting": "-"
  },
  {
    "title": "Embedding secure coding instruction into the IDE: A field study in an advanced CS course",
    "abstract": "Many of the security vulnerabilities common in today’s software can be prevented with standard secure coding practices. Computer science students who will become the developers of that software need to learn about those practices so they can prevent such vulnerabilities. Many computing programs are addressing this need through additional lectures, elective courses, or more holistic approaches to integrate security across curriculums. We are exploring a complementary approach, integrating secure coding education into the IDE to provide a learning opportunity in the context of writing code. In this paper, we report on two field studies using an IDE tool in an advanced Web programming course. Our results indicate that the tool can increase students’ awareness and knowledge of secure programming, but to be most effective, instructors may need to incentivize its use through in-class methods and careful timing of its introduction.",
    "keywords": "ide; secure programming; security education",
    "released": 2015,
    "link": "https://doi.org/10.1145/2676723.2677280",
    "interesting": "-"
  },
  {
    "title": "Discovering clones in software: From complex algorithms to everyday desktop tool",
    "abstract": "Software clone detection is an actively researched area which has spawned numerous approaches to the problem of duplicated code. These approaches, however, are of little practical use as most of them are ill-suited for incremental analysis required by the developers in their day-to-day activities. This paper tackles the problem of clone detection from the practical point of view, in the context of IDE integration, and presents an online clone detection algorithm based on extended suffix trees. The approach has been tested in a prototype plugin for IntelliJ IDEA and proved its applicability in the industrial setting.",
    "keywords": "IDE; clone detection; suffix trie",
    "released": 2015,
    "link": "https://doi.org/10.1145/2855667.2855676",
    "interesting": "-"
  },
  {
    "title": "Beyond Open Source: The Touch Develop Cloud-Based Integrated Development Environment",
    "abstract": "Software engineering tools and environments are migrating to the cloud, enabling more people to participate in programming from many more devices. To study this phenomenon in detail, we designed, implemented and deployed Touch Develop (url www.touchdevelop.com), a cloud-based integrated development environment (CIDE), which has been online for the past three years. Touch Develop combines a cross-platform browser-based IDE for the creation of mobile cloud apps, an online programmer/user community, and an app store. A central feature of Touch Develop is to track all program edits, versions, runtime information, bugs, as well user comments, questions and feedback in a single cloud-based repository that is available publicly via Web APIs. In this paper, we examine a key feature of Touch Develop that should be relevant to others creating CIDEs, namely the seamless integration of replicated workspaces, simplified version control and app publishing. An analysis of the Touch Develop repository shows that this combination of capabilities allows users to easily create new versions of apps from existing apps, make changes to other users' apps, and share their results from a variety of devices, including smartphones, tablets and traditional PCs.",
    "keywords": "",
    "released": 2015,
    "link": "https://doi.org/10.1109/MobileSoft.2015.20",
    "interesting": "+"
  },
  {
    "title": "Automating Repetitive Tasks on Web-Based IDEs via an Editable and Reusable Capture-Replay Technique",
    "abstract": "Web-based IDEs are more and more popular because developers can create or modify software artifacts in the browser without need to install any local development tool and spend valuable development time on system setup and maintenance. For those development tasks using a Web-based IDE, such as configuring programming context and batch test etc., some are frequent and repetitive because they are similar from project to project. Automating the repetitive tasks on Web-based IDEs, regardless of their complexity, would reduce the amount of work that developers must perform to complete the tasks, which would improve the development efficiency of Web applications. In this paper, we put forward a user-friendly approach to automating repetitive tasks on existing Web-based IDEs. The key to the approach is to extend the basic Web-based capture-replay technique with editable and reusable features, which are necessary for automation because some operations are redundant, as well as developers should recognize and define repetitive tasks. Moreover, we develop a supporting tool for the approach. In the case study, we introduce how the approach is used to support automating repetitive tasks on Web-based IDEs. Case studies verify that the approach can improve the development efficiency very well.",
    "keywords": "Automating repetitive tasks; Web-based IDE; Capture-Replay technique",
    "released": 2015,
    "link": "https://doi.org/10.1109/COMPSAC.2015.12",
    "interesting": "-"
  },
  {
    "title": "Extension of Web-Based Software Development Environment",
    "abstract": "Cloud computing has become very popular in recent years. Various SaaS, PaaS and IaaS systems for collaborative software development have been proposed. We also have proposed a PaaS system that delivers both a server-side development and server-side execution environment for character user interface applications that can be executed on the server machine and a server-side development and client-side execution environment for graphical user interface applications that can be executed on the client machine. Our previous system allows user to develop and execute software on a web-browser. But our previous system assumes standard PC to execute graphical user interface applications. The graphical user interface applications that are developed in our previous system cannot be executed on mobile devices such as smart phone and tablet. Therefore this paper proposes an extension of web-based software development environment. By the extension, our system allows software developers to implement software for mobile devices.",
    "keywords": "cloud computing; PaaS (Platform as a Service); WebOS; SDCE (Server-side Development and Client-side Execution); SDSE (Server-side Development and Client-side Execution)",
    "released": 2015,
    "link": "https://doi.org/10.1109/WAINA.2015.117",
    "interesting": "-"
  },
  {
    "title": "amAssist: In-IDE ambient search of online programming resources",
    "abstract": "Developers work in the IDE, but search online resources in the web browser. The separation of the working and search context often cause the ignorance of the working context during online search. Several tools have been proposed to integrate the web browser into the IDE so that developers can search and use online resources directly in the IDE. These tools enable only the shallow integration of the web browser and the IDE. Some tools allow the developer to augment search queries with program entities in the current snapshot of the code. In this paper, we present an in-IDE ambient search agent to bridge the separation of the developer's working context and search context. Our approach considers the developers' working context in the IDE as a time-series stream of programming event observed from the developer's interaction with the IDE over time. It supports the deeper integration of the working context in the entire search process from query formulation, custom search, to search results refinement and representation. We have implemented our ambient search agent and integrate it into the Eclipse IDE. We conducted a user study to evaluate our approach and the tool support. Our evaluation shows that our ambient search agent can better aid developers in searching and using online programming resources while working in the IDE.",
    "keywords": "Context Sensing; Context-Aware Search; Contextual Search Results Annotation",
    "released": 2015,
    "link": "https://doi.org/10.1109/SANER.2015.7081849",
    "interesting": "-"
  },
  {
    "title": "Tempe: Live scripting for live data",
    "abstract": "Data scientists are increasingly working with live streaming data, for example, business telemetry and signals from wearable devices and the Internet of Things. Unfortunately, current tools for exploratory data analysis provide poor support for streaming data. This paper presents Tempe, a data science environment for temporal and streaming data. Tempe's extensible scripting environment allows for live programming, displays interactive, continually updating visualizations, and provides a uniform query language for both stored and live data. We discuss the streaming features of Tempe and evaluate our design choices with a deployment study at Microsoft with a product team who used Tempe continuously for six months.",
    "keywords": "Programming environments; live programming; data analysis; data mining; data science; web applications; interactive visualization; streaming data",
    "released": 2015,
    "link": "https://doi.org/10.1109/VLHCC.2015.7357208",
    "interesting": "-"
  },
  {
    "title": "VDMPad: A Lightweight IDE for Exploratory VDM-SL Specification",
    "abstract": "The lightweight use of formal methods is an effective approach to using formal specifications in various phases of software development. This paper proposes tool support specialised for the earlier stages of development that involves incremental and exploratory production of a formal specification. The VDMPad tool is described, as well as its features supporting incremental and exploratory development.",
    "keywords": "VDM; Web IDE; Animation; Exploratory Formal Specification",
    "released": 2015,
    "link": "https://doi.org/10.1109/FormaliSE.2015.13",
    "interesting": "-"
  },
  {
    "title": "Development of IslayPub3.0 - Educational programming environment based on state-transition diagrams",
    "abstract": "An enhanced version of IslayPub is developed in this study. IslayPub is an educational programming environment available on any browsers capable of HTML5 and JavaScript. Its unique feature is to describe the behavior of automatic characters in terms of state-transition diagram visually easy to understand even for children. The former version did not offer the functions of publishing what they created and receiving likes and comments from others. In this paper, we enhance IslayPub to include those two functions which will give more fun and motivation to the children. © 2015 IEEE.",
    "keywords": "Interactive animation; State transition diagram; Web service",
    "released": 2015,
    "link": "https://doi.org/10.1109/NBiS.2015.107",
    "interesting": "-"
  },
  {
    "title": "CodeMetropolis: Eclipse over the city of source code",
    "abstract": "The graphical representations of software (code visualization in particular) may provide both professional programmers and students learning only the basics with support in program comprehension. Among the numerous proposed approaches, our research applies the city metaphor for the visualisation of such code elements as classes, functions, or attributes by the tool CodeMetropolis. It uses the game engine of Minecraft for the graphics, and is able to visualize various properties of the code based on structural metrics. In this work, we present our approach to integrate our visualization tool into the Eclipse IDE environment. Previously, only standalone usage was possible, but with this new version the users can invoke the visualization directly from the IDE, and all the analysis is performed in the background. The new version of the tool now includes an Eclipse plug-in and a Minecraft modification in addition to the analysis and visualization modules which have also been extended with some new features. Possible use cases and a detailed scenario are presented. © 2015 IEEE.",
    "keywords": "city-metaphor; Integrated Development Environment; integration; software visualization",
    "released": 2015,
    "link": "https://doi.org/10.1109/SCAM.2015.7335425",
    "interesting": "-"
  },
  {
    "title": "Workshop preview of the 2015 Eclipse technology exchange workshop (ETX 2015)",
    "abstract": "The Eclipse platform was originally designed for building an integrated development environment for object-oriented applications. Over the years it has developed into a vibrant ecosystem of platforms, toolkits, libraries, modeling frameworks, and tools that support various languages and programming styles. The seventh ETX workshop provides a platform for researchers and practitioners to transfer knowledge about the Eclipse Platform and exchange new ideas. It is held in Pittsburgh, Pennsylvania on October 27th, 2015 and co-located with SPLASH 2015.",
    "keywords": "Eclipse platform; Integrated development environment",
    "released": 2015,
    "link": "https://doi.org/10.1145/2814189.2833198",
    "interesting": "-"
  },
  {
    "title": "The experience in application of information technologies for teaching of disabled students",
    "abstract": "This article considers the methodology of combining full-time and distance education for disabled people and demonstrates its advantages and disadvantages. A set of software and technical means for training courses running is suggested. © 2015 IEEE.",
    "keywords": "Android platform in education; distance learning; education of disabled people; information technologies; innovations in education; Integrated Development Environment; training",
    "released": 2015,
    "link": "https://doi.org/10.1109/IDAACS.2015.7341441",
    "interesting": "-"
  },
  {
    "title": "Aspect markup of a source code for quick navigating a project",
    "abstract": "The approach to simplify working with crosscutting concerns by adding a tool to an integrated development environment which enables marking up aspects in the source code is proposed. We consider aspects as sets of related fragments of code, spread across the project. Each fragment is a syntactical entity in some language. The set of such fragments is organized into a tree-like structure and is displayed in a special aspect markup window. After the structure of the aspects is formed, the aspect markup window enables quick navigation across distributed fragment of code which significantly quickens the development. The approach is meant to work with any language which may be expressed with a LR-grammar. Support of different languages is achieved by implementing a lightweight parser using a DSL-language LightParse. The aspect markup tool is implemented as a plug-in to several development environments. Lightweight parsers for a number of commonly used languages are presented. © 2015 ACM.",
    "keywords": "Aspect markup of code; Aspect-Oriented Programming; Crosscutting concerns; Integrated Development Environments; Lightweight parsing",
    "released": 2015,
    "link": "https://doi.org/10.1145/2855667.2855671",
    "interesting": "-"
  },
  {
    "title": "The Birth of Refactoring: A Retrospective on the Nature of High-Impact Software Engineering Research",
    "abstract": "Software refactoring was independently invented in the late '80s by two students in two research groups: Ralph Johnson's group at the University of Illinois and David Notkin's group at the University of Washington. This article provides a retrospective of the birth of refactoring, reflecting on how the ideas came about and were developed in those two students' doctoral dissertations. The analysis provides useful insights for both researchers and practitioners seeking high impact in their work. This article is part of a special issue on Refactoring. © 2015 IEEE.",
    "keywords": "Bill Griswold; Bill Opdyke; David Notkin; history; integrated development environment; program restructuring; Ralph Johnson; refactoring; software development; software engineering",
    "released": 2015,
    "link": "https://doi.org/10.1109/MS.2015.107",
    "interesting": "-"
  },
  {
    "title": "On development of static analysis tools for string-embedded languages",
    "abstract": "Some programs can produce string expressions with embedded code in other programming languages while running. This embedded code should be syntactically correct as it is typically executed by some subsystem. A program in Java language that builds and sends SQL queries to the database it works with can be considered as an example. In such scenarios, languages like SQL are called string-embedded and ones like Java { host languages. In spite of the fact such an approach of programs building is being replaced by alternative ones, for example by ORM and LINQ, string-embedding is still used in practice. Development and reengineering of the programs with stringembedded languages is complicated because the IDE and similar tools process the code embedded in strings as host language string literals and cannot provide the functionality to work with this code. To facilitate the development process, string-embedded code highlighting, completion, navigation and static errors checking would be useful. For the purposes of reengineering, embedded code metrics computation would be helpful. Currently existing tools to string-embedded languages support only operate with one host language and a fixed set of string-embedded ones. Their functionality is often limited. Moreover, it is almost impossible or requires a substantial amount of work to add a support for both new host and string-embedded language. Attempts to extend their functionality often result in the same problem. In this paper we present the platform which can be used for relatively fast and easy building of endpoint tools that provide a support for difeerent string-embedded languages inside diferent host languages. The tools built for T-SQL and arithmetic expressions language embedding in C# are demonstrated as the examples of how the platform can be used. © 2015 ACM.",
    "keywords": "Approximation; CFG; Control Flow graph; IDE; Integrated development environment; String-embedded language",
    "released": 2015,
    "link": "https://doi.org/10.1145/2855667.2855672",
    "interesting": "-"
  },
  {
    "title": "Facilitating Information Management in Integrated Development Environments through Visual Interface Enhancements",
    "abstract": "In the past decades, integrated development environments (IDEs) have been largely advanced to facilitate software engineering tasks and improve developer productivity. Yet, with growing information needs driven by increasing complexity in developing modern software with demands for high quality and reliability, developers often need to switch among multiple user interfaces, even across different applications, in their development process, which breaks their mental workflow thus tends to adversely affect their work efficiency and productivity. This paper discusses challenges faced by the current IDE design mainly due to working context transitions imposed on developers during their search for multiple information sources for their development needs. It remarks the primary blockades behind and initially explores some high-level design considerations for overcoming such challenges in the next-generation IDEs. Specifically, a few design enhancements on top of modern IDEs are proposed, attempting to reduce the overheads of frequent context switching commonly seen in the multitasking practice of developers. © 2015 IEEE.",
    "keywords": "Automatic recommendation; Context switching; Information need; Integrated development environment; Programming interface; Software visualization",
    "released": 2015,
    "link": "https://doi.org/10.1109/QRS-C.2015.46",
    "interesting": "-"
  },
  {
    "title": "Aiding programmers using Lightweight integrated code visualization",
    "abstract": "We present a Lightweight Integrated Code Visualization (LICV) tool designed to aid programmers using Integrated Development Environments (IDEs). LICV is implemented as a plug-in for the Eclipse IDE for Java Developers. LICV continuously tracks the active editor in the IDE and visualizes up to 24 code features in a designated non-intrusive view. LICV is designed to facilitate fast understanding of the structure of the code in order to help users carry out routine programming tasks. It enables users to zoom, filter, search, and go back and forth between the code and the visualization via direct manipulation. We evaluated LICV by carrying out two user studies which compared LICV against regular Eclipse in four tasks. We found that LICV significantly reduced participants' completion times by nearly 50% for three out of four tasks. Further, participants significantly preferred using LICV to perform the tasks. © 2015 ACM.",
    "keywords": "Code visualization; Integrated development environment; Lightweight integrated code visualization",
    "released": 2015,
    "link": "https://doi.org/10.1145/2846680.2846683",
    "interesting": "-"
  },
  {
    "title": "Enhancing object-oriented programming education using static and dynamic visualization",
    "abstract": "While Object-Oriented programming in Java has been widely adopted as an introductory programming course in Computer Science, it is considered difficult to teach and learn. Studies have identified that the difficulty is from the underlying Object-Oriented concepts and principles. To help student programmers better understand the structure of a program and the concepts of Object-Oriented design, visualizations in various formats have been applied to programming environments. This paper presents a web-based interactive educational programming environment, JavlinaCode, and its unique design principles. JavlinaCode is designed for teaching object-oriented programming in Java. It aims to enhance student programmers' programming skill and to help them understand object-oriented design concepts. It provides integrated static and dynamic visualizations: the static state of a Java program in an UML class diagram and the dynamic run-time state of the program execution. With the synchronized multi-view real time visualization along with source code, JavelinaCode is highly expected to reduce student programmers' cognitive workload in Java programming and to enhance comprehension of the objectoriented programming and design concepts. © 2015 IEEE.",
    "keywords": "Data visualization; Java; Programming environments; Programming profession; Unified modeling language; Visualization",
    "released": 2015,
    "link": "https://doi.org/10.1109/FIE.2015.7344152",
    "interesting": "+"
  },
  {
    "title": "CSIclipse: Presenting crash analysis data to developers",
    "abstract": "Debugging is di cult and costly, especially for failures that occur after deployment. In prior work, we developed a suite of instrumentation and analysis tools, collectively titled the Crash Scene Investigation toolkit (CSI). These tools aid developers by providing additional information about failing program executions using latent data in post-failure memory dumps. While we showed that our technique is e ective in reducing execution ambiguity, it lacked a proper user interface for developers. In this paper, we present CSIclipse, a work-in-progress plugin for the Eclipse integrated development environment (IDE) that brings our analyses directly to the user. The goal of our plugin is to ease the burden of debugging production failures by conveniently presenting CSI trace and analysis data with intuitive source code overlays and powerful data exploration mechanisms. While designed for our CSI data, our plugin is likely general enough to support trace data from a variety of program analyses. © 2015 ACM.",
    "keywords": "Debugging; Integrated development environments; Postmortem program analysis; Software development",
    "released": 2015,
    "link": "https://doi.org/10.1145/2846650.2846651",
    "interesting": "-"
  },
  {
    "title": "Bespoke tools: Adapted to the concepts developers know",
    "abstract": "Even though different developers have varying levels of expertise, the tools in one developer's integrated development environment (IDE) behave the same as the tools in every other developers' IDE. In this paper, we propose the idea of automatically customizing development tools by modeling what a developer knows about software concepts. We then sketch three such \"bespoke\" tools and describe how development data can be used to infer what a developer knows about relevant concepts. Finally, we describe our ongoing efforts to make bespoke program analysis tools that customize their notifications to the developer using them. © 2015 ACM.",
    "keywords": "Adaptive tools; Concept models; IDE",
    "released": 2015,
    "link": "https://doi.org/10.1145/2786805.2803197",
    "interesting": "-"
  },
  {
    "title": "Evaluating the Effect of 3D World Integration within a Social Software Environment",
    "abstract": "Several virtual communities have spread during the last decade where hundreds of people interact and socialize. Users use these communities in many fields including education, health, business, and entertainment. They use them to communicate, share information, and collaborate to achieve common goals and finish their tasks. To our knowledge, no existing literature or research studies show the benefit of using virtual world in 1) improving software engineering education, 2) enhancing the collaboration in distributed software development environment, and 3) increasing their effectiveness in the distributed developers' progress. For this purpose we conducted a case study to test effect of integrating a virtual environment called CVE in software development environments. This study presents both qualitative and quantitative analysis of the data collected from the case study surveys and log files. It conducted a survey on the users' preferences a. Also, it collected data about the developer's interactions with the 3D objects, and analyzed the collected results. © 2015 IEEE.",
    "keywords": "3D World; CVEs; IDE (Integrated Development Environment); Social Interaction; Social Networking; Virtual Environments",
    "released": 2015,
    "link": "https://doi.org/10.1109/ITNG.2015.47",
    "interesting": "-"
  },
  {
    "title": "PIED: An IDE for poets using a mobile or wearable device",
    "abstract": "Computers are powerful tools that can be leveraged to provide poets with an environment for the composition of poetry. The idea of an integrated development environment (IDE) could be taken as a jumping-off point for the design of a 'poet's IDE.' In this paper, we propose the design of the Poet's Integrated Environment for Development (PIED). © 2015 IEEE.",
    "keywords": "Collaborative systems; Computers in the humanities; Data visualization; Mobile computing; Poetry; Wearable computing",
    "released": 2015,
    "link": "https://doi.org/10.1109/CTS.2015.7210465",
    "interesting": "-"
  },
  {
    "title": "Multimodal interactive system development environment based on ontological knowledge",
    "abstract": "With the spread of mobile devices, need for development methodology of MMI (MultiModal Interaction) systems is increasing in recent years. We have designed a new object-oriented MMI description language named MrailsScript which is based on the data model definition. MrailsScript has maintainability and scalability compared with previous languages which based on the finite state model. The data model definition is based on semantic web ontology that makes the definition process simpler and can use meta-data of Linked Open Data. However the developer is required to learn about related semantic web technologies in order to take advantage of MrailsScript. The aim of this research is to develop a new Multimodal interactive system development environment, named MrailsBuilder, which is based on ontological knowledge. MrailsBuilder supports data model definition process by visualizing the structure of ontology. In addition, MrailsBuilder automatically generates SPARQL query from MrailsScript which creates the target contents of the MMI system from Linked Open Data with the inference capability. We developed an example MMI systems using this MrailsBuilder and examined its facilities of development process. © 2015, Japanese Society for Artificial Intelligence. All rights reserved.",
    "keywords": "Interactive system development; Multimodal interaction; Semantic web",
    "released": 2015,
    "link": "https://doi.org/10.1527/tjsai.30.61",
    "interesting": "-"
  },
  {
    "title": "Supporting developers' coordination in the IDE",
    "abstract": "Teamwork in software engineering is time-consuming and problematic. In this paper, we explore how to better support developers' collaboration in teamwork, focusing on the software implementation phase happening in the integrated development environment (IDE). Conducting a qualitative investigation, we learn that developers' teamwork needs mostly regard coordination, rather than concurrent work on the same (sub)task, and that developers successfully deal with scenarios considered problematic in literature, but they have problems dealing with breaking changes made by peers on the same project. We derive implications and recommendations. Based on one of the latter, we analyze the current IDE support for receiving code changes, finding that historical information is neither visible nor easily accessible. Consequently, we devise and qualitatively evaluate BELLEVUE, the design of an IDE extension to make received changes always visible and code history accessible in the editor. © 2015 ACM.",
    "keywords": "Developers' coordination; IDE extension; Qualitative study.",
    "released": 2015,
    "link": "https://doi.org/10.1145/2675133.2675177",
    "interesting": "-"
  },
  {
    "title": "How and When to Transfer Software Engineering Research via Extensions",
    "abstract": "It is often reported that there is a large gap between software engineering research and practice, with little transfer from research to practice. While this is true in general, one transfer technique is increasingly breaking down this barrier: extensions to integrated development environments (IDEs). With the proliferation of app stores for IDEs and increasing transfer effort from researchers several research-based extensions have seen significant adoption. In this talk we'll discuss our experience transferring code search research, which currently is in the top 5% of Visual Studio extensions with over 13,000 downloads, as well as other research techniques transferred via extensions such as NCrunch, FindBugs, Code Recommenders, Mylyn, and Instasearch. We'll use the lessons learned from our transfer experience to provide case study evidence as to best practices for successful transfer, supplementing it with the quantitative evidence offered by app store and usage data across the broader set of extensions. The goal of this 30 minute talk is to provide researchers with a realistic view on which research techniques can be transferred to practice as well as concrete steps to execute such a transfer. © 2015 IEEE.",
    "keywords": "Case study; Integrated development environment; Plugins; Technology transfer",
    "released": 2015,
    "link": "https://doi.org/10.1109/ICSE.2015.152",
    "interesting": "-"
  },
  {
    "title": "Automated Program Repair in an Integrated Development Environment",
    "abstract": "We present the integration of the AutoFix automated program repair technique into the EiffelStudio Development Environment. AutoFix presents itself like a recommendation system capable of automatically finding bugs and suggesting fixes in the form of source-code patches. Its performance suggests usage scenarios where it runs in the background or during work interruptions, displaying fix suggestions as they become available. This is a contribution towards the vision of semantic Integrated Development Environments, which offer powerful automated functionality within interfaces familiar to developers. A screencast highlighting the main features of AutoFix can be found at: http://youtu.be/Ff2ULiyL-80. © 2015 IEEE.",
    "keywords": "",
    "released": 2015,
    "link": "https://doi.org/10.1109/ICSE.2015.222",
    "interesting": "-"
  },
  {
    "title": "Modeling context-aware command recommendation and acceptance in an IDE",
    "abstract": "For software developers to use the full range of available commands in an integrated development environment, one has to provide proactive support which can suggest unknown commands that could be useful for the task at hand. Researchers started exploring the potential of recommender systems to provide this type of help, but so far there are still very few contributions. We propose a new multi-criteria context-aware rating prediction model that can be used to predict the user choice of either to accept or reject an IDE command recommendation. Individual command recommendation evaluation criteria are: performance expectancy, effort expectancy, and social influence; besides, the overall evaluation/rating is the intention to use a command. We have identified four types of contexts, namely, current practice, environment, interaction, and recommendation presentation context. The model is aimed at improving recommendation quality and enabling more effective recommendation presentations. © 2015 IEEE.",
    "keywords": "Command; Context-aware; Model; Multi-criteria; Recommender system",
    "released": 2015,
    "link": "https://doi.org/10.1109/CSD.2015.7",
    "interesting": "-"
  },
  {
    "title": "A Cloud Based Framework for Platform as a Service",
    "abstract": "Cloud computing systems assist applications by offering virtualized resources that can be provisioned on demand basis. Computing resources are delivered by Virtual Machines (VMs). Traditional development models have many limitations such as cost and delay. Platform as services is an effective solution for most of problems on traditional development application model that faced by programmers as Platform as a Service provides them the same traditional features with a faster speed, reducing the cost and increasing collaboration. The aim of this paper is to develop cloud based framework based on Platform as a Services to assist in developing, testing and deploying application without the need to purchase of hardware, operating systems, and tools that is obtainable as services via the Internet. To evaluate the proposed framework, this study conducted an empirical study by setting up an experiment for programmers and IT 'specialists. The achieved results revealed that the proposed framework can overcome the tradition framework limitation © 2015 IEEE.",
    "keywords": "Cloud Computing; Code Repository; Deployment; Framework; IDE; Platform as a Service",
    "released": 2015,
    "link": "https://doi.org/10.1109/CLOUDCOMP.2015.7149621",
    "interesting": "-"
  },
  {
    "title": "Formal reasoning using an iterative approach with an integrated web IDE",
    "abstract": "This paper summarizes our experience in communicating the elements of reasoning about correctness, and the central role of formal specifications in reasoning about modular, component-based software using a language and an integrated Web IDE designed for the purpose. Our experience in using such an IDE, supported by a 'push-button' verifying compiler in a classroom setting, reveals the highly iterative process learners use to arrive at suitably specified, automatically provable code. We explain how the IDE facilitates reasoning at each step of this process by providing human readable verification conditions (VCs) and feedback from an integrated prover that clearly indicates unprovable VCs to help identify obstacles to completing proofs. The paper discusses the IDE's usage in verified software development using several examples drawn from actual classroom lectures and student assignments to illustrate principles of design-by-contract and the iterative process of creating and subsequently refining assertions, such as loop invariants in object-based code.",
    "keywords": "",
    "released": 2015,
    "link": "https://doi.org/10.4204/EPTCS.187.5",
    "interesting": "+"
  },
  {
    "title": "How Do Users Discover New Tools in Software Development and Beyond?",
    "abstract": "Software users rely on software tools such as browser tab controls and spell checkers to work effectively and efficiently, but it is difficult for users to be aware of all the tools that might be useful to them. While there are several potential technical solutions to this difficulty, we know little about social solutions, such as one user telling a peer about a tool. To explore these social solutions, we conducted two studies, an interview study and a diary study. The interview study describes a series of interviews with 18 programmers in industry to explore how tool discovery takes place. To broaden our findings to a wider group of software users, we then conducted a diary study of 76 software users in their workplaces. One finding was that social learning of software tools, while sometimes effective, is infrequent; software users appear to discover tools from peers only once every few months. We describe several implications of our findings, such as that discovery from peers can be enhanced by improving software users’ ability to communicate openly and concisely about tools. © 2015, Springer Science+Business Media Dordrecht.",
    "keywords": "Discovery; Learning; Programmers; Programming tools",
    "released": 2015,
    "link": "https://doi.org/10.1007/s10606-015-9230-9",
    "interesting": "-"
  },
  {
    "title": "Automatically visualise and analyse data on pathways using PathVisioRPC from any programming environment",
    "abstract": "Background: Biological pathways are descriptive diagrams of biological processes widely used for functional analysis of differentially expressed genes or proteins. Primary data analysis, such as quality control, normalisation, and statistical analysis, is often performed in scripting languages like R, Perl, and Python. Subsequent pathway analysis is usually performed using dedicated external applications. Workflows involving manual use of multiple environments are time consuming and error prone. Therefore, tools are needed that enable pathway analysis directly within the same scripting languages used for primary data analyses. Existing tools have limited capability in terms of available pathway content, pathway editing and visualisation options, and export file formats. Consequently, making the full-fledged pathway analysis tool PathVisio available from various scripting languages will benefit researchers. Results: We developed PathVisioRPC, an XMLRPC interface for the pathway analysis software PathVisio. PathVisioRPC enables creating and editing biological pathways, visualising data on pathways, performing pathway statistics, and exporting results in several image formats in multiple programming environments. We demonstrate PathVisioRPC functionalities using examples in Python. Subsequently, we analyse a publicly available NCBI GEO gene expression dataset studying tumour bearing mice treated with cyclophosphamide in R. The R scripts demonstrate how calls to existing R packages for data processing and calls to PathVisioRPC can directly work together. To further support R users, we have created RPathVisio simplifying the use of PathVisioRPC in this environment. We have also created a pathway module for the microarray data analysis portal ArrayAnalysis.org that calls the PathVisioRPC interface to perform pathway analysis. This module allows users to use PathVisio functionality online without having to download and install the software and exemplifies how the PathVisioRPC interface can be used by data analysis pipelines for functional analysis of processed genomics data. Conclusions: PathVisioRPC enables data visualisation and pathway analysis directly from within various analytical environments used for preliminary analyses. It supports the use of existing pathways from WikiPathways or pathways created using the RPC itself. It also enables automation of tasks performed using PathVisio, making it useful to PathVisio users performing repeated visualisation and analysis tasks. PathVisioRPC is freely available for academic and commercial use at http://projects.bigcat.unimaas.nl/pathvisiorpc. © 2015 Bohler et al.",
    "keywords": "Automation; Biological pathways; Data visualisation; Multi-omics; Pathway analysis; Pathway building; R package; Workflow integration",
    "released": 2015,
    "link": "https://doi.org/10.1186/s12859-015-0708-8",
    "interesting": "-"
  },
  {
    "title": "Towards enabling overture as a platform for formal notation IDEs",
    "abstract": "Formal Methods tools will never have as many users as tools for popular programming languages and so the effort spent on constructing Integrated Development Environments (IDEs) will be orders of magnitudes lower than that of programming languages such as Java. This means newcomers to formal methods do not get the same user experience as with their favourite programming IDE. In order to improve this situation it is essential that efforts are combined so it is possible to reuse common features and thus not start from scratch every time. This paper presents the Overture platform where such a reuse philosophy is present. We give an overview of the platform itself as well as the extensibility principles that enable much of the reuse. The paper also contains several examples platform extensions, both in the form of new features and a new IDE supporting a new language. © Luís Diogo Couto et. al.",
    "keywords": "",
    "released": 2015,
    "link": "https://doi.org/10.4204/EPTCS.187.2",
    "interesting": "-"
  },
  {
    "title": "Building an IDE for the calculational derivation of imperative programs",
    "abstract": "In this paper, we describe an IDE called CAPS (Calculational Assistant for Programming from Specifications) for the interactive, calculational derivation of imperative programs. In building CAPS, our aim has been to make the IDE accessible to non-experts while retaining the overall flavor of the pen-and-paper calculational style. We discuss the overall architecture of the CAPS system, the main features of the IDE, the GUI design, and the trade-offs involved. © D. L. Chaudhari and O. Damani This work is licensed under the Creative Commons Attribution License.",
    "keywords": "",
    "released": 2015,
    "link": "https://doi.org/10.4204/EPTCS.187.1",
    "interesting": "-"
  },
  {
    "title": "Experience report: Evolution of a web-integrated software development and verification environment",
    "abstract": "This paper summarizes our experiences over the last 4 years in creating a web-integrated software development and verification environment. The environment has been used for both research experimentation and education. It has been used in undergraduate computer science courses to teach modular software development and analytical reasoning principles at multiple institutions. In the process, the environment has undergone many refinements to meet demands for improved functionality and to leverage rapidly changing underlying technology for the improvements. The environment is tailored to present formal specifications and alternative implementations of components, and enable correctness checking through a server-side verifying compiler. This paper presents a detailed account of the development and evolution of the environment - its functionality, user interface, and underlying technology - that we hope will serve as a model for others, especially as the benefits of online learning systems are becoming increasingly obvious. Copyright © 2014 John Wiley & Sons, Ltd.",
    "keywords": "Education; formal methods; IDE; reusable components; software engineering; verification; web application",
    "released": 2015,
    "link": "https://doi.org/10.1002/spe.2259",
    "interesting": "+"
  },
  {
    "title": "TangoHapps: An integrated development environment for smart garments",
    "abstract": "Smart garments have emerged to a significant research field over the last decades. Despite their potential and increasing industrial interest, the field still faces major challenges, such as the lack of software tools that support their development. Research in this field is mostly being done on hardware technologies such as soft textile sensors and on concrete use cases. In this paper, I introduce TangoHapps, a hybrid text- and visual-based Integrated Development Environment (IDE) that has the goal to support developers with different backgrounds in the creation of smart garments.",
    "keywords": "ETextiles; Integrated development environment; Interactex; Smart garments; TangoHapps; TextIT",
    "released": 2015,
    "link": "https://doi.org/10.1145/2800835.2801650",
    "interesting": "-"
  },
  {
    "title": "ExceptionTracer: A Solution Recommender for Exceptions in an Integrated Development Environment",
    "abstract": "Exceptions are an indispensable part of the software development process. However, developers usually rely on imprecise results from a web search to resolve exceptions. More specifically, they should personally take into account the context of an exception, then, choose and adapt a relevant solution to solve the problem. In this paper, we present Exception Tracer, an Eclipse plug in that helps developers to resolve exceptions with respect to the stack trace in Java programs. In particular, Exception Tracer automatically provides candidate solutions to an exception by mining software systems in the Source Forge, as well as listing relevant discussions about the problem from the Stack Overflow. © 2015 IEEE.",
    "keywords": "ExceptionTracer; Fixing Exceptions; Recommender System; SourceForge; StackOverflow",
    "released": 2015,
    "link": "https://doi.org/10.1109/ICPC.2015.45",
    "interesting": "-"
  },
  {
    "title": "A cloud-based integrated development environment for robot software development",
    "abstract": "Cloud systems are efficient models that can utilize various infrastructures, platforms, and applications regardless of the type of clients. This paper proposes a cloud-based integrated development environment (IDE) for robot software development which would make software development easier. The proposed system provides robot simulation to test the robot HW modules or robot systems for development and testing of software operating in a robot system with two or more different operating systems (OS) such as Windows, Linux, and real-time OS. This paper implements and evaluates the proposed system using OPRoS [33].",
    "keywords": "Development environment; Robot cloud; Simulation environment",
    "released": 2015,
    "link": "https://doi.org/10.5302/J.ICROS.2015.14.0059",
    "interesting": "-"
  },
  {
    "title": "CodeR: Real-time Code Editor Application for Collaborative Programming",
    "abstract": "The world of Internet is growing rapidly, many applications that previously created on the desktop start moving to the web. Many applications could be accessed anytime and anywhere easily using Internet. Developers need tools to create their applications, one of them named code editor. The purpose of this research is to design and develop a real-time code editor application using web socket technology to help users collaborate while working on the project. This application provides a feature where users can collaborate on a project in real-time. The authors using analysis methodology which conducting on a study of the current code editor applications, distributing questionnaires and conducting on literature study. CodeR is a web application that provides workspace to writing, perform, display the results of the code through the terminal, and collaborate with other users in real-time. The application main features are providing workspace to make, execute and build the source code, real-time collaboration, chat, and build the terminal. This application supports C, C++, and Java programming languages. © 2015 The Authors. Published by Elsevier B.V.",
    "keywords": "Application; Code Editor; Collaborative Programming; Real-time; Web Socket",
    "released": 2015,
    "link": "https://doi.org/10.1016/j.procs.2015.07.531",
    "interesting": "+"
  },
  {
    "title": "Web2Compile-CoT: A web IDE for the cloud of things",
    "abstract": "This paper presents Web2Compile-CoT, a WebIDE for developing Cloud of Things (CoT) applications. The Web2Compile-CoT was built grounded on the paradigms of integrated development environments, based on web technology, and cloud computing. So it provides to the scientific community (students and researchers) an ubiquitous development environment that does not demand any configuration or download of applications to work properly, but requiring only updated Internet browsers. Web2compile-CoT works with Contiki and TinyOS sensor operating systems, and it is able to interact with IoT-lab, a sensor testbed for CoT applications. We evaluated Web2Compile-CoT in terms of System efficiency and effectiveness. With Web2Compile-CoT we can reduce the average time for development of an application in classrooms from four hours to 30 min. In addition, due to IoT-lab integration, Web2Compile-CoT supports classrooms with more than 50 students executing experiments simultaneously. © Springer International Publishing Switzerland 2015.",
    "keywords": "Cloud of things; Internet of things; Testbeds; WebIDE; Wireless sensor networks",
    "released": 2015,
    "link": "https://doi.org/10.1007/978-3-319-23237-9_3",
    "interesting": "+"
  },
  {
    "title": "Software developers as users: Developer experience of a cross-platform integrated development environment",
    "abstract": "Software development is professional activity that demands a plethora of skills and qualities from the developer. For instance, developers need technical skills to create the code that implements the running software and social skills to be able to collaborate with peer developers and with various stakeholders. Development is an endeavor towards building complex systems that realize user and business requirements in technologically sophisticated manner. Considering the challenges of software development, developer experience is a highly unstudied topic. Developers are users of multifaceted development tools such as integrated development environments. Yet, little is known of how to support developers in their demanding tasks. This paper presents early results towards increasing the understanding of developer experience in order to enable improvement of development tools to better support software developers in their activities. We present qualitative results of a survey study with 45 developers from 21 countries considering developers’ perception of a particular integrated development environment. © Springer International Publishing Switzerland 2015.",
    "keywords": "Developer experience; Development tools; Human factors; Human-Computer interaction (HCI); Integrated development environment (IDE); Software development; User experience (UX)",
    "released": 2015,
    "link": "https://doi.org/10.1007/978-3-319-26844-6_40",
    "interesting": "-"
  },
  {
    "title": "SPARQL playground: A block programming tool to experiment with SPARQL",
    "abstract": "SPARQL is a powerful query language for Semantic Web data sources but one which is quite complex to master. As the block programming paradigm has been succesfully used to teach programming skills, we propose a tool that allows users to build and run SPARQL queries on an endpoint without previous knowledge of the syntax of SPARQL and the model of the data in the endpoint (vocabularies and semantics). This user interface attempts to close the gap between tools for the lay user that do not allow to express complex queries and overtly complex technical tools.",
    "keywords": "",
    "released": 2015,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944320357&partnerID=40&md5=c40a8f7643ba119e54802ed70b78d3d3",
    "interesting": "-"
  },
  {
    "title": "CIRANO: An Integrated Programming Environment for Multi-tier Cloud Based Applications",
    "abstract": "This paper describes the CIRANO platform, a cloud Integrated Development Environments (IDE) that substantially supports Model Driven Development (MDD) and team collaboration, in order to facilitate the development of cloud-based applications. The paper presents the state of the art in the field and discusses the technical details of CIRANO architecture and its modular implementation. The main features of the proposed platform are presented as a case study application concerning the update and porting of an existing collaboration system, called Comidor. The paper discusses the findings in comparison with existing tools and proposes extensions of the platform as future work. © 2015 The Authors.",
    "keywords": "Cloud; collaboration systems; Integrated Development Environments; programming environments",
    "released": 2015,
    "link": "https://doi.org/10.1016/j.procs.2015.09.222",
    "interesting": "-"
  },
  {
    "title": "Computers in the CS1 Claßroom",
    "abstract": "There are two basic approaches to flipping an introduction to programming claß (CS1). One involves requiring all students to bring computers to claß and to work alone or in groups to solve programming problems. The other approach is to ban computers from the claßroom and to require students to solve programming problems on paper. In both approaches the students' attempts are shared with the claß and discußed. In this work, we describe an experiment in which we compared these two approaches for a large programming claß. We found that the use of computers had no statistically significant effect on the students' learning outcomes, enjoyment of the material, self-aßeßment of their understanding, use of teaching aßistant resources, or self-estimate of how many hours they invested outside of the claßroom. We did find that a statistically significant number of students preferred problem solving with friends using computers rather than on paper. We also found that the instructor had much more detailed information about individual student's interaction in claß when computers were used, since all student interaction with the coding tools could be logged and analysed. We conclude that, although many faculty are wary of requiring computer use in large claßes, there is evidence that students prefer it, it does not negatively affect learning outcomes, and with appropriate tools and pedagogy, it gives the instructor a much deeper and more nuanced view of student performance in the claß.",
    "keywords": "Blended Learning; Computer-Mediated-Communication; Educational Technologies; Flipped Claßroom; Pedagogy Design; Teaching Introductory Computer Science; Web-based IDEs",
    "released": 2015,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943540715&partnerID=40&md5=6b14819aca498e28fc66f8f8e1a25373",
    "interesting": "-"
  },
  {
    "title": "Local search-based pattern matching features in EMF-INCQUERY",
    "abstract": "Graph patterns provide a declarative formalism to describe model queries used for several important engineering tasks, such as well-formedness constraint validation or model transformations. As different pattern matching approaches, such as local search or incremental evaluation, have different performance characteristics (smaller memory footprint vs. smaller runtime), a wider range of practical problems can be addressed. The current paper reports on a novel feature of the EMF-INCQUERY framework supporting local search-based pattern matching strategy to complement the existing incremental pattern matching capabilities. The reuse of the existing pattern language and query development environment of EMF-INCQUERY enables to select the most appropriate strategy separately for each pattern without any modifications to the definitions of existing patterns. Furthermore, a graphical debugger component is introduced that visualizes the execution of the search process, helping to understand how complex patterns behave. This tool paper presents the new pattern matching feature from an end users viewpoint while the scientific details of the pattern matching strategy itself are omitted. The approach is illustrated on a case study of automated identification of anti-patterns over program models created from Java source code. © Springer International Publishing Switzerland 2015.",
    "keywords": "EMF-INCQUERY; Integrated development environment; Local search-based pattern matching",
    "released": 2015,
    "link": "https://doi.org/10.1007/978-3-319-21145-9_18",
    "interesting": "-"
  },
  {
    "title": "Model-driven development for multi-platform mobile applications",
    "abstract": "In this paper, we propose an approach for the model-driven development of portable applications that use native device features. A model is based on a finite-state machine which specifies GUIs, transitions and data-flow among application screens. The source code is generated starting from that model. The state application logic is described by JavaScript. The approach has been developed within an integrated development environment. © Springer International Publishing Switzerland 2015.",
    "keywords": "Mobile devices; Model-driven development; Multi-platform development; Visual development environment",
    "released": 2015,
    "link": "https://doi.org/10.1007/978-3-319-26844-6_5",
    "interesting": "-"
  },
  {
    "title": "Distributable interface design for web applications",
    "abstract": "The increasing number of devices available for each person allows to create unconventional interfaces that coordinate more than one device for supporting the interaction. In this paper, we introduce a framework for designing distributable web applications, which supports moving and sharing the different parts of a user interface across different devices. We depict the architectural solution and we introduce a set of distribution patterns. In addition, we describe a concrete application of the framework for a distributable video player application. © Springer International Publishing Switzerland 2015.",
    "keywords": "Development tools; Distributed interfaces; User Interface Engineering; Web applications",
    "released": 2015,
    "link": "https://doi.org/10.1007/978-3-319-20804-6_3",
    "interesting": "-"
  },
  {
    "title": "Teaching quantum computing with the QuIDE simulator",
    "abstract": "Recently, the idea of quantum computation is becoming more and more popular and there are many attempts to build quantum computers. Therefore, there is a need to introduce this topic to regular students of computer science and engineering. In this paper we present a concept of a course powered by the Quantum Integrated Development Environment (QuIDE), the new quantum computer simulator that joins features of GUI based simulators with interpreters and simulation library approach. The idea of the course is to put together theoretical aspects with practical assignments realized on the QuIDE simulator. Such an approach enables studying a variety of topics in a way understandable for this category of students. The topics of the course included understanding the concept of quantum gates, registers and a series of algorithms: Deutsch and Bernstein-Vazirani Problems, Grover's Fast Database Search, Shor's Prime Factorization, Quantum Teleportation and Quantum Dense Coding. We describe results of QuIDE assessment during the course; our solution scored more points in System Usability Scale survey then the other tool previously used for that purpose. We also show that the most useful features of such a tool indicated by students are similar to the assumptions made on the simulator functionality. © The Authors. Published by Elsevier B.V.",
    "keywords": "Computer science; MSc program; Quantum computing course; Simulator; SUS survey",
    "released": 2015,
    "link": "https://doi.org/10.1016/j.procs.2015.05.374",
    "interesting": "-"
  },
  {
    "title": "ICDO: Integrated cloud-based development tool for DevOps",
    "abstract": "This research is based on three drivers. Firstly, software development and deployment cycles are getting shorter and require automatic building and deployment processes. Secondly, elastic clouds are available for both hosting and development of applications. Thirdly, the increasingly popular DevOps introduces new organizational and business culture. This paper presents a research prototype and demonstrator of an integrated development tool. The tool is cloud based and thus accessible from any Web-enabled terminal. Automation is maximized so that deployment cycles can be as fast as possible. Since the aim is to use cloud resources as a utility in a flexible manner, cloud brokering { i.e. finding the most suitable provider { is included in the system. The contributions of the paper include: an idea of a new kind of DevOps tool, description on how it can be implemented on top of standard components and implications to software development processes.",
    "keywords": "Cloud brokerage; Cloud federation; Continuous deployment; DevOps; EASI-CLOUDS project; Software development",
    "released": 2015,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962497772&partnerID=40&md5=011bd51d3d7646a20971b02b9903d9aa",
    "interesting": "-"
  },
  {
    "title": "Mixing and mashing website themes",
    "abstract": "WordPress offers users a wide choice of themes defining the structure, functionality, layout and presentation of a website together with its content types. These themes are shared by the WordPress community, enabling users to benefit from the skills of others. However, it is not possible to mix themes, so users often have to choose from a set of themes that only partially meet their requirements. We have developed a theme editor that allows users to combine both static and dynamic elements of existing themes using simple drag-and-drop operations. These elements are adapted to reflect the content and structure of the website under construction so that there is no distinction between designtime and run-time. We discuss in detail technical challenges along with our solutions for developing such an editor and integrating it into the WordPress platform. Further, we describe how the solutions could be generalised to other modern content management systems. © Springer International Publishing Switzerland 2015.",
    "keywords": "Content management system; Theme generator; Web development tool; Website theme",
    "released": 2015,
    "link": "https://doi.org/10.1007/978-3-319-19890-3_4",
    "interesting": "-"
  },
  {
    "title": "Physical education central: A possible online professional development tool",
    "abstract": "",
    "keywords": "",
    "released": 2015,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000359745700290",
    "interesting": "-"
  },
  {
    "title": "Building keyword-indexed virtual libraries in a logic programming environment",
    "abstract": "KW-GPS is a system to assist users intent on enjoying Web resources related to a domain-restricted collection of stories. In this system, each story is referenced in a virtual library in terms of the following data: (1) the URLs of resources associated with the story, which include but are not limited to plot-summaries, narrative texts, and videos; and (2) keywords of different classes, which serve as a multi-aspect index mechanism. Library items also include story templates, representing narrative motifs. Furthermore, a reduced version of the tool runs the basic rank-and-show process on mobile devices.",
    "keywords": "web resources; virtual libraries; story templates; logic programming; digital entertainment; detective stories",
    "released": 2014,
    "link": "https://doi.org/10.1145/2664551.2664553",
    "interesting": "-"
  },
  {
    "title": "LearnCS! A new, browser-based c programming environment for CS1",
    "abstract": "LearnCS! is a learning environment specifically written for use by first-year computer science students. It provides students with a browser-based programming and execution environment which contains a depiction of the notional machine for the C language, and contains a built-in debugger. Many error messages are customized to assist the beginning student of computer science. These features have seemingly yielded good results in improving students’ comprehension of CS1 concepts.",
    "keywords": "",
    "released": 2014,
    "link": "https://dl.acm.org/doi/10.5555/2602724.2602752",
    "interesting": "+"
  },
  {
    "title": "New opportunities for extracting insights from cloud based IDEs",
    "abstract": "Traditional integrated development environments (IDEs) provide developers with robust environments for writing, testing, debugging, and deploying code. As the world becomes increasingly networked and more services are delivered via the cloud, it is only natural that the functionality of IDEs be delivered via the cloud. In addition to simplifying the provisioning and deployment of new IDE features, and making it easier to integrate with other web native tools, cloud based IDEs provide some fundamental advantages when it comes to understanding the behavior of a wide community of software developers. One of these advantages for the IDE provider is the ability to transparently monitor and analyze the real-time fine-grained actions of a large number of developers. In this paper, we explore how to leverage these transparent monitoring capabilities of cloud based IDEs to develop advanced analytics to understand developers’ behavior and infer their characteristics. We demonstrate the feasibility of this research direction with a preliminary study focusing on the way that source code files grow for different developers, development tasks, and skill levels. We then analyze the trends of source code file growth and find growth is more similar within subjects than within tasks.",
    "keywords": "fine-grained data; analytics; JazzHub; Cloud based IDE",
    "released": 2014,
    "link": "https://doi.org/10.1145/2591062.2591105",
    "interesting": "+"
  },
  {
    "title": "Considering visual programming environments for documenting physical computing artifacts",
    "abstract": "In online communities makers share and give feedback on DIY projects. Such feedback could also help novices who get stuck in their projects. However, documenting work in progress is little considered in current tools. We therefore developed a HowTo related web platform for documenting work in progress and studied how children (aged 1318) used it to document their physical computing projects during workshops. The evaluation outcome questions the appropriateness of our web platform and reveals the benefits of visual programming environments for documenting physical computing artifacts. Suggestions are given how to extend visual programming environments into minimalistic documentation tools that provide ways for children to successfully share their work in progress with other makers.",
    "keywords": "visual programming; physical computing; documentation; diy; children",
    "released": 2014,
    "link": "https://doi.org/10.1145/2593968.2610462",
    "interesting": "-"
  },
  {
    "title": "Tools and methods for creating interactive artifacts",
    "abstract": "Many embedded platforms that support the creation of interactive smart objects have become available over the last years. Arduino, Raspberry Pi, electric imp, mbed, MSP430, and .NET Gadgeteer are examples of hardware platforms with very different properties and capabilities. In order to make interactive artifacts additional sensors, actuators, and networking elements are available for the different platforms. Additionally there are different software environments and development tools that support developers in creating custom applications for embedded systems. It is apparent that one size doesn’t fit all and that choosing the right platform and tools is an important step towards an effective solution. In this TEI2014 studio we first provide an overview of available platforms and tools that allow developers to create novel and tangible interactive systems. We will present and discuss developing environments, with a specific focus on browser based programming tools and social coding. In a second step we will have 2 hands-on sessions, where in each we use a different platform and create an initial functional prototype. The aim is to provide the participants with an overview of existing embedded development tools suitable for creating interactive artifacts and to provide some hands on-experience with different new platforms.",
    "keywords": "tangible objects; social coding; smart artifacts; interaction hardware; embedded systems; development tools; custom device development",
    "released": 2014,
    "link": "https://doi.org/10.1145/2540930.2568483",
    "interesting": "-"
  },
  {
    "title": "Semantic mashup with the online IDE WikiNEXT",
    "abstract": "The proposed demonstration requests DBPedia.org, gets the results and uses them to populate wiki pages with semantic annotations using RDFaLite. These annotations are persisted in a RDF store and we will show how this data can be reused by other applications, e.g. for a semantic mashup that displays all collected metadata about cities on a single map page. It has been developed using WikiNEXT, a mix between a semantic wiki and a web-based IDE. The tool is online , open source ; screencasts are available on YouTube (look for \"WikiNext\").",
    "keywords": "wiki; web of data; web based IDE",
    "released": 2014,
    "link": "https://doi.org/10.1145/2567948.2577010",
    "interesting": "-"
  },
  {
    "title": "Camp CyberGirls: Using a virtual world to introduce computing concepts to middle school girls",
    "abstract": "In this paper we report on the design and results of a one-week, residential summer camp experience that introduced computing concepts to middle school girls in the context of an online, multiplayer, virtual world known as the Curiosity Grid. In contrast to programming environments designed specifically as teaching tools to introduce children to programming, virtual world programming exposes novice learners to a more representative computer science experience. Students write real code and get real syntax errors when their code is not correct. They also design objects in a three-dimensional world where knowledge of mathematical concepts such as 3-D global and local coordinate systems, and 3-D transformations are important to the creation of objects and behaviors. Programming artifacts from the camp and feedback from the camp participants provide a strong argument that middle school girls can handle the challenge of this approach and even be enthusiastic about it.",
    "keywords": "virtual worlds; outreach; middle school girls; educational programming environments",
    "released": 2014,
    "link": "https://doi.org/10.1145/2538862.2538881",
    "interesting": "-"
  },
  {
    "title": "String-embedded language support in integrated development environment",
    "abstract": "Most general-purpose programming languages allow to use string literals as source code in other languages (they are named string-embedded languages). Such strings can be executed or interpreted by dedicated runtime component. This way host program can communicate with DBMS or web browser. The most common example of string-embedded language is Dynamic SQL or SQL embedded into C#, C++, Java or other general-purpose programming languages. Standard Integrated Development Environment functionality such as syntax highlighting or static error checking in embedded languages can help developers who use such technique, but it is necessary to process string literals as a code to provide these features. We present a platform allowing to create tools for string-embedded languages processing easily, and compare it with other similar tools like IntelliLang. We also demonstrate a plug-in for ReSharper created by using the platform. The plug-in provides code highlighting and static error checking for string-embedded T-SQL in C#.",
    "keywords": "string-embedded language; parsing; parser generator; lexer generator; integrated development environment; abstract parsing; IDE; Dynamic SQL",
    "released": 2014,
    "link": "https://doi.org/10.1145/2687233.2687247",
    "interesting": "-"
  },
  {
    "title": "Studio k: A game development environment designed for gains in computational thinking (abstract only)",
    "abstract": "Studio K is a game design curriculum constructed to provide middle school students an engaging entry into computer science and programming. Developed at the University of Wisconsin-Madison, the program employs Microsoft’s 3D programming environment, Kodu, in tandem with support and analytic tools for facilitators, and an online community that provides players with a support system. These key features are bolstered with incorporation of telemetry data gathered through design sessions that are used to improve site functioning, curriculum relevancy, and administrative tools. This program is applied across contexts, with applications in formal classrooms, informal extracurricular clubs or camps, and alternative learning environments such as library systems or home schools. Studio K provides a well-supported, unique entry into computer science in which programming knowledge becomes a tool that supports learners’ goals in designing and developing games.",
    "keywords": "game design; computer science education",
    "released": 2014,
    "link": "https://doi.org/10.1145/2538862.2544312",
    "interesting": "-"
  },
  {
    "title": "Lessons from a web-based IDE and runtime",
    "abstract": "At Microsoft Research, we have built a purely web-based IDE called TouchDevelop that enables anyone to pick up a device and start programming. The IDE is geared towards touch based devices without keyboards, ranging from phones, over tablets, to large display screens. Programs can be edited and run on the device without an auxiliary PC. Transitioning between programming on one device, and continuing on another device is seamless. The web application also works offline.TouchDevelop has been successfully applied to teaching introductory programming classes at the high-school level and at some college level for non-CS majors. For researchers, TouchDevelop provides a green-field platform to explore IDE and programming language design, as well as runtime techniques and distributed data storage abstractions.In this talk, I will provide an overview of TouchDevelop from a language, IDE, and runtime perspective, while diving into some of the novel techniques enabled by our particular platform.",
    "keywords": "web ide; touch-based entry; tablet; smart phone; introductory programming",
    "released": 2014,
    "link": "https://doi.org/10.1145/2543728.2543746",
    "interesting": "+"
  },
  {
    "title": "Interactive audio web development workflow",
    "abstract": "New low-level sound synthesis capabilities have recently become available in Web browsers. However, there is a considerable gap between the enabling technology for interactive audio and its wide-spread adoption in Web media content. We identify several areas where technologies are necessary to support the various stages of development and deployment, describe systems we have developed to address those needs, and show how they work together within a specific Web content development scenario.",
    "keywords": "web development workflow; w3c web audio api; interactive audio; development tools",
    "released": 2014,
    "link": "https://doi.org/10.1145/2647868.2655064",
    "interesting": "-"
  },
  {
    "title": "An integrated development environment for faster feature engineering",
    "abstract": "The application of machine learning to large datasets has become a core component of many important and exciting software systems being built today. The extreme value in these trained systems is tempered, however, by the difficulty of constructing them. As shown by the experience of Google, Netflix, IBM, and many others, a critical problem in building trained systems is that of feature engineering. High-quality machine learning features are crucial for the system’s performance but are difficult and time-consuming for engineers to develop. Data-centric developer tools that improve the productivity of feature engineers will thus likely have a large impact on an important area of work.We have built a demonstration integrated development environment for feature engineers. It accelerates one particular step in the feature engineering development cycle: evaluating the effectiveness of novel feature code. In particular, it uses an index and runtime execution planner to process raw data objects (e.g., Web pages) in order of descending likelihood that the data object will be relevant to the user’s feature code. This demonstration IDE allows the user to write arbitrary feature code, evaluate its impact on learner quality, and observe exactly how much faster our technique performs compared to a baseline system.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.14778/2733004.2733054",
    "interesting": "-"
  },
  {
    "title": "EduCo: An integrated social environment for teaching and learning software engineering courses",
    "abstract": "There have been studies suggesting that collaboration and cooperation can deliver higher performance than competition or individual work. The Web does not only provide ubiquitous access to resources and computation power but also can be an open structure for better and continuous collaboration. In this study, we introduce our vision and construction of an integrated social environment called EduCo to assist teaching and learning software engineering courses. EduCo is a Web environment for instructors to teach and for students to learn and practice designing, programming, and managing software in software engineering courses. It is also a social network platform that helps stimulate participation, interaction, sharing, awareness, accountability, and teamwork. This paper describes the initial construction of the system with many core capabilities realized. The paper also presents our case studies from applying the system to several programming language classes. The results from the case studies suggest that the system has the potential to encourage students’ participation and satisfaction. In addition, this paper presents our vision for future enhancements of the system with core capabilities such as feeds, dashboards, notifications, tracking, and reporting.",
    "keywords": "Web; Software design tool; Social network; Project management; Collaborative development environment",
    "released": 2014,
    "link": "https://doi.org/10.1145/2684200.2684280",
    "interesting": "+"
  },
  {
    "title": "Building and programming ubiquitous social devices",
    "abstract": "Today’s mobile and embedded devices are Internet-connected, and have decent computing power, which creates a possibility for complex, cooperative multi-device platforms. Yet, from user’s perspective, it seems that we are not freed to use different technologies seamlessly and without thinking. From developer’s perspective, on the other hand, building seamlessly communicating devices requires implementing coordination process separately in an application specific fashion, and yet the devices can only communicate through these specific apps that are not aware of each other. In this paper we introduce Orchestrator.js middleware, which is a tool for readily building multi-user, and multi-device applications in heterogeneous environment. This new lightweight and agile middleware is designed to support Social Devices concept, which aims to bring people together, and increase social interactions when people are co-located. With a concrete example, we also describe the process of building and implementing Social Devices applications with embedded and mobile devices.",
    "keywords": "mobile cloud; proximity-based cooperation; social devices; ubiquitous development tools; ubiquitous multimedia",
    "released": 2014,
    "link": "https://doi.org/10.1145/2642668.2642678",
    "interesting": "-"
  },
  {
    "title": "TouchDevelop: Create rich mobile apps on touch devices (tutorial)",
    "abstract": "We are experiencing a technology shift: Powerful and easy-to-use mobile devices like smartphones and tablets are becoming more prevalent than traditional PCs and laptops. Mobile devices are going to be the first and, in less developed countries, possibly the only computing devices which virtually all people will own and carry with them at all times. In this tutorial, participants will learn about developing software directly on their mobile devices. The tutorial is based on TouchDevelop, a modern software development environment that embraces this new reality, treating mobile devices as first-class software development machines, instead of relying on legacy development models built around PC. TouchDevelop comes with typed, structured programming language that is built around the idea of only using a touchscreen as the input device to author code. Access to the cloud, flexible user interfaces, and access to sensors such as accelerometer and GPS are available as a first-class citizens in the programming language. TouchDevelop is available as a web app on Windows tablets, iOS, Android, Windows PCs and Macs, and as a native app on Windows Phone.",
    "keywords": "Web IDE; mobile devices; smart phone; tablet; touch-based entry",
    "released": 2014,
    "link": "https://doi.org/10.1145/2593902.2593903",
    "interesting": "-"
  },
  {
    "title": "Real-time collaborative scala development with clide",
    "abstract": "We present Clide, a real-time collaborative development environment. Clide offers a new approach to tool integration which complements the way resources are shifted to the cloud today. We achieve this by introducing the novel concept of universal collaboration, which drops the distinction between human and non-human participants (so-called assistants) and enables innovative ways of interaction.Clide has a highly flexible and distributed architecture based on Akka. Despite the complexity of the synchronisation of distributed document states, implementing assistants is pleasantly simple. To demonstrate the versatility and usability of the platform we implement a simple wrapper turning the Scala compiler into a collaborator, offering content assistance to other developers and tools.",
    "keywords": "computer-supported cooperative work; distributed programming environments; interactive programming environments; universal collaboration",
    "released": 2014,
    "link": "https://doi.org/10.1145/2637647.2637652",
    "interesting": "-"
  },
  {
    "title": "Early lessons from the development of SPOK, an end-user development environment for smart homes",
    "abstract": "This paper presents early lessons from the development of SPOK, an End-User Development Environment for smart homes. SPOK (Simple PrOgramming Kit) uses a pseudo-natural language as an end-user programming language and runs on top of an extension of OSGi/iPOJO to support the dynamic and resilient management of web services and devices from a variety of protocols including EnOcean, UPnP, and Watteco. The motivation for SPOK is to give the power back to end-users so that they can shape their own smart home at will. This paper reports lessons learned from the methods we have used to validate our hypotheses as well as a number of technical issues concerning development of this type of EUDE. A Video of SPOK in action as of October 2013 is accessible at: http://iihm.imag.fr/demos/appsgate/appsgate2013.mp4",
    "keywords": "ambient intelligence; end-user development; end-user programming; smart environment; smart home; ubiquitous computing",
    "released": 2014,
    "link": "https://doi.org/10.1145/2638728.2641559",
    "interesting": "-"
  },
  {
    "title": "Equipping IDEs with XML-path reasoning capabilities",
    "abstract": "One of the challenges in Web development is to achieve a good level of quality in terms of code size and runtime performance for popular domain-specific languages such as XQuery, XSLT, and XML Schema. We present the first IDE augmented with static detection of inconsistent XPath expressions that assists the programmer with simplifying development and debugging of any application involving XPath expressions. The tool is based on newly developed formal verification techniques based on expressive modal logics, which are now mature enough to be introduced in the process of software development. We further develop this idea in the context of XQuery for which we introduce an analysis for identifying and eliminating dead code automatically. This proof of concept aims at illustrating the benefits of equipping modern IDEs with reasoning capabilities.",
    "keywords": "Programming; XML; analysis; compile time; environment; path; query; reasoning; schema",
    "released": 2014,
    "link": "https://doi.org/10.1145/2602573",
    "interesting": "-"
  },
  {
    "title": "Microtask programming: Building software with a crowd",
    "abstract": "Microtask crowdsourcing organizes complex work into workflows, decomposing large tasks into small, relatively independent microtasks. Applied to software development, this model might increase participation in open source software development by lowering the barriers to contribu-tion and dramatically decrease time to market by increasing the parallelism in development work. To explore this idea, we have developed an approach to decomposing programming work into microtasks. Work is coordinated through tracking changes to a graph of artifacts, generating appropriate microtasks and propagating change notifications to artifacts with dependencies. We have implemented our approach in CrowdCode, a cloud IDE for crowd development. To evaluate the feasibility of microtask programming, we performed a small study and found that a small crowd of 12 workers was able to successfully write 480 lines of code and 61 unit tests in 14.25 person-hours of time.",
    "keywords": "crowdsourcing; development environment; programming tools",
    "released": 2014,
    "link": "https://doi.org/10.1145/2642918.2647349",
    "interesting": "-"
  },
  {
    "title": "A cloud-based integrated development environment for embedded systems",
    "abstract": "Developing software for embedded systems may be a challenging task. Next to solid programming skills using the C language (and Assembly) elaborate know-how about the target controller and surrounding hardware is mandatory. Furthermore, setup of the required tooling (compiler infrastructure, debug interfaces, etc.) can be a cumbersome task, especially when supporting multiple different host operating systems. Especially for beginners, this tooling aspect can turn out as an intriguing problem. This paper presents a cloud based integrated development environment (Cloud IDE) for embedded systems based entirely on open-source solutions that has the potential to ease some of these burdens. In contrast to existing solutions it supports flashing and debugging of a target board attached to the local host computer whereas, the entire development takes place in a cloud environment.",
    "keywords": "Cloud IDE; embedded systems development; education; Node.js; PaaS",
    "released": 2014,
    "link": "https://doi.org/10.1109/MESA.2014.6935577",
    "interesting": "+"
  },
  {
    "title": "Learning and practicing object-oriented programming using a collaborative web-based IDE",
    "abstract": "Collaborative programming is an effective approach to software development, improving software quality, programmer's satisfaction and shortening delivery time This study examines the application of a collaborative Web-based IDE named IDEOL to execute a four-week multi-submission programming assignment in an introductory object-oriented programming class. Forty eight students forming 24 two-member groups in class used the IDE to interact and write source code required by the project. All collaborative and programming activities performed by students were recorded by IDEOL. The results of the study shows that students tend to postpone their programming work until the submission dates. This study also provides an approach to designing and executing an extended programming exercises, which receives high student satisfaction. Our results imply that IDEOL is a useful environment for students to collaborate, learn, and practice programming to improve their learning satisfaction. In addition, as students tend to procrastinate, IDEOL is a useful tool to facilitate, monitor, and report student progress in extended programming exercises.",
    "keywords": "Collaborative IDE; Web-based IDE; programming exercise; collaboration; interaction",
    "released": 2014,
    "link": "https://doi.org/10.1109/FIE.2014.7044141",
    "interesting": "+"
  },
  {
    "title": "Monitoring students' mobile app coding behavior data analysis based on IDE and browser interaction logs",
    "abstract": "This paper describes a case study of assessing student's coding behavior and skills in a realistic development setting. Students had to solve typical programming problems in the context of app development for the Android platform using the Eclipse IDE. Data was analyzed using IDE as well as browser interaction logs. In addition, screen recordings of the students' interaction with the IDE provide further insight. In this paper we present the first results of our ongoing work.",
    "keywords": "android; coding behaviour; alternative learning assessment; IDE interaction",
    "released": 2014,
    "link": "https://doi.org/10.1109/EDUCON.2014.6826202",
    "interesting": "-"
  },
  {
    "title": "Integrating an online programming lab into ILIAS",
    "abstract": "Numerical Mathematics and knowledge of elementary computer algorithms are essential parts of any engineering education. While our university provided access to computer programming languages and computer algebra systems, their installation on the students home computer often turned out to be a challenge and solving installation problems required an essential time of any freshmen course. To overcome these problems, the University of Stuttgart developed an online web-based programming tool, the VipLab, which allows hosting manifold computer programming systems from C to MATLAB while providing a simple online development environment to students. In the past, this programming lab was based on SCORM modules, following our own conventions defined in the LiLa project. However, SCORM has a couple of limitations, too, and the overall weak integration requires a needlessly complicated workflow for both lecturers creating exercises and students handing in homework solutions. In this work, we describe these limitations and how to overcome them by a solution specific to the Learning Management System (LMS) used at the University of Stuttgart.",
    "keywords": "Virtual Programming Lab; Online IDE; ILIAS; SCORM",
    "released": 2014,
    "link": "https://doi.org/10.1109/REV.2014.6784187",
    "interesting": "-"
  },
  {
    "title": "Short paper: A model based framework for effective Web of Things development",
    "abstract": "This paper discusses the adoption of a Model Based approach in the Web of Things development as a way to simplify the task. A set of primitives is introduced to handle the http protocol at the model level directly, so that application designers need not know programming and networking details. A Model Based Integrated Development Environment, TaskScript, has been extended with such primitives: first results are reported, demonstrating the feasibility and effectiveness of the approach, particularly with OS-less systems using low cost and low energy consumption 8-bit microcontrollers: real case applications have been effectively developed in matter of hours.",
    "keywords": "Internet of Things; Web of Things; Reactive Systems; Model Based Design; Automatic Code Generation; IDE",
    "released": 2014,
    "link": "https://doi.org/10.1109/WF-IoT.2014.6803154",
    "interesting": "-"
  },
  {
    "title": "Systems Engineering methods and tools for efficient IT project testing in the Cloud",
    "abstract": "Most Information Technology (IT) organizations find that the maintenance of test and development environments is a major concern. This paper describes the significant benefits that can be attained when Systems Engineering (SE) and Cloud technology are combined to manage an organization's test and development environments. This combination provides tight governance around automated provisioning and decommissioning of environments allocated to projects. The benefits are: 1. Greatly reduced time to procure test servers/systems; 2. Tight scheduling and governance of test/dev systems; 3. Significantly reduced number of servers used for test; 4. Significantly reduced number of people needed for test; 5. Reduced dev/test server waste caused by lack of governance and management; 6. Significant energy savings during test and development phases. Systems Engineering methods and tools for cloud, such as Application Virtualization, can greatly enhance testing efficiency. Case studies, using private clouds with SE methods for test and development systems, are described in the paper.",
    "keywords": "private cloud; test environment; development environment; Systems Engineering; Application Virtualization; green IT",
    "released": 2014,
    "link": "https://doi.org/10.1109/CEWIT.2014.7021145",
    "interesting": "-"
  },
  {
    "title": "Design and realization of micro-information system based on Alfresco development tool",
    "abstract": "The Alfresco development tool is an open platform for Enterprise Content Management (ECM). In order to improve the enterprises' management efficiency in specialized industrial townships, a micro-information system based on Alfresco development tool has been proposed. This system achieves information collection, management and sharing in the development process of the enterprise. The general design ideas, system functions, system structure, key technologies and realization methods of the micro-information system are introduced in this paper. After construction of this microinformation system being completed and operated, a significant breakthrough for data management and statistics of enterprises in specialized industrial townships comes into being.",
    "keywords": "micro-information system; Alfresco development tool; Web Content management",
    "released": 2014,
    "link": "https://doi.org/10.1109/InfoSEEE.2014.6946192",
    "interesting": "-"
  },
  {
    "title": "Study on mobile mashup webapp development tools for different devices and user groups",
    "abstract": "Tools for mobile mashup development need to be differentiated considering both of experts and common users. Appropriate tools are also necessary for each environment of PCs and mobile devices. This study deals with issues on easier development environment for mobile mashups. The design of a new development system was proposed and has been implemented successfully. The system provides development tools on PCs, mobile pads and smartphones for both of experts and common users. The system and its tools were designed differentiating the roles of experts and common users for block creation, so common users can easily make webapps using various blocks. UI-based mashup development methods were adopted together with workflow-based methods, so it is more intuitive for common users to understand mashup procedures. As a result, users can make a number of useful mobile webapps using the system.",
    "keywords": "mashup; mobile web; webapp; development tools; experts; common users; mobile devices",
    "released": 2014,
    "link": "https://doi.org/10.1109/ICOIN.2014.6799719",
    "interesting": "-"
  },
  {
    "title": "HTML Educational Node.js System (HENS): An Applied System for Web Development",
    "abstract": "In this paper, a very compelling proposition is presented, a portable system for software development. The focus is on HTML, Java Script, CSS, Node.js, and SQLite. The system provides all the applications required for students to start developing web applications. The HTML Educational Node.js System (HENS) does not require installation or admin access allowing for portability. This environment is built using open source applications.",
    "keywords": "education; development environment; portal applications; website; web service; html; javascript; node.js",
    "released": 2014,
    "link": "https://doi.org/10.1109/GOCICT.2014.25",
    "interesting": "-"
  },
  {
    "title": "Online hand written character recognition using Digital Pen for static authentication",
    "abstract": "Due to the rapid development of computer technology, Human Computer Interaction (HCI) techniques have become an indispensable component in our daily life. HCI focuses on the understanding between humans and the computer. Also the protection of password involves different methods and it is being a great challenge to the computer industry. Hand Written Character is one form of human interaction can be used effectively in HCI for static authentication with better password protection. In this paper, the Digital Pen consists of triaxial micro-electromechanical (MEMS) Accelerometer, to capture the activities of the human and to capture motion trajection information from accelerations for recognizing gestures for handwriting. The pen operates in two modes. It can operate as mouse by recognizing the gestures and other mode it can operate as Handwritten Character Recognition for identifying the digits and characters also in this mode it provides static authentication for the systems by recognizing the characters. An Integrated Development Interface is developed using dotnet to recognize the characters.",
    "keywords": "Accelerometer; Online Handwritten Character Recognition; Static Authentication; Integrated Development Interface (IDE)",
    "released": 2014,
    "link": "https://doi.org/10.1109/ICCCI.2014.6921792",
    "interesting": "-"
  },
  {
    "title": "Design and implementation of a Cloud SaaS framework for Multi-Tenant applications",
    "abstract": "The Cloud Computing model has imposed a number of attractive features into the infrastructure and software architectures. Software enterprises strive to exploit these features in order to grow their competitiveness and economic profits in the market. This work identifies key features of Cloud Computing, such as high availability, extensibility, customizability, synchronization, consistency and multi-tenancy. A Software-as-a-Service (SaaS) framework is presented for the realization of Multi-Tenant services and applications onto an experimental cloud infrastructure. The proposed framework provides services which make the development and management process of Multi-Tenant applications easier. Essentially, the goal of this paper is to highlight important Cloud and clustering features and show methods to realize a SaaS framework for the creation and accommodation of cloud multi-tenant applications.",
    "keywords": "Multi-Tenancy; Cloud Computing; SaaS framework; Distributed Systems; Web IDE",
    "released": 2014,
    "link": "https://doi.org/10.1109/IISA.2014.6878755",
    "interesting": "-"
  },
  {
    "title": "A Ubiquitous Integrated Development Environment for C Programming on Mobile Devices",
    "abstract": "C is a popular programming language because of high portability and simple syntax. As a result, it is the first course for most of university students who major in computer, electronics, and electrical engineering and so on. To obtain a good learning achievement, students usually need to put their effort and time on programming as much as possible. Therefore, a ubiquitous integrated development environment is helpful for students to practice programming anytime and anywhere. To achieve this goal, we develop a novel integrated development environment called Ubi-C for C programming based on Clang and LLVM in this paper. Using this IDE, users can directly write, compile, execute and debug their C programs on Android-based smart phones or tablets. Moreover, this IDE provides the API of multimedia programming, and integrates with cloud services such as Dropbox for storing user programs and data. Consequently, users can easily develop multimedia applications by using C on mobile devices, and can switch their working environments between mobile devices and fixed computers with the support of Dropbox.",
    "keywords": "C programming; Android; mobile devices; Clang; LLVM",
    "released": 2014,
    "link": "https://doi.org/10.1109/DASC.2014.41",
    "interesting": "-"
  },
  {
    "title": "Mobile Application Platform Heterogeneity: Android vs Windows Phone vs iOS vs Firefox OS",
    "abstract": "Modern smartphones have a rich spectrum of increasingly sophisticated features, opening opportunities for software-led innovation. Of the large number of platforms to develop new software on, in this paper we look closely at three platforms identified as market leaders for the smartphone market by Gartner Group in 2013 and one platform, Firefox OS, representing a new paradigm for operating systems based on web technologies. We compare the platforms in several different categories, such as software architecture, application development, platform capabilities and constraints, and, finally, developer support. Using the implementation of a mobile version of the tic-tac-toe game on all the four platforms, we seek to investigate strengths, weaknesses and challenges of mobile application development on these platforms. Big differences are highlighted when inspecting community environments, hardware abilities and platform maturity. These inevitably impact upon developer choices when deciding on mobile platform development strategies.",
    "keywords": "Android; Windows Phone; iOS; Firefox OS; Mobile Development Environment; Mobile Computing; Cross Platform Development; Native Apps; Web Apps",
    "released": 2014,
    "link": "https://doi.org/10.1109/AINA.2014.78",
    "interesting": "-"
  },
  {
    "title": "Towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions",
    "abstract": "Study shows that software developers spend about 19% of their time looking for information in the web during software development and maintenance. Traditional web search forces them to leave the working environment (e.g., IDE) and look for information in the web browser. It also does not consider the context of the problems that the developers search solutions for. The frequent switching between web browser and the IDE is both time-consuming and distracting, and the keyword-based traditional web search often does not help much in problem solving. In this paper, we propose an Eclipse IDE-based web search solution that exploits the APIs provided by three popular web search engines-Google, Yahoo, Bing and a popular programming Q & A site, StackOverflow, and captures the content-relevance, context-relevance, popularity and search engine confidence of each candidate result against the encountered programming problems. Experiments with 75 programming errors and exceptions using the proposed approach show that inclusion of different types of contextual information associated with a given exception can enhance the recommendation accuracy of a given exception. Experiments both with two existing approaches and existing web search engines confirm that our approach can perform better than them in terms of recall, mean precision and other performance measures with little computational cost.",
    "keywords": "IDE-based search; API mashup; Context-based search; Context code; Cosine similarity",
    "released": 2014,
    "link": "https://doi.org/10.1109/CSMR-WCRE.2014.6747170",
    "interesting": "-"
  },
  {
    "title": "SurfClipse: Context-Aware Meta-search in the IDE",
    "abstract": "Despite various debugging supports of the existing IDEs for programming errors and exceptions, software developers often look at web for working solutions or any up-to-date information. Traditional web search does not consider the context of the problems that they search solutions for, and thus it often does not help much in problem solving. In this paper, we propose a context-aware meta search tool, Surf Clipse, that analyzes an encountered exception and its context in the IDE, and recommends not only suitable search queries but also relevant web pages for the exception (and its context). The tool collects results from three popular search engines and a programming Q & A site against the exception in the IDE, refines the results for relevance against the context of the exception, and then ranks them before recommendation. It provides two working modes-interactive and proactive to meet the versatile needs of the developers, and one can browse the result pages using a customized embedded browser provided by the tool.",
    "keywords": "Context-aware web search; meta search; context-relevance; errors and exceptions",
    "released": 2014,
    "link": "https://doi.org/10.1109/ICSME.2014.109",
    "interesting": "-"
  },
  {
    "title": "Graphical Programming Environments for Educational Robots: Open Roberta - Yet Another One?",
    "abstract": "In recent years, an increasing number of school children is beginning to learn about robotics in the classroom in order to stir their interest in STEM professions. Teachers rely on simple educational robots and intuitive programming environments and graphical programming environments have become a frequent starting point for young robotics new bies. However, currently available tools do often not sufficiently support teachers and students in the classroom. In this study, we evaluate programming environments for educational robots, our results point to the need of lowering the complexity of tools as well as of incorporating combinations of web and cloud technologies, embedded systems and communication concepts into these environments. The technical part of this work presents Open Roberta -- an open source based addition to commercial educational robot environments that addresses these needs.",
    "keywords": "graphical programming; visual programming; cloud computing; web 2.0; embedded systems; robotic; education; e-learning; web technology; roberta",
    "released": 2014,
    "link": "https://doi.org/10.1109/ISM.2014.24",
    "interesting": "-"
  },
  {
    "title": "MDE of manufacturing automation software — Integrating SysML and standard development tools",
    "abstract": "In the paper, a SysML-based approach that supports the model-driven engineering (MDE) of manufacturing automation software is presented. The approach adapts the Systems Modeling Language (SysML) and defines a specialized language profile, the SysML-AT, to support automated code generation for IEC 61131-3 runtime environments. For adapted SysML Parametric Diagrams (PD), a prototypical tool support was realized inside a commonly used automation software development environment. Inside the prototypical tool, the linking between the realized PD model editor and online data from the IEC 61131-3 runtime environment enables direct debugging within a SysML-AT model. The concept was evaluated by case studies and by usability experiments, which proved the usability of the SysML-based MDE approach for future users.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.1109/INDIN.2014.6945519",
    "interesting": "-"
  },
  {
    "title": "Visual storytelling of development sessions",
    "abstract": "Most development activities, like program understanding, source code navigation and editing, are supported by Integrated Development Environments (IDEs). They provide different tools and user interfaces (UI) to interact with the source code, such as browsers, debuggers, and inspectors. It is uncertain how and when programmers use different UI elements of an IDE and to what extent they appropriately support development. Previously we developed DFLOW, a tool that seamlessly records and processes interaction data. Our long-term goal is to assess to what extent the UIs of IDEs support the workflow of developers and whether they can be improved. As a first step we present our approach to analyze development sessions in the form of visual storytelling. We illustrate our initial catalogue of visualizations through two development stories. © 2014 IEEE.",
    "keywords": "development sessions; IDE; interaction data; visual storytelling; visualization",
    "released": 2014,
    "link": "https://doi.org/10.1109/ICSME.2014.65",
    "interesting": "-"
  },
  {
    "title": "Keeping the development environment up to date - A study of the situated practices of appropriating the eclipse IDE",
    "abstract": "Software engineers and developers are surrounded by highly complex software systems. What does it take to cope with these? We introduce a field study that explores the maintenance of the Eclipse Integrated Development Environment by software developers as part of their daily work. The study focuses on appropriation of the Eclipse IDE. We present an empirical view on appropriation as a means to maintain the collective ability to work. We visited seven different organizations and observed and interviewed their members. Each organization was chosen to provide an overall picture of Eclipse use throughout the industry. The results decompose the appropriation of Eclipse by software developers in organizations into four categories: learning, tailoring and discovering, as well as the cross-cutting category: collaboration. The categories are grounded in situations that provoked a need to change as well as in policies adopted for coping with this need. By discussing these categories against the background of Eclipse and its ecosystem, we want to illustrate in what ways appropriation of component- or plugin- based software is nowadays a common and highly complex challenge for Eclipse users, and how the related appropriation practices can be supported by IT systems. © 2014 IEEE.",
    "keywords": "deployment; human factors in software design; Programmer workbench; usage experience",
    "released": 2014,
    "link": "https://doi.org/10.1109/TSE.2014.2354047",
    "interesting": "-"
  },
  {
    "title": "Game development tool essentials",
    "abstract": "Game Development Tool Essentials provides must-have tips and tricks from industry professionals for strengthening and streamlining your game tools pipeline. Everyone knows the game tools pipeline is important, but in the current environment of shrinking budgets and increased time pressure, developers often have to settle for inefficient, ad hoc, messy pipelines. This unique book will break you out of that cycle. The practical, expert insights contained within will enable you to work faster and more efficiently, so you can spend more time making cool things. Game Development Tool Essentials pools the knowledge and experience of working developers over four critical aspects of the game tools pipeline: asset and data management, geometry and models, Web tools, and programming. Within those sections, you will learn cutting-edge techniques on essential subjects such as COLLADA rendering, exporting and workflow; asset management and compiler architecture; and moving tools to the cloud. If you're a game developer, you need Game Development Tool Essentials. Covers readily available tools and tools developers can build themselves. Presents 96 code samples, 81 illustrations, and end-of-chapter references. Special chapter on moving tools to the cloud. What you'll learnSet up and code a plug-in-based asset compiler that can help convert a variety of asset types.Create a complex polygon pattern (Voronoi diagram) using MAXScript.Learn how to use the Khronos COLLADA CTS to build a rock solid 3D content pipeline.Discover powerful tricks for using OS X Scene Kit to render COLLADA assets.Build full-featured online game development tools easily with Django.Move companion tools out of the game engine and into Web applications.Who this book is forGame Development Tool Essentials is for working and prospective game developers. It will help software engineers, systems programmers, graphics architects, technical artists, 3D artists, software architects, and 3D modelers involved with the game development pipeline. Copyright © 2014 by Alessandro Ardolino, Remi Arnaud, Paula Berinstein, Simon Franco, Adrien Herubel, John McCutchan, Nicusor Nedelcu, Benjamin Nitschke, Fabrice Robinet, Christian Ronchi, Gustavo Samour, Rita Turkowski and Robert Walter. All rights are reserved.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-1-4302-6701-0",
    "interesting": "-"
  },
  {
    "title": "Pocket Code: A Scratch-like integrated development environment for your phone",
    "abstract": "In our free open source project Catrobat, we are developing Pocket Code, an integrated development environment (IDE) for a visual, Lego-block style programming language that is inspired by MIT's Scratch. In contrast to Scratch and AppInventor, Pocket Code is designed to completely run on smartphones - no PC whatsoever is needed to develop or execute the programs. Our motivation is to allow teenagers to intuitively create and easily share their own mobile apps. The large project includes more than 20 subprojects that complement Pocket Code in various ways, e.g., an image editor app that supports transparency and zooming up to pixel level. According to Ohloh, as of June 2014 more than 371 person years have been invested by 270 volunteer contributors from more than 20 countries into Catrobat. All development is done in an agile, extremely iterative and test-driven way, with a strong focus on maintainability, usability, and design. Subteams in parallel develop native versions of Catrobat interpreters that are integrated into corresponding Pocket Code IDEs for the Android, iOS, and Windows Phone platforms as well as for HTML5 capable mobile browsers, or smartphones supporting HTML5 directly. These native versions are implemented by us respectively in Java, ObjectiveC, C# & C++, and HTML5/JavaScript. I will demonstrate Pocket Code and also will show how we use automatically checkable specification to ensure that programs behave identically on all platforms even though no cross-compilation tools or common implementation languages are used. Copyright is held by the author/owner(s).",
    "keywords": "Computer science education; Kids; Mobile app; Smartphones; STEM; Teenagers; Visual programming",
    "released": 2014,
    "link": "https://doi.org/10.1145/2660252.2664662",
    "interesting": "-"
  },
  {
    "title": "Development Tools for Ubiquitous Music on the World Wide Web",
    "abstract": "This chapter discusses two approaches to provide a general-purpose audio programming support for Ubiquitous Music web applications. It reviews the current state of web audio development and discusses some previous attempts at this. We then introduce a JavaScript version of Csound that has been created using the Emscripten compiler and discuss its features and limitations. In complement to this, we look at a Native Client implementation of Csound, which is a fully functional version of Csound running in Chrome and Chromium browsers. © 2014, Springer International Publishing Switzerland.",
    "keywords": "Audio Input; Audio Processing; Control Channel; Main Thread; Output Buffer",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-11152-0_6",
    "interesting": "-"
  },
  {
    "title": "U can touch this: Touchifying an IDE",
    "abstract": "Touch gestures are not only often very intuitive, but their direct manipulation characteristics also help to reduce the cognitive load. Since software development poses complex cognitive demands, our goal is to exploit the advantages of direct manipulation to support professional software engineering processes. In this paper, we demonstrate how touch gestures can be used within a professional integrated development environment. As for that, we have enriched the Eclipse IDE with common and invertible multi-touch gestures which can be used for both controlling the graphical user interface and triggering built-in refactoring tools. The design of our extensions was informed by an early user study revealing problems of using the Eclipse IDE with the default touch support provided by the operating system. By using the emerging prototype during its implementation, we were able to iteratively improve the prototype based on our own experience and gain first insights into the potential of using direct manipulation methods within the IDE. First results suggest that using an additional touch device within the classical desktop setup enables a precise and fast work flow. Copyright 2014 ACM.",
    "keywords": "IDE; Radial menus; Refactoring; Touch gestures; Usability",
    "released": 2014,
    "link": "https://doi.org/10.1145/2593702.2593726",
    "interesting": "-"
  },
  {
    "title": "An IDE for the LARES toolset",
    "abstract": "In order to support the editing, validation and analysis of LARES dependability model specifications, a textual editor and a graphical user interface for performing experiments have been developed. In collaboration with the LARES toolset library they serve as an Integrated Development Environment (IDE) based on the Eclipse framework. The paper first introduces the features of the LARES language by means of a hysteresis model taken from the literature. It then describes the textual Editor Plugin. Beyond standard features such as syntax highlighting and code completion, it emphasises syntactical and semantic validation capabilities. Subsequently, the View Plugin component is presented, that is used to perform the experiments and to gather the analysis results from the solvers. The current state of development of a graphical Editor Plugin and other features of the LARES IDE are also addressed. © 2014 Springer International Publishing.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-05359-2_17",
    "interesting": "-"
  },
  {
    "title": "FOCAPLAS-a platform for cloud application development and running support",
    "abstract": "Cloud computing is changing the utilization environments of computers in both enterprise and personal. Application development techniques and methodologies that are suitable to cloud environments are new challenging research topics. As demand for developing business applications is increasing rapidly and commercial profitability is dependent on decreasing the application development costs, it is essentially important to provide methods meeting the requirements of developing applications with low cost and short development time. Therefore, it is required to develop new methods facilitate the cloud application development based on easy-to-accomplish and end-user-composition. In this work, we compiled seven requirements of typical business application development such as data structure, database schema, page transition control, authorization, session management, programming, and input and output interface design. Furthermore we observe that none of current cloud development environments support a majority of these requested features. As a result, we present our own cloud application development platform, called FOCAPLAS that meets all of these requirements. A case study presenting a cloud application developing process is presented demonstrate how to use our FOCAPLAS. We believe that our requirements may serve as a valuable guide for cloud data modeling and our FOCAPLAS will be a useful platform for cloud application development. © 2014 The authors and IOS Press. All rights reserved.",
    "keywords": "Application development; Application development requirements; Cloud application development; Cloud application development environment; Cloud application development platform; Cloud computing; Rapid development",
    "released": 2014,
    "link": "https://doi.org/10.3233/978-1-61499-472-5-61",
    "interesting": "-"
  },
  {
    "title": "A Six-Dimensional Strategic Development Tool for e-Government Effectiveness",
    "abstract": "Governments have had over a decade to incorporate secure, and functionally interactive features into agency websites-oriented toward the provision of public information, services, accountability, and transparency; various evaluative schemes have been proffered to measure their progress and relative effectiveness. While no single standard evaluative tool has emerged, a number of efforts have yielded useful benchmarks though a number have also been limited in overall scope with little reference to strategic planning; often reflecting the perspectives of information technology specialists or administrators and not the broader interests of stakeholders. What is generally missing is a comprehensive development gauge that includes technical functionality in the areas known to be essential to effective e-Government site development. This piece builds upon previous work in site evaluation and presents an applied strategic inventory tool that might more comprehensively address e-Government Web development on the dimensions of security, database integration, internal communication capacity, lateral interagency capacity, citizen interactivity, and transparency of government process. The e-Government applied inventory tool features a matrix based upon the presence or absence of three key indicators associated with each of the six dimensions of site effectiveness. This evaluative model is applied to the ministerial websites of six selected countries; Djibouti, Finland, India, Kenya, Namibia, and Peru. The chapter ends with a discussion on the likely correlations between this e-Government strategic development tool and its possible utility as a measure of relative political development. © 2014, Springer Science+Business Media New York.",
    "keywords": "e-Government; e-Government effectiveness; Strategic development; Transparency; Website assessment; Website interactivity; Website security",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-1-4614-8462-2_6",
    "interesting": "-"
  },
  {
    "title": "Developing a SAAS-cloud integrated development environment (IDE) for C, C++, And java",
    "abstract": "Cloud era brought revolution of computerization world. People could access their data from anywhere and anytime with different devices. One of the cloud's model is Software as a Service, which capable to provide applications that run on a cloud infrastructure.An IDE (Integrated Development Environment) is the most popular tool to develop application in the network or single computer development. By installing IDE in each computer of the network could causes the lot of time and budget spending. The objective of the research is developing an efficient cloud based IDE. The IDE could compile the code which sent from client browser through SaaS IDE to the server and send it back to the client. The method that used in the research is the System Development Life-Cycle: Waterfall and Unified Model Language as system designing tool. The research successfully produced the cloud-based SaaS IDE with excellent result from several testing in local network and internet. © 2005 - 2014 JATIT & LLS. All rights reserved.",
    "keywords": "Cloud; IDE; IDE; SAAS; UML",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907776842&partnerID=40&md5=9d63f2f09169b7446e80c879f336132d",
    "interesting": "-"
  },
  {
    "title": "Mapping agile practices to CMMI-DEV level 3 in web development environments",
    "abstract": "Agile approaches formally appeared ten years ago and nowadays are a valid alternative for organizations developing software. Agile methodologies are especially interesting to those developing Web environments applications, as they can fit properly the special characteristics of this type of developments. In addition, maturity models like CMMI-DEV (Capability Maturity Model Integration for Development) focus on assessing the maturity level of organizations developing or acquiring software. These models are well established and can increment quality of development processes to enhance costumers' satisfaction. CMMI-DEV level 3 provides a good compromise on maturity gained and effort needed. The feasibility of getting it through a combination of Agile methods can be very useful to organizations developing systems in Web environments, as they can keep the adaptability of Agile together with a more mature development process. This paper proposes a set of Agile methods so as to reach all CMMI-DEV maturity level 3 generic and specific goals. Based on this analysis, the paper proposes further research lines.",
    "keywords": "Agile; CMMI; Scrum; Software engineering; Web engineering",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923668614&partnerID=40&md5=6fe0647fc7a4a99901f8bffcbbfb6766",
    "interesting": "-"
  },
  {
    "title": "An empirical study of lean and agile influences in software configuration management",
    "abstract": "Based on a web based survey of 158 IT software development practitioners, mostly from different organizations, this paper examines the application of Software Configuration Management (SCM) process in adaptable software development environments. From the literature review six independent variables and five dependent variables were derived to answer the research question \"how does organization size impact on the usage of SCM process in adaptable software development environments?\" The six hypotheses confirmed that organization size does not impact on the usage of SCM process in adaptable software development environments. Also, all sizes of organizations consider SCM process valuable and have similar software traceability approaches with different process formalities and tools sophistications. This study helps SCM practitioners to build a better understanding of the relationships between adaptable software development environment, lean principles and practices, and the tools and technologies established to facilitate the coexistence of Agile and SCM practices.",
    "keywords": "Adaptable software development environment; Agile software development; Lean thinking; SCM; Software configuration management; Traceability",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928592727&partnerID=40&md5=55f84a29054a91fae3ebc448789a8dd5",
    "interesting": "-"
  },
  {
    "title": "CMX: Implementing an MMORPG for learning programming",
    "abstract": "The initial stage of the learning programming process is an arduous task. Novice students have to simultaneously learn the syntax of a programming language, understand the algorithmic logic that each program is based on as well as comprehend the basic concepts of the programming principles. The problems students are faced with become even greater when teachers employ complex environments with minimum graphical facilities instead of user-friendly educational programming environments. At the same time, constant technological developments indicate that the global market will continue to require highly skilled computer programmers; thus, the usage of advanced educational environments to properly train future professionals is essential. This is one of the reasons why a new type of technology called Serious Games has started raising great interest in educational settings. Using serious games in education combines increased motivation of students with the incorporation of course materials within the games' tasks. The aim of this paper is to apply an educational Massive Multiplayer Online Role Playing Game (MMORPG) named CMX in university settings and evaluate its efficiency in successfully teaching programming elements while entertaining and engaging students in an interesting environment. The game is applied in two groups of students already familiar with basic computer programming concepts and it has been populated with units of learning regarding arrays in the C programming language. Both groups engage in and interact with the game's environment, Senseis, tasks and other players and we record their behaviours during these activities. Additionally, we monitor in what ways the game facilitated in students' comprehension of difficult concepts and enhanced their ability to program code using the C programming language. The paper presents the implementation and elaborates on the game's evaluation based on specific axes, such as players' performance, game's difficulty, game's entertaining elements, players' knowledge and skills, game's performance and CMX as an educational game. The case study was evaluated following methodologies used in related works. The results indicated that the majority of the students were positively inclined in re-using CMX for learning additional computer programming elements and were satisfied with the game's scenario because of the variety of activities they encountered. Finally, the paper presents future work that aims to enhance and expand on the game's features in order to increase students' performances. © The Authors, 2014.",
    "keywords": "Computer programming; Educational games; Educational programming environments; Learning process",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923604194&partnerID=40&md5=1e5a9213796461e1de1b829680419a35",
    "interesting": "-"
  },
  {
    "title": "Integrated Development Environment for generation of middleware for hybrid processors based embedded systems",
    "abstract": "Multiprocessor system on chip (SoC) contains hundreds of cores on a chip that require high speed interconnections for fast data communication between the cores. With an increased number of cores, an on-chip bus or a multi-layer bus architecture is the bottleneck for SoC. In contrast, Network-on-chip (NoC) mitigates the flaws of the SoC technology by introducing high scalability, improved communication performance and lesser power consumption. It provides such an on-chip communication architecture that allows multiple cores to communicate via packets routed on a network. A Network-on-System (NoS) architectural framework caters for the major issues of high latency and decreased throughput of reprogrammable and reconfigurable hybrid embedded systems. This paper presents a novel idea of hybrid processors configuration in NoS using an Integrated Development Environment (IDE) generated middleware. The user will be able to configure or reconfigure the NoS, whereas the inter-communication of hybrid processors on the NoS will take place in an abstraction layer without any user intervention. The basic model of NoS and the proposed prototype for GUI based IDE used for middleware generation have been explained in detail. The paper also discusses how such an IDE can be used in the middleware generation of real-time applications like SDR. The proposed methodology is ideally suited to address the complexities of a hybrid embedded system. © 2014 IEEE.",
    "keywords": "Hybrid embedded systems; Integrated Development Environment; middleware",
    "released": 2014,
    "link": "https://doi.org/10.1109/AICCSA.2014.7073174",
    "interesting": "-"
  },
  {
    "title": "Towards an end-user development tool for mobile erp applications",
    "abstract": "Aim of this paper is to identify requirements on a software tool supporting end-user development of mobile ERP applications and to design an appropriate software architecture meeting the identified requirements. The paper introduces a prominent development tool for mobile ERP applications, demonstrating its weaknesses regarding the purpose of end-user development (EUD). A multi-method requirements analysis is used to identify requirements of a suitable EUD tool for mobile ERP applications. The results of the requirements analysis reveal that an EUD tool is suitable for implementing standard functions such as data display and entry functionalities. These functions could be implemented by using a set of configurable application components. These components could be used by end-users to compose individual applications. Additionally, the results indicate that a form-based interaction technique seems to be a suitable option for end-users to develop mobile ERP applications. Finally, a prototypic implementation of a web-based EUD-tool demonstrates the feasibility of the presented software architecture © Springer International Publishing Switzerland 2014.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-07055-1_16",
    "interesting": "-"
  },
  {
    "title": "Plugging in and into code bubbles: The code bubbles architecture",
    "abstract": "Code Bubbles is an attempt to redefine the user interface for an integrated programming environment. As it represents a whole new user interface, implementing it as a plug-in is inherently difficult. We get around this difficulty by combining two different plug-in architectures, a standard one based on registrations and callbacks and a message-based one that puts the plug-in at arm's length and defines a narrower two-way interface. This paper describes both how we have implemented Code Bubbles as a plug-in to Eclipse and how Code Bubbles itself is implemented as a set of plug-ins representing the different aspects of the environment, using both traditional and message-based plug-in architectures as appropriate. It also shows how the resultant architecture is flexible enough to support collaboration, different back ends, and a cloud-based environment. Copyright © 2013 John Wiley & Sons, Ltd. Copyright © 2013 John Wiley & Sons, Ltd.",
    "keywords": "plug-in architectures; programming environments; software development",
    "released": 2014,
    "link": "https://doi.org/10.1002/spe.2196",
    "interesting": "-"
  },
  {
    "title": "An ontology-based software development environment using upgraded functionalities of Clojure",
    "abstract": "The development of a system which supports a multiprogramming paradigm is very challenging these days. The current programming languages provide only a single programming paradigm, due to which software programmers have to mix and match different programming languages for modeling a business process. Clojure is a programming language which has multiple programming techniques, such as functional, object-oriented, and concurrent. In the proposed system, the ontology paradigm is also added to Clojure with the help of metaprogramming. Thus, Clojure has become an efficient software development environment, with added features of ontology, using which one can represent the semantics of complex business processes. © Springer India 2014.",
    "keywords": "Clojure; Metaprogramming; Ontology; Semantic web",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-81-322-1665-0_61",
    "interesting": "-"
  },
  {
    "title": "IDECSE: A semantic integrated development environment for composite services engineering",
    "abstract": "In this paper, we introduce IDECSE a new integrated approach for composite services engineering which is based on Semantic Web and Data Mining. IDECSE considers semantics in all the composition steps: user query, semantic classification of services in the registry, composing services, and verifying the composition process. By considering semantics for describing, discovering, composing, and monitoring services, IDECSE addresses the challenge of fully automating the discovery, composition and monitoring processes while reducing development time and cost. IDECSE appeals for data mining techniques, namely Formal Concept Analysis, for classifying and mining services into service registry in order to anticipate relevant services search and reduce services search space.",
    "keywords": "Data mining; Semantic web; Web service composition",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924386013&partnerID=40&md5=e6d32d6c1052cf3a2dbd879d4c32f0e4",
    "interesting": "-"
  },
  {
    "title": "A comparative analysis of development environments for voluntary geographical information web systems",
    "abstract": "As mobile devices, access to geographical information, and migration from web 1.0 to web 2.0 advance, users started playing the role of consumers, producers, and communicators. As a result, several internet systems have spawned that collect Volunteered Geographical Information (VGI). VGI collection systems often need to be developed within short timeframes. This paper presents a comparative analysis between two environments for VGI-system development: Ushahidi Platform and ClickOnMap. This comparison employed a model based on system-quality norms ISO 9126. The results of this comparison may help VGI system developers choose the tool with the most appropriate characteristics to the goal intended when creating the system.",
    "keywords": "",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919741383&partnerID=40&md5=5bea82ab3835643266511fab1f7cf4f8",
    "interesting": "-"
  },
  {
    "title": "TwitterforTeachers: The implications of Twitter as a self-directed professional development tool for K-12 teachers",
    "abstract": "This mixed-methods study explores how K-12 teachers use Twitter. An online survey was disseminated via Twitter to gauge their usage of, access to, and perceptions of Twitter. The results indicated that teachers highly value Twitter as a means of self-directed professional development. Respondents who reported using Twitter multiple times a day were more likely to use it for professional purposes than personal ones. Chief among the reported perceived benefits were professional development and meaningful relationships that teachers formed with other teachers who use Twitter. Implications for practice, including the ability for teachers to seek professional development for their specific needs, are discussed. © 2014 ISTE.",
    "keywords": "Connected educators; Personal learning networks (PLNs); Social media; Twitter",
    "released": 2014,
    "link": "https://doi.org/10.1080/15391523.2014.925694",
    "interesting": "-"
  },
  {
    "title": "An integrated development environment for the creation and delivery of m-Learning objects",
    "abstract": "We live in a new era where education is not anymore restricted to grouping individuals in a room and feeding them information. We also live in the same era where we deal with our handheld devices more than any other normal human interaction. Why then don't we implement a new 'environment' to deliver education to our handheld devices that we hold and interact with? We need to free the process of education from physical presence to 'virtual' presence through the power of the Internet, and this is the motivation driving us to solve our problem. We approach the new paradigm of the World Wide Web to have a web-based application for the instructor to access to be able to create and edit m-Learning objects and upload it to the assigned remote database, where the learner gets a notification for new objects to download to their handheld client application to learn and be assessed in. Previous technologies have been patented and applications have been done to solve the same problem, but we stand with the advantage of web-availability. The sole purpose of our work presented in this document is to enrich the process of education. © 2014 IEEE.",
    "keywords": "blended learning; m-Learning; web-based",
    "released": 2014,
    "link": "https://doi.org/10.1109/AICCSA.2014.7073204",
    "interesting": "-"
  },
  {
    "title": "Method-Call recommendations from implicit developer feedback",
    "abstract": "When developers use the code completion in their Integrated Development Environment (IDE), they provide implicit feedback about the usage of the Application Programming Interfaces (APIs) they program against. We demonstrate how to apply Collaborative Filtering techniques to compute context-sensitive completion recommendations from such feedback and discuss how the approach can be used to bring the knowledge of the crowd to every developer. Copyright © 2014 ACM.",
    "keywords": "Code completion; Collaborative filtering; Crowd sourcing; Integrated development environment; Method-call recommendation",
    "released": 2014,
    "link": "https://doi.org/10.1145/2593728.2593730",
    "interesting": "-"
  },
  {
    "title": "DEV4ME: Can end-users program?",
    "abstract": "In recent years, personal computing has changed direction and is now more inclined towards the world of mobile computing. This means that end-users expect a simpler and more personalized experience. To achieve the highest level of customization, end-users must develop their own applications. However, end-users usually lack in having the right skills for that task. To address this problem, many end-users programming languages and frameworks have been devised. These are particularly aimed at reducing syntax and cognitive gaps. However, some of the existing solutions reduced the expressiveness of the language and thus reduced the generality of the program, while others remains too complex for endusers. In this work we devise a new framework, named Dev4Me, designed from the ground up to provide end-users a solution for developing mobile and personal apps. The framework is made up of a new form-based language, an Integrated Development Environment (IDE) and an execution environment. The new framework enables the users to develop, test, debug and use their own apps in a few simple steps, using familiar form filling experience.",
    "keywords": "End-User IDE; End-User Programming; Mobile Applications",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905833867&partnerID=40&md5=f5cc9c5559f82e7cb0a8d72e2aba78fc",
    "interesting": "-"
  },
  {
    "title": "WebProtége&acute: A Web-based development environment for OWL 2 ontologies",
    "abstract": "We present the latest version of WebProtégé: a free, opensource Web-based tool for editing OWL ontologies. WebProtégé allows users to create, upload, share and collaboratively edit OWL ontologies. It contains various tools that are designed to support collaborative editing processes, including issue discussion, complete change tracking support and watches. Besides providing complete OWL 2 editing capabilities, WebProtégé also features a default simpli ed user interface that is targeted at OWL neophytes. This simpli ed interface, which we have designed using empirical techniques, o ers a quick and easy way to edit commonly used OWL 2 axiom and class constructors. In this paper we describe these features and the main ideas behind the tool. WebProtégé is available for use at http://webprotege.stanford.edu.",
    "keywords": "",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84909633788&partnerID=40&md5=fe4676464833242a5b4e5c408237d598",
    "interesting": "-"
  },
  {
    "title": "Control network programming development environments",
    "abstract": "In this paper we discuss the unusual distinctive features of Control Network Programming as a hybrid programming paradigm. We postulate the maxim \"Primitives + Control Network = Control Network Program\", and use this observation in the design of programming environments for developing Control Network Programming projects. The various possible approaches to building such environments are the main focus of the paper, together with a relatively detailed presentation of the currently most powerful locally run SpiderCNP environment with graphical editing and tracing, as well as two light-weight and ready-to-use cloud-based environments. An extended survey of cloud compilers and IDEs is also included.",
    "keywords": "Cloud compilers; Cloud IDEs; CNP; Control network programming; Learning systems; Online compilers; Programming environments; Programming paradigms",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912570868&partnerID=40&md5=21475f703bf0acc7b10167ec179d7205",
    "interesting": "-"
  },
  {
    "title": "Designing interactive scratch content for future e-books",
    "abstract": "In the current paper we propose a framework for designing interactive content to make future e-books more dynamic. The problem with typical e-books today is that they seem to have a lack of interactivity. Considering the rapid advancement of digital technology there are many opportunities to change this situation. We focus on using the multimedia authoring tool Scratch as an option to create interactive content. The Scratch platform is valuable because content can  be easily created, shared, embedded in websites and even possibly embedded in future e-books. Thus it opens up a possibility for making e-books more interactive and dynamic. Scratch by its very nature also promotes the constructivist pedagogy of learning by design. The framework we propose for designing interactive Scratch content was derived from creating a specific Scratch model to teach biology content. However, the framework is a promising start to producing interactive content that can apply potentially to any subject. © Springer International Publishing Switzerland 2014.",
    "keywords": "Digital learning material; E-books; Interactive simulations; Learning by design; Visual programming environments",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-13296-9_26",
    "interesting": "-"
  },
  {
    "title": "An interactive verification tool meets an IDE",
    "abstract": "We present a general approach on how to integrate a semi-automatic verification tool into a state-of-the-art integrated development environment (IDE). The objective and challenge is to keep implementation, specification and proofs in sync. Following a change in one of the specifications or implementations, all proofs that could possibly be affected by that change are rescheduled. To improve performance we look at several optimizations. User feedback about proof results is provided within the IDE using standard markers and views. The approach has been implemented and realizes an integration of the interactive verification system KeY into the Eclipse IDE. © 2014 Springer International Publishing.",
    "keywords": "Integration of formal methods into software engineering practice; Verification",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-10181-1_4",
    "interesting": "-"
  },
  {
    "title": "IDE integrated RDF exploration, access and RDF-based code typing with LITEQ",
    "abstract": "In order to access RDF data in Software development, one needs to deal with challenges concerning the integration of one or several RDF data sources into a host programming language. LITEQ allows for exploring an RDF data source and mapping the data schema and the data itself from this RDF data source into the programming environment for easy reuse by the developer. Core to LITEQ is a novel kind of path query language, NPQL, that allows for both extensional queries returning data and intensional queries returning class descriptions. This demo presents a prototype of LITEQ that supports such a type mapping as well as autocompletion for NPQL queries. © Springer International Publishing Switzerland 2014.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-11955-7_75",
    "interesting": "-"
  },
  {
    "title": "VisionSketch: Integrated support for example-centric programming of image processing applications",
    "abstract": "We propose an integrated development environment (IDE) called \"VisionSketch\", which supports example-centric programming for easily building image processing pipelines. With VisionSketch, a programmer is first asked to select the input video. Then, he can start building the pipeline with a visual programming language that provides immediate graphical feedback for algorithms applied to the video. He can also use a text-based editor to create or edit the implementation of each algorithm. During the development, the pipeline is always ready for execution with a video player-like interface enabling rapid iterative prototyping. In a preliminary user study, VisionSketch was positively received by five programmers, who had prior experience of writing text-based image processing programs and could successfully build interesting applications. Copyright held by authors.",
    "keywords": "Computer vision; Example-centric programming; Image processing; Integrated development environment",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904815529&partnerID=40&md5=f4adc01bc44155b0d1a1c50a791798de",
    "interesting": "-"
  },
  {
    "title": "Enabling architecture: How the GPII supports inclusive software development",
    "abstract": "The Global Public Inclusive Infrastructure is an international effort to build tools, components, services and a sustainable community to support personalized digital inclusion[1]. The GPII is building the critical infrastructure needed by developers to produce the next generation of low-cost assistive technology and highly flexible applications that can adapt to the needs and preferences of individuals across web, desktop, and mobile platforms. To deliver on these ambitious goals, the GPII architecture team has created an evolving suite of development tools, idioms, and resources to support the creation of an inclusive infrastructure. © 2014 Springer International Publishing.",
    "keywords": "Accessibility; assistive technology; development tools; GPII; inclusive design; Inversion of Control; JavaScript; Node.js",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-07509-9_35",
    "interesting": "-"
  },
  {
    "title": "Investigating collaboration dynamics in different ontology development environments",
    "abstract": "Understanding the processes and dynamics behind the collaborative construction of ontologies will enable the development of quality ontologies in distributed settings. In this paper, we investigate the collaborative processes behind ontology development with two Web-based modeling tools, WebProtégé and MoKi. We performed a quantitative analysis of user activity logs from both tools. This analysis sheds light on (i) the way people edit an ontology in collaborative settings, and (ii) the role of discussion activities in collaborative ontology development. To explore whether the ontology tool influences the collaboration processes, we conducted five investigations using the collaborative data from both tools and we found that users tend to collaborate in similar ways, even if the tools and their collaboration support differ. We believe these findings are valuable because they advance our understanding of collaboration processes in ontology development, and they can serve as a guide for developers of collaborative tools. © Springer International Publishing Switzerland 2014.",
    "keywords": "",
    "released": 2014,
    "link": "https://doi.org/10.1007/978-3-319-12096-6_27",
    "interesting": "-"
  },
  {
    "title": "WADE: Simplified GUI add-on development for third-party software",
    "abstract": "We present the WADE Integrated Development Environment (IDE), which simplifies the modification of the interface and functionality of existing third-party software without access to source code. WADE clones the Graphical User Interface (GUI) of a host program through dynamic-link library (DLL) injection in order to enable (1) WYSIWYG modification of the GUI and (2) the modification of software functionality. We compare WADE with an alternative state-of-the-art runtime toolkit overloading approach in a user-study, finding that WADE significantly simplifies the task of GUI-based add-on development. Copyright © 2014 ACM.",
    "keywords": "Add-on Integration; GUI; IDE; WADE; WYSIWYG",
    "released": 2014,
    "link": "https://doi.org/10.1145/2556288.2557349",
    "interesting": "-"
  },
  {
    "title": "Efficient development of progressively enhanced web applications by sharing presentation and business logic between server and client",
    "abstract": "A Web application's codebase is typically divided into a server side and a client side with essential functionalities being implemented twice, such as validation or rendering. While developers can choose from a rich set of programming languages to implement a Web application's server side, they are bound to JavaScript for the client side. Recent developments like Node.js allow using JavaScript in a simple and efficient way also on the server side, but lack offering a common codebase for the entire Web application. In this article, we present the SWAC approach that aims at reducing development efforts and minimizing coding errors in order to make creating Web applications more efficiently. Based on our approach, we created the SWAC framework. It enables establishing a unified Web application codebase that provides both dynamic functionality and progressive enhancement by taking characteristic differences between server and client into account. © Rinton Press.",
    "keywords": "Development tools; HTML5 and beyond; Web standards and protocols",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904577368&partnerID=40&md5=a99e365cbc7b2ee77b102b75dd75a784",
    "interesting": "-"
  },
  {
    "title": "IArch: An IDE for supporting fluid abstraction",
    "abstract": "Abstrection plays an important role in software development. Although it is preferable to firmly separate design from its implementation, this separation is not easy because an abstraction level tends to change during the progress of software development. It is not avoidable to fluidly go back and forth between design and implementation. An abstraction level of a design specification may change as a result of reconsidering the balance between design and code-which concern should be described in design and which concern should be written in code. The iArch IDE (Integrated Development Environment) supports the notion of fluid abstraction, a design approach in which an appropriate abstraction level can be captured by the convergence of fluid moving between design and implementation. Copyright © 2014 ACM.",
    "keywords": "Abstraction; Architecture; Interface",
    "released": 2014,
    "link": "https://doi.org/10.1145/2584469.2584477",
    "interesting": "-"
  },
  {
    "title": "Programming the web of data with a \"Wiki-based IDE\"; [Programmer le web de données avec un wiki-based IDE]",
    "abstract": "[No abstract available]",
    "keywords": "",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907020141&partnerID=40&md5=a7349535d4d80c604914c271eae800f1",
    "interesting": "-"
  },
  {
    "title": "A Wiki/IDE to operate the web of data; [Un Wiki/IDE pour exploiter le web de données]",
    "abstract": "[No abstract available]",
    "keywords": "",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907033648&partnerID=40&md5=8b05291c241d3a939e55ba9a2ca32de6",
    "interesting": "-"
  },
  {
    "title": "A multi-agent-based simulator for a transmission control protocol/internet protocol network",
    "abstract": "The main goal of this paper is building a novel transmission control protocol/internet protocol (TCP/IP) network simulator engine for simulation of distributed applications for which capturing both higher and lower layer network parameters are important. There are not many comprehensive simulators available in industry and academia to simulate distributed applications while reporting the parameters of all the layers of the TCP/IP network active in such simulations. The major problem in building a comprehensive simulation scenario for applications residing on the higher layers of a network by using currently available simulators is that a core simulator for lower layers of the network should be used together with add-ons or other programs simulating higher network layers to be able to simulate the whole TCP/IP network. This paper presents a novel idea for network simulation that has not been implemented before, which is using agents to simulate all layers of the network. In this simulator, each TCP/IP layer is simulated separately by using a separate agent and its behavior. It is an integrated environment based on agent systems capable of simulating all layers of a TCP/IP network, including application and lower layers. The final goal is other agent systems simulating a complex higher level web-based distributed application being easily used together with these agents, which are simulating the core TCP/IP network. For evaluation and testing purposes, a simple distributed application consisting of several remote procedure calls is simulated. For the validation of the conducted simulations, the achieved results are compared with the results of two non-agent-based simulators. For the verification of each individual agent function, a report is generated that shows the information flow between agents. The communication routes between agents are checked manually to make sure the route selection is based on the expected behavior of each agent. The scalability of the proposed multi-agent-based simulator is tested for the given distributed application. © 2014, The Society for Modeling and Simulation International. All rights reserved.",
    "keywords": "agent development environment; Multi-agent system based simulation; network simulators; remote procedure calls; web application simulation",
    "released": 2014,
    "link": "https://doi.org/10.1177/0037549714528268",
    "interesting": "-"
  },
  {
    "title": "No tools but objects: Towards direct manipulation programming environments",
    "abstract": "Direct manipulation user interfaces provide promising virtues that should reduce users' cognitive efforts. For programming tools, however, the three main principles about representations, actions, and feedback are difficult to implement upfront because the interfaces' suitability varies among task domains. Even in a single domain, the repertoire of tasks grows with the software system and so does the interpretational gap towards the tool interface, which often only supports plain programming language concepts. Unfortunately, tools are rarely adapted to close this gap because the costbenefit ratio is unattractive for unplanned situations. Our approach is to make programming tool behavior better accessible and adaptable. For data browsers, we propose a query mechanism that encourages programmers to apply modifications and accommodate domain-specific needs in situ.",
    "keywords": "",
    "released": 2014,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907522031&partnerID=40&md5=8faf2399e605ed87a461c4e1c5caa47d",
    "interesting": "-"
  },
  {
    "title": "The patchworks code editor: Toward faster navigation with less code arranging and fewer navigation mistakes",
    "abstract": "Increasingly, people are faced with navigating large information spaces, and making such navigation efficient is of paramount concern. In this paper, we focus on the problems programmers face in navigating large code bases, and propose a novel code editor, Patchworks, that addresses the problems. In particular, Patchworks leverages two new interface idioms-the patch grid and the ribbon-to help programmers navigate more quickly, make fewer navigation errors, and spend less time arranging their code. To validate Patchworks, we conducted a user study that compared Patchworks to two existing code editors: The traditional file-based editor, Eclipse, and the newer canvas-based editor, Code Bubbles. Our results showed (1) that programmers using Patchworks were able to navigate significantly faster than with Eclipse (and comparably with Code Bubbles), (2) that programmers using Patchworks made significantly fewer navigation errors than with Code Bubbles or Eclipse, and (3) that programmers using Patchworks spent significantly less time arranging their code than with Code Bubbles (and comparably with Eclipse). Copyright © 2014 ACM.",
    "keywords": "Code editor; Integrated development environment (IDE); Navigation; User study",
    "released": 2014,
    "link": "https://doi.org/10.1145/2556288.2557073",
    "interesting": "-"
  },
  {
    "title": "Creo: Reduced complexity service development",
    "abstract": "In this work we address service-oriented software development in distributed computing environments, and investigate an approach to software development and integration based on code generation. The approach is illustrated in a toolkit for multi-language software generation built on three building blocks; a service description language, a serialization and transport protocol, and a set of code generation techniques. The approach is intended for use in the eScience domain and aims to reduce the complexity of development and integration of distributed software systems through a low-knowledge-requirements model for construction of networkaccessible services. The toolkit is presented along with a discussion of use cases and a performance evaluation quantifying the performance of the toolkit against selected alternative techniques for code generation and service communication. In tests of communication overhead and response time, toolkit performance is found to be comparable to or improve upon the evaluated techniques. Copyright © 2014 SCITEPRESS - Science and Technology Publications.",
    "keywords": "Service development tools; Service-orientated architecture",
    "released": 2014,
    "link": "https://doi.org/10.5220/0004854902300241",
    "interesting": "-"
  },
  {
    "title": "Puzzle: A mobile application development environment using a jigsaw metaphor",
    "abstract": "Objective: Create a visual mobile end user development framework, named Puzzle, which allows end users without IT background to create, modify and execute applications, and provides support for interaction with smart things, phone functions and web services. Methods: Design of an intuitive visual metaphor and associated interaction techniques for supporting end user development in mobile devices with iterative empirical validation. Results: Our results show that the jigsaw is an intuitive metaphor for development in a mobile environment and our interaction techniques required a limited cognitive effort to use and learn the framework. Integration of different modalities and usage of smart things was relevant for users. Conclusion: Puzzle has addressed the main objective. The framework further contributes to the research on mobile end user development in order to create an incentive for users to go beyond consuming content and applications to start creating their own applications. Practice: Usage of a mobile end user development environment has the potential to create a shift from the conventional few-to-many distribution model of software to a many-to-many distribution model. Users will be able to create applications that fit their requirements and share their achievements with peers. Implications: This study has indicated that the Puzzle visual environment has the potential to enable users to easily create applications and stimulate exploration of innovative scenarios through smartphones. © 2014 Elsevier Ltd.",
    "keywords": "Authoring tools; End user development; Interaction techniques; Metaphors; Mobile computing; Ubiquitous computing",
    "released": 2014,
    "link": "https://doi.org/10.1016/j.jvlc.2014.03.005",
    "interesting": "-"
  },
  {
    "title": "Paas characteristics for productive software development: An evaluation framework",
    "abstract": "Application platforms in the cloud, also known as platform as a service (PaaS), let developers rapidly implement and deploy Web-based applications. PaaS includes several characteristics that are assumed to positively affect development productivity. Marketing for PaaS usually emphasizes this advantage, but few vendors provide guidance about their products' limitations. The authors' study asked Web application developers about the PaaS characteristics that they perceive as either beneficial or limiting for their own work. Based on these answers, the authors developed an evaluation framework to assess commercial PaaS solutions with regard to their development characteristics. They applied this framework to three commercial products and identified several design choices that either benefit or hinder developer productivity. © 2014 IEEE.",
    "keywords": "development productivity; Internet applications; platform as a service; programming environment; services computing",
    "released": 2014,
    "link": "https://doi.org/10.1109/MIC.2014.12",
    "interesting": "-"
  },
  {
    "title": "Teaching object-oriented programming with AEIOU",
    "abstract": "AEIOU is an integrated programming environment developed to support the teaching-learning process of object-oriented programming in a gradual way. AEIOU includes three modules, one for each level of students’ expertise: novice, intermediate, and advanced. This article describes the features of each module of AEIOU and the experiences and results obtained using this programming environment to support the sequence of programming courses in two Mexican engineering schools. (c) 2011 Wiley Periodicals, Inc. Comput Appl Eng Educ 22:309-319, 2014; View this article online at ; DOI",
    "keywords": "teaching programming; programming environment; object-oriented programming",
    "released": 2014,
    "link": "https://doi.org/10.1002/cae.20556",
    "interesting": "-"
  },
  {
    "title": "Online model-driven IDE to design GUIs for cross-platform mobile applications",
    "abstract": "The wide variation in features and capabilities of mobile devices lead to difficulties in the development of the same application on different platforms. Therefore we propose an online model-driven integrated development environment to provide developers with a platform-independent GUI design for mobile applications. Our proposed system transforms an abstract platform-independent GUI into a platform-dependent GUI on a target platform. The generated project is entirely in the form with which an experienced developer on the platform is already familiar. Furthermore, as the generated application is not a web-based one, it can access naturally native features of a platform. The proposed flexible architecture enable the capability to handle and update different abstract UI and non-UI controls needed to design GUIs for mobile applications. Experimental results with volunteers show that our proposed solution can save up to 25–51",
    "keywords": "software development tool; online IDE; mobile HCI; GUI design",
    "released": 2013,
    "link": "https://doi.org/10.1145/2542050.2542083",
    "interesting": "-"
  },
  {
    "title": "Recording and analyzing in-browser programming sessions",
    "abstract": "In this paper, we report on the analysis of a novel type of automatically recorded detailed programming session data collected on a university-level web programming course. We present a method and an implementation of collecting rich data on how students learning to program edit and execute code and explore its use in examining learners’ behavior. The data collection instrument is an in-browser Python programming environment that integrates an editor, an execution environment, and an interactive Python console and is used to deliver programming assignments with automatic feedback. Most importantly, the environment records learners’ interaction within it. We have implemented tools for viewing these traces and demonstrate their potential in learning about the programming processes of learners and of benefiting computing education research and the teaching of programming.",
    "keywords": "web based programming environment; programming session; programming assignment; computing education research; computer science education; Python",
    "released": 2013,
    "link": "https://doi.org/10.1145/2526968.2526970",
    "interesting": "+"
  },
  {
    "title": "Wiki development environments",
    "abstract": "The doctoral thesis Wiki Development Environments analyzes contribution barriers to Free, Libre and Open Source Software (FLOSS) projects. Contribution barriers exist between particular subgroups within the community around a FLOSS project. Contribution barriers include social and technical factors. The hurdles that constitute the contribution barrier to become a co-developer receives special emphasis.The doctoral thesis also describes a pattern language for maintainers of FLOSS projects. The patterns in this pattern language describe practices that lower the contribution barriers in FLOSS projects that employ the patterns. The doctoral thesis includes a novel approach that minimizes contribution barriers. This approach comprises the combination of a wiki system and an Integrated Development Environment (IDE) into a Wiki Development Environment (WikiDE). A WikiDE is a web-based code editor that allows anonymous users to edit source code and contribute it to a FLOSS project. From the pattern language perspective, a WikiDE helps to realize some of the patterns described earlier and amplifies their effect.Editing source code of software differs from editing text in a natural language. WikiDE realizations must take these differences into account. This imposes challenges for WikiDEs realization that exceed the requirements of IDEs and wiki systems for natural language text.",
    "keywords": "software engineering; software development environment; open source; contribution barrier; Wikis; WikiDE; IDE; FLOSS",
    "released": 2013,
    "link": "https://doi.org/10.1145/2491055.2491088",
    "interesting": "-"
  },
  {
    "title": "OpenHTML: Designing a transitional web editor for novices",
    "abstract": "We describe the initial design rationale and early findings from studies of a web editor for beginners called openHTML. We explain our strategy of transitional design that views web editors as a part of a complex socio-technical system that spans multiple tools, practices, and actors. Our goal is to create a toolkit that can engage beginners in meaningful activities now and prepare them for more sophisticated activities in the future.",
    "keywords": "web development; learner-centered design; code editors",
    "released": 2013,
    "link": "https://doi.org/10.1145/2468356.2468690",
    "interesting": "-"
  },
  {
    "title": "Interactive support for secure programming education",
    "abstract": "Software flaws are a root cause of many of today’s information security vulnerabilities. Current curricula emphasis on traditional information security issues does not address this root cause. We propose educating students on secure programming techniques through interactive tool support in the Integrated Development Environment (IDE). We believe this approach can complement other curricula efforts by teaching and providing continuous reinforcement of practices throughout programming tasks. In this paper, we evaluate our prototype tool, ASIDE, which provides instant security warnings, detailed explanations of vulnerabilities, and code generation. We report the results of an observational study on 20 students from an advanced Web programming course. The results provide early evidence that our tool could potentially help students learn about and practice secure programming in the context of their programming assignments.",
    "keywords": "security education; secure programming; IDE",
    "released": 2013,
    "link": "https://doi.org/10.1145/2445196.2445396",
    "interesting": "-"
  },
  {
    "title": "SeeSS: Seeing what i broke – visualizing change impact of cascading style sheets (css)",
    "abstract": "Cascading Style Sheet (CSS) is a fundamental web language for describing the presentation of web pages. CSS rules are often reused across multiple parts of a page and across multiple pages throughout a site to reduce repetition and to provide a consistent look and feel. When a CSS rule is modified, developers currently have to manually track and visually inspect all possible parts of the site that may be impacted by that change. We present SeeSS, a system that automatically tracks CSS change impact across a site and enables developers to easily visualize all of them. The impacted page fragments are sorted by severity and the differences before and after the change are highlighted using animation.",
    "keywords": "world wide web and hypermedia; web development; toolkits; development tools; cascading style sheet",
    "released": 2013,
    "link": "https://doi.org/10.1145/2501988.2502006",
    "interesting": "-"
  },
  {
    "title": "Euclase: A live development environment with constraints and FSMs",
    "abstract": "Euclase is a live development environment focused on creating interactive web applications. It uses a programming model that combines constraints and finite state machines to specify interactive behaviors. Euclase is \"live\" in the sense that while the user is developing code, their program is always executing. Changes made to the source of the program are reflected immediately in the running program. We identify some of the implementation and design challenges of making our development environment live, including performance issues, ensuring predictability, dealing with errors in the source, and handling edge cases such as the removal of code that is currently running. We also discuss how Euclase’s use of finite state machines and constraints can help alleviate these difficulties.",
    "keywords": "constraints; finite state machines; interaction design; interactive applications; live development",
    "released": 2013,
    "link": "https://dl.acm.org/doi/10.5555/2662726.2662731",
    "interesting": "-"
  },
  {
    "title": "Seahawk: Stack overflow in the IDE",
    "abstract": "Services, such as Stack Overflow, offer a web platform to programmers for discussing technical issues, in form of Question and Answers (Q&amp;A). Since Q&amp;A services store the discussions, the generated crowd knowledge can be accessed and consumed by a large audience for a long time. Nevertheless, Q&amp;A services are detached from the development environments used by programmers: Developers have to tap into this crowd knowledge through web browsers and cannot smoothly integrate it into their workflow. This situation hinders part of the benefits of Q&amp;A services. To better leverage the crowd knowledge of Q&amp;A services, we created Seahawk, an Eclipse plugin that supports an integrated and largely automated approach to assist programmers using Stack Overflow. Seahawk formulates queries automatically from the active context in the IDE, presents a ranked and interactive list of results, lets users import code samples in discussions through drag &amp; drop and link Stack Overflow discussions and source code persistently as a support for team work. Video Demo URL: http://youtu.be/DkqhiU9FYPI",
    "keywords": "",
    "released": 2013,
    "link": "https://dl.acm.org/doi/10.5555/2486788.2486988",
    "interesting": "-"
  },
  {
    "title": "WIDE an interactive Web integrated development environment to practice C programming in distance education",
    "abstract": "To develop good programming skills in C language, novices students must provide a lot of efforts in order to acquire experience and techniques of writing computer programs, they need to spend a respectable period of time doing practical activities, to start beginners must install and use a compiler or integrated development environment, without any assistance they are usually face a number of obstacles associated with this step. This paper introduces an online Web-Lab based system that provides a web integrated development environment (WIDE) for students doing practical programming activities and assignment in a distance learning. The proposed system provides students an editor for writing, editing, updating, compiling and executing their programming code source in the Web. The system is also interactive by introducing tools such Chat-Room, E-Mail, and Forum among learners and instructors interact. The results of using WIDE are very encouraging for enhancing novices students programming skills by allowing them learning and practicing on the web, for instructors to use the recorded information to track the learner's progress.",
    "keywords": "Web-Lab based compiler; Interactive system; Online practice programming; C language web IDE",
    "released": 2013,
    "link": "https://doi.org/10.1109/CISPEE.2013.6701964",
    "interesting": "+"
  },
  {
    "title": "An integrated development environment to establish web services in grid computing Using .NET framework 4.5 and Visual Basic 2012",
    "abstract": "The World Wide Web has become pervasive in many facets of our professional and personal lives over a decade. Today, another Internet revolution is emerging: Grid computing. While Web offers easy access to mostly static information via Hypertext, the Grid adds another fundamental layer to the Internet, by enabling direct access to and use of underlying resources, such as computers, storage, scientific instruments and experiments, sensors, applications, data and middleware services. This paper presents readers both a concrete introduction and a handy reference to web services in grid computing, first by explaining the foundations of this new breed of distributed services, and then by demonstrating quick ways to create services with .NET framework 4.5 and Visual Studio 2012 tools. Hence in this article, you will learn the concepts of the web services in grid computing and get practical advice on building and deploying web services using Visual Basic 2012.",
    "keywords": ".NET 4.5 Web services; Web services using Visual Basic 2012; Grid computing; Web services in .NET",
    "released": 2013,
    "link": "https://doi.org/10.1109/WCCIT.2013.6618661",
    "interesting": "-"
  },
  {
    "title": "Online code editor on Private cloud computing",
    "abstract": "Programming tools are important for programmers to develop software. If the developers have a good tool, it can help them develop system faster and more accurate. This paper proposed the Online Code Editor that was created for programmers or developers who want to write programs without any platform requirements or without any specific physical computers. It bases on web application running on the Private cloud computing. The features of the editor are performed on web programming languages, e.g. HTML, PHP, CSS, and JavaScript. The editor is able to isolate programming languages by highlighting syntax of programs. Users can create new projects and files, import and export files that they want on a server. Moreover, Save, Auto save, Delete, and etc. are the additional functions of the editor. In this research of the text editor development, the open source software called, “Ace” was used for some functions such as Undo, Redo, and Syntax highlight. The experimental results indicated that the proposed editor can be practically used on Private cloud computing. Moreover, the comparison of the features among the proposed editor running on Private cloud, Notepad++, and EditPlus which running on personal computers, was summarized.",
    "keywords": "Online Editor; Private Cloud Computing; Ace",
    "released": 2013,
    "link": "https://doi.org/10.1109/ICSEC.2013.6694748",
    "interesting": "-"
  },
  {
    "title": "An interactive Web-based IDE towards teaching and learning in programming courses",
    "abstract": "In programming courses, students are often asked to work in groups to write multiple programs. The existing Integrated Development Environments (IDE), however, do not encourage concurrent interactions among student programmers. Students often encounter difficulties in collaborative activities, sharing resources, reviewing code and discussing ideas, especially when the group cannot reach a common arrangement for face-to-face meetings at a convenient time and place. We propose to resolve this problem by transforming the traditional IDE into Software as a Service on the Web, and integrating collaborative features in order to create an interactive and responsive environment, where real-time on-the-job guidance, communication and collaboration can be delivered. In this paper, we introduce a web-based IDE designed for this purpose, and show how it can be applied in programming courses.",
    "keywords": "web-based IDE; collaborative learning",
    "released": 2013,
    "link": "https://doi.org/10.1109/TALE.2013.6654478",
    "interesting": "+"
  },
  {
    "title": "Interactive Interface for Web-based Programming Environment",
    "abstract": "Cloud computing has become very popular in recent years. Various PaaS (Platform as a Service) systems for collaborative software development as well as DaaS (Desktop as a Service) systems for developing software have been proposed. Software development environments are categorized as one of four types: Client-side Development and Client-side Execution, Client-side Development and Server-side Execution, Server-side Development and Server-side Execution (SDSE), and Server-side Development Client-side Execution (SDCE). Most PaaS and DaaS systems assume that applications are developed on a server and executed on the same server. As such, portability of these applications is not considered. In order to improve the portability of the developed software and establish efficiency in the development environment, we propose SDCE and SDSE environments. The SDCE environment provides a Web-based software development environment for graphical user interface applications that can be executed on a local machine, while the SDSE environment provides a Web-based interactive application execution environment for console user interface applications that can be executed on the server.",
    "keywords": "cloud computing; PaaS (Platform as a Service); WebOS; SDCE (Server-side Development and Client-side Execution); SDSE (Server-side Development and Client-side Execution)",
    "released": 2013,
    "link": "https://doi.org/10.1109/WAINA.2013.93",
    "interesting": "-"
  },
  {
    "title": "Design of online pseudo-code editor and code generator",
    "abstract": "To make up for the absence of tools for pseudo-code editing and code generation, a B/S based pseudo-code editor and generator named Transcode is presented. Transcode adopts Javascript in client for editing and displaying and uses Java in server for storage and code generation, making it possible to edit pseudo-code online without delay and providing the function of data reuse. It is compatible to all the mainstream browsers and has great application value.",
    "keywords": "B/S Mode; XML; Pseudo-code; Code Generate; Reusable",
    "released": 2013,
    "link": "https://doi.org/10.1109/ANTHOLOGY.2013.6784941",
    "interesting": "-"
  },
  {
    "title": "An interdisciplinary project in sustainable development based on modern visual programming environments and web 2.0 technologies",
    "abstract": "Sustainable development is raising increasing interest and efforts are being devoted worldwide in order to introduce the notion of sustainability in the curricula, from schools to PhD programs. The focus of this work is on reporting a teaching and learning experience aimed at introducing the students to the culture of sustainability, by means of a project that utilizes a leading visual programming environment and web 2.0 technologies, and is suitable for a relatively large group. The key idea was to tell a story through a computational artifact, whose development requires critical and creative thinking, problem solving, communication and collaboration skills [6] as well as information literacy. This paper describes the pedagogical design of the activities, their objectives, class management issues, and the scaffolds to designing the animated story, to be implemented using a cutting edge, syntax-free visual language called Scratch. Both the humanistic and the scientific aspects were to be covered in each story about a selected topic in sustainability, in order to involve as much as possible of the teaching spectrum and create a truly interdisciplinary environment. The developed Scratch-based solution is also suitable for deployment on mobile devices using the App Inventor visual programming language.",
    "keywords": "Sustainability; Visual Programming; Scratch; AppInventor",
    "released": 2013,
    "link": "https://doi.org/10.1109/IEDEC.2013.6526780",
    "interesting": "-"
  },
  {
    "title": "Web-based configurable and multiplatform development environment for educational robotics",
    "abstract": "We created an online development environment, specifically for educational robotics applications, in which it is possible to register programming languages associated with different robotic platforms, so that the user program a robot using the registered language or the language R-Educ, developed for teaching programming. To validate the platform, we conducted a series of tests divided into six steps to verify that the complete cycle was satisfied - registering a language, program in R-Educ, compile to the registered language, compile to machine code and send the code for the robot.",
    "keywords": "Development Environment; Educational Robotics; Web-based",
    "released": 2013,
    "link": "https://doi.org/10.1109/ICAR.2013.6766509",
    "interesting": "-"
  },
  {
    "title": "Ontology for feature based selection of web development tools",
    "abstract": "Organizations and individuals are mainly concerned to get opinions about different products, services and events for making suitable choices. The main contribution of this research is the design of an ontology that will help a user to select appropriate (popular) tools for web designing on the basis of certain characteristics and features of tools. The ontology is based on experts' opinions of software engineering practitioners and researchers (scholars).",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1109/ICDIM.2013.6693980",
    "interesting": "-"
  },
  {
    "title": "Efficient Construction of Presentation Integration for Web-Based and Desktop Development Tools",
    "abstract": "The engineering of software-intensive systems is supported by a variety of development tools. While development tools are traditionally desktop tools, they are more and more complemented and replaced by web-based development tools. The resulting blend of desktop and web-based tools is difficult to integrate into a seamless tool chain, which supports product development by data, control and presentation integration. Moreover, the construction of such tool chains is a significant engineering challenge. We propose an approach for the efficient, automated construction of tool chains, which integrate both web-based and desktop development tools; and provide a proof of concept of the approach in a case study. Our approach suggests that companies can selectively take advantage of hosted web-based development tools, while maintaining a seamless flow of integration with legacy desktop tools.",
    "keywords": "Tool Integration; Engineering Environments; OSLC",
    "released": 2013,
    "link": "https://doi.org/10.1109/COMPSACW.2013.123",
    "interesting": "-"
  },
  {
    "title": "BOINC as a Service for the SlapOS Cloud: Tools and Methods",
    "abstract": "In this article we introduce the problems and solutions related to the integration of desktop grid middleware in a cloud, in our case the open source SlapOS cloud. We focus on the issues that describe the integration of what we call a recipe (a description of a process related to the automatic deployment of applications) which is one aspect of systems design in service-oriented architecture and Cloud Computing. The context of our work is somehow orthogonal to what is done traditionally in the Cloud because we do not rely on virtual machines and there is no data center, in the common sense of the word. We also introduce our environment (IDE) for developing applications, designed for SlapOS. We demonstrate that from the initial deployment model we can take into account not only Web applications, B2B applications. . . but also grid applications; here a desktop grid middleware that constitutes a case study. Our first contribution focuses on the problems to automatically deploy and install a desktop grid application, on demand, with no administrator intervention. The second contribution focuses on the architectural design of an IDE for the SlapOS cloud and we illustrate our IDE's usage in the context of our use case.",
    "keywords": "Cloud programming models and IDE tools;  Software integration;  Recipe;  Scientific and Engineering computing on cloud architecture;  Infrastructure: theory and practice of Cloud computing",
    "released": 2013,
    "link": "https://doi.org/10.1109/IPDPSW.2013.59",
    "interesting": "-"
  },
  {
    "title": "Specification and reasoning in SE projects using a Web IDE",
    "abstract": "A key goal of our research is to introduce an approach that involves at the outset using analytical reasoning as a method for developing high quality software. This paper summarizes our experiences in introducing mathematical reasoning and formal specification-based development using a web-integrated environment in an undergraduate software engineering course at two institutions at different levels, with the goal that they will serve as models for other educators. At Alabama, the reasoning topics are introduced over a two-week period and are followed by a project. At Clemson, the topics are covered in more depth over a five-week period and are followed by specification-based software development and reasoning assignments. The courses and project assignments have been offered for multiple semesters. Evaluation of student performance indicates that the learning goals were met.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1109/CSEET.2013.6595254",
    "interesting": "-"
  },
  {
    "title": "A collaborative task planning and development environment on the Cloud/Grid",
    "abstract": "A Grid system is a promising solution for sharing distributed resources of registered participants to perform tasks whose demands may exceed the capacity of individual participating organization. However, the collaborative aspect of Grids is still underdeveloped as they lack features and mechanisms for human interaction and collaboration. This paper presents a prototype system for collaborative task planning and workflow development over a Grid implemented as a Rich Internet Application. It allows the participants to design their joint workflow interactively and collaboratively in a high level graphical notation. The resulting workflow can be automatically translated into Business Process Execution Language (BPEL) for testing and execution with a few clicks and forms the basis for further refinement and collaboration. This collaborative workflow design application is part of our larger Active Assistive Cloud/Grid infrastructure.",
    "keywords": "Collaborative Cloud/Grid; task planning; workflow development; Rich Internet Application",
    "released": 2013,
    "link": "https://doi.org/10.1109/ICON.2013.6781961",
    "interesting": "-"
  },
  {
    "title": "Distributed Integrated Development Environment for Mobile Platforms",
    "abstract": "It is believed that future technologies related to smart devices could add more towards making life easy while saving on time for a person on the go. Already mobile devices have added value to our everyday tasks. However, programmers, so far, seem to be denied the use of such facilities with these smart devices. Distributed Integrated Development Environment for Mobile Platforms (DIMP) is directed towards them with an innovative way to write software programs on the go. Using a mobile device such as a mobile phone or a tablet computer, DIMP is capable of writing source codes and compiling. DIMP consists of a mobile application, a central server and a set of compilation servers, while an administrative web console supports the administrative functions. Together, they comprise DIMP. The mobile application is an android application and provides a rich source code editor integrated to the software. It allows compiling and running of source codes where users can write programs in a selected language. If the source code is error free, a user can expect a worthwhile output whereas an error prone source code would reveal the relevant error message with useful hints for debugging. A further benefit from DIMP is that it allows a user to maintain online work space as well as an offline workspace. Source codes can be shared with other interested users.",
    "keywords": "cloud computing; service oriented architecture; mobile applications; programming; web services; mobile application development; distributed computing",
    "released": 2013,
    "link": "https://doi.org/10.1109/ICCSE.2013.6553932",
    "interesting": "+"
  },
  {
    "title": "An IDE-based context-aware meta search engine",
    "abstract": "Traditional web search forces the developers to leave their working environments and look for solutions in the web browsers. It often does not consider the context of their programming problems. The context-switching between the web browser and the working environment is time-consuming and distracting, and the keyword-based traditional search often does not help much in problem solving. In this paper, we propose an Eclipse IDE-based web search solution that collects the data from three web search APIs-Google, Yahoo, Bing and a programming Q & A site-StackOverflow. It then provides search results within IDE taking not only the content of the selected error into account but also the problem context, popularity and search engine recommendation of the result links. Experiments with 25 runtime errors and exceptions show that the proposed approach outperforms the keyword-based search approaches with a recommendation accuracy of 96%. We also validate the results with a user study involving five prospective participants where we get a result agreement of 64.28%. While the preliminary results are promising, the approach needs to be further validated with more errors and exceptions followed by a user study with more participants to establish itself as a complete IDE-based web search solution.",
    "keywords": "IDE-based search; API mash-up; Context-based search; SimHash algorithm",
    "released": 2013,
    "link": "https://doi.org/10.1109/WCRE.2013.6671324",
    "interesting": "-"
  },
  {
    "title": "Capture-replay vs. programmable web testing: An empirical assessment during test case evolution",
    "abstract": "There are several approaches for automated functional web testing and the choice among them depends on a number of factors, including the tools used for web testing and the costs associated with their adoption. In this paper, we present an empirical cost/benefit analysis of two different categories of automated functional web testing approaches: (1) capture-replay web testing (in particular, using Selenium IDE); and, (2) programmable web testing (using Selenium WebDriver). On a set of six web applications, we evaluated the costs of applying these testing approaches both when developing the initial test suites from scratch and when the test suites are maintained, upon the release of a new software version. Results indicate that, on the one hand, the development of the test suites is more expensive in terms of time required (between 32% and 112%) when the programmable web testing approach is adopted, but on the other hand, test suite maintenance is less expensive when this approach is used (with a saving between 16% and 51%). We found that, in the majority of the cases, after a small number of releases (from one to three), the cumulative cost of programmable web testing becomes lower than the cost involved with capture-replay web testing and the cost saving gets amplified over the successive releases.",
    "keywords": "Test Case Evolution; Test Case Repair; Empirical Study; Selenium IDE; Selenium WebDriver",
    "released": 2013,
    "link": "https://doi.org/10.1109/WCRE.2013.6671302",
    "interesting": "-"
  },
  {
    "title": "Development environment for monitoring, data acquisition and simulation of PLC controlled applications",
    "abstract": "It is very important to monitor and test the operation of Programmable Logic Controller (PLC) in real time (online). There are many conventional, but expensive monitoring systems for PLC, such as Supervisory Control and Data Acquisition (SCADA) systems, software and hardware simulators (or debuggers), etc. This paper proposes a user friendly and cost-effective development environment for monitoring and data acquisition of applications with PLC. The purpose of this solution is to simulate the process which is controlled by the PLC. The performances of the development environment are presented on the example of washing machine and dishwasher simulators.",
    "keywords": "Data acquisition; monitoring; PLC; simulation",
    "released": 2013,
    "link": "https://doi.org/10.1109/TELFOR.2013.6716379",
    "interesting": "-"
  },
  {
    "title": "Engaging the student: Programming solving real-life problems",
    "abstract": "Having taught software development at tertiary level for the past 20 years, the author has found that one of the key concepts that students struggle with is to progress from programming basic constructs like FOR-loops to solving real engineering problems. Once students have mastered the basic programming constructs they fall into the rut of the cookiecutters due to the lack of “seeing” the bridge between theory and practice or in this case construct and application. At Tshwane University of Technology the focus is on vocational training and solving this dilemma is key to the University's mission. Having exhausted efforts in promoting the philosophy of Logical Thinking, Analyzing Sequential Actions and Visual Programming Environments a new initiative in sustainable engineering training is making new inroads to addressing this issue. A new visual simulated virtual world has been created where students now have to write control software to manipulate items within this virtual world. Access to the simulated world can either be through a computer terminal connected to the World Wide Web or through an application running on an Android platform. Together with an artificial intelligent tutoring platform the engagement of students with the virtual world is showing that students are crossing over to become programmers of note and no longer mere cookie-cutters.",
    "keywords": "sustainable engineering training; logical thinking; analyzing sequential actions; visual programming environments; simulated virtual world; artificial intelligent tutor; Adroid; learning model; managed learning environment; third world",
    "released": 2013,
    "link": "https://doi.org/10.1109/AFRCON.2013.6757779",
    "interesting": "-"
  },
  {
    "title": "Ingredients for a New Wave of Ubicomp Products",
    "abstract": "The emergence of many new embedded computing platforms has lowered the hurdle for creating ubiquitous computing devices. Here, the authors highlight some of the newer platforms, communication technologies, sensors, actuators, and cloud-based development tools, which are creating new opportunities for ubiquitous computing.",
    "keywords": "embedded computing platforms; prototyping; pervasive computing; integrated development environments",
    "released": 2013,
    "link": "https://doi.org/10.1109/MPRV.2013.51",
    "interesting": "-"
  },
  {
    "title": "An open-source development environment for industrial automation with EtherCAT and PLCopen motion control",
    "abstract": "Standards conformance and integrated development are key features of modern automation systems. This paper introduces an integrated development environment (IDE) that enables high-speed EtherCAT communication and standardized motion programming. On the basis of our previous work, we extended and customized open-source software components to provide a completely open architecture IDE, that is compliant with the relevant industrial standards. The major components of our IDE are IEC 61131-3 and PLCopen TC6 compliant editor, EtherCAT communication support, and PLCopen TC2 compliant motion control library. Since the whole procedures from the project setup to run-time monitoring are highly automated, the presented IDE allows developers to integrate coordinated motion with control logics seamlessly and efficiently. © 2013 IEEE.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1109/ETFA.2013.6648122",
    "interesting": "-"
  },
  {
    "title": "Metingear: A development environment for annotating genome-scale metabolic models",
    "abstract": "Summary: Genome-scale metabolic models often lack annotations that would allow them to be used for further analysis. Previous efforts have focused on associating metabolites in the model with a cross reference, but this can be problematic if the reference is not freely available, multiple resources are used or the metabolite is added from a literature review. Associating each metabolite with chemical structure provides unambiguous identification of the components and a more detailed view of the metabolism. We have developed an open-source desktop application that simplifies the process of adding database cross references and chemical structures to genome-scale metabolic models. Annotated models can be exported to the Systems Biology Markup Language open interchange format. Availability: Source code, binaries, documentation and tutorials are freely available at http://johnmay.github.com/metingear. The application is implemented in Java with bundles available for MS Windows and Macintosh OS X. Supplementary information: Supplementary data are available at Bioinformatics online. © 2013 The Author. Published by Oxford University Press.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1093/bioinformatics/btt342",
    "interesting": "-"
  },
  {
    "title": "Can context tame web TV? Reconciling infinite choice and zero effort",
    "abstract": "Web TV is making a comeback, as users increasingly co-consume TV related web content on their companion devices (tablets and smartphones) in sync with TV watching. In this 'dual screen' experience, users download and invoke TV apps on their companion devices to personalize their Superbowl or American Idol TV experience with a web counterpart. Unfortunately, the added effort in continually finding and invoking one of many TV Apps threatens to undermine the lightweightness of cognitive experience that makes TV addictive. In this paper, we propose a 2nd screen contextual UI that balances the richness of an App driven 2nd screen experience with the simplicity of a desirable TV experience. We further share user feedback that is both reinforcing and surprising in relation to the appropriate and inappropriate uses of context in a living room setting. © 2013 IEEE.",
    "keywords": "context-aware; development tools; media multi-tasking; multi-app interactivity; Search & discovery",
    "released": 2013,
    "link": "https://doi.org/10.1109/PerComW.2013.6529454",
    "interesting": "-"
  },
  {
    "title": "S-IDE: A tool framework for optimizing deployment architecture of High Level Architecture based simulation systems",
    "abstract": "One of the important problems in High Level Architecture (HLA) based distributed simulation systems is the allocation of the different simulation modules to the available physical resources. Usually, the deployment of the simulation modules to the physical resources can be done in many different ways, and each deployment alternative will have a different impact on the performance. Although different algorithmic solutions have been provided to optimize the allocation with respect to the performance, the problem has not been explicitly tackled from an architecture design perspective. Moreover, for optimizing the deployment of the simulation system, tool support is largely missing. In this paper we propose a method for automatically deriving deployment alternatives for HLA based distributed simulation systems. The method extends the IEEE Recommended Practice for High Level Architecture Federation Development and Execution Process by providing an approach for optimizing the allocation at the design level. The method is realized by the tool framework, S-IDE (Simulation-IDE) that we have developed to provide an integrated development environment for deriving a feasible deployment alternative based on the simulation system and the available physical resources at the design phase. The method and the tool support have been validated using a case study for the development of a traffic simulation system. © 2013 Elsevier Inc.",
    "keywords": "Deployment model optimization; Distributed simulation; FEDEP; High Level Architecture (HLA); Metamodel based tool development; Metamodeling; Model transformations; Software architecture",
    "released": 2013,
    "link": "https://doi.org/10.1016/j.jss.2013.03.013",
    "interesting": "-"
  },
  {
    "title": "The frictionless development environment scorecard",
    "abstract": "The environment in which we work as developers can make a tremendous difference on our productivity and well-being. Yet it's easy to get trapped in an unproductive setup by inertia, and thus suffer death by a thousand cuts. A scorecard we can use to evaluate and fix the environment we work in covers the setup of our workstation and working environment, our ability to access remote hosts, general-purpose tools, editing, debugging, application development, and the specific problem at hand. Some fixes involve tweaks in our setup, and others might require us to install new tools, learn new skills, and negotiate with our managers. They're all worthwhile investments. The Web extra at http://youtu.be/AhMETa0tvkw is an audio podcast of author Diomidis Spinellis reading his Tools of the Trade column, in which he discusses how a scorecard can help evaluate and fix the environment you work in by covering the setup of your workstation and working environment, your ability to access remote hosts, general-purpose tools, editing, debugging, application development, and the specific problem at hand. © 1984-2012 IEEE.",
    "keywords": "debugging; developer tools; development environment; editing; scorecard; tools",
    "released": 2013,
    "link": "https://doi.org/10.1109/MS.2013.134",
    "interesting": "-"
  },
  {
    "title": "IDES project: A new effective tool for safety and security in the environment",
    "abstract": "In the region of Campania in south-west Italy there is growing evidence, including a World Health Organization (WHO) study of the region, that the accumulation of waste, illegal and legal, urban and industrial, has contaminated soil, water, and the air with a range of toxic pollutants including dioxins. An effective environmental monitoring system represents an important tool for an early detection of the environmental violations. The IDES Project is a Geo-environmental Intelligence System developed by the CIRA with the contribution of universities and other government bodies and it aims at implementing an advanced software and hardware platform for image, data and document analysis in order to support law enforcement investigations. The IDES main modules are: Imagery Analysis Module to monitor land-use and anthropogenic changes; Environmental GIS Module to fuse geographical and administrative information; Epidemiological domain Module; Semantic Search Module to discover information in public sources like: Blog, Social Network, Forum, Newspapers; This paper focuses on Semantic Search Module and aims to provide the greatest support to the extraction of possible environmental crimes collecting and analyzing documents from online public sources. Unlikely people denounce criminal activity to the authorities. On the other hand many people through blogs, forums and social networks every day expose the status of land degradation. In addition, journalists often, have given the interest of the public, documenting the critical environmental issues. All this unstructured information are often lost due to the difficulty to collect and analyse. The IDES Semantic Search Module is an innovative solution for aggregating of the common uneasiness and thoughts of the people able to transform and objectify the public opinion in human sensors for safety environmental monitoring. In this paper we introduce methods and technologies used in some case studies and, finally, we report some representatives results, highlighting innovative aspects of this applied research. © Springer International Publishing Switzerland 2013.",
    "keywords": "Geographical Information Systems; Illegal dumping; Information retrieval; Interoperability; Landfills monitoring; Text semantic search",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-319-03889-6_23",
    "interesting": "-"
  },
  {
    "title": "Answer set programming: Language, applications and development tools",
    "abstract": "Answer Set Programming (ASP) is a powerful language for knowledge representation and reasoning, that has been developed in the field of nonmonotonic reasoning and logic programming. The high knowledge-modeling power of ASP, together with the availability of efficient ASP systems, have implied a renewed interest in this formalism in recent years. ASP has been applied in many scientific applications, ranging from Artificial Intelligence, to Knowledge Management and Information Integration. The big challenge now is to show that ASP can be profitably used for real-world applications, and can attract much interest also in industry. In this paper, we report on our on-the-field experience on the development of real-world applications in ASP. We have employed the DLV system, the first ASP system which is undergoing an industrial exploitation by a spin-off company, and is very well-suited for applications development, thanks also to the endowment of powerful development tools, supporting the activities of researchers and implementors. In particular, we describe a couple of real-world ASP applications for work-force management and e-tourism, and we focus on two advanced development tools for DLV: ASPIDE and JDLV. ASPIDE is an extensible integrated development environment for ASP; while JDLV is a plug-in for Eclipse, integrating ASP in a well-assessed development platform which enables a bilateral interaction between ASP and Java. © 2013 Springer-Verlag.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-39666-3_3",
    "interesting": "-"
  },
  {
    "title": "Data-centric programming environment for cooperative applications in WSN",
    "abstract": "Due to recent evolution of MEMS technology, wireless sensor nodes will be computing nodes having more storage space and processing power, and wireless sensor networks (WSNs) will be more capable of processing complex, cooperative tasks just in time, without relying on cloud servers which may cause delay and consume WSN bandwidth. However, low level implementation of cooperative applications onto individual sensor nodes needs a lot of human efforts, and has a considerable gap with high-level requirement given by application developers. To fill the gap, we propose a support environment for WSN applications development. We design a language to describe high-level specification of cooperative applications on WSN and provide an algorithm that translates the given high-level specification into program codes of sensor nodes. We have shown some example descriptions of highlevel specifications and have evaluated the quality of generated programs through several experiments. © 2013 IFIP.",
    "keywords": "",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883471346&partnerID=40&md5=029ac0eaa1a61505defd9eccd31dc9d5",
    "interesting": "-"
  },
  {
    "title": "A community-driven approach to development of an ontology-based application management framework",
    "abstract": "Although the semantic web standards are established, applications and uses of the data are relatively limited. This is partly due to high learning curve and efforts demanded in building semantic web and ontology-based applications. In this paper, we describe an ontology application management framework that aims to simplify creation and adoption of a semantic web application. The framework supports application development in ontology- database mapping, recommendation rule management and application templates focusing on semantic search and recommender system applications. We present some case studies that adopted our application framework in their projects. Evolution of the software tool significantly profited from the semantic web research community in Thailand who has contributed both in terms of the tool development and adoption support. © Springer-Verlag 2013.",
    "keywords": "Ontology application development tool; Semantic web application framework; Software tool development model",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-37996-3_21",
    "interesting": "-"
  },
  {
    "title": "The SWAC approach for sharing a web application's codebase between server and client",
    "abstract": "A Web application's codebase is typically split into a server-side and a client-side with essential functionalities being implemented twice, such as validation or rendering. For implementing the codebase on the client, JavaScript, HTML and CSS are languages that all modern Web browsers can interpret. As the counterpart, the server-side codebase can be realized by plenty of programming languages, which provide facilities to implement standardized communication interfaces. While recent developments such as Node.js allow using JavaScript as a client-side programming languages outside the browser in a simple and efficient way also on the server-side, they lack offering a common codebase for the entire Web application. We present a flexible approach to enable sharing of presentation and business logic between server and client using the same codebase. Our approach aims at reducing development efforts and minimizing coding errors, while taking characteristic differences between server and client into account. We show the impact of our solution during an evaluation and in comparison to related work. © 2013 Springer-Verlag Berlin Heidelberg.",
    "keywords": "Development Tools; HTML5 and Beyond; Web Standards and Protocols",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-39200-9_9",
    "interesting": "-"
  },
  {
    "title": "The proof assistant as an integrated development environment",
    "abstract": "We discuss the potential of doing program development, code generation, application-specific modelling, and verification entirely within a proof assistant. © Springer International Publishing 2013.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-319-03542-0_22",
    "interesting": "-"
  },
  {
    "title": "TRINITY: An IDE for the matrix",
    "abstract": "Digital forensics software often has to be changed to cope with new variants and versions of file formats. Developers reverse engineer the actual files, and then change the source code of the analysis tools. This process is error-prone and time consuming because the relation between the newly encountered data and how the source code must be changed is implicit. TRINITY is an integrated debugging environment which makes this relation explicit using the DERRIC DSL for describing file formats. TRINITY consists of three simultaneous views: 1) the runtime state of an analysis, 2) a hex view of the actual data, and 3) the file format description. Cross-view trace ability links allow developers to better understand how the file format description should be modified. TRINITY aims to make the process of adapting digital forensics software more effective and efficient. © 2013 IEEE.",
    "keywords": "Domain-specific language; Integrated development environment; Model-driven engineering; Reverse engineering; Software maintenance",
    "released": 2013,
    "link": "https://doi.org/10.1109/ICSM.2013.86",
    "interesting": "-"
  },
  {
    "title": "Orcc: Multimedia development made easy",
    "abstract": "In this paper, we present Orcc1, an open-source development environment that aims at enhancing multimedia development by offering all the advantages of dataflow programming: exibility, portability and scalability. To do so, Orcc embeds two rich eclipse-based editors that provide an easy writing of dataflow applications, a simulator that allows quick validation of the written code, and a multi-target compiler that is able to translate any dataflow program, written in the RVC-CAL language, into an equivalent description in both hardware and software languages. Orcc has already been used to successfully write tens of multimedia applications, such as a video decoder supporting the new High Efficiency Video Coding standard, that clearly demonstrates the ability of the environment to develop complex applications. Moreover, results show scalable performances on multi-core platforms and achieve real-time decoding frame-rate on HD sequences. Copyright © 2013 ACM.",
    "keywords": "Dataflow programming; High efficiency video coding (HEVC); Integrated development environment (IDE); Mpeg reconfigurablemedia coding (RMC); Multimedia development",
    "released": 2013,
    "link": "https://doi.org/10.1145/2502081.2502231",
    "interesting": "-"
  },
  {
    "title": "IDE-JASMIN: An interactive graphical approach for parallel programming in scientific computing",
    "abstract": "A major challenge in scientific computing lays in the rapid design and implementation of parallel applications for complex simulations. In this paper, we develop an interactive graphical system to address this challenge. Our system is based on JASMIN infrastructure and outstands three key features. First, to facilitate the organization of parallel data communication and computation, we encapsulate JASMIN integrator component models as user-configurable components. Second, to support the top-down design of the application, we develop a structured-flow-chart based visual programming approach. Third, to finally generate application code, we develop a powerful code generation engine, which can generate major part of the application code using information in flow charts and component configurations. We also utilize the FORTRAN 90 standard to assist users write numerical kernels. These approaches are integrated and implemented in IDE-JASMIN to ease parallel programming for domain experts. Real applications demonstrate that our approaches for developing complex numerical applications are both practical and efficient. Copyright © 2013 SCITEPRESS.",
    "keywords": "Integrated development environment; Integrator component; Parallel programming; Structured flow chart",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887040132&partnerID=40&md5=597584d010c250383cfbcf9247ce1669",
    "interesting": "-"
  },
  {
    "title": "Modeling and simulation framework for flow-based microfluidic biochips",
    "abstract": "Microfluidic biochips are replacing the conventional biochemical analyzers and are able to integrate the necessary functions for biochemical analysis on-chip. In this paper we are interested in flow-based biochips, in which the fluidic flow is manipulated using integrated microvalves. By combining several microvalves, more complex units, such as micropumps, switches, mixers, and multiplexers, can be built. Such biochips are becoming increasingly complex, with thousands of components, but are still designed manually using a bottom-up full-custom design approach, which is extremely labor intensive and error prone. In this paper, we present an Integrated Development Environment (IDE), which addresses (i) schematic capture of the biochip architecture and biochemical application, (ii) logic simulation of an application running on a biochip, and is able to integrate the high level synthesis tasks we have developed for the top-down design of flow-based biochips. We show how the IDE can be used to design biochips for several applications. © 2013 CMP.",
    "keywords": "Biochips; CAD; IDE; Microfluidics; Simulation",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883076181&partnerID=40&md5=a8ee24e6d94ef4fada4071f0061b4af8",
    "interesting": "-"
  },
  {
    "title": "Integrating S6 code search and Code Bubbles",
    "abstract": "We wanted to provide a tool for doing code search over open source repositories as part of the Code Bubbles integrated development environment. Integrating code search as a plug-in to Code Bubbles required substantial changes to the S6 code search engine and the development of appropriate user interfaces in Code Bubbles. After briefly reviewing Code Bubbles and the S6 search engine, this paper describes the integration strategy, the front end for code search, the modifications to the code search engine to handle context-based search, and the user interface for handling the results of the search. © 2013 IEEE.",
    "keywords": "Code search; code search in context; integrated development environments; test-based search",
    "released": 2013,
    "link": "https://doi.org/10.1109/TOPI.2013.6597190",
    "interesting": "-"
  },
  {
    "title": "MDE for Enterprise Application Systems",
    "abstract": "Model Driven Engineering (MDE) has been widely researched as a solution for the complexity of software development over last decades. However, it is not widely adopted efficiently in industry. In this paper, we identify two main challenges prevent MDE from industrial adoption: the first one is capturing dynamic behaviours from real problems in human organization into formal models; the second one is the lack of an integrated development environment (IDE) which can have a fast and reliable model execution. In order to address these two challenges, we have worked during the last ten years in the area of Enterprise Application Systems based on Business Models formalisms. We have combined different technologies from the MDE context such as multilevel meta-modelling, domain specific model languages (DSML), state machines and model interpreters. The result is that we have created a large set of commercial products based on a common model based platform, which we are currently applying in many business areas. This paper describes the most representative concepts and contributions of our work to the development of MDE.",
    "keywords": "Domain specific languages; MDE integrated development environment; Model Driven Engineering; Model execution",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878099597&partnerID=40&md5=0ffa22d0c5a083fc4a2261e7425cdb58",
    "interesting": "-"
  },
  {
    "title": "Smart phones as system integration development tools (android SCL simulation environment as prototype)",
    "abstract": "Smart phones and cloud computing were introduced to automation industry as components of connected enterprise integration systems. The established protocols and interfacing done in that area, beside the rapid growth of the hardware specification of those devices, was behind the motivation to think of smart phones as programming and simulation devices. This paper proposes a conceptual design of a system integration work structure based on smart phones and cloud computing. The conceptual design is supported by prototype of an Android application for Siemens SCL programming and simulation. The proposal assumes a private cloud with a SAAS/PAAS/IAAS cloud model owned by an Automation solutions vendor (provider) whereas the handheld portable computing devices (e.g. smart phones) performs typical POUs (Project organization units) configuration and/or programming of preconfigured device (controller) and uploading the generated and tested -by means of simulation- code as (.prj files) or .txt files to the cloud. As part of the design, the paper will present a smart phone based automation application which will be capable of parsing the IEC 61131-3 ST (Siemens SCL PLC programming language) code, interpreting and checking validity by means of a high level simulator (Java based), generating a .txt file, this will assume a private cloud model and a coding (Engineering) management application on the server side.",
    "keywords": "Cloud computing; Portable asset management terminal; Portable engineering station terminal; Smart phones",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902324723&partnerID=40&md5=5a6d8fd7341e199640f333ca18e3de06",
    "interesting": "-"
  },
  {
    "title": "Sigma: An integrated development environment for formal ontology",
    "abstract": "Sigma is an open source environment for the development of logical theories. It has been under development and regular release for nearly a decade, and has been the principal environment under which the open source Suggested Upper Merged Ontology (SUMO) has been created. We discuss its features and evolution, and explain why it is an appropriate environment for the development of expressive ontologies in first and higher order logic. © 2013 - IOS Press and the authors. All rights reserved.",
    "keywords": "development tool; first order and higher order logic; Formal ontology",
    "released": 2013,
    "link": "https://doi.org/10.3233/AIC-120549",
    "interesting": "-"
  },
  {
    "title": "Enforcement of conceptual schema quality issues in current integrated development environments",
    "abstract": "We believe that one of the most effective ways of increasing the quality of conceptual schemas in practice is by using an Integrated Development Environment (IDE) that enforces all relevant quality criteria. With this view, in this paper we analyze the support provided by current IDEs in the enforcement of quality criteria and we compare it with the one that could be provided given the current state of the art. We show that there is a large room for improvement. We introduce the idea of a unified catalog that would include all known quality criteria. We present an initial version of this catalog. We then evaluate the effectiveness of the additional support that could be provided by the current IDEs if they enforced all the quality criteria defined in the catalog. We focus on conceptual schemas written in UML/OCL, although our approach could be applied to other languages. © 2013 Springer-Verlag.",
    "keywords": "conceptual modeling; IDE; method engineering; quality; UML",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-38709-8_40",
    "interesting": "-"
  },
  {
    "title": "Towards the development of a cloud-based communication technologies assessment tool: An analysis of practitioners' perspectives",
    "abstract": "Purpose: In distributed adaptive development environments (DADE), a primary concern is that of human communication and knowledge sharing among developers. Developers' task performance will be enhanced when their task needs are aligned with the communication media or technology capabilities of the development environment. What are actual communication needs of developers; and how do we enable developers to self-assess and select appropriate communication technology for their tasks in the DADE. The purpose of this paper is to investigate and present research based on the developers' needs for communication technologies in the context of DADE. Design/methodology/approach: The authors applied an exploratory qualitative research method to investigate, analyze and integrate survey information sourced from 40 developers, to identify their communication technology needs and, based on this information, the authors then set up a practical tool - communication technologies assessment tool (CTAT) to assist developers in the self-assessment and selection of appropriate communication technologies for their DADE; and also to share this assessment knowledge with other developers or teams located in various DADEs. Findings: The results of this research suggest that an effective CTAT should be an integral part of the DADE; and a DADE should have a \"single source of information\" in order to avoid possible communication inconsistencies and ambiguities. Originality/value: The study results and the resultant CTAT may help developers to make informed choices about the assessment and selection of appropriate communication tools but it may also help communication tools and technology service providers to develop and improve their communication tools based on the identified developers' communication needs. © Emerald Group Publishing Limited.",
    "keywords": "Agile; Cloud computing; Collaborative processes; Communication technologies; Distributed adaptive development environment; Knowledge management; Knowledge sharing",
    "released": 2013,
    "link": "https://doi.org/10.1108/03055721311302142",
    "interesting": "-"
  },
  {
    "title": "Developing tools as plug-ins: TOPI 2011 special issue editorial",
    "abstract": "Our knowledge of how to solve software engineering problems is increasingly being encapsulated in tools. These tools are at their strongest when they operate in a pre-existing integrated development environment (IDE). This approach allows integration with existing elements such as compilers, debuggers, profilers, visualizers, and numerous other development and, often, runtime tools. Tools and environments to increase software quality and productivity have always been an important aspect of software engineering. A plug-in is a modern way for incrementally adding new tools into existing environments. However, building tools as plug-ins can be challenging. How do they interact with the core environment? How do they interact with one another - especially since each developer may choose a different set of plug-ins? How can we share tools across different, and future, core development environments? Copyright © 2013 John Wiley & Sons, Ltd.",
    "keywords": "development environments; Eclipse; plug-ins; software engineering; tools; Visual Studio",
    "released": 2013,
    "link": "https://doi.org/10.1002/spe.2191",
    "interesting": "-"
  },
  {
    "title": "The SeaLion has landed: An IDE for answer-set programming—preliminary report",
    "abstract": "We report about the current state and designated features of the tool SeaLion, aimed to serve as an integrated development environment (IDE) for answer-set programming (ASP). A main goal of SeaLion is to provide a user-friendly environment for supporting a developer to write, evaluate, debug, and test answer-set programs. To this end, new support techniques have to be developed that suit the requirements of the answer-set semantics and meet the constraints of practical applicability. In this respect, SeaLion benefits from the research results of a project on methods and methodologies for answer-set program development in whose context SeaLion is realised. Currently, the tool provides source-code editors for the languages of Gringo and DLV that offer syntax highlighting, syntax checking, refactoring functionality, and a visual program outline. Further implemented features are a documentation generator, support for external solvers, and visualisation as well as visual editing of answer sets. SeaLion comes as a plugin of the popular Eclipse platform and provides itself interfaces for future extensions of the IDE. © Springer-Verlag Berlin Heidelberg 2013.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-41524-1_19",
    "interesting": "-"
  },
  {
    "title": "Active support for clone refactoring: A perspective",
    "abstract": "Clone refactoring (merging duplicate code) is a promising solution to improve the maintainability of source code. In this position paper, we discuss directions towards the advancement of clone refactoring, and show a perspective of active support based on online analysis of code modification on an editor of IDE. Copyright © 2013 ACM.",
    "keywords": "Code clone; IDE; Refactoring",
    "released": 2013,
    "link": "https://doi.org/10.1145/2541348.2541352",
    "interesting": "-"
  },
  {
    "title": "SeaLion: An eclipse-based IDE for answer-set programming with advanced debugging support",
    "abstract": "In this paper, we present SeaLion, an integrated development environment (IDE) for answer-set programming (ASP). SeaLion provides source-code editors for the languages of Gringo and DLV and offers popular amenities like syntax highlighting, syntax checking, code completion, visual program outline, and refactoring functionality. The tool has been realised in the context of a research project whose goal is the development of techniques to support the practical coding process of answer-set programs. In this respect, SeaLion is the first IDE for ASP that provides debugging features that work for real-world answer-set programs and supports the rich languages of modern answer-set solvers. Indeed, SeaLion implements a stepping-based debugging approach that allows the developer to quickly track down programming errors by simply following his or her intuitions on the intended semantics. Besides that, SeaLion supports ASP development using model-driven engineering techniques including domain modelling with extended UML class diagrams and visualisation of answer sets in corresponding instance diagrams. Moreover, customised visualisation as well as visual editing of answer sets is realised by the Kara plugin of SeaLion. Further implemented features are a documentation generator based on the Lana annotation language, support for external solvers, and interoperability with external tools. SeaLion comes as a plugin of the popular Eclipse platform and provides interfaces for future extensions of the IDE. Copyright © 2013 [PAULA-ANDRA BUSONIU, JOHANNES OETSCH, JÖRG PÜHRER, PETER SKOČOVSKÝ and HANS TOMPITS].",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1017/S1471068413000410",
    "interesting": "-"
  },
  {
    "title": "A high sensitive online diagnosis system of vacuum degree in vacuum interrupter",
    "abstract": "Aiming to improve the on-line monitoring sensitivity of vacuum degree in vacuum interrupter, a new detection device has been proposed relied on the theory of shield potential method. The device adopts a rotary electric field sensor to detect the change of direct potential for obtaining the changing information of vacuum degree. The sensitivity of detection system has been improved through modifying the front-end signal collection circuit and handling digital filter processing. Using MATLAB-DSP integrated development environment makes the designed system more convenient and flexible and shortens the development cycle. The results show that the detection system has high sensitivity and strong anti-interference ability. © 2013 IEEE.",
    "keywords": "MATLAB-DSP integrated development environment; on-line monitoring; shield potential; vacuum degree; vacuum interrupter",
    "released": 2013,
    "link": "https://doi.org/10.1109/IMCCC.2013.368",
    "interesting": "-"
  },
  {
    "title": "From database concepts to application: Use problem-based learning and oracle development tools to facilitate learning",
    "abstract": "Database concepts are an important part of the curriculum in both information systems and computer science majors and in business today relational databases are the foundation of most business applications. While relational database concepts are usually presented to students through lectures, textbooks, and online material, it is important to help students get beyond rote-based learning. This paper presents a teaching approach to help students move from conceptual knowledge to practical skills through problem-based learning that has students apply the database concepts by participating in the design, construction and use of a database. This paper describes the problem-based learning approach to teaching, outlines a series of tutorials that present database concepts and proposes a problem-based series of assignments that require students to apply concepts they have just learned. The problem-based learning approach should challenge students to understand database concepts and extend their knowledge. The hands-on tutorials as well as the problem-solving assignments given to students use free Oracle products: Oracle XE, Application Express (APEX) and Oracle SQL Developer/Data Modeler. The tutorials are publicly available on YouTube and instructor materials are available from the corresponding author. The appendices to this paper present information about the content of the tutorials, an example problem-based learning scenario, and instructions to help instructors install and use the Oracle products. The teaching approach presented here could be suitable for either an analysis and design course or a database course. ©2013 EDSIG (Education Special Interest Group of the AITP).",
    "keywords": "Data modeling; Database management systems; Entity relationships diagram; ERD; Normalization; Problem-based learning; Relational database; Teaching resources",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084014326&partnerID=40&md5=122fe59f479b4eb7351132cb9593db7b",
    "interesting": "-"
  },
  {
    "title": "CEclipse: A services composition based online IDE",
    "abstract": "With the introduction of the concept of cloud computing, many desktop applications have been migrated into the cloud. The desktop Integrated Development Environment (IDE) has become a hot topic in recent years. This paper introduces CEclipse which is an online integrated development environment. CEclipse encapsulates the functions of local IDE into Web services, and then uses the services composition technology to combine all the services to form the core functions of online IDE. Besides, CEclipse utilizes the program static analysis and program dynamic analysis technologies to handle with the specific security issues of online IDE. In order to fully take advantage of online IDE, CEclipse proposes to use the data mining technology to explore the development behavior of the programmers, and use the mining result to give instructions to the programmers in their development process. Finally, CEclipse makes use of single sign on technology to integrate the existing Web application into online IDE, and proposes a suite of approach to semi-automatically migrate the function of eclipse plugin to the online IDE, so that it can improve the expansibility of the online IDE.",
    "keywords": "Cloud computing; Migration; Online integrated development environment; Program analysis; Scalable; Services composition",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880011682&partnerID=40&md5=68a75c322726092624a7f5a6b0f406b7",
    "interesting": "-"
  },
  {
    "title": "An integrated development environment for reconfigurable operators array",
    "abstract": "In this paper, an integrated development environment (IDE), which is used to map application into a target reconfigurable operators (ReOps) array, is presented. Having as input APU RTL description of an application, the IDE produces the configuration bitstream. The proposed IDE supports a variety of ReOps array through revising the architecture file which including the definition of ReOps, interconnection segments and connection switches, as well as the scale of array and organization of ReOps. A set of benchmarks is given to verify the flow of proposed IDE. © 2013 IEEE.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1109/ASICON.2013.6812061",
    "interesting": "-"
  },
  {
    "title": "JOINT: Java ontology integrated toolkit",
    "abstract": "In the past few years, the use of ontologies for creating more intelligent and effective application has increased considerably. This growth is due to the fact that ontologies attempt to provide semantics to the data consumed by machines so that they can reason about this data. However, developing complex ontology-based applications is still difficult and time-consuming because the existing tools do not provide a simple and unified environment for developers. Most of these tools only provide data manipulation using RDF triples, complicating the development of applications that need to work with the object orientation paradigm. Furthermore, tools that provide instances manipulation via object orientation do not support features such as manipulating ontologies, reasoning over rules or querying data with SPARQL. In this context, this work proposes a framework and a tool for supporting the efficient development of ontology-based applications through the integration of existing technologies. Furthermore, we also define a methodology to use this tool efficiently. In order to evaluate the benefits of our work, a controlled experiment with eight developers (unfamiliar with ontologies) was performed to compare the proposed tool, JOINT, with another one, Jastor/Jena, frequently used by the community. The results suggest that our tool helps novice developers to create ontology-based applications faster and with few errors in the code. In addition, a real educational application with 10 ontologies, more than 200 ontology concepts (classes) and more than a million triples is already using the proposed tool successfully. © 2013 Elsevier Ltd. All rights reserved.",
    "keywords": "Integrated development environment; Ontology manipulation tool; Ontology-based software; Ontology-driven software development",
    "released": 2013,
    "link": "https://doi.org/10.1016/j.eswa.2013.05.040",
    "interesting": "-"
  },
  {
    "title": "WeCoTin-A practical logic-based sales configurator",
    "abstract": "Configurable products can realize the ideal of mass-customization by satisfying individual customer requirements efficiently. IT support provided by configurators enables adapting such products for individual customers efficiently and without errors. Few of numerous configurators have been evaluated with respect to modeling efficacy and performance on several product domains, and few evaluation methods exist. Applying the Design Science method, we describe and evaluate a novel configurator called WeCoTin. WeCoTin is based on a high-level object oriented modeling conceptualization and corresponding modeling language with clear formal semantics. WeCoTin consists of a semi-visual Modeling Tool and a web-based Configuration Tool. It applies an inference engine that follows the logic-based answer set programming paradigm. A way to characterize configuration models is proposed and applied to characterize over 20 real-world configuration models, and to evaluate utility of modeling mechanisms. Furthermore, performance is evaluated with real-world products using a developed method, and found adequate. © 2013 - IOS Press and the authors. All rights reserved.",
    "keywords": "configuration knowledge characterization; evaluation of configurators; integrated development environment; Knowledge-based configuration",
    "released": 2013,
    "link": "https://doi.org/10.3233/AIC-2012-0547",
    "interesting": "-"
  },
  {
    "title": "SystemDirector Enterprise - A business system construction platform to facilitate development of applications compatible with smart devices",
    "abstract": "Utilization of smart devices for enterprise systems is becoming increasingly popular. Yet, a wide diversity and variety of smart devices makes it necessary to develop applications that are compatible with multiple devices and platforms. This paper describes techniques for developing applications for smart devices that combine native application development technology with web technology including HTML5 as enabled by the SystemDirector Enterprise (SDE) business system platform.",
    "keywords": "Application development environment; HTML5; JQuery Mobile; Smart device; SystemDirector Enterprise",
    "released": 2013,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876777310&partnerID=40&md5=c5a404be086f15b02b27e0b7f400023b",
    "interesting": "-"
  },
  {
    "title": "UVis Studio: An integrated development environment for visualization",
    "abstract": "A toolkit facilitates the visualization development process. The process can be further enhanced by integrating the toolkits in development environments. This paper describes how the uVis toolkit, a formula-based visualiza- tion toolkit, has been extended with a development environment, called uVis Studio. Instead of programming, developers apply a Drag-Drop-Set-View-Interact approach. Developers bind controls to data, and the Studio gives immediate visual feedback in the Design Panel. This is a novel feature, called What-You-Bind-Is-What- You-Get. The Studio also provides Modes that allow developers to interact and view the visualization from the end-user's perspective without switching workspace, and Auto-Completion; a feature of the Property Grid that provides suggestions not only for the formula language syntax but also for the tables, the table elds and the relationships in the database. We conducted a usability study with six developers to evaluate if the Studio and its features enhance cognition and facilitate the visualization development. The results show that developers appreciated the Drag-Drop-Set- View-Interact approach, the What-You-Bind-Is-What-You-Get, the Auto-Completion and the Modes. Several usability problems were identified, and some suggestions for improvement include: new panels, better presentation of the Modes, and better error messages. © 2013 SPIE-IS&T.",
    "keywords": "Information Visualization; Integrated Development Environment; Visualization Development; What-You-Bind-Is-What-You-Get",
    "released": 2013,
    "link": "https://doi.org/10.1117/12.2003067",
    "interesting": "-"
  },
  {
    "title": "Browser based IDE to code in the cloud",
    "abstract": "Cloud computing is the future of computing. What makes it stand apart is the fact that everything including data and applications are stored on the cloud itself and are accessible through an Internet connection and a web browser. Integrated Development Environment (IDE) which is used for coding and developing applications can be a software on the cloud. The aim of this paper is to convey the idea of Cloud based IDE for the Java language which will have the features to write, compile, run and test code on the cloud. This software will permit easy development of Java applications. It will provide sharing of code and real time collaboration with peers. It will also have an integrated forum and a technical blog. This can be used by the developers who require instant help related to coding Java applications. This software can be used instead of or alongside a desktop IDE. The only requirement for accessing and using this application is a web browser and an Internet connection. This eliminates hardware and operating system issues thus allowing people with different hardware and heterogeneous operating systems to collaborate and code with ease. It also eliminates the need to use conventional devices like desktops or laptops to code programs by allowing the users to access this IDE from various devices like smart phones that have an Internet connection. © Springer-Verlag Berlin Heidelberg 2013.",
    "keywords": "Browser Based IDE; Cloud Computing; Integrated Development Environment (IDE)",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-35461-8_6",
    "interesting": "-"
  },
  {
    "title": "PresentaBALL - A powerful package for presentations and lessons in structural biology",
    "abstract": "Structural biology is based on an important observation: the function of a biomolecule is determined by its three-dimensional structure and its physico-chemical properties. Hence, visualization, modeling, and simulation of molecular structures and of their properties are crucial tools of the field. Typically, the graphical interfaces to molecular modeling packages are aimed at domain experts with significant experience and require an extensive learning period. But in many scenarios, such as teaching, presentations, and demonstrations, it would be highly preferable to have an intuitive environment for showcasing molecular functionality. Ideally, it should support simple preparation of the presentations as well as their convenient display. To keep the user interface simple and focused, the environment should be particularly adapted to the processing of molecular structures. Here, we present such a presentation framework, called PresentaBALL, which uses established web technology standards to provide a freely configurable browser-based interface into the extensive modeling and visualization capabilities of the Biochemical Algorithms Library (BALL). The web interface is embedded into BALL's graphical frontend BALLView, and provides complete, interactive access to the loaded molecular data. PresentaBALL enables researchers in biology with basic knowledge in HTML, JavaScript, or Python to easily setup academic tutorials, demonstrations, or scientific presentations and lectures with 3D structure content and interactive workflows. Owing to its flexible design, other modern forms of teaching and presentation, such as massive open online courses (MOOC) can also use PresentaBALL as their core component. PresentaBALL is licensed under the GNU Public License (GPL) and will be made available in BALL/BALLView, starting with the upcoming release (1.5). © 2013 IEEE.",
    "keywords": "D.2.6 [Software Engineering]: Programming Environments-Integrated environments; J.3 [Life and Medical Sciences]: Biology and genetics; K.3.1 [Computers and Education]: Computer Uses in Education-Collaborative learning",
    "released": 2013,
    "link": "https://doi.org/10.1109/BioVis.2013.6664344",
    "interesting": "-"
  },
  {
    "title": "Towards platform independence of mobile applications metamorphosing android applications for the web",
    "abstract": "In the last years the number of platforms has increased dramatically - especially in the mobile sector. Developing a native mobile application for each platform is costly. There are common approaches to develop within one code base for many platforms. So-called cross-platform-tools can help developers to decrease the effort of making platform specific versions. However, most of these tools are dealing with JavaScript and therefore an existing native application, which is written in Java, C# or Objective-C can hardly be reused. This paper shows an automated conversion of platform specific Android applications to platform independent Web applications by using the Google Web Toolkit (GWT). This converter provides code reusability of existing Android applications and platform independence. The converter uses the Eclipse Java Development Tools (JDT) for processing the source code. On the one hand, Android wrapper classes provide the API calls, which access internally GWT code or directly HTML5 features. On the other hand, source code, which does not fulfill the GWT's requirements, is converted. A case study confirms that this converter can be easily applied to a range of Android applications for converting them to platform independent Web applications. © 2013 Springer-Verlag Berlin Heidelberg.",
    "keywords": "Abstract Syntax Tree; Android; code reusability; conversion; Eclipse Java Development Tools; Google Web Toolkit; HTML5; mobile Web applications; Platform independence; source to source converter",
    "released": 2013,
    "link": "https://doi.org/10.1007/978-3-642-53862-9_56",
    "interesting": "-"
  },
  {
    "title": "Lips: An IDE for model driven engineering based on natural language processing",
    "abstract": "Combining both, state-of-the art natural language processing (NLP) algorithms and semantic information offered by a variety of ontologies and databases, efficient methods have been proposed that assist system designers in automatically translating text-based specifications into formal models. But due to ambiguities in natural language, these approaches usually require user interaction. Following these achievements, we consider natural language as a further input language that is used in the design flow for systems and software. Consequently, concepts from integrated development environments (IDE) as they can be found for programming languages such as Java need to be made available for natural language specifications as well. In this paper, we propose lips, an integrated development environment that is seamlessly implemented on top of Eclipse. It contains recent NLP algorithms that extract formal models suited for the Eclipse Modeling Framework and therefore provide a starting point for an ongoing implementation. Whenever user interaction is required, lips makes use of well-known IDE concepts such as markers and quick fixes thereby enabling a holistic user experience. © 2013 IEEE.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1109/NAturaLiSE.2013.6611718",
    "interesting": "-"
  },
  {
    "title": "A perspective on the evolution of live programming",
    "abstract": "Liveness in programming environments generally refers to the ability to modify a running program. Liveness is one form of a more general class of behaviors by a programming environment that provide information to programmers about what they are constructing. This paper gives a brief historical perspective on liveness and proposes an extension of a hierarchy given in 1990, to now account for even more powerful execution-oriented tools for programmers. In addition, while liveness concerns the timeliness of execution feedback, considering a broader array of forms of feedback is helpful both in better understanding liveness and in designing ever more powerful development tools. © 2013 IEEE.",
    "keywords": "Code completion; Debugging; Integrated development environment; Live coding; Live programming; Liveness; Liveness levels; Program inference; Software development tools; Software engineering; Strategic prediction; Tactical prediction",
    "released": 2013,
    "link": "https://doi.org/10.1109/LIVE.2013.6617346",
    "interesting": "-"
  },
  {
    "title": "Meta-analysis of the insulin degrading enzyme polymorphisms and susceptibility to alzheimer’s disease",
    "abstract": "The association between insulin degrading enzyme (IDE) gene polymorphisms and Alzheimer’s disease (AD) risk has been widely reported, but results were somewhat controversial. To assess the association between IDE polymorphisms and AD risk, a meta-analysis was performed. We systematically reviewed relevant studies retrieved by PubMed, Embase, AlzGene, CNKI and Web of Science. Finally, 8 articles were identified for rs3758505 polymorphism and 5 for rs1832196 polymorphism. The pooled ORs were performed for all the four genetic models. Subgroup analysis was also performed by ethnicity. Results suggested that rs3758505 polymorphism was unlikely to be associated with genetic susceptibility of AD based on the current published studies. However, for the rs1832196 polymorphism, significant association with AD was found by the dominant model in overall and subgroup analysis. However, larger scale association studies are necessary to further validate the association of IDE polymorphisms with sporadic AD risk and to define potential gene-gene interactions. (C) 2013 Elsevier Ireland Ltd. All rights reserved.",
    "keywords": "Insulin degrading enzyme (IDE); Alzheimer’s disease (AD); Meta-analysis",
    "released": 2013,
    "link": "https://doi.org/10.1016/j.neulet.2013.01.051",
    "interesting": "-"
  },
  {
    "title": "Virtual reality surgical simulator software development tools",
    "abstract": "Virtual reality (VR) surgical simulations are among the most difficult software applications to develop mainly because of the type of user interactions that they must support. Surgery typically includes precise cutting of often intricate structures. Modelling these structures and accurately simulating their response to user interaction requires many software components to effectively work in unison. Some of these components are readily available but are tailored to more common applications such as computer games or open-world simulations such as flight-simulators. This article explores the software libraries that are currently available to developers of VR surgical simulation software. Like computer games and other VR simulations, VR surgical simulations require real-time lighting and rendering systems and physics-based interactions. However, in addition they require haptic interaction with cut-able and deformable soft-tissue, a key requirement that is not supported by the majority of the available tools. In this article, we introduce currently available software development tools and the specific benefits and limitations that can be encountered when using them to develop VR surgical simulations. We also provide a detailed review of collision detection libraries that are central to achieving reliable haptic rendering. Journal of Simulation (2013) 7, 101-108. doi:10.1057/jos.2012.22; published online 14 December 2012",
    "keywords": "virtual reality; simulation; surgery; software",
    "released": 2013,
    "link": "https://doi.org/10.1057/jos.2012.22",
    "interesting": "-"
  },
  {
    "title": "ELECANS-an integrated model development environment for multiscale cancer systems biology",
    "abstract": "Motivation: Computational multiscale models help cancer biologists to study the spatiotemporal dynamics of complex biological systems and to reveal the underlying mechanism of emergent properties. Results: To facilitate the construction of such models, we have developed a next generation modelling platform for cancer systems biology, termed “ELECANS” (electronic cancer system). It is equipped with a graphical user interface-based development environment for multiscale modelling along with a software development kit such that hierarchically complex biological systems can be conveniently modelled and simulated by using the graphical user interface/software development kit combination. Associated software accessories can also help users to perform post-processing of the simulation data for visualization and further analysis. In summary, ELECANS is a new modelling platform for cancer systems biology and provides a convenient and flexible modelling and simulation environment that is particularly useful for those without an intensive programming background. Availability and implementation: ELECANS, its associated software accessories, demo examples, documentation and issues database are freely available at http://sbie.kaist.ac.kr/sub_0204.php Contact: ckh@kaist.ac.kr Supplementary information: Supplementary data are available at Bioinformatics online.",
    "keywords": "",
    "released": 2013,
    "link": "https://doi.org/10.1093/bioinformatics/btt063",
    "interesting": "-"
  },
  {
    "title": "Software development environments on the web: A research agenda",
    "abstract": "Software is rapidly moving from the desktop to the Web. The Web provides a generic user interface that allows ubiquitous access, instant collaboration, integration with other online services, and avoids installation and configuration on desktop computers. For software development, the Web presents a shift away from developer workstations as a silo, and has the promise of closer collaboration and improved feedback through innovations in Web-based interactive development environments (IDEs). Moving IDEs to the Web is not just a matter of porting desktop IDEs; a fundamental reconsideration of the IDE architecture is necessary in order to realize the full potential that the combination of modern IDEs and the Web can offer. This paper discusses research challenges and opportunities in this area, guided by a pilot study of a web IDE implementation.",
    "keywords": "web; spoofax; online; interactive development environment; integrated development environment; ide; collaboration; cloud9; cloud",
    "released": 2012,
    "link": "https://doi.org/10.1145/2384592.2384603",
    "interesting": "+"
  },
  {
    "title": "Elements for a cloud-based development environment: Online collaboration, revision control, and continuous integration",
    "abstract": "In almost any other field than software development, the World Wide Web, or simply the Web has revolutionized collaboration by providing a platform for cooperative applications and services. In contrast, so far revision control, also referred to as version management, has been the key technology for enabling collaborative software development. However, even today it is feasible to build a cooperative development environment that runs in a cloud, following the spirit of Google Docs, where developers can cooperate in real time. In this paper, we take a step beyond from the design of the technical artifact that allows collaborative coding, and consider the consequences of such an approach to software development in a more general sense, in particular from the perspective of version management. The goal is to integrate collaborative development with traditional facilities commonly associated with software engineering. This in turn will lead to a development approach where new opportunities complement tools that are known to work and provide a lot of added value in software development.",
    "keywords": "version management; revision control; collaboration",
    "released": 2012,
    "link": "https://doi.org/10.1145/2361999.2362003",
    "interesting": "+"
  },
  {
    "title": "A scrum-based approach to CMMI maturity level 2 in web development environments",
    "abstract": "Scrum has become one of the most popular agile methodologies, either alone or combined with other agile practices. Besides, CMMI (Capability Maturity Model Integration) is accepted as a suitable model to measure the maturity of the organizations when developing or acquiring software. Although these two approaches are often considered antagonist, the use of an agile approach to reach certain CMMI maturity levels may result beneficial to organizations that develop Web systems, since they would take the advantages of both approaches. In Web community, this union may be very interesting, because agile approaches fits with the special needs of Web development, and they could be a useful tool for companies getting a certain grade of maturity. This work analyzes the goals of CMMI maturity level 2 and the feasibility of achieving them using the practices proposed by Scrum, trying to assess whether the use of this methodology is suitable for meeting the CMMI generic and specific goals or not. Finally, and based on this analysis, this paper raises a possible extension of Scrum, based on agile techniques, to accommodate the CMMI maturity level 2.",
    "keywords": "web engineering; agile methodologies; Scrum; CMMI (capability maturity model integration)",
    "released": 2012,
    "link": "https://doi.org/10.1145/2428736.2428782",
    "interesting": "-"
  },
  {
    "title": "Educational computer programming tools",
    "abstract": "Learn programming is a challenging task for many students. Based on this complex challenge educators face problems with unmotivated students and high level drop-out. Technological and pedagogical strategies are recommended to overcome these issues. Technological strategies for instance use educational tools to support teach and learn computer programming topics.Based on these issues were defined the followings objectives for this work: 1) educational computer programming tools identification; 2) tools categorization 3) Programming concepts tools identification; 4) Related the low and high level comprehension computer programming topics with educational tools.To achieve the objectives was performed an extensive online search by educational computer programming tools.The aim of this work in progress is the identification of the main tools and his characterization.",
    "keywords": "online educational tools; novice programming environments; computer programming",
    "released": 2012,
    "link": "https://doi.org/10.1145/2316936.2316947",
    "interesting": "-"
  },
  {
    "title": "JavaWIDE (wiki integrated development environment: Redesigning CS1 distance education labs",
    "abstract": "Over the past decade, applications have been moving from the desktop into the cloud. After extensive searching, only one integrated development environments (IDE) has emerged that works in cloud computing. The Java Wiki Integrated Development Environment (JavaWIDE) is the new online IDEs, and it is designed to be simple enough for novice programmers to use. The emergence of this tool was the key design element into redesigning CS1 Labs for a distance education course without losing the necessary functionality of a face-to-face instructor.",
    "keywords": "",
    "released": 2012,
    "link": "https://dl.acm.org/doi/10.5555/2379703.2379730",
    "interesting": "-"
  },
  {
    "title": "CoRED: Browser-based collaborative real-time editor for java web applications",
    "abstract": "While the users of completed applications are heavily moving from desktop to the web browser, the majority of developers are still working with desktop IDEs such as Eclipse or Visual Studio. In contrast to professional installable IDEs, current web-based code editors are simple text editors with extra features. They usually understand lexical syntax and can do highlighting and indenting, but lack many of the features seen in modern desktop editors. In this paper, we present CoRED, a browser-based collaborative real-time code editor for Java applications. CoRED is a complete Java editor with error checking and automatic code generation capabilities, extended with some features commonly associated with social media. As a proof of the concept, we have extended CoRED to support Java based Vaadin framework for web applications. Moreover, CoRED can be used either as a stand-alone version or as a component of any other software. It is already used as a part of browser based Arvue IDE.",
    "keywords": "vaadin; development tools; collaboration architectures",
    "released": 2012,
    "link": "https://doi.org/10.1145/2145204.2145399",
    "interesting": "+"
  },
  {
    "title": "MiDebug: Microcontroller integrated development and debugging environment",
    "abstract": "We present MiDebug, a web-based Integrated Development Environment (IDE) for embedded system programming with in-browser debugging capabilities. This web application greatly reduces the time and effort required for rapid prototyping of microcontroller based devices.",
    "keywords": "microcontroller programming; integrated development environment; debugging",
    "released": 2012,
    "link": "https://doi.org/10.1145/2185677.2185714",
    "interesting": "+"
  },
  {
    "title": "Harnessing stack overflow for the IDE",
    "abstract": "Developers often consult online tutorials and message boards to find solutions to their programming issues. Among the many online resources, Question &amp; Answer websites are gaining popularity. This is no wonder if we consider a case like Stack Overflow, where more than 92",
    "keywords": "stack overflow; seahawk; Q&amp;A websites",
    "released": 2012,
    "link": "https://dl.acm.org/doi/10.5555/2666719.2666725",
    "interesting": "-"
  },
  {
    "title": "Programming with everybody: Tightening the copy-modify-publish feedback loop",
    "abstract": "People write more code than they ever share online. They also copy and tweak code more often than they contribute their modifications back to the public. These situations can lead to widespread duplication of effort. However, the copy-modify-publish feedback loop which could solve the problem is inhibited by the effort required to publish code online. In this paper we present our preliminary, ongoing effort to create Ditty, a programming environment that attacks the problem by sharing changes immediately, making all code public by default. Ditty tracks the changes users make to code they find and exposes the modified versions alongside the original so that commonly-used derivatives can eventually become canonical. Our work will examine mechanical and social methods to consolidate global effort on common code snippets, and the effects of designing a programming interface that inspires a feeling of the whole world programming together.",
    "keywords": "social computing; programming environments; open source software development; collaboration; awareness",
    "released": 2012,
    "link": "https://doi.org/10.1145/2380296.2380342",
    "interesting": "-"
  },
  {
    "title": "How well do online forums facilitate discussion and collaboration among novice animation programmers?",
    "abstract": "Animation programming is a widely-respected approach for helping students to learn programming skills, and online forums are a widely-used approach for helping students to interact with one another. But in what ways, if any, does combining animation programming with online forums lead to useful discussion and collaboration among learners? To answer this question, we analyzed online forum discussions among people who were learning to create animation programs using the Scratch programming environment. We discovered that specific kinds of online posts were more likely than others to be followed by discussion, and we found that the ensuing collaboration often involved the exchange of design ideas and feedback within small groups of users. These findings reveal opportunities for enhancing online forums and surrounding tools so they more effectively facilitate discussion, collaboration, and ultimately development of programming skills.",
    "keywords": "scratch; novice programming environments; forums",
    "released": 2012,
    "link": "https://doi.org/10.1145/2157136.2157195",
    "interesting": "-"
  },
  {
    "title": "Perspectives on active learning and collaboration: JavaWIDE in the classroom",
    "abstract": "The Java Wiki Integrated Development Environment (JavaWIDE) is an innovative environment that promotes active learning and collaboration in programming courses. This paper surveys how JavaWIDE’s features have been used to promote active and collaborative learning in both traditional and distance education (synchronous) in four different environments: high school, summer enrichment courses, and at two- and four-year colleges. The authors describe the context of each teaching and learning environment and the parts of JavaWIDE that are particularly well suited in each context. After discussing the active learning and collaboration techniques employed, student responses to the experience are summarized. This collection of case studies illustrates how the concurrent editing, shared environment awareness and other features of JavaWIDE can be used to promote active learning and collaboration within a heterogeneous set of teaching and learning environments.",
    "keywords": "CS0; CS1; Java; active learning; case study; collaboration; concurrent editing; distance education; introductory programming; javawide; tutoring; web-based IDE",
    "released": 2012,
    "link": "https://doi.org/10.1145/2157136.2157194",
    "interesting": "-"
  },
  {
    "title": "Customizable online application development environment and online marketplace system",
    "abstract": "In this paper, we present a customizable online application development environment and an online marketplace system. We applied development resource virtualization technology in order to support multiple developers who create application with an each customized development environment.",
    "keywords": "Online Development Environment; Multi-tenant; SaaS; Software-as-a service; Online Configuration",
    "released": 2012,
    "link": "https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6174882",
    "interesting": "-"
  },
  {
    "title": "Evaluation of a Web-Based Programming Environment",
    "abstract": "On most PaaS (Platform as a Service) systems, applications that are developed on a server are executed on the same server. As such, portability of these applications is not considered as is the case with a WebOS. This paper proposes a Web-based Software Development Environment (WSDE) for developing applications. The WSDE provides a web-based development environment for software applications that can be executed on a server, local and/or embedded machine. Thus, it is unnecessary for each developer to install software for developing applications on the local system or to set the environment variables of the local system. With the WSDE, developers can use the same environment via a Web browser anytime, anywhere. Moreover, this paper proposes a renewable system for embedded systems. To develop application programs for embedded systems, application developers have to prepare a software development environment for each target embedded system. The WSDE allows software developers to develop software applications on a server using a virtual machine.",
    "keywords": "Cloud Computing; PaaS (Platform as a Service); WebOS; SDE (Server-side Development Environment); VM (Virtual Machine)",
    "released": 2012,
    "link": "https://doi.org/10.1109/NBiS.2012.67",
    "interesting": "+"
  },
  {
    "title": "Program Behavior Analysis and Control for Online IDE",
    "abstract": "Compared with the traditional local IDE, online IDE provides a no-install programming environment. The proceeding in this area is attracting more and more researchers' focuses. Although online IDE can bring developers a lot of convenience for developing process, it also suffers from some special challenges. While most current research work focuses only on the implementation of basic features, some tough problems are still less touched. This paper summarized three main kinds of actual problems (Wrong file operations, Banned method calling, and Excessive resource consumption) encountered when using the online IDE, and proposed a program behavior analysis based solutions to control these problems adaptively. Finally, this paper demonstrated the effectiveness of the proposed solutions by applying them in a real online IDE.",
    "keywords": "program behavior;  program analysis;  control;  adaptively;  online IDE",
    "released": 2012,
    "link": "https://doi.org/10.1109/COMPSACW.2012.42",
    "interesting": "+"
  },
  {
    "title": "A Cross-platform Application Development Environment Supported by Cloud Service",
    "abstract": "Along with the mobile Internet growing up, mobile terminal device are becoming more and more multiplicity and the application development are become more difficult. In this paper, we propose a cross-platform application development environment supported by cloud service. This development environment abstract hardware capability makes developers needn't consider the hardware of target device, and it can generates different platform applications which run on different devices and service application run on the cloud. The cloud has the ability to provide service to four kinds of mobile device operating system and four terminal devices. At last, we implement the prototype of the application development environment and a campus application based on cloud.",
    "keywords": "cloud; mobile internet; development environment",
    "released": 2012,
    "link": "https://doi.org/10.1109/HPCC.2012.208",
    "interesting": "-"
  },
  {
    "title": "Web-Based Robot Programming Environment and Control Architecture",
    "abstract": "We propose a novel web-based programming architecture for robots. The proposed system offers a web interface that allows users to type their robot control programs, so no development environments and tools need to be installed in the user's computer. From the web control panel, the user can also save, load and execute programs stored in the robot's memory. For the implementation we use a smart phone as the robot's main control computer, so the web server is embedded in the phone, which is fixed to the robot. The system allows different programming languages to be used and also takes advantage of sensors available in the phone.",
    "keywords": "robotics; mobile phones; architecture; remote programming; Android",
    "released": 2012,
    "link": "https://doi.org/10.1109/SBR-LARS.2012.12",
    "interesting": "+"
  },
  {
    "title": "Is the Browser the Side for Templating?",
    "abstract": "Browser-side templating (BST) is a valid alternative for Web development, even when it comes to building accessible applications. BST processes templates in the browser using a JavaScript-coded engine, providing significant performance improvements and making model-view separation a reality. However, it also has significant drawbacks. BST's dependence on JavaScript affects its accessibility and hides the delivered pages' content from search engines, hampering Web visibility. The authors confront this dilemma and propose a technique that lets BST be accessible and semantically crawlable, while preserving its advantages.",
    "keywords": "Software engineering in Internet applications; website development tools; Web templates; Web browsers; browser-side templating; BST",
    "released": 2012,
    "link": "https://doi.org/10.1109/MIC.2011.81",
    "interesting": "-"
  },
  {
    "title": "Mining Executable Specifications of Web Applications from Selenium IDE Tests",
    "abstract": "A common practice for system testing of web-based applications is to perform the test cases through a web browser. These tests are often recorded and managed by a record and replay tool, such as Selenium IDE. Mining specifications from such tests can be very useful for understanding, verifying, and debugging the system under test. This paper presents an approach to mining a behavior specification from a Selenium IDE test suite such that (a) it captures the behavior of the tests at a high level of abstraction, (b) the behavior can be simulated, and (c) all the tests are completely reproducible from the specification. We first identify similar test actions through context-sensitive clustering so as to normalize the given Selenium IDE tests. Then, we mine patterns of test actions that represent meaningful functions and transform Selenium IDE tests into abstract tests, which are similar to the tests used in the existing model-mining techniques. From the abstract tests, we synthesize a high-level Petri net that captures both temporal constraints and data values. For evaluation purposes, we applied our approach to eight test suites of two real-world systems, Magento (an online shopping system being used by many live stores) and Amazon. Two of the test suites are for security testing, aiming at SQL injection and XSS vulnerabilities. The result shows that our approach is effective in producing abstract yet executable specifications and reducing the complexity of the models.",
    "keywords": "software testing; test mining; Petri nets; web applications; model-based testing",
    "released": 2012,
    "link": "https://doi.org/10.1109/SERE.2012.39",
    "interesting": "-"
  },
  {
    "title": "Specification engineering and modular verification using a web-integrated verifying compiler",
    "abstract": "This demonstration will present the RESOLVE web-integrated environment, which has been especially built to capture component relationships and allow construction and composition of verified generic components. The environment facilitates team-based software development and has been used in undergraduate CS education at multiple institutions. The environment makes it easy to simulate “what if” scenarios, including the impact of alternative specification styles on verification, and has spawned much research and experimentation. The demonstration will illustrate the issues in generic software verification and the role of higher-order assertions. It will show how logical errors are pinpointed when verification fails. Introductory video URL: http://www.youtube.com/watch?v=9vg3WuxeOkA.",
    "keywords": "automation; generic components; education; specification; system description; verification; web IDE",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICSE.2012.6227243",
    "interesting": "-"
  },
  {
    "title": "Protego: In-Memory Version Control System in the Cloud",
    "abstract": "Version control systems are an indispensable part of the software engineering process. Without them, large software development projects would soon incur in loss of productivity and severe maintenance issues. The revision history is invaluable during reviewing process as well as bug hunting. With the advent of Web 2.0, many tasks have been migrated to a cloud environment, and among them is software development. This spikes the need for a fast, always-on version control system residing in the cloud. Moreover, the cloud computational power can be leveraged to provide a higher degree of automation. In this paper, we describe Protego, a cloud-based version control system targeting flexibility and automation. Flexibility in the way projects and histories are recorded and updated, automation in the way users interact with the system, with a reduced need for everyday tedious operations.",
    "keywords": "Version control; cloud computing; online collaboration; software development tools",
    "released": 2012,
    "link": "https://doi.org/10.1109/APSEC.2012.71",
    "interesting": "-"
  },
  {
    "title": "Demo abstract: MiDebug: Microcontroller integrated development and debugging environment",
    "abstract": "We present MiDebug, a web-based Integrated Development Environment (IDE) for embedded system programming with in-browser debugging capabilities. This web application greatly reduces the time and effort required for rapid prototyping of microcontroller based devices.",
    "keywords": "Microcontroller Programming; Debugging; Integrated Development Environment",
    "released": 2012,
    "link": "https://doi.org/10.1109/IPSN.2012.6920932",
    "interesting": "-"
  },
  {
    "title": "Mobile development tools and cross-platform solutions",
    "abstract": "The usage of tablet and mobile devices has growing potencial. The fragmented mobile landscape presents considerable challenges around application development. The key element for publishing software applications in Apple's iOS or Google's Android operating system is to build them with software development kit. HTML5 web apps are emerging as an alternative. This paper deals with available frameworks, cross-platform solutions, mobile development tools, summary of mechanical engineering apps and development of mobile dictionary of the English-Czech automatic control terms.",
    "keywords": "mobile web; mobile frameworks; HTML5",
    "released": 2012,
    "link": "https://doi.org/10.1109/CarpathianCC.2012.6228727",
    "interesting": "-"
  },
  {
    "title": "Components of a Wiki-based software development environment",
    "abstract": "Software developers who want to join an existing software development project must first overcome a contribution barrier. The contribution barrier can prevent prospective software developers from joining the project. This contribution barrier comprises technical as well as social hurdles. This paper describes the components of a Wiki Development Environment (WikiDE): A wiki system with which software developers can edit, compile, and debug applications using a standard web browser. Such a WikiDE minimizes the technical hurdles of the contribution barrier. With a WikiDE, software developers can join software development projects more quickly and less software developers are completely prevented from joining.",
    "keywords": "Wiki; IDE; Software Engineering; Reference Architecture; FLOSS",
    "released": 2012,
    "link": "https://doi.org/10.1109/IS3e.2012.6414952",
    "interesting": "+"
  },
  {
    "title": "Investigating the value of retention actions as a source of relevance information in the software development environment",
    "abstract": "Even though there exists a number of search solutions targetted at software engineers the literature suggests that they are not widely used by the people engaged in code delivery [26]. Moreover, current code focused information retrieval systems such as Google Code Search (discontinued), Codeplex or Koders produce results based on specific keywords and therefore they do not take into account user context such as location, browsing history, previous interaction patterns and domain expertise. In this paper we discuss the development of task-specific information retrieval systems for software engineers. We discuss how software engineers interact with information and information retrieval systems and investigate to what extent a domain-specific search and recommendation system can be developed in order to support their work related activities. We have conducted a user study: a questionnaire and an automated observation of user interactions with the browser and software development environment. We discuss factors that can be used as implicit feedback indicators for further collaborative filtering and discuss how these parameters can be analysed using Computational Intelligence based techniques.",
    "keywords": "Personalised information retrieval; retention actions; copy and paste; pseudo-relevance; software development; information seeking behaviour",
    "released": 2012,
    "link": "https://doi.org/10.1109/CSCWD.2012.6221807",
    "interesting": "-"
  },
  {
    "title": "Sunset/FFapl - An integrated development environment for teaching cryptography",
    "abstract": "Teaching cryptography usually requires students to have a comprehensive understanding of algebra, number theory as well as good knowledge in basic computer science. Particularly public-key cryptography is often a challenge to teach and understand without detailed examples and the possibility to implement an algorithm to really see how it works. However, most of the arithmetic appearing in cryptography is not directly supported by the common programming languages, and usually buried within complicated libraries. Software tools that natively support cryptographic operations are rare and most teaching in this area must be done with general purpose software like computer algebra systems. In this work, we report on a newly developed software system called Sunset, which provides a programming language that natively supports operations within finite fields, rings and modulo groups. It has been explicitly designed for usage within classrooms and for rapid prototyping of cryptographic protocols. Contrary to many computer algebra systems and conventional programming languages, it does not require reference to external libraries or add-on packages, and lets a student implement a cryptographic algorithm in a way almost as it is printed in the papers. © 2012 IEEE.",
    "keywords": "algebra; computer algebra system; cryptography; e-Learning; programming language; teaching",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICL.2012.6402036",
    "interesting": "-"
  },
  {
    "title": "Developing semantic rich internet applications with the Sm4RIA extension for OIDE",
    "abstract": "This paper introduces the Sm4RIA Extension for OIDE, which implements the Sm4RIA approach in OIDE (OOH4RIA Integrated Development Environment). The application, based on the Eclipse framework, supports the design of the Sm4RIA models as well as the model-to-model and model-to-text transformation processes that facilitate the generation of Semantic Rich Internet Applications, i.e., RIA applications capable of sharing data as Linked data and consuming external data from other sources in the same manner. Moreover, the application implements mechanisms for the creation of RIA interfaces from ontologies and the automatic generation of administration interfaces for a previously design application. © 2012 Springer-Verlag.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1007/978-3-642-35623-0_3",
    "interesting": "-"
  },
  {
    "title": "A study on repetitiveness of code completion operations",
    "abstract": "In current software development, code completion is necessary to enhance productivity of our programming tasks. However, how developers use code completion tools on integrated development environments is still not elucidated completely. Aiming to improve such tools, we performed an investigation in terms of code completion use. We investigated developers' operation histories on an integrated development environment and found that code completion operations inserting the same text tend to be repetitively performed in a short time period. We also propose new code completion strategies to reduce such repetitive code completion. © 2012 IEEE.",
    "keywords": "change-aware development environments; code completion; edit history",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICSM.2012.6405327",
    "interesting": "-"
  },
  {
    "title": "A kind of architecture and key technologies for developing modular robot",
    "abstract": "Modular robot technology is of great significance for developing service robots and promoting its industrialization. This paper presents a kind of modular robot architecture which is composed of the Robot Operating System (ROS), standard bus and modular functional components with standard interfaces. The robot has advantages of openness, compatibility, separated function of hardware and software. With this robot, the paper presents the challenges for developing modular robots and explores the uniform software platform for developing modular robots with ROS and integration technology. With this development, this paper presents a way for integrating the functional components of software and hardware into various robots. © Springer-Verlag 2012.",
    "keywords": "Architecture; Functional component; Integrated development environment; Modular robot; ROS",
    "released": 2012,
    "link": "https://doi.org/10.1007/978-1-4471-4141-9_50",
    "interesting": "-"
  },
  {
    "title": "Programming tools used in forensic approach for the internet sites contents discovering; [Programski alati u forenzickom postupku utvrdivanja prisutnosti sadrzaja na internet sajtovima]",
    "abstract": "This paper presents authors experiens in the software tools using in the forensic purpose. With program was detected the sound files currently existing on the web site and throw that was proved the copyright security violation. The program performance which used in world forensic praxis were discussed and the parts of output files and retrieving results are presented. The capabilities and limities are evaluated. © 2012 IEEE.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1109/TELFOR.2012.6419502",
    "interesting": "-"
  },
  {
    "title": "IdDE: A collaborative environment for distributed programming in pairs",
    "abstract": "The theory of the pair more able, proposed by Vygotsky addresses the collaborative learning using pairs of people with different cognitive development, where the subject further developed can help and provide experiences to the partner so that his level of learning increases. Within the agile idea of pair programming implicitly obeys this theory. The idea of this paper is to provide that a larger set of people can share the development of a source code in a collaborative manner and the whole intellectual process that leads to changes in certain parts of a source code that the history will be record in the environment. This allows a N-N relationship can be established in a development environment for distributed software, leveraging the theory of the more capable peer. The article presents a tool developed as a NetBeans plug-in functionality that incorporates several of collaborative environments to support distributed programming in real time. © 2012 IEEE.",
    "keywords": "Distributed Pair Programming; Groupware; IDE; Integrated Development Environment",
    "released": 2012,
    "link": "https://doi.org/10.1109/CLEI.2012.6427209",
    "interesting": "-"
  },
  {
    "title": "Groovy script based firmware testing tool extension for Sonnet Integrated development environment; [Prosirenje integrisanog razvojnog okruzenja Sonnet platforme podrskom za ispitivanje namenske programske podrske putem Groovy skript jezika]",
    "abstract": "This paper describes a way of testing firmware using Groovy script language. This tool is implemented as an Eclipse IDE plugin. Therefore, a short description of what Eclipse Platform is and how it works has been included. Also, it explains implementation details for every part used in firmware testing. © 2012 IEEE.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1109/TELFOR.2012.6419548",
    "interesting": "-"
  },
  {
    "title": "Efficient middleware for user-friendly wireless sensor network integrated development environment",
    "abstract": "Wireless sensor networks (WSNs) have played an important role in widespread applicable domains. However, the programming and reprogramming processes in WSNs are complicate, this results from the diverse software and hardware platforms in WSNs, the constraint memory and energy resources on sensor nodes as well as the unstable wireless transmission process, etc. Thus, it's significant to design and implement an efficient user-friendly integrated development environment (IDE) for the WSN users. Several related mechanisms have been implemented, such as script language machines, dynamic linking mechanism, embedded Java virtual machine. But these methods are not suitable for the high resource-constraint sensor nodes. In this paper, a middleware named EMIDE is implemented for providing a user-friendly WSN IDE. This middleware simplifies the user programming process and improves the reprogramming performance by separating the application part from the low-level system one. Moreover, it provides sufficient functionalities for the application development and has low requirements to the memory and energy resources. To evaluate the performances of EMIDE, it is compared with Embedded Java Virtual Machine (simpleRTJ) and Contiki dynamic linking mechanisms in terms of resources consumption, application code size and execution efficiency. The obtained results show that EMIDE is an efficient method to provide a user-friendly WSN IDE, even on the high resource-constraint sensor nodes. © 2012 IEEE.",
    "keywords": "development environment; middleware; wireless sensor network",
    "released": 2012,
    "link": "https://doi.org/10.1109/WiAd.2012.6296561",
    "interesting": "-"
  },
  {
    "title": "Active citizenship: A system to inform about problems to the local entities",
    "abstract": "New technologies are becoming faster procedures for local governments, authorities, banking, etc. Such as, requesting legal and authorization documents through the Website, and booking sports facilities. Till now, this type of actions is done from the legal organization side, to resolve and help users, to perform their actions in a smooth way. In this paper, we present a system to help these organizations, an especially the governments authorities. Thus, our daily experience shows us that daily, citizens encounter many obstacles, barriers, hindrances, hurdles, and other impediments, that must be resolved. Our system resolve the question, How to report on all this in a simple and fast way? It is intended to solve the time problem with the massive incorporation of mobile devices with GPS capabilities, camera and Internet access. And by this, we foster and create an increasingly active citizenship. Copyright 2012 ACM.",
    "keywords": "Active citizens; GPS; Mobile applications; Mobile devices; Model-based user interface development environments; Rewarding; Saudi Arabia applications; Social networks; User interfaces",
    "released": 2012,
    "link": "https://doi.org/10.1145/2379636.2379663",
    "interesting": "-"
  },
  {
    "title": "The design of Matlab-DSP development environment for control system",
    "abstract": "Traditional development tools using assembly language takes a long time to accomplish the real-time control program. This paper presents a new platform for control system based on Matlab-DSP integrated development environment. The process of system design, simulation and experiment could be conducted smoothly in one integration platform. The hardware is based on DSP C2000 and the software based on the Matlab-DSP development environment needs to build the module and create custom device drive modules according to the hardware. Algorithm researchers can apply Simulink tools build Matlab algorithm, and then RTW (Real-Time Windows) can automatically generate code for DSP C2000 board. © 2012 IEEE.",
    "keywords": "control algorithm; Matlab-DSP development environment; RTW",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICDMA.2012.213",
    "interesting": "-"
  },
  {
    "title": "Towards the constructive incorporation of serious games within object oriented programming",
    "abstract": "Object oriented programming (OOP) is a complex domain in the education field and requires proper technological underpinning for the facilitation of the process. However, the vast variety of available programming environments makes the selection of the most efficient technology that will cover students' needs and will lead to the teachers' desired learning outcomes a significant challenge. These technologies, such as Educational Programming Environments and Programming Microworlds, are often applied on OOP courses in order to underpin the process and help students develop internal incentives, thus foster the feeling of challenge, curiosity, active control and imagination. However, students of the 21st century are growing up in a fully digital world and therefore learn and react accordingly. Alongside the growth of the Internet, high speed access and virtual communities have contributed to a new trend development called online gaming. Therefore, computer games can be considered an appropriate means to deliver knowledge to students of most courses and increase their motivation to learn. A term that is often used when referring to computer games incorporated in the learning experience is \"serious games\", and they can involve one or multiple players. Serious games have a higher learning value when they are used in courses that consider critical thinking, group work and decision making as essential to be developed. Therefore, it is the paper's initial intent to examine representative examples of commonly used technologies in OOP education and to derive their most prominent features that support students' successful learning experience. To this end, we carry out a theoretical research of the literature regarding Educational Programming Environments and Programming Microworlds in OOP education, as well as serious games in OOP or in computer programming in general following a concept-centric methodological approach. These concepts consist of the most prominent functionalities supported by representative technologies in the three categories. This leads to the conclusion that even serious games can enable and foster the development of skills and personal characteristics through the underpinning of group collaboration towards the motivated fulfilment of given tasks within highly interactive environments that simulate worlds and situations.",
    "keywords": "Educational programming environments; Microworlds; Object oriented programming; Serious games",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897798852&partnerID=40&md5=50d380e4e2c190c0900810fe5b6e129d",
    "interesting": "-"
  },
  {
    "title": "Software solution for autonomous observations with H2RG detectors and SIDECAR ASICs for the RATIR camera",
    "abstract": "The Reionization And Transients InfraRed (RATIR) camera has been built for rapid Gamma-Ray Burst (GRB) followup and will provide quasi-simultaneous imaging in ugriZY JH. The optical component uses two 2048×2048 pixel Finger Lakes Imaging ProLine detectors, one optimized for the SDSS u, g, and r bands and one optimized for the SDSS i band. The infrared portion incorporates two 2048 × 2048 pixel Teledyne HgCdTe HAWAII-2RG detectors, one with a 1.7-micron cutoff and one with a 2.5-micron cutoff. The infrared detectors are controlled by Teledyne's SIDECAR (System for Image Digitization Enhancement Control And Retrieval) ASICs (Application Specific Integrated Circuits). While other ground-based systems have used the SIDECAR before, this system also utilizes Teledyne's JADE2 (JWST ASIC Drive Electronics) interface card and IDE (Integrated Development Environment). Here we present a summary of the software developed to interface the RATIR detectors with Remote Telescope System, 2nd Version (RTS2) software. RTS2 is an integrated open source package for remote observatory control under the Linux operating system and will autonomously coordinate observatory dome, telescope pointing, detector, filter wheel, focus stage, and dewar vacuum compressor operations. Where necessary we have developed custom interfaces between RTS2 and RATIR hardware, most notably for cryogenic focus stage motor drivers and temperature controllers. All detector and hardware interface software developed for RATIR is freely available and open source as part of the RTS2 distribution. © 2012 SPIE.",
    "keywords": "Data-taking; Hawaii-2RG; Infrared detectors; JADE2; SIDECAR ASIC; Software",
    "released": 2012,
    "link": "https://doi.org/10.1117/12.925817",
    "interesting": "-"
  },
  {
    "title": "A novel Android based Mobile application as a virtue of covert communication for concealing information in the Speech signal",
    "abstract": "The era of Multimedia communication and its application on Mobile devices have gained momentum with the onset of Android platform. Here we have considered Speech signal as the cover signal to hide the sensitive data in it. We can develop the same application on the Android platform using its IDE (Integrated Development Environment); one such is provided by Eclipse. The proposed approach is quite crucial in military-warfare conditions, as well in the defense realted Information Communication. The covert nature is the desirable feature which denies an unauthorized user from mining sensitive information or claiming the ownership of music in case of water-mark embedding. © 2012 IEEE.",
    "keywords": "Android; Eclipse; IDE; multimedia",
    "released": 2012,
    "link": "https://doi.org/10.1109/ET2ECN.2012.6470088",
    "interesting": "-"
  },
  {
    "title": "Supporting the virtual design studio through social programming environments",
    "abstract": "Incorporating alternative pedagogies into computing education has the potential to promote better engagement, outcomes, and retention than traditional methods. A limiting factor of many alternative pedagogies is that they target in-class activities, which constitute a small percentage of computing students' overall time. To achieve a more significant impact, we argue that computing educators need to find ways to innovate students' out-of-class activities as well. Inspired by the studio-based model used in architecture, we introduce the idea of social programming environments, which aim to simulate the design studio experience by enabling students to maintain an awareness of their peers' programming activities and to ask for and receive help.",
    "keywords": "Integrated development environment; Social programming",
    "released": 2012,
    "link": "https://doi.org/10.1145/2361276.2361309",
    "interesting": "-"
  },
  {
    "title": "Social awareness for global software teams",
    "abstract": "We hypothesize that information shared on social media can work for distributed software teams as a surrogate of the social awareness, that is information that a person maintains about others in a social or conversational context, gained during informal face-to-face chats. Hence, we have developed a tool that extends a collaborative development environment by aggregating content from social networks and microblogs into developers' workspace. © 2012 IEEE.",
    "keywords": "CDE; collaborative development environments; SNS; social awareness; social networks; trust",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICGSE.2012.31",
    "interesting": "-"
  },
  {
    "title": "Speculative analysis of integrated development environment recommendations",
    "abstract": "Modern integrated development environments make recommendations and automate common tasks, such as refactorings, auto-completions, and error corrections. However, these tools present little or no information about the consequences of the recommended changes. For example, a rename refactoring may: modify the source code without changing program semantics; modify the source code and (incorrectly) change program semantics; modify the source code and (incorrectly) create compilation errors; show a name collision warning and require developer input; or show an error and not change the source code. Having to compute the consequences of a recommendation - either mentally or by making source code changes - puts an extra burden on the developers. This paper aims to reduce this burden with a technique that informs developers of the consequences of code transformations. Using Eclipse Quick Fix as a domain, we describe a plug-in, Quick Fix Scout, that computes the consequences of Quick Fix recommendations. In our experiments, developers completed compilation-error removal tasks 10% faster when using Quick Fix Scout than Quick Fix, although the sample size was not large enough to show statistical significance.",
    "keywords": "Eclipse; IDE; Quick Fix; Quick Fix dialog; Quick Fix Scout; Recommendations; Speculative analysis",
    "released": 2012,
    "link": "https://doi.org/10.1145/2384616.2384665",
    "interesting": "-"
  },
  {
    "title": "A semantic integrated development environment",
    "abstract": "We present SIDE, a Semantic Integrated Development Environment. SIDE uses static analysis to enrich existing IDE features and also adds new features. It augments the way existing compilers find syntactic errors -in real time, as the programmer is writing code without execution -by also finding semantic errors, e.g., arithmetic expressions that may overflow. If it finds an error, it suggests a repair in the form of code-e.g., providing an equivalent yet non-overflowing expression. Repairs are correct by construction. SIDE also enhances code refactoring (by suggesting precise yet general contracts), code review (by answering what-if questions), and code searching (by answering questions like \"find all the callers where x < y\"). SIDE is built on the top of CodeContracts and the Roslyn CTP. CodeContracts provide a lightweight and programmerfriendly specification language. SIDE uses the abstract interpretation-based CodeContracts static checker (cccheck/Clousot) to obtain a deep semantic understanding of what the program does.",
    "keywords": "Abstract interpretation; Design by contract; Integrated Development Enviroment; Method extraction; Program Repair; Program transformation; Refactoring; Static analysis",
    "released": 2012,
    "link": "https://doi.org/10.1145/2384716.2384724",
    "interesting": "-"
  },
  {
    "title": "CodeWave: A real-time, collaborative IDE for enhanced learning in computer science",
    "abstract": "Computer science instructors often rely on the final version of a program for assessment and feedback. This ignores the process the student used to arrive at the final program. When the instructor has the ability to observe real-time development progress of each student, they are better equipped to provide appropriate and timely feedback. CodeWave, a software program developed at the University of North Carolina Wilmington looks to alleviate these issues. CodeWave is a real-time, collaborative Integrated Development Environment with traditional features such as syntax highlighting and non-traditional features such as integrated messaging and logged playback. CodeWave enhances productivity by integrating many common tools students and instructors use during the programming process. Communication is effortless and allows a user to specify a point in the code as a link in the message body. Log playback provides the ability to review the entire development process. In this paper, we describe the software program we developed to enhance learning in computer science programming courses. © 2012 ACM.",
    "keywords": "asynchronous interaction; collaboration; distance learning; IDE",
    "released": 2012,
    "link": "https://doi.org/10.1145/2157136.2157160",
    "interesting": "-"
  },
  {
    "title": "Construction of integrated design development environment and its deployment on cloud",
    "abstract": "It is crucial for manufacturers in ferce competition with global vendors to continue providing products incorporating the functions, performance, quality and environmental resistance desired by customers faster and at lower costs while meeting the diversifying market needs. Accordingly, there is an urgent need to construct a global design and development environment that accelerates development while utilizing more than ever the \"knowledge\" existing in the fields of development and manufacturing. Fujitsu has launched and utilized a design and development environment for wide-ranging products including supercomputers, servers, network devices and mobile phones as an in-house private cloud for integrated design. We also offer this environment to external customers through forms of clouds in line with the respective customer needs as a next-generation manufacturing infrastructure service. This paper presents the integrated development environment that Fujitsu established by developing and introducing advanced cloud technology to a design and development environment that contains Fujitsu's many years of manufacturing know-how. The overall picture, characteristics and future direction of this integrated development environment are described.",
    "keywords": "",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868151466&partnerID=40&md5=c15e7efa3469a58651a207b8db74bf7a",
    "interesting": "-"
  },
  {
    "title": "IDEs need become open data platforms (as need languages and VMs)",
    "abstract": "Development environments have put quite some effort into being open platforms, however rewriting our own tools as plug-ins we found that while host platform and other plug-ins are open for addition of feature they are typically closed to accessing data. We report from our own experience rewriting the Codemap tool as an Eclipse plug-in as well as from maintaining the Moose platform and argue why IDEs need to adopt an Open Data paradigm to become valuable targets for development of novel tools. We propose that data created by plug-ins need to default to being openly shared with other plug-ins through uniform data structures. Adding appropriate meta-information to this setup will allow other plug-ins to even make use of this data in unanticipated ways. We further argue that opening up data should not stop at the development platform but that programing languages and even virtual machines should also open up their internal data for the greater benefit of development tool and API designers. © 2012 IEEE.",
    "keywords": "Development Tool Design; Experience Report; Integrated Development Environment (IDE); Lessons Learned; Open Data; Programing Languages; Virtual Machines",
    "released": 2012,
    "link": "https://doi.org/10.1109/TOPI.2012.6229807",
    "interesting": "-"
  },
  {
    "title": "TAPAAL 2.0: Integrated development environment for timed-arc petri nets",
    "abstract": "TAPAAL 2.0 is a platform-independent modelling, simulation and verification tool for extended timed-arc Petri nets. The tool supports component-based modelling and offers an automated verification of the EF, AG, EG and AF fragments of TCTL via translations to Uppaal timed automata and via its own dedicated verification engine. After more than three years of active development with a main focus on usability aspects and on the efficiency of the verification algorithms, we present the new version of TAPAAL 2.0 that has by now reached its maturity and offers the first publicly available tool supporting the analysis and verification of timed-arc Petri nets. © 2012 Springer-Verlag Berlin Heidelberg.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1007/978-3-642-28756-5_36",
    "interesting": "-"
  },
  {
    "title": "Semantic stored procedures programming environment and performance analysis",
    "abstract": "Supporting the idea of the semantic web, we developed a Semantic Stored Procedures (SSP) programming environment for the Oracle11g database, similar to the existing ones, available for the stored procedures in the relational databases. This show-case SSP-environment supports the basic test/store/execute/remove scenarios for sem-match-queries, but is also a quite extensive system. An eclipse plug-in that provides a GUI for these operations and java API which helps programmers to use the SSP-call functionality were released in the package with the Oracle11g SSP-extension. The performances of our system are comparable (much better in most of the cases) with the existing adapters, as shown with the measurements in comparison with the well-known Jena adapter. Thus, a complete development environment for SSP-programming is now available and the semantic query management, as a simple concatenation of strings inside the code, seems to becoming just a forgotten nightmare of our semantic web programmer's life. © 2012 Springer-Verlag GmbH.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1007/978-3-642-28664-3_33",
    "interesting": "-"
  },
  {
    "title": "Optimizing a search-based code recommendation system",
    "abstract": "Search-based code recommendation systems with a large-scale code repository can provide the programmers example code snippets that teach them not only names in application programming interface of libraries and frameworks, but also practical usages consisting of multiple steps. However, it is not easy to optimize such systems because usefulness of recommended code is indirect and hard to be measured. We propose a method that mechanically evaluates usefulness for our recommendation system called Selene. By using the proposed method, we adjusted several search and user-interface parameters in Selene for better recall factor, and also learned characteristics of those parameters. © 2012 IEEE.",
    "keywords": "associative text search; example code recommendation; integrated development environment",
    "released": 2012,
    "link": "https://doi.org/10.1109/RSSE.2012.6233414",
    "interesting": "-"
  },
  {
    "title": "Active code completion",
    "abstract": "Code completion menus have replaced standalone API browsers for most developers because they are more tightly integrated into the development workflow. Refinements to the code completion menu that incorporate additional sources of information have similarly been shown to be valuable, even relative to standalone counterparts offering similar functionality. In this paper, we describe active code completion, an architecture that allows library developers to introduce interactive and highly-specialized code generation interfaces, called palettes, directly into the editor. Using several empirical methods, we examine the contexts in which such a system could be useful, describe the design constraints governing the system architecture as well as particular code completion interfaces, and design one such system, named Graphite, for the Eclipse Java development environment. Using Graphite, we implement a palette for writing regular expressions as our primary example and conduct a small pilot study. In addition to showing the feasibility of this approach, it provides further evidence in support of the claim that integrating specialized code completion interfaces directly into the editor is valuable to professional developers. © 2012 IEEE.",
    "keywords": "code completion; development environments",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICSE.2012.6227133",
    "interesting": "-"
  },
  {
    "title": "Actionable identification of emergent teams in software development virtual organizations",
    "abstract": "We present a method for identifying emergent teams of developers who need to work together and coordinate, within larger software development organizations. Our goal is to identify these socio-technical constructs as they emerge, so that we can provide timely awareness and actionable recommendations to managers, technical leads and members of the emergent team alike. Our technique is rooted in the analysis of Social Networks, which are constructed from real-time traces of the activity of each individual developer within her development environment, contextualized with respect to her assigned tasks and the corresponding artifact working set. © 2012 IEEE.",
    "keywords": "developers' coordination; Emergent teams; IDE interactions; Social Network Analysis; task contexts",
    "released": 2012,
    "link": "https://doi.org/10.1109/RSSE.2012.6233401",
    "interesting": "-"
  },
  {
    "title": "Debugger canvas: Industrial experience with the code bubbles paradigm",
    "abstract": "At ICSE 2010, the Code Bubbles team from Brown University and the Code Canvas team from Microsoft Research presented similar ideas for new user experiences for an integrated development environment. Since then, the two teams formed a collaboration, along with the Microsoft Visual Studio team, to release Debugger Canvas, an industrial version of the Code Bubbles paradigm. With Debugger Canvas, a programmer debugs her code as a collection of code bubbles, annotated with call paths and variable values, on a two-dimensional pan-and-zoom surface. In this experience report, we describe new user interface ideas, describe the rationale behind our design choices, evaluate the performance overhead of the new design, and provide user feedback based on lab participants, post-release usage data, and a user survey and interviews. We conclude that the code bubbles paradigm does scale to existing customer code bases, is best implemented as a mode in the existing user experience rather than a replacement, and is most useful when the user has a long or complex call paths, a large or unfamiliar code base, or complex control patterns, like factories or dynamic linking. © 2012 IEEE.",
    "keywords": "experience report; human factors; integrated development environments; user interfaces",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICSE.2012.6227113",
    "interesting": "-"
  },
  {
    "title": "Calico: A multi-programming-language, multi-context framework designed for computer science education",
    "abstract": "The Calico project is a multi-language, multi-context programming framework and learning environment for computing education. This environment is designed to support several interoperable programming languages (including Python, Scheme, and a visual programming language), a variety of pedagogical contexts (including scientific visualization, robotics, and art), and an assortment of physical devices (including different educational robotics platforms and a variety of physical sensors). In addition, the environment is designed to support collaboration and modern, interactive learning. In this paper we describe the Calico project, its design and goals, our prototype system, and its current use. © 2012 ACM.",
    "keywords": "computer science education; CS1; IDE; integrated development environment; pedagogy; programming languages; robots",
    "released": 2012,
    "link": "https://doi.org/10.1145/2157136.2157158",
    "interesting": "-"
  },
  {
    "title": "Special section: Software architectures and application development environments for Cloud computing",
    "abstract": "A number of excellent technical contributions that significantly advance the state-of-the-art of software architectures and application development environments for cloud computing are compiled. Yu et al. in the paper titled 'A Novel Watermarking Method for Software Protection in the Cloud', identify an insider threat to access control, which is not completely eliminated by the usual techniques of encryption, cryptographic hashes, and access control labels. Zhang et al. in the paper titled 'A Trust-based Noise Injection Strategy for Privacy Protection in Cloud' present a novel trust-based noise injection strategy for privacy protection in the Cloud. Authors in the paper titled 'The Cloud Adoption Toolkit: Supporting Cloud Adoption Decisions in the Enterprise' present a Cloud Adoption Toolkit that supports decision making during the adoption of Cloud computing in enterprises.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1002/spe.1144",
    "interesting": "-"
  },
  {
    "title": "Collaborative learning environment for identifier naming in source codes",
    "abstract": "In most software development projects, it is impossible to avoid reading and understanding source codes written by other programmers. To render software products understandable and maintainable, proper identifier naming is a key issue that needs to be addressed. It is well known that proper identifier naming influences the readability and understandability of the source code, and thus many researchers have discussed the influence of identifier naming on the quality of source codes.The education of novice programmers toward becoming high quality systems engineers should therefore include training in proper identifier naming. This paper proposes a way to teach proper identifier naming in a collaborative learning environment that offers both majority rule and subject design based on a software development process view.",
    "keywords": "Exercise; Identifier naming; Programming; Quality of source codes; Software engineering education; Web-based programming environment",
    "released": 2012,
    "link": "https://doi.org/10.2316/P.2012.774-040",
    "interesting": "-"
  },
  {
    "title": "The Eclipse parallel tools platform: Toward an integrated development environment for XSEDE resources",
    "abstract": "Eclipse [1] is a widely used, open source integrated development environment that includes support for C, C++, Fortran, and Python. The Parallel Tools Platform (PTP) [2] extends Eclipse to support development on high performance computers. PTP allows the user to run Eclipse on her laptop, while the code is compiled, run, debugged, and profiled on a remote HPC system. PTP provides development assistance for MPI, OpenMP, and UPC; it allows users to submit jobs to the remote batch system and monitor the job queue. It also provides a visual parallel debugger. The XSEDE community comprises a large part of PTP's user base, and we are actively working to make PTP a productive, easy-to-use development environment for the full breadth of XSEDE resources. In this paper, we will describe capabilities we have recently added to PTP to better support XSEDE resources. These capabilities include submission and monitoring of jobs on systems running Sun/Oracle Grid Engine, support for GSI authentication and MyProxy logon, support for environment modules, and integration with compilers from Cray and PGI. We will describe ongoing work and directions for future collaboration, including OpenACC support and parallel debugger integration. © 2012 ACM.",
    "keywords": "Eclipse; high performance computing; IDEs; integrated development environments; parallel tools platform; programming environments; PTP; XSEDE",
    "released": 2012,
    "link": "https://doi.org/10.1145/2335755.2335845",
    "interesting": "-"
  },
  {
    "title": "Mojave: A development environment for the Cactus computational framework",
    "abstract": "This paper presents \"Mojave,\" a set of plug-ins for the Eclipse Integrated Development Environment (IDE), which provides a unified interface for HPC code development and job management. Mojave facilitates code creation, refactoring, building, and running of a set of HPC scientific codes based on the Cactus Computational Toolkit, a computational framework for general problem-solving on regular meshes. Mojave facilitates the development of Cactus applications and the submission of Cactus jobs to high end resources (e.g. XSEDE systems) using built-in Eclipse features, C/C++ Development Tooling (CDT), Parallel Tools Platform (PTP) plug-ins [20], and SimFactory, a Cactus-specific set of command-line utilities [18, 17] (see Fig. 1 for a diagrammatic representation). Mojave extends the above facilities to provide a collaborative way for scientists to share job monitoring information through its Facebook-enabled job sharing feature. © 2012 ACM.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1145/2335755.2335841",
    "interesting": "-"
  },
  {
    "title": "Service-oriented architecture and integrated development environment for cloud manufacturing",
    "abstract": "To satisfy the demand of cloud manufacturing on software architecture and development tools, the relationships between Service-Oriented Architecture (SOA), cloud computing and cloud manufacturing were analyzed in an abstract way, and the first two's service modes were inherited and extended by cloud manufacturing. For manufacturing resource, the Service-Oriented Architecture for Cloud Manufacturing (SOA4CM) was proposed by integrating SOA with cloud computing. Free available open source tools were selected to set up Integrated Development Environment for SOA4CM (IDE-SOA4CM) based on Eclipse platform, and the development tools for IDE-SOA4CM were exemplified to demonstrate the application in manufacturing processes. Case study showed that the proposed IDE had good scalability and agilely responses to cloud manufacturing applications requirements.",
    "keywords": "Cloud manufacturing; Integrated development environment; Open source software; Service-oriented architecture; Web services",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870588307&partnerID=40&md5=b0e958d6eaa09b3dce2af64c812365ea",
    "interesting": "-"
  },
  {
    "title": "Documenting and sharing knowledge about code",
    "abstract": "Software engineers spend a considerable amount of time on program comprehension. Current research has primarily focused on assisting the developer trying to build up his understanding of the code. This knowledge remains only in the mind of the developer and, as time elapses, often \"disappears\". In this research, we shift the focus to the developer who is using her Integrated Development Environment (IDE) for writing, modifying, or reading the code, and who actually understands the code she is working with. The objective of this PhD research is to seek ways to support this developer to document and share her knowledge with the rest of the team. In particular, we investigate the full potential of micro-blogging integrated into the IDE for addressing the program comprehension problem. © 2012 IEEE.",
    "keywords": "CSCW; IDEs; micro-blogging; Program comprehension; recommender systems",
    "released": 2012,
    "link": "https://doi.org/10.1109/ICSE.2012.6227043",
    "interesting": "-"
  },
  {
    "title": "IDES: Self-adaptive software with online policy evolution extended from rainbow",
    "abstract": "One common approach or framework of self-adaptive software is to incorporate a control loop that monitoring, analyzing, deciding and executing over a target system using predefined rules and policies. Unfortunately, policies or utilities in such approaches and frameworks are statically and manually defined. The empirical adaptation policies and utility profiles cannot change with environment thus cannot make robust and assurance decisions. Various efficiency improvements have been introduced to online evolution of self-adaptive software itselfhowever, there is no framework with policy evolution in policy-based self-adaptive software such as Rainbow. Our approach, embodied in a system called IDES (Intelligent Decision System) uses reinforcement learning to provides an architecture based self-adaptive framework. We associate each policy with a preference value. During the running time the system automatically assesses system utilities and use reinforcement learning to update policy preference. We evaluate our approach and framework by an example system for bank dispatching. The experiment results reveal the intelligence and reactiveness of our approach and framework. © 2012 Springer-Verlag Berlin Heidelberg.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1007/978-3-642-30454-5_13",
    "interesting": "-"
  },
  {
    "title": "TexMo: A multi-language development environment",
    "abstract": "Contemporary software systems contain a large number of artifacts expressed in multiple languages, ranging from domain-specific languages to general purpose languages. These artifacts are interrelated to form software systems. Existing development environments insufficiently support handling relations between artifacts in multiple languages. This paper presents a taxonomy for multi-language development environments, organized according to language representation, representation of relations between languages, and types of these relations. Additionally, we present TexMo, a prototype of a multi-language development environment, which uses an explicit relation model and implements visualization, static checking, navigation, and refactoring of cross-language relations. We evaluate TexMo by applying it to development of a web-application, JTrac, and provide preliminary evidence of its feasibility by running user tests and interviews. © 2012 Springer-Verlag.",
    "keywords": "",
    "released": 2012,
    "link": "https://doi.org/10.1007/978-3-642-31491-9_15",
    "interesting": "-"
  },
  {
    "title": "Augmenting social awareness in a collaborative development environment",
    "abstract": "Social awareness, that is information that a person maintains about others in a social or conversational context, can contribute to counteract the lack of teamness in global software development and strengthen trust among remote developers. We hypothesize that information shared on social media can work for distributed software teams as a surrogate of the social awareness gained during informal face to face chats. As a preliminary step we have developed a tool that extends a collaborative development environment by aggregating content from social networks and microblogs into the developer's workspace. © 2012 IEEE.",
    "keywords": "collaborative development environment; social awareness; social networks; trust building",
    "released": 2012,
    "link": "https://doi.org/10.1109/CHASE.2012.6223009",
    "interesting": "-"
  },
  {
    "title": "XIDE: Expanding end-user Web development",
    "abstract": "Most Web end-user development tools assume that users create Web applications entirely visually. However, such tools have a limited functionality and support inadequately the transition from visual editing to source code editing. In this paper, we introduce a tool, XIDE, that supports end users in creation of database-driven Web applications. The proposed tool is based on three main approaches: (1) visual composition of applications from reusable components, (2) source code editing of both applications and components, and (3) unified programming model based on markup languages.",
    "keywords": "End-user programming; Markup languages; Unified programming model; Web development; XForms",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864871974&partnerID=40&md5=fa368b70f86023a737105c2d33d62710",
    "interesting": "-"
  },
  {
    "title": "Target Builder: An embedded Linux development toolkit",
    "abstract": "Traditional embedded Linux development requires high experience and long learning time because of its low usability. Therefore, the usability is the main issue in the development of the embedded Linux tools, and this low usability leads to an alternative configuration/build system in tools. But, the alternative systems require tremendous maintenance work for every kernel/application release because of the open-source nature of Linux. Target Builder is an embedded Linux development toolkit, which reconciles those two conflicting motivations, usability and maintainability, by integrating standard tools and extending their usability. It supplements standard tools' low usability by supporting integrated configuration/build system and a GUI-based IDE, which provide consistency and interoperation between separate tools. In particular, configuration tool in Target Builder support integrated configuration of all operation environment, which makes it possible to check dependencies in a whole system. Target Builder also provides functionalities such as; online-help, build management, pre-configuration setup, size optimization and deployment to the target. Our experience with Target Builder showed it reduced much development time, and it was highly resilient for the possible changes of the components like Linux kernel and application packages.",
    "keywords": "Embedded Linux; Embedded systems programming; Maintainability; Software design; Software development; Software tools",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904186240&partnerID=40&md5=7b854d276835f982a23f61121d46b0d1",
    "interesting": "-"
  },
  {
    "title": "Lawnmower designing a web-based visual programming environment that generates code to help students learn textual programming",
    "abstract": "Learning programming can be a challenging task for design students, especially when code is to be entered in textual form. Visual programming languages, such as McNeil’s Grasshopper, have helped students to engage in scripting without having to deal with lower level syntax that is often hindering them in expressing their thoughts. However, the problem with learning how to program textually is only postponed: When switching to a new platform, students may be forced to learn coding from scratch, and, even worse, to do so in a textual environment that is yet unfamiliar. Our idea is simple: Connect visual programming with textual coding, using code-generation as means. Using this approach enables students to think visually, and see the results textually. An added bonus is the possibility to use debugging, a feature that is yet lacking from Grasshopper. By this way, our language aims to enable students to gradually move from visual to textual programming in a comfortable manner. © 2012.",
    "keywords": "Code Generation; Structured Code; Teaching; Visual Programming",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898616327&partnerID=40&md5=840f2c8f7d6063e2638335809be05f3f",
    "interesting": "-"
  },
  {
    "title": "Evaluating a communication technology assessment tool (CTAT): A case of a cloud based communication tool",
    "abstract": "A primary concern of distributed adaptive development environment (DADE) is that of human communication and knowledge sharing among geographically dispersed developers. Emerging cloudbased communication technologies claim to provide a support for communication and knowledge sharing among developers in a DADE. However, the challenge is how to enable developers to self assess and select appropriate cloud-based communication technologies for their DADE. Based on our recent empirical study, we have developed the construct of a practical communication technologies assessment tool (CTAT). We argue that, CTAT construct, as a part of our large conceptual framework of context aware cloud adaptation (CACA), can be useful to assist developers in the self assessment of appropriate cloud-based communication technologies for their DADE. This paper presents the evaluation of the CTAT by using it for the assessment of the Force.com cloud-based Chatter communication tool. The main objective of this evaluation is to determine to what extent CTAT construct is relevant, valuable and sufficient to achieve its purpose. The results of this evaluation indicate that CTAT seems useful when performing vendor independent assessment of communication technologies in order to make an informed decision about the selection of a communication tool for the DADE.",
    "keywords": "Agile; Cloud; Communication technologies; Distributed adaptive development environment",
    "released": 2012,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928174840&partnerID=40&md5=79a56b80420b3bb4a0b16d431e6166f3",
    "interesting": "-"
  },
  {
    "title": "Using wikis as software development environments",
    "abstract": "Joining existing software development teams usually comes with a difficult and time-consuming setup of the technical development environment. Before new software developers can contribute their first line of code to the project, they must install the complete technical development environment on their computers. To support software developers becoming productive as fast as possible, we apply the wiki concept to software development projects. This paper introduces the concept of a Wiki Development Environment (WikiDE): A wiki system with which software developers can edit, compile, and debug applications using a standard web browser. We analyze the technological requirements for the realization of a WikiDE as well as the conceptual differences between a WikiDE and other wikis. © 2012 The authors and IOS Press. All rights reserved.",
    "keywords": "Programming Environments; Software Engineering; Web-based interaction",
    "released": 2012,
    "link": "https://doi.org/10.3233/978-1-61499-125-0-3",
    "interesting": "-"
  },
  {
    "title": "Incorporating the ontology paradigm into a mainstream programming environment",
    "abstract": "The emergence of the Semantic Web have revived the interest in knowledge engineering and ontologies. Different paradigms often share challenges and solutions, and can complement and mutually improve each other. This paper presents a simple and agile integration of ontologies and programming on a small scale, and in a down-to-Earth manner by incorporating the ontology paradigm into a mainstream programming environment. The approach is based on metaprogramming, which has been used to internalize the ontology modeling paradigm into the Clojure language. The resulting DSL, Magic Potion, is implemented in Cojure and blends ontology, functional, object-oriented and concurrent paradigms, which is suitable for general-purpose domain modeling, from technology enhanced learning to business. © 2012 Vilnius University.",
    "keywords": "domain engineering; domain-specific languages; metaprogramming; multiparadigm languages; ontology languages; ontology paradigm; programming languages; programming paradigms; programming techniques",
    "released": 2012,
    "link": "https://doi.org/10.15388/informatica.2012.357",
    "interesting": "-"
  },
  {
    "title": "Large-scale ontology development and agricultural application based on knowledge domain framework",
    "abstract": "The key activity to build semantic web is to build ontologies. But today, the theory and methodology of ontology construction is still far from ready. This paper proposed a theoretical framework for massive knowledge management - the knowledge domain framework (KDF), and introduces an integrated development environment (IDE) named large-scale ontology development environment (LODE), which implements the proposed theoretical framework. We also compared LODE with other popular ontology development environments in this paper. The practice of using LODE on management and development of agriculture ontologies shows that knowledge domain framework can handle the development activities of large scale ontologies. Application studies based on the principle of knowledge domain framework and LODE was described briefly.",
    "keywords": "massive knowledge management; knowledge domain framework (KDF); large-scale ontology development environment (LODE); agricultural application",
    "released": 2012,
    "link": "https://doi.org/10.1016/S2095-3119(12)60071-9",
    "interesting": "-"
  },
  {
    "title": "Gene-centric analysis of serum cotinine levels in african and european american populations",
    "abstract": "To date, most genetic association studies of tobacco use have been conducted in European American subjects using the phenotype of smoking quantity (cigarettes per day). However, smoking quantity is a very imprecise measure of exposure to tobacco smoke constituents. Analyses of alternate phenotypes and populations may improve our understanding of tobacco addiction genetics. Cotinine is the major metabolite of nicotine, and measuring serum cotinine levels in smokers provides a more objective measure of nicotine dose than smoking quantity. Previous genetic association studies of serum cotinine have focused on individual genes. We conducted a genetic association study of the biomarker in African American (N = 365) and European American (N 315) subjects from the Coronary Artery Risk Development in Young Adults study using a chip containing densely-spaced tag SNPs in similar to 2100 genes. We found that rs11187065, located in the non-coding region (intron I) of insulin-degrading enzyme (IDE), was the most strongly associated SNP (p = 8.91 x 10(-6)) in the African American cohort, whereas rs11763963, located on chromosome 7 outside of a gene transcript, was the most strongly associated SNP in European Americans (p = 1.53 x 10(-6)). We then evaluated how the top variant association in each population performed in the other group. We found that the association of rs11187065 in IDE was also associated with the phenotype in European Americans (p = 0.044). Our top SNP association in European Americans, rs11763963 was non-polymorphic in our African American sample. It has been previously shown that psychostimulant self-administration is reduced in animals with lower insulin because of interference with dopamine transmission in the brain reward centers. Our finding provides a platform for further investigation of this, or additional mechanisms, involving the relationship between insulin and self-administered nicotine dose. Neuropsychopharmacology (2012) 37, 968-974; doi: 10.1038/npp. 2011.280; published online 16 November 2011",
    "keywords": "cotinine; nicotine; IDE; CARDIA; MORF4L1; IMAT-Broad-CARe",
    "released": 2012,
    "link": "https://doi.org/10.1038/npp.2011.280",
    "interesting": "-"
  },
  {
    "title": "WeScheme: The browser is your programming environment",
    "abstract": "We present a programming environment called WeScheme that runs in the Web browser and supports interactive development. WeScheme programmers can save programs directly on the Web, making them accessible from everywhere. As a result, sharing of programs is a central focus that WeScheme supports seamlessly. The environment also leverages the existing presentation media and program run-time support found in Web browsers, thus making these easily accessible to students and leveraging their rapid engineering improvements. WeScheme is being used successfully by students, and is especially valuable in schools that have prohibitions on installing new software or lack the computational demands of more intensive programming environments.",
    "keywords": "web; programming environments",
    "released": 2011,
    "link": "https://doi.org/10.1145/1999747.1999795",
    "interesting": "+"
  },
  {
    "title": "Integrating multimedia data processing parts in cloud into folder programming environment",
    "abstract": "There are a variety of media processing parts such as Image-Magick, FFmpeg, and OpenCV. A mechanism is necessary that allows PC users to access easily these parts in a cloud. We propose Polder, a programming environment based on a simple processing principle that provides novices with an easy programming and execution environment. Data input is achieved through dragging and dropping data objects onto a folder. The input data object is processed by a program bound to the folder name and the resulting data object is stored in the same folder. Establishing a hierarchical folder structure chains the processes of the folders. Combined with a WebDAV network folder, Polder becomes a mashup environment for end users. In this paper, we evaluate and discuss Polder based on a user questionnaire administered after students test Polder to process images, videos, and voice files. Moreover, we discuss Polder based on the application development experience using Polder.",
    "keywords": "multimedia processing; mashup; end user programming",
    "released": 2011,
    "link": "https://doi.org/10.1145/2095536.2095560",
    "interesting": "-"
  },
  {
    "title": "Utilizing web server middleware for development environments and student projects",
    "abstract": "Teaching and learning web development is challenging today because of multiple factors including complexity, scale and security. As these challenges have grown through the years of the web, educators have been required to keep up with them in order to provide web-development education that has fidelity with practice. At Southern Polytechnic, we have been trying to keep abreast with a convenient development environment that is suitable for student use. This poster identifies and analyzes the major factors involved in deciding on a platform and recommends some freely available middleware suitable for web development environments and student projects.",
    "keywords": "web; student development platform; nontraditional students; laboratory experience; instructional technologies; education; distance learning",
    "released": 2011,
    "link": "https://doi.org/10.1145/2016039.2016141",
    "interesting": "-"
  },
  {
    "title": "Supporting the cooperation of end-user programmers through social development environments",
    "abstract": "Many programs are being created by end-users without formal training in programming. Spreadsheets are the most popular environment for this, but mashups which combine public services into new, albeit small applications are also becoming more and more popular. Research shows that end-user programmers make potentially costly mistakes. Yet initiatives that aim at bringing software engineering principles to end-users are still rudimentary. In particular, we see much unused potential in approaches that foster and support the cooperation among end-user programmers. Whereas the application of mechanisms from social software to software engineering problems is gaining traction, this has not yet been investigated sufficiently for end-user software engineering.This paper discusses how insights from Communities of Practice research may be implemented using mechanisms from recent developments in social software. From the implementation of the presented social mechanisms, we expect an improvement in cooperation and mutual help in communities of end-user programmers. We plan to combine this approach with lightweight variations of software engineering methods targeted at end-user programmers. This should lead to higher quality in the programs developed by these end-users, as good practices are more likely to spread.",
    "keywords": "social software; services; mashups; end-user development; community of practice",
    "released": 2011,
    "link": "https://doi.org/10.1145/1984701.1984704",
    "interesting": "-"
  },
  {
    "title": "ToMaTo: A trustworthy code mashup development tool",
    "abstract": "Recent years have seen the emergence of a new programming paradigm for Web applications that emphasizes the reuse of external content, the mashup. Although the mashup paradigm enables the creation of innovative Web applications with emergent features, its openness introduces trust problems. These trust issues are particularly prominent in JavaScript code mashup – a type of mashup that integrated external Javascript libraries to achieve function and software reuse. With JavaScript code mashup, external libraries are usually given full privileges to manipulate data of the mashup application and executing arbitrary code. This imposes considerable risk on the mashup developers and the end users.One major causes for these trust problems is that the mashup developers tend to focus on the functional aspects of the application and implicitly trust the external code libraries to satisfy security, privacy and other non-functional requirements. In this paper, we present ToMaTo, a development tool that combines a novel trust policy language and a static code analysis engine to examine whether the external libraries satisfy the non-functional requirements. ToMaTo gives the mashup developers three essential capabilities for building trustworthy JavaScript code mashup: (1) to specify trust policy, (2) to assess policy adherence, and (3) to handle policy violation. The contributions of the paper are: (1) a description of JavaScript code mashup and its trust issues, and (2) a development tool (ToMaTo) for building trustworthy JavaScript code mashup.",
    "keywords": "trust; mashup; code analysis; JavaScript",
    "released": 2011,
    "link": "https://doi.org/10.1145/2076006.2076012",
    "interesting": "-"
  },
  {
    "title": "Java WIDE - java wiki integrated development environment: Nifty tools and assignments",
    "abstract": "Over the past decade applications have been moving from the desktop into the cloud. After extensive searching, the only integrated development environments has emerged in cloud computing. The Java Wiki Integrated Development Environment (JavaWIDE) is the new online IDEs, and it is designed to be simple enough for novice programmers to use.",
    "keywords": "",
    "released": 2011,
    "link": "https://dl.acm.org/doi/10.5555/2037151.2037170",
    "interesting": "+"
  },
  {
    "title": "Real-time collaborative coding in a web IDE",
    "abstract": "This paper describes Collabode, a web-based Java integrated development environment designed to support close, synchronous collaboration between programmers. We examine the problem of collaborative coding in the face of program compilation errors introduced by other users which make collaboration more difficult, and describe an algorithm for error-mediated integration of program code. Concurrent editors see the text of changes made by collaborators, but the errors reported in their view are based only on their own changes. Editors may run the program at any time, using only error-free edits supplied so far, and ignoring incomplete or otherwise error-generating changes. We evaluate this algorithm and interface on recorded data from previous pilot experiments with Collabode, and via a user study with student and professional programmers. We conclude that it offers appreciable benefits over naive continuous synchronization without regard to errors and over manual version control.",
    "keywords": "pair programming; collaborative editing; collaboration",
    "released": 2011,
    "link": "https://doi.org/10.1145/2047196.2047215",
    "interesting": "+"
  },
  {
    "title": "ASIDE: IDE support for web application security",
    "abstract": "Many of today’s application security vulnerabilities are introduced by software developers writing insecure code. This may be due to either a lack of understanding of secure programming practices, and/or developers’ lapses of attention on security. Much work on software security has focused on detecting software vulnerabilities through automated analysis techniques. While they are effective, we believe they are not sufficient. We propose to increase developer awareness and promote practice of secure programming by interactively reminding programmers of secure programming practices inside Integrated Development Environments (IDEs). We have implemented a proof-of-concept plugin for Eclipse and Java. Initial evaluation results show that this approach can detect and address common web application vulnerabilities and can serve as an effective aid for programmers. Our approach can also effectively complement existing software security best practices and significantly increase developer productivity.",
    "keywords": "secure software development; secure programming; interactive support; application security",
    "released": 2011,
    "link": "https://doi.org/10.1145/2076732.2076770",
    "interesting": "-"
  },
  {
    "title": "Redprint: Integrating API specific \"instant example\" and \"instant documentation\" display interface in IDEs",
    "abstract": "Software libraries for most of the modern programming languages are numerous, large and complex. Remembering the syntax and usage of APIs is a difficult task for not just novices but also expert programmers. IDEs (Integrated Development Environment) provide capabilities like autocomplete and intellisense to assist programmers; however, programmers still need to visit search engines like Google to find API (Application Program Interface) documentation and samples. This paper evaluates Redprint - a browser based development environment for PHP that integrates API specific \"Instant Example\" and \"Instant Documentation\" display interfaces. A comparative laboratory study shows that integrating API specific \"Instant Example\" and \"Instant Documentation\" display interfaces into a development environment significantly reduces the cost of searching and thus significantly reduces the time to develop software.",
    "keywords": "redprint; instant example display interface; instant documentation display interface; example centric programming",
    "released": 2011,
    "link": "https://doi.org/10.1145/2046396.2046408",
    "interesting": "+"
  },
  {
    "title": "Fishtail: From task context to source code examples",
    "abstract": "Implementing software development tools as integrated development environment (IDE) plugins gives tools direct access to a range of useful representations of the program being created and can improve programmer efficiency. These benefits must be weighed against the effort to integrate the tool into the IDE, effort which may need to be repeated for each IDE targeted. In this paper, we introduce Fishtail, a prototype plugin for the Eclipse IDE, which assists programmers in discovering code examples and documentation on the web relevant to their current task. Fishtail uses a detailed history of programmer interactions with the source code to automatically determine relevant web resources. We describe the key factors that make it attractive to implement Fishtail as a plugin, and the requirements Fishtail imposes on the plugin/IDE interface. To reach a broader user base and understand how well our tool supports different programming styles and IDE architectures, we have recently begun investigating how to make a version of Fishtail available in the Visual Studio IDE. We outline some of the challenges we face in trying to reuse code from the original Eclipse plugin.",
    "keywords": "program views; interaction history; example-centric development; development environment; degree-of-interest",
    "released": 2011,
    "link": "https://doi.org/10.1145/1984708.1984722",
    "interesting": "-"
  },
  {
    "title": "Wikigramming: A wiki-based training environment for programming",
    "abstract": "Wiki is one of the most successful technologies in Web 2.0 because it is so simple that anyone can start using it instantly. The main aim of this research is to realize a collaborative programming environment that is as simple as Wiki. Each Wiki page contains source code of a Scheme function which is executed on the server. Users can edit any function at any time without complicated procedure, and see the results of their changes instantly. In order to avoid intentional or unintentional destruction of working programs, when users attempt to modify existing functions, the modified version must pass unit tests written by other users. Though changes are made anonymously, we can have some confidence if test cases are written by many users.",
    "keywords": "wiki; unit test; training; programming environment",
    "released": 2011,
    "link": "https://doi.org/10.1145/1984701.1984703",
    "interesting": "-"
  },
  {
    "title": "HyperSource: Bridging the gap between source and code-related web sites",
    "abstract": "Programmers frequently use the Web while writing code: they search for libraries, code examples, tutorials, and documentation. This link between code and visited Web pages remains implicit today. Connecting source code and browsing histories might help programmers maintain con-text, reduce the cost of Web page re-retrieval, and enhance understanding when code is shared. This note introduces HyperSource, an IDE augmentation that associates browsing histories with source code edits. HyperSource comprises a browser extension that logs visited pages; an IDE that tracks user activity and maps pages to code edits; a source document model that tracks visited pages at a character level; and a user interface that enables interaction with these histories. We discuss relevance heuristics and privacy issues inherent in this approach. Informal log analyses and user feedback suggest that our annotation model is promising for code editing and might also apply to other document authoring tasks after refinement.",
    "keywords": "browsing history; code editors; edit wear",
    "released": 2011,
    "link": "https://doi.org/10.1145/1978942.1979263",
    "interesting": "-"
  },
  {
    "title": "Wiki as business application platform: The MES showcase",
    "abstract": "This presentation shows the business application suite mHub that implements the core components of a manufacturing execution system (MES) purely with a specially developed application wiki distribution. The novelty of the application wiki is its \"wiki as business application platform\" approach, that abstracts all necessary technologies to implement the solution within the edit page area. Other than application wikis targeted for end users, that merely serve as query interfaces to existing business applications, this application wiki enables developers to script every aspect of the application domain within the wiki itself.",
    "keywords": "ERP; MES; application wikis; collaborative software development; manufacturing automation and control; rapid application development; software engineering; web IDE",
    "released": 2011,
    "link": "https://doi.org/10.1145/2038558.2038603",
    "interesting": "-"
  },
  {
    "title": "CEclipse: An Online IDE for Programing in the Cloud",
    "abstract": "Due to the benefits of cloud computing, many desktop applications have been migrated into the cloud. In order to program in the cloud, lots of IDEs are also moved into the cloud at recent years. Although online IDE can bring developers a lot of convenience for their developing process, some tough problems are still less touched. This paper summarized three main kinds of actual problems from three aspects (Function implementation, Security guarantee, Advanced utilization) encountered when using the online IDE, and proposed three solutions (Services composition, Program behavior analysis, Program behavior mining) to handle these according problems. Finally, this paper introduce a real online IDE (CEclipse) developed by our research group and apply the three solutions in this online IDE.",
    "keywords": "Cloud Computing; Service Composition; Program Analysis; Program Behavior; Online IDE",
    "released": 2011,
    "link": "https://doi.org/10.1109/SERVICES.2011.74",
    "interesting": "+"
  },
  {
    "title": "Web-based networked software development environment for programming",
    "abstract": "In this paper, a networked programming environment is proposed, using Web as a man-machine interface. It is seamlessly integrated by Ch computing environment, Web server and some compiler/interpreter. It uses CGI programs as middleware for connecting various software tools. Ch computing environment is a complete C interpreter. As execution engine of C/C++ script, it achieves to run CGI programs. CGI stores and compiles these programs which are from the Web forms, and returns results to the Web browser. The networked programming environment uses HTTP protocol to transport data, and achieves multi-user sharing the environment to debug program. Experimental results show that the simulation environment is feasible, with sharing and platform-independent characteristics.",
    "keywords": "browser; middleware; web server; programming",
    "released": 2011,
    "link": "https://doi.org/10.1109/CSSS.2011.5974935",
    "interesting": "-"
  },
  {
    "title": "Automated Assessment in a Programming Tools Course",
    "abstract": "Automated assessment systems can be useful for both students and instructors. Ranking and immediate feedback can have a strongly positive effect on student learning. This paper presents an experience using automatic assessment in a programming tools course. The proposal aims at extending the traditional use of an online judging system with a series of assignments related to programming tools. Some empirical results on how students use an automated assessment system in a CS2 course are presented. Research suggested that automated assessment systems promoted the students' interest and produced statistically significant differences in the scores between experimental and control groups.",
    "keywords": "Active learning; competitive learning; e-learning; programming tools; Web tool",
    "released": 2011,
    "link": "https://doi.org/10.1109/TE.2010.2098442",
    "interesting": "-"
  },
  {
    "title": "Enhance Java Software Development with Knowledge Acquisition and Management Tools",
    "abstract": "The Semantic Web can be a very promising platform for developing knowledge management systems. It has been applied in many domains, especially in Software Engineering. The main benefit is high improvement in the precision by searching for knowledge, as well as the possibility to retrieve a composition of knowledge sources which are relevant for the software development process. However, the problem is how to represent knowledge in the machine-understandable form, so that relevant knowledge can be found by machine agents. This paper will present a framework that improves Java software development process with our knowledge acquisition and management tools.",
    "keywords": "Semantic web; software engineering; IDE; Java; Knowledge management",
    "released": 2011,
    "link": "https://doi.org/10.1109/KSE.2011.19",
    "interesting": "-"
  },
  {
    "title": "A CG Learning Tool with Guided Programming Environment",
    "abstract": "3 dimensional computer graphics (3DCG) becomes an easily accessible technology for general public. The 3DCG production skill is becoming one of mandatory technical capabilities for IT engineers. The learning aids such as text books and related web pages consist of captured 2D images for understanding 3DCG theories and program codes for explaining specific algorithms. The learners should work with multiple materials and tools including the books, some tools for learning 3D modeling, rendering, and animation, and a development tool for acquiring graphics programming skill. These efforts require enormous amount of time and impose a heavy burden on the learners. To solve the problem, we have been developing a self-contained 3DCG learning support system. It helps the learners to intuitively acquire the 3DCG production skills through a hands-on graphics programming environment.",
    "keywords": "computer graphics; 3D visualization; learning support system; graphics programming; graphics education",
    "released": 2011,
    "link": "https://doi.org/10.1109/NBiS.2011.77",
    "interesting": "-"
  },
  {
    "title": "Development environment for layout design of e-commerce applications using block-based approach",
    "abstract": "E-commerce is a process of buying, selling, transferring or exchanging products or services via the Internet. It is expected that in the future, more and more business transactions will be carried out through e-commerce. The design of an e-commerce website plays a significant role in attracting potential customers to visit the site. It can also influence customer's decision to make purchase and to return to the site. Good e-commerce applications need to be developed by professional programmers and the cost is substantially high. With the advent of Web 2.0 technology, end-users are now able to create their own web content and applications such as blog, facebook and friendster. Some providers such as Google provide a mechanism for end-users to create web sites and host e-commerce applications. However, using these technologies, users can only select and customize the application according to provide templates. One of the main problems with this approach is that they do not support a flexible layout design. This implies that an end-user cannot change the layout of a selected template. This paper presents a flexible and easy to use block-based development environment for creating customized e-commerce applications. A block is a single layer software component that performs a single function. Concurrent project has developed blocks for e-commerce application. The proposed development environment is intended for non-programmer end-users to design and develop their own e-Commerce applications by selecting and positioning blocks on a page.",
    "keywords": "development environment; layout design; e-commerce application; block based",
    "released": 2011,
    "link": "https://doi.org/10.1109/ICEEI.2011.6021654",
    "interesting": "-"
  },
  {
    "title": "Towards an Integrated Teaching Environment for Parallel Programming",
    "abstract": "In this paper we present the integration of state of the art, open source, production level tools into a parallel programming environment, used for teaching parallel programming in MPI and OpenMP. Based on experiences introduced during this case study, and opinions gathered by an online questionnaire, a refined set of missing features that would strengthen the environment's educational role is defined.",
    "keywords": "parallel distributed processing; parallel programming; high performance computing; software tools; integrated development environments; educational scenarios",
    "released": 2011,
    "link": "https://doi.org/10.1109/PCI.2011.16",
    "interesting": "-"
  },
  {
    "title": "Supporting introductory test-driven labs with WebIDE",
    "abstract": "WebIDE is a new web-based development environment for entry-level programmers with two primary goals: minimize tool barriers to writing computer programs and introduce software engineering best practices early in a student's educational career. Currently, WebIDE focuses on Test-Driven Learning (TDL) by using small iterative examples and introducing lock-step labs, which prevent the student from moving forward until they finish the current step. However, WebIDE does not require that labs follow TDL. Instructors can write their own labs for WebIDE using any software engineering or pedagogical approach. Likewise, instructors can build custom evaluators - written in any language - to support their approach and provide detailed error messages to students. We report on a pilot study in a CS0 course where students were split into two groups, one that used WebIDE and one that didn't. The WebIDE group showed a significant improvement in performance when writing a simple Android application. Additionally, among students with some programming experience, the WebIDE group was more proficient in writing unit tests.",
    "keywords": "",
    "released": 2011,
    "link": "https://doi.org/10.1109/CSEET.2011.5876137",
    "interesting": "+"
  },
  {
    "title": "U2-Route: A hardware tool to test internet quality of service proposals",
    "abstract": "In this paper, we describe a new hardware tool to test new Quality of Service proposals. Thus, we want to reduce the digital divide between Latin America development countries. The problem is that in our region it is difficult to build hardware prototypes for new networking protocols and methods. Our tool, named U2-Route, is based on a NetFPGA board, an open source hardware system developed in Stanford University. U2-Route has a routing core and a Web Interface that allows research groups belonging to Universities to test new developments. As an example, we show the methodology to design and to implement a Classifier and the results obtained. © 2011 ACM.",
    "keywords": "FPGA; hardware development tools; internet; quality of service; remote lab; router architecture; routing",
    "released": 2011,
    "link": "https://doi.org/10.1145/2078216.2078226",
    "interesting": "-"
  },
  {
    "title": "Inherited SAP development concepts using genuine IT programming tools",
    "abstract": "Program development concepts are highly dependent on software architecture, complexity of algorithm, re-usability purposes, efficiency, efficacy, etc. The evolution of SAP development concepts reflects the changes through important milestones, such as mainframe, client-server and service-oriented architecture. Those issues can easily be resolved by making new programs which were impossible to handle the requirements due to the memory resources, or the speed of the computer either at client or servers side. Procedural and object-oriented SAP programs use vastly different approaches. There is a lack, however, to build an architecture-independent set of SAP development concepts that can be re-used in any SAP versions and architecture. This paper introduces a new approach to build an SAP Development Repository, in which re-usable concepts are collected applied in different architectures and versions. © 2011 IEEE.",
    "keywords": "ALV List; Interactive List; List processing; mySAP Business Suite; SAP R/2; SAP R/3; Simple List; User Interface; Web Dynpro; Web Services",
    "released": 2011,
    "link": "https://doi.org/10.1109/CINTI.2011.6108569",
    "interesting": "-"
  },
  {
    "title": "Supporting hierarchical robot programming in integrated development environment (IDE) of open platform for robotic services (OPRoS)",
    "abstract": "There are many platforms for robot S/W applications. To reduce the complexity of robot programming, components, the units of robot software for building and recycling source, are employed, and there are several component-based platforms. As components are the lowest units of robot S/W, there are several levels above them to convey the user's intentions to a robot. There are the application level, task level, and content/service level. This paper introduces robot programming levels which are interchangeable and recyclable. Also integrated development environments are presented to support the robot programming levels in Open Platform for Robotic Services. © 2011 ICROS.",
    "keywords": "IDE; OPRoS; Robot SW Programming",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863064639&partnerID=40&md5=054eca0e6f9e8c3b449c1a406e2c92ec",
    "interesting": "-"
  },
  {
    "title": "An integrated graphical development environment for the implementation of WSN",
    "abstract": "Currently wireless sensor networks (WSN) have become one of the most innovative and promising technologies. This kind of networks has been successfully applied in a large number of applications of great importance for the society such as: environmental monitoring, military applications traffic control, patient monitors and healthcare devices, etc. One of the most important matters in the development of a WSN is the embedded software that runs in the network nodes. This software implements the protocols and services and carries out the data gathering process. In this paper we propose a new methodology for the development of this embedded software based on a graphical interface that facilitates a rapid and easy prototyping of different applications. Using this programming environment it is not necessary to have a previous knowledge of any programming language, since the final code is automatically generated using an integrated development environment based on LabVIEW. © 2011 IEEE.",
    "keywords": "environmental monitoring; TinyOS; wireless sensor networks; WSN applications",
    "released": 2011,
    "link": "https://doi.org/10.1109/MASS.2011.159",
    "interesting": "-"
  },
  {
    "title": "Intellectualized MCU integrated development environment based on GCC technology",
    "abstract": "This design has proposed and achieved a kind of intellectualized MCU integrated development environment based on GCC technology. It stands at the angle of \"system\" and uses the \"top-down\" method to carry on project design. Moreover, this development environment has introduced \"the hierarchical software design thought\" to achieve the goal of standardizing user code and improving the development efficiency. By using this development environment to carry on project design, users can spare more energy at user logic realization and develop high quality code efficiently and quickly; when introduced into teaching, this design could decrease the difficulty of studying MCU principle course and help students to form the standardized programming habits and learn good programming method. © 2011 IEEE.",
    "keywords": "GCC; MCU integrated development environment; the hierarchical software design thought",
    "released": 2011,
    "link": "https://doi.org/10.1109/ICCSNT.2011.6182088",
    "interesting": "-"
  },
  {
    "title": "Integrated development environment in shipbuilding computer systems",
    "abstract": "Computer applications for shipbuilding were born to make ship design and production more efficient. The early programs soon became complex systems, expanding their functionality to all aspects of the ship life cycle. Eager to meet the ever-increasing requirements of their customers, software houses must provide not only advanced systems but also parallel development toolkits for users to develop in-house extensions. Taking as a reference the Foran System, this paper reviews the key features of a class of those toolkits, the integrated development environments: intuitive programming language, insulation from mainstream system changes, reduced maintenance expense and rapid response to evolving requirements. Our conclusion is that modern shipbuilding computer systems gain acceptance among designers and builders if they are able to offer alternative but convergent ways to develop in-house software extensions with reasonable effort, if only to perform repetitive tasks, integrate best-practice design rules, simplify design checks and automate drawing generation. ©2011: The Royal Institution of Naval Architects.",
    "keywords": "",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864865008&partnerID=40&md5=c670843e869d9a0a5cb98a33533181c7",
    "interesting": "-"
  },
  {
    "title": "Building a collaborative virtual environment: A programming language codesign approach",
    "abstract": "Developing 3D virtual environments requires an advanced level of programming expertise. In many cases, working on such an application involves a wide range of programming activities such as 3D graphics, networking, user interfaces and audio programming. At the same time, such applications are usually real time and performance critical. The complexity of developing such an application comes from two sources: first, the programming language used in development with its strengths and also the limitations it imposes. The second is the requirements of the virtual environment itself, with its dynamics and size. Some languages are more suitable than others for any given application domain, but in general once a programming language is selected, the main focus is the application itself and not the language used. This paper presents an approach where a virtual environment (CVE) and its implementation language (Unicon) evolved together over the course of the project development, derived from emerging functional and performance requirements. The Unicon language was improved and new features were added over time to meet new demands and address the complexities that arose at the application level. This approach was combined with developing a framework to build virtual worlds with a social integrated development environment and to populate those worlds with non-player characters. © 2011 IEEE.",
    "keywords": "3D models; cve; language design; language-application codesign; object selection; social IDE; virtual worlds",
    "released": 2011,
    "link": "https://doi.org/10.1109/CW.2011.37",
    "interesting": "-"
  },
  {
    "title": "Investigating how graphical and textual computer-based programming environments support student inquiry in science during modeling",
    "abstract": "In this paper we investigate the ways that a graphical and a textual Computer-based Programming Environment (CPE) support student inquiry in science during scientific modeling. We analyzed the conversations of 78 sixth-graders (39 students per CPE group) that took place during the construction of models, as well as, student-constructed models specifically looking for ways that CPEs support student scientific inquiry. Our findings showed that CPEs enable students to develop models of physical phenomena and operationally define physical entities and physical properties, which provides students with a commonly shared language for communicating and understanding each others' ideas in science. We also found that programs in CPEs produce a computer microworld that is a structured environment learners can use to explore and manipulate a rule-generated universe, subject to particular assumptions and constraints that serve as representations of aspects of the natural world. Microworlds can also provide learners with opportunities to manipulate realities in ways that learners cannot do with physical objects. Implications from this study suggest productive features for computer-based tools that can be embedded in web-based learning platforms for supporting students' inquiry and science learning.",
    "keywords": "Computer-based programming environments; Inquiry; Modeling-based learning; Science",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867504766&partnerID=40&md5=8d3fcde6e571777ad9a799c20757669c",
    "interesting": "-"
  },
  {
    "title": "Adessowiki: Collaborative scientific programming environment",
    "abstract": "Adessowiki is a collaborative environment for teaching and research in image processing. Adessowiki is composed of a collection of collaborative web pages in the form of a wiki. The articles of this wiki can embed programming code that will be executed on the server when the page is rendered, incorporating the results as figures, texts and tables on the document. The integrated collaborative environment of Adessowiki, containing documentation, programming code and execution results is able to create several possibilities of applications. This paper presents some of the applications where Adessowiki has been used, such as Scientific Writing and Virtual Learning Environment. © 2011 IEEE.",
    "keywords": "collaborative programming; image processing teaching; software engineering",
    "released": 2011,
    "link": "https://doi.org/10.1109/SIBGRAPI-T.2011.12",
    "interesting": "-"
  },
  {
    "title": "InterAct: A framework to generate device specific smart user interfaces",
    "abstract": "InterAct is a form based User Interfaces (UI) designing framework for non-technical users. It can be used to design UIs for multiple device platforms. The framework mainly consists of two parts, an Integrated Development Environment (IDE) and a conversion library. The designed UIs are saved in an XML format, IXML. These user sketches are then converted into HTML pages which can be displayed in various devices using the conversion library. Data is bound to the UI elements at runtime. Usability is the major concern of the InterAct Framework. This aspect is addressed by applying the best practices of Human Computer Interaction (HCI) in order to provide the user a better experience. © 2011 IEEE.",
    "keywords": "conversion; data binding; device specific; HCI; IDE; segmentation; WURFL",
    "released": 2011,
    "link": "https://doi.org/10.1109/iUSEr.2011.6150550",
    "interesting": "-"
  },
  {
    "title": "Tools to support the creation and management of Real-Time Multi-Agent Systems",
    "abstract": "Developing Multi-Agent Systems for Real-Time environments is a complex task. If the foundations are well settled in the students, it is desirable that they spend most of the time for their projects focused on the algorithms and design and code of the system, not with the Real-Time system implementation details. A toolkit has been used to teach a subject of the Pattern Recognition, Artificial Intelligence and Computer Vision Master's degree, to ease the task of developing such systems. The evaluation of the experience with the students shows that is a very convenient toolkit for this purpose. © 2011 IEEE.",
    "keywords": "Development Tools; Multi-agent Systems; Real-Time applications",
    "released": 2011,
    "link": "https://doi.org/10.1109/NWeSP.2011.6088225",
    "interesting": "-"
  },
  {
    "title": "Research and development environments for robot services and its implementation",
    "abstract": "We have proposed the RSi Research Cloud (RSi-Cloud), which enables integration of robot services with internet services. Until now, we have developed a surveillance service using robot cameras on the cloud environment, and have realized internet connection from robots implemented with RSNP (Robot Service Network Protocol). This paper reports a design result of Robot Service HTML interface (RSHi), which is a mechanism to treat robot applications deployed in RSi-Cloud by the same way as RSNP robot clients. RSHi makes it possible to deploy RSNP service applications within firewall systems, and as a result, a robot service expansion can be expected. Moreover, in this paper, we show a usage example of micro-services on a service robot which uses a face detection function. © 2011 IEEE.",
    "keywords": "",
    "released": 2011,
    "link": "https://doi.org/10.1109/SII.2011.6147465",
    "interesting": "-"
  },
  {
    "title": "The learning and productivity benefits to student programmers from real-world development environments",
    "abstract": "Existing research and practice in software development environments shows no clear consensus on the most appropriate development tools to use; these may range from simple text editors through teaching-oriented examples to full commercial integrated development environments (IDEs). This study addresses this gap by examining student perceptions of two development environments at opposite ends of the complexity spectrum. The results, gathered over several years using students at a range of experience levels, suggest that complex commercial IDEs are appropriate for programming education, even for entry-level students. Indeed, they offer a range of features that may improve the understanding and productivity of students. However, given the greater simplicity of simple text editors and potential for students to become overly dependent upon the support mechanisms provided by IDEs, teaching IDEs in combination with simple text editors appears to offer an ideal combination to maximize learning opportunities and student employability. © 2011 EDSIG.",
    "keywords": "IDE; Integrated development environment; Learning; Programming; Teaching",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865620372&partnerID=40&md5=866f53f594aaf566cfa4f1ce1ce79fc9",
    "interesting": "+"
  },
  {
    "title": "The impact of tools supported in integrated-development environments on program comprehension",
    "abstract": "Program comprehension is a cognitive task done by a software programmer. Task is usually done manually, but in some cases tool support inside integrated development environment can facilitate the hard work. In order to test those tools, a study between manual program comprehension and program comprehension with tool support is presented in this paper. An empirical study that faces the alternatives has been done. In experiment, the same test has been used twice (with and without tools) and results have been compared and statistically analyzed in terms of test correctness and efficiency. The results regarding program comprehension with students confirm significant benefits in terms of correctness when using tools for program comprehension.",
    "keywords": "Controlled experiments; Integrated-development environments; Program comprehension tools",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859042896&partnerID=40&md5=2cafa45d80906b2e4df493d6e81bcb16",
    "interesting": "-"
  },
  {
    "title": "Tamulator: A tool to manage task model-based usability evaluation in development environments",
    "abstract": "We present the TaMUlator tool for managing and automating an end-to-end task model-based usability evaluation at the Integrated Development Environment (IDE) level through providing a set of APIs and interfaces for tagging tasks and variables, creating task models written in a formal task modeling language TaMoGolog, defining evaluation experiments, recording experiment data, and automatically analyzing the results. We found that using TaMUlator tool by development teams enables ongoing professional usability evaluation of the developed products. © 2011 IADIS.",
    "keywords": "TaMoGolog; TaMUlator; Task models; Usability evaluation",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865079992&partnerID=40&md5=4cecde20b6d71f2ec2936c2cc1be2228",
    "interesting": "-"
  },
  {
    "title": "Using model translation for software backward compatibility in DSP SDK development",
    "abstract": "Data model changes in software applications raise a reusability problem with files saved before the changes. This paper describes program support for data translation by using a software extension for an integrated development environment. The extension translates data from a binary file used by earlier versions of the tool to a set of XML files which correspond to the model of the new tool. Logic behind data is maintained using semantic translation of read data. © 2011 IEEE.",
    "keywords": "Backward compatibility; Data model; IDE; Reusability; SODiS; Translation",
    "released": 2011,
    "link": "https://doi.org/10.1109/TELFOR.2011.6143799",
    "interesting": "-"
  },
  {
    "title": "Development of a didactic model of the hydrologic cycle using the TerraME graphical interface for modeling and simulation",
    "abstract": "Many modeling and simulation platforms provide general programming languages as interfaces for model construction. Some offers high-level modeling languages with conceptual basis and services to represent data structures and rules that will determine the model behavior. However, the direct use of a computational language is still a limiting factor to the broad usage of these platforms. Modelers often have different scientific backgrounds, presenting a lack of background on algorithms and programming techniques. Furthermore, there is no established methodology for model development. These problems confuse the modelers forcing them to deviate their attention from the problem being solved. We argue that a visual integrated development environment (IDE) can solve these problems, making easy the understanding and communication of the model conception and design. An IDE can also enforce the use of a common model development methodology. In this paper we describe a methodology for modeling Earth system phenomena using the TerraME GIMS tool, which is a visual IDE for the TerraME modeling and simulation platform. It enables users to build environmental models through visual metaphors that graphically describe models structure. We demonstrate the use of TerraME GIMS and present our methodology for the development of a didactic model for the hydrologic cycle. Future works include the development of diagrams to better describe the model behavior, including agent synchronization and communication. © 2011 Springer-Verlag.",
    "keywords": "Environmental Modeling; Integrated Development Environment; Modeling Methodology; TerraME GIMS; Visual Programming",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-21898-9_7",
    "interesting": "-"
  },
  {
    "title": "A three-fold integration framework to incorporate user-centered design into agile software development",
    "abstract": "We present a framework that incorporates user-centered design (UCD) philosophy into agile software development through a three-fold integration approach: at the process life-cycle level for the selection and application of appropriate UCD methods and techniques in the right places at the right times; at the iteration level for integrating UCD concepts, roles, and activities during each agile development iteration planning; and at the development-environment level for managing and automating the sets of UCD activities through automated tools support. We also present two automated tools-UEMan and TaMUlator, which provide the realization of the development-environment level integration. © 2011 Springer-Verlag Berlin Heidelberg.",
    "keywords": "agile software development; integrated development environment (IDE); TaMUlator; UEMan; usability evaluation; User-centered design (UCD)",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-21753-1_7",
    "interesting": "-"
  },
  {
    "title": "Swide: Semantic web integrated development environment",
    "abstract": "Ontology is a specification of conceptualization. This paper introduces an environment to develop semantic web applications. This environment integrates a lot of tools such as an editing capability, logic reasoner and semantic search engine. Design and implementation of a generalized ontology editor is presented in this paper through which the user may create, edit, validate, open, search (local and global), or visualize an ontology or an instance file. The user may edit an instance to be stored either in a RDF/XML file, OWL/XML, xml knowledge base or other formats. The user may present the ontology hierarchy and the knowledge base in a tabular form. The environment provides an interface through which the user may consult the knowledge base by SQL-like statements. It also allows the user to map ontology to another. It also introduces the virtualization concept providing a mechanism to categorize the ontology instances based on given ontology features. It also provides logic reasoner so we may check the truth of an instance against a specific knowledge base. A semantic search engine is also available either locally or globally.",
    "keywords": "Jena; Ontology Editor; OWL; RDF; Semantic Web; Sparql; XML",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-80055071097&partnerID=40&md5=fe470f124eba6a8aef9686226b0c63c9",
    "interesting": "-"
  },
  {
    "title": "Supporting end-user development of web sites through MAMBA",
    "abstract": "This paper presents EUD-Mamba, a prototype system for End-User Development of web sites. EUD-Mamba's goal is to allow users to build a web site simply by describing the content they want to publish in a conceptual way: what the content is and how it should look like in the site. The system is based on the MAMBA (Multi-device Adaptive Model-Based Approach) web personalization engine. The proposed approach is substantiated by a running example showing how to build a simple PhD personal web site using EUD-Mamba. © 2011 Springer-Verlag.",
    "keywords": "End-User Development; web development tools; web personalization; web site design",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-21530-8_46",
    "interesting": "-"
  },
  {
    "title": "An IDE for developing mobile applications for smart phones",
    "abstract": "Mobile Devices have been gaining increasing acceptance for developing Multimedia-rich applications. Everyday new Technologies in Mobile Devices have been developed by developers and are competing with the Previous in Market. Nowadays developing applications for Smart phones is common today and nearly thousands of new applications are coming to the Market every day. Software firms have also developed many programming platforms and tools for the developers to write programs for Mobile Devices. But so far there is no Specific IDE developed to create mobile application easily by just Drag and Drop method to make even the non-programmers to develop application for the smart phones. This paper presents an IDE for developing Mobile Application without Programming for Smart phones. The IDE allows non-programmer to develop a mobile application for smart phones efficiently. The IDE has navigation control tools in iconic format that can be used to incorporate within the application by drag and drop method and directly installed to the smart phones as applications. With the help of the GUI Builders and ADT plug-in the IDE is created and tested against the Android Mobile Phones. © 2011 Springer-Verlag Berlin Heidelberg.",
    "keywords": "ADT-Android Development Tool; GUI-Graphical User Interface; IDE-Integrated Development Environment",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-24043-0_70",
    "interesting": "-"
  },
  {
    "title": "Yes, now we can: Technological change and the exploitation of entrepreneurial opportunities",
    "abstract": "The paper investigates how technological change in an industry influence which individuals will identify and exploit entrepreneurial opportunities. We propose that the introduction of new development tools will change knowledge-barriers to entry because they enable the abstraction of specialized knowledge that was previously needed for development. Empirically we test the argument using data from the web design industry in a Nordic country during the period 1992-2003. We compare the education and experience of founders before and after the introduction of web administration tools in 1998 and find a significant difference, which supports the main thesis of our argument. © 2011 Elsevier Inc. All rights reserved.",
    "keywords": "Capital goods of development; Development tools; Entrepreneurial opportunities; Entrepreneurship; New technology-based firms; New ventures; Technological change; Web design industry",
    "released": 2011,
    "link": "https://doi.org/10.1016/j.hitech.2011.09.003",
    "interesting": "-"
  },
  {
    "title": "The design of blocks integration tool to support end-user programming",
    "abstract": "End-user programming is a term that refers to computer programming carried out by end users who do not necessarily have a background in writing programs in conventional programming languages. There is much interest amongst end-users to be able to write their own programs. In order to support end-user programming, the concept of Block Based Software Development has been introduced. In this environment, end-users can develop applications by selecting, customizing and combining software blocks. A block is basically a single-layer software component that can perform a specific function. It is assumed that in this environment, there will be a large number of blocks available to be used by the end-users. Block Integration Tool is an Integrated Development Environment (IDE) that can be used by end-users to develop applications. By using this tool, end-users can select a block and then drag it into the work area. Customization can be done by changing some properties of the block such as colour, text, audio and video content. This block can then be combined with the existing blocks in the work area. Once the process of selecting and combining blocks is completed, an application can then be generated. Implementations are carried out using Netbeans version 6.9. The evaluation of the tool will be carried out to ensure that it is suitable to be used by end users. © 2011 IEEE.",
    "keywords": "Block-based; development tool; end-user; integrating",
    "released": 2011,
    "link": "https://doi.org/10.1109/ICEEI.2011.6021657",
    "interesting": "-"
  },
  {
    "title": "Proposing the new algorithm and technique development for integrating web table extraction and building a mashup",
    "abstract": "Problem statement: Nowadays, various types of data in web table can be easily extracted from the Internet, although not all of web tables are relevant to the users. As we may know, most web pages are in unstructured HTML format, making web table extraction process very time consuming and costly. HTML format only focuses on the presentation, not based on the database system. Therefore, users need a tool in dealing with that process. Approach: This research proposed an approach for implementing web table extraction and making a Mashup from HTML web pages using Xtractorz application. It is also discussed on how to collaborate and integrate a web table extraction process in the stage of building a Mashup, i.e., Data Retrieval, Data Source Modeling, Data Cleaning/ Filtering, Data Integration and Data Visualization. The main issue lies in stage of data modeling creation, in which Xtractorz must be able to automatically render Document Object Model (DOM) tree in accordance to HTML tag or code of the web page from which the table is extracted. To overcome that, the Xtractorz is equipped with algorithm and rules so it can enable to specifically analyze the HTML tags and to extract the data into a new table format. The algorithm is created by using recursive technique within a user-friendly GUI of Xtractorz. Results: The approach was evaluated by conducting experiment using Xtractorz and other similar applications, such as RoboMaker and Karma. The result of experiment showed that Xtractorz is more efficient in completing the experiment tasks, since Xtractorz has fewer steps to complete the whole tasks. Conclusion: Xtractorz can give a positive contribution in terms of algorithm technique and a new approach method to web table extraction process and making a Mashup, where the core algorithm can extracts web data tables using recursive technique while rendering the DOM tree model automatically. © 2011 Science Publications.",
    "keywords": "Data integration; Document object model (dom); HTML format; Integrated development environment (ide); Mashup stages; Recursive algorithm; Web table extraction",
    "released": 2011,
    "link": "https://doi.org/10.3844/jcssp.2011.129.142",
    "interesting": "-"
  },
  {
    "title": "Game development with game maker, flash and unity",
    "abstract": "This tutorial will present and compare three software platforms for developing video games: Game Maker, Flash and Unity Pro. Game Maker is suited for developing quick prototypes. Flash is a natural choice for production of web-based software and Unity is a good choice for gamers who wish to develop and deploy their products to a multitude of platforms. The first part will involve modifying and creating games with game maker. The second part will involve modifying and creating games with flash. The third part will focus on unity. Finally, a discussion on the pros and cons of each platform is presented. © 2011 Author.",
    "keywords": "flash; game engine; game maker; IDE; prototypes; SDLC; unity; video games",
    "released": 2011,
    "link": "https://doi.org/10.1145/2016039.2016049",
    "interesting": "-"
  },
  {
    "title": "A visual programming language for drawing and executing flowcharts",
    "abstract": "With recent advances in graphical user interfaces, more and more tasks on computers have become easier to perform. Out of the belief that creating computer programs can also be one of them, visual programming languages (VPLs) have emerged. The goal of VPLs is to shift a part of work from the programmer to the IDE so that the programmer can focus more on algorithm logic than the syntax of the implementation programming language. In this article, the methods required to build a VPL are presented, with an emphasis on a novel method of code generation in a WHILE language. Also, the methods for achieving basic principles of VPLs will be shown suitable visual presentation of information and guiding the programmer in the right direction using constraints. These methods are demonstrated on an example of vIDE, a VPL based on the Eclipse integrated development environment (IDE). The design of vIDE with respect to the Eclipse Graphical Modeling Framework (GMF) is described. The concept of a flowchart graphical notation is examined in contrast with the algorithm model it maps to. Finally, the disambiguity of the model representation of an algorithm is discussed and the methods for transforming it to an actual implementation in a programming language. © 2011 MIPRO.",
    "keywords": "Algorithm; Eclipse; Flowchart; GMF; GOTO; GUI; Model; OCL; Programming language; Python; vIDE; Visual programming; VPL; WHILE",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052288226&partnerID=40&md5=246eaec665631998a96006d0c4ab5f6a",
    "interesting": "-"
  },
  {
    "title": "An internet-based scientific programming environment",
    "abstract": "A change currently unfolding is the move from desktop computing as we know it, where applications run on a person's computer, to network computing. The idea is to distribute an application across a network of computers, primarily the Internet. Whereas people in 2005 might have used Microsoft Word for their word-processing needs, people today might use Google Docs. This paper details a project, started in 2007, to enable scientific programming through an environment based in an Internet browser. Scientific programming is an integral part of math, science and engineering. This paper shows how the Calq system can be used for scientific programming, and evaluates how well it works. Testing revealed something unexpected. Google Chrome outperformed other browsers, taking only a fraction of the time to perform a complex task in Calq. © 2011 Springer-Verlag Berlin Heidelberg.",
    "keywords": "Calq; Google Web Toolkit; scientific programming; web-based programming",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-21984-9_1",
    "interesting": "-"
  },
  {
    "title": "Engineering cloud: Flexible and integrated development environment",
    "abstract": "Nowadays product development must be done speedily and in a way that can respond to changing business environments. Fujitsu has created a development environment that uses technical computing and is known as Flexible Technical Computing Platform (FTCP), on a cloud. Fujitsu is providing it as Engineering Cloud to its customers and Product Development Department. Based on an example of applying Engineering Cloud to mobile phones, this paper describes the characteristics of FTCP, an overview of Fujitsuaposs Engineering Cloud service and its merits, and technology for promptly displaying the results of large-scale simulations, which is important technology for achieving Engineering Cloud. Based on Fujitsuaposs know-how that it has accumulated during its in-house operation of Engineering Cloud, it has become possible to link the created FTCP and customersapos existing development environments. This in turn raises hopes for a shortened product development time and higher product quality.",
    "keywords": "",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-80755142696&partnerID=40&md5=f366f55019c9082c8200122ab317f443",
    "interesting": "-"
  },
  {
    "title": "Languages, Methodologies, and Development Tools for Multi-Agent Systems - Third International Workshop, LADS 2010, Revised Selected Papers",
    "abstract": "The proceedings contain 8 papers. The topics discussed include: OperettA: organization-oriented development environment; towards efficient multi-agent abduction protocols; validation of agile workflows using simulation; augmenting agent platforms to facilitate conversation reasoning; exploiting agent-oriented programming for developing future Internet applications based on the web: the JaCa-web framework; JaCa-android: an agent-based platform for building smart mobile applications; an alternative approach for reasoning about the goal-plan tree problem; and intention change via local assignments.",
    "keywords": "",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053088397&partnerID=40&md5=71225d84b7e792b55405d595d876b89b",
    "interesting": "-"
  },
  {
    "title": "ASPIDE: Integrated development environment for answer set programming",
    "abstract": "Answer Set Programming (ASP) is a truly-declarative programming paradigm proposed in the area of non-monotonic reasoning and logic programming. In the last few years, several tools for ASP-program development have been proposed, including (more or less advanced) editors and debuggers. However, ASP still lacks an Integrated Development Environment (IDE) supporting the entire life-cycle of ASP development, from (assisted) programs editing to application deployment. In this paper we present ASPIDE, a comprehensive IDE for ASP, integrating a cutting-edge editing tool (featuring dynamic syntax highlighting, on-line syntax correction, autocompletion, code-templates, quick-fixes, refactoring, etc.) with a collection of user-friendly graphical tools for program composition, debugging, profiling, database access, solver execution configuration and output-handling. © 2011 Springer-Verlag Berlin Heidelberg.",
    "keywords": "",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-20895-9_37",
    "interesting": "-"
  },
  {
    "title": "OCL tools report based on the IDE4OCL feature model",
    "abstract": "Previously we have developed the idea of an Integrated Development Environment for OCL (IDE4OCL). Based on the OCL community's feedback we have also designed and published an IDE4OCL feature model. Here we present a report on selected OCL tools developed by the authors and their teams. Each author gives an overview of their OCL tool, provides a top level architecture, and gives an evaluation of the tool features in a web framework. The framework can also be used by other potential OCL users and tool developers. For users it may serve as an aid to choose a suitable tool for their OCL use scenarios. For tool developers it provides a comparative view for further development of the OCL tools. Our plans are to maintain the collected data and extend this web framework by further OCL tools. Additionally, we would like to encourage sharing of OCL development resources. © OCL and Textual Modelling 2011.",
    "keywords": "Feature model; IDE4OCL; OCL; OCL tool",
    "released": 2011,
    "link": "https://doi.org/10.14279/tuj.eceasst.44.665.675",
    "interesting": "-"
  },
  {
    "title": "Evaluating software engineering techniques for developing complex systems with multiagent approaches",
    "abstract": "Context: Multiagent systems (MAS) allow complex systems to be developed in which autonomous and heterogeneous entities interact. Currently, there are a great number of methods and frameworks for developing MAS. The selection of one or another development environment is a crucial part of the development process. Therefore, the evaluation and comparison of MAS software engineering techniques is necessary in order to make the selection of the development environment easier. Objective: The main goal of this paper is to define an evaluation framework that will help in facilitating, standardizing, and simplifying the evaluation, analysis, and comparison of MAS development environments. Moreover, the final objective of the proposed tool is to provide a repository of the most commonly used MAS software engineering methods and tools. Method: The proposed framework analyzes methods and tools through a set of criteria that are related to both system engineering dimensions and MAS features. Also, the support for developing organizational and service-oriented MAS is studied. This framework is implemented as an online application to improve its accessibility. Results: In this paper, we present Masev, which is an evaluation framework for MAS software engineering. It allows MAS methods, techniques and environments to be analyzed and compared. A case study of the analysis of four methodologies is presented. Conclusion: It is concluded that Masev simplifies the evaluation and comparison task and summarizes the most important issues for developing MAS, organizational MAS, and service-oriented MAS. Therefore, it could help developers to select the most appropriate MAS method and tools for developing a specific system, and it could be used for MAS software engineering developers to detect and deficiencies in their methods and tools. Also, developers of new tools can understand this application as a way to publish their tools and demonstrate what their contributions are to the state of the art. © 2010 Elsevier B.V. All rights reserved.",
    "keywords": "Methodology; Multiagent systems development tool; Software engineering",
    "released": 2011,
    "link": "https://doi.org/10.1016/j.infsof.2010.12.012",
    "interesting": "-"
  },
  {
    "title": "3rd International Workshop on Languages, Methodologies and Development Tools for Multi-agent Systems, LADS 2010",
    "abstract": "The proceedings contain 8 papers. The special focus in this conference is on Languages, Methodologies and Development Tools for Multi-agent Systems. The topics include: Validation of agile workflows using simulation; augmenting agent platforms to facilitate conversation reasoning; exploiting agent-oriented programming for developing future internet applications based on the web: The JaCa-web framework; jaCa-Android: An agent-based platform for building smart mobile applications; an alternative approach for reasoning about the goal-plan tree problem; intention change via local assignments.",
    "keywords": "",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85038036680&partnerID=40&md5=81281bc9ad3c78d5a706a5d4cbcb242b",
    "interesting": "-"
  },
  {
    "title": "Cloud computing for software development environment:-in-house deployment at Numazu software development cloud center-",
    "abstract": "In its development of middleware, Fujitsu has faced three problems: increasing server operation costs, server over/under-utilization, and increasing labor hours for development environment construction. To solve these problems, Fujitsu has been working since 2008 on moving its software development environment to a cloud platform at its Numazu Software Development Cloud Center. In addition to solving the above problems, this transition to a cloud environment is expected to reduce costs by 700 million yen annually from 2011. Converting to cloud computing within Fujitsu itself is also seen as a way to refine the cloud products and services that Fujitsu offers to its customers. This paper describes the background to converting to cloud-based software development, Fujitsu's approach to this conversion, the effects of cloud deployment, and the expansion of services as a result of using a cloud platform. It also introduces the Numazu Cloud Center tour, which conveys cloud computing know-how through face-to-face conversations with customers.",
    "keywords": "",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-80051762531&partnerID=40&md5=3b52ec7d10808f335e02524726edbc9a",
    "interesting": "-"
  },
  {
    "title": "A software development environment maintaining fine-grained code metadata by using editing operations",
    "abstract": "Metadata on source code being developed can represent any kind of additional information that does not directly appear in the code. They make software development more effective since such information is useful for understanding and managing of the code. Software evolves over time in its life cycle and its source code is frequently changed. Although recent IDEs support attachment of new metadata to the code, they do not still support maintenance of existing metadata attached to the changed code. For example, once a developer removes some code, its metadata could be carelessly lost. To avoid such problem, this paper proposes a novel development environment that steadily maintains metadata for fine-grained code fragments. This environment employs a metadata maintaining policy, consisting of conditions to be checked for fine-grained code changes and actions handling metadata attached to the changed code.",
    "keywords": "Documentation; Fine-grained code changes; Integrated development environment; Source code metadata",
    "released": 2011,
    "link": "https://doi.org/10.2316/P.2011.720-065",
    "interesting": "-"
  },
  {
    "title": "Improving the development tool chain in the context of petri net-based software development",
    "abstract": "Modern, collaborative software development projects are highly supported by a variety of tools. Aside from the pure code development that is nowadays well supported by integrated development environments (IDEs) such as Eclipse, also other activities receive increasing attention in the matter of tool support. Recent improvements in tool support for source code management (SCM), process management and documentation management are driven by the changing demands of increasing distribution and agility of development projects. Moreover, the integration of tool support systems into integrated project management environments (IPMEs) increase the usefulness of each emerging tool support, especially for agile approaches. The Petri net-based agent-oriented software engineering (Paose) is highly influenced by agile methods and combines the agile concepts with aspects from model driven development. We have achieved increased efficiency by the adoption of IPMEs into the Paose development approach. However, the introduced tool set integration lacks in support for the model driven part of Paose, i.e. the tool integration for graphical (model-based) source code is missing. In this work we present an approach for an appropriate tool support of agile methods and model driven development. As a prototypical implementation of the concepts we present a Web service-based framework and plugin-based extension for Redmine as representative of open source IPMEs, which is currently in use in the context of the Paose approach.",
    "keywords": "Integrated project management; Modeldriven development; Paose; Redmine; RENEW",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890699472&partnerID=40&md5=51e7abf29b54d8d3d26564fba25da131",
    "interesting": "-"
  },
  {
    "title": "CodeBender: Remote software protection using orthogonal replacement",
    "abstract": "In a typical client-server scenario, a server provides valuable services to client applications that run remotely on untrusted client computers. Typical examples are video on demand, online games, voice-over-IP communications, and many others. However, client-side users often hold administrative privileges on their machines and could tamper with the client application to fulfill the service in violation of the service usage conditions or service agreements. Guaranteeing client-code security is one of the most difficult security problem to address. It's an instance of the malicious host problem, where an adversary in control of the client's host environment tries to tamper with the client code. The authors present CodeBender, a tool that implements a novel client replacement strategy to counter the malicious host problem. The client code has limited validity and, when it expires, the server provides a new client that replaces the former one. The reverse-engineering efforts of adversaries are deterred by the complexity of analyzing frequently changing, always different (orthogonal) program code. © 2011 IEEE.",
    "keywords": "development tools; hardware/software protection; program transformation; security and protection; software/software engineering",
    "released": 2011,
    "link": "https://doi.org/10.1109/MS.2010.158",
    "interesting": "-"
  },
  {
    "title": "iPlugin: Indian language web application development tool",
    "abstract": "iPlugin is an Indian Language web application development software tool. iPlugin allows user to type in Indian Languages in web pages over the internet. iPlugin software helps to develop unique interactive applications for users in Indian languages. iPlugin is ideal for creating interactive applications such as online chat, localize database query applications, type blogs in your language, feedback and e-mail in Indian languages, reports or any other such application which requires support of typing in Indian Languages over Web. iPlugin helps in creation of Indian language web content for front end and back end of internet and intranet portal solutions. © 2011 Springer-Verlag.",
    "keywords": "",
    "released": 2011,
    "link": "https://doi.org/10.1007/978-3-642-19403-0_57",
    "interesting": "-"
  },
  {
    "title": "A Deep Web education resources sharing solution different from China e-Learning Technology Standard",
    "abstract": "In the paper, a solution based on Deep Web integration technology is designed to realise the Deep Web education resources sharing and solve the defects of China e-Learning Technology Standard. The solution supports four modules: knowledge discovery, integrated query, knowledge base and system monitor. The former two modules function based on the integration with the later two modules. The design has been applied to an inter-library search system. Four libraries are joined in the system. Good feedback has been received. The project has been awarded the 'Shanghai Science and Technology Progress Third Level Award'. The solution is still preliminary, and there are many aspects to be improved. The future research is supported by Innovation Program of Shanghai Municipal Education Commission. Copyright © 2011 Inderscience Enterprises Ltd.",
    "keywords": "China; China E-Learning Technology Standard; Deep Web integrated technology; Education resources sharing solution; Environment change monitor; HTML form parser kit; HTTP client programming tool kit; Information isolated island; Integrated query process; Knowledge discovery",
    "released": 2011,
    "link": "https://doi.org/10.1504/IJNVO.2011.040004",
    "interesting": "-"
  },
  {
    "title": "Supporting software history exploration",
    "abstract": "Software developers often confront questions such as \"Why was the code implemented this way\"? To answer such questions, developers make use of information in a software system's bug and source repositories. In this paper, we consider two user interfaces for helping a developer explore information from such repositories. One user interface, from Holmes and Begel's Deep Intellisense tool, exposes historical information across several integrated views, favouring exploration from a single code element to all of that element's historical information. The second user interface, in a tool called Rationalizer that we introduce in this paper, integrates historical information into the source code editor, favouring exploration from a particular code line to its immediate history. We introduce a model to express how software repository information is connected and use this model to compare the two interfaces. Through a lab experiment, we found that our model can help predict which interface is helpful for a particular kind of historical question. We also found deficiencies in the interfaces that hindered users in the exploration of historical information. These results can help inform tool developers who are presenting historical information either directly from or mined from software repositories. © 2011 ACM.",
    "keywords": "integrated development environment; software repositories",
    "released": 2011,
    "link": "https://doi.org/10.1145/1985441.1985469",
    "interesting": "-"
  },
  {
    "title": "A prototype of sensor network visualization application with geographic information",
    "abstract": "In recent years, research of sensor networks has advanced rapidly. Sensor networks are anticipated for use in widely various fields such as product traceability systems, environmental monitoring, and health care. However, developers must develop applications to work in a sensor node and applications to produce sensor data. The knowledge that is necessary for development and acquisition of the programming language is both costly and time-consuming to develop. This study examines the possibility of web programmers becoming independent of specific programming languages. Software libraries can be developed easily for sensor nodes, and development of server applications can become possible using a new system. In addition, we produced a visualization application experimentally using geographic information using the server application and a developed software library. © 2011 ACM.",
    "keywords": "ActionScript; Development environment; Sensor network",
    "released": 2011,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959302400&partnerID=40&md5=fce26c02bc522707f62c71ccd21f9511",
    "interesting": "-"
  },
  {
    "title": "An expert system development tool for non AI experts",
    "abstract": "From their first applications until now, expert systems have provided solutions to multiple problems in companies of all types. With the advent of the Internet and its evolution, web-based expert systems have become very important. Moreover, the arrival of new mobile devices that can connect to the Internet has made it easy to access information from any place at any time, creating new requirements for web systems. The creation of an expert system normally requires certain technical knowledge and concepts of artificial intelligence (AI). If the need to make it accessible through the Internet is added, the degree of technical knowledge necessary for its development is greater, entailing an unaffordable cost for small and medium-sized companies. In this article, we present a tool for the development of web-based expert systems which permits the expert to define the knowledge without having to know anything about AI. The proposed inference engine is integrated in a web server through which it can be accessed from any device with an Internet connection. Finally, the article presents examples of developments achieved via the proposed framework. © 2010 Elsevier Ltd. All rights reserved.",
    "keywords": "Expert system framework; Expert system tool; Knowledge representation; Non AI experts; Web-based expert systems",
    "released": 2011,
    "link": "https://doi.org/10.1016/j.eswa.2010.07.009",
    "interesting": "-"
  },
  {
    "title": "Cloud computing for software development environment -in-house deployment at numazu software development cloud center-",
    "abstract": "In its development of middleware, Fujitsu has faced three problems: increasing server operation costs, server over/under-utilization, and increasing labor hours for development environment construction. To solve these problems, Fujitsu has been working since 2008 on moving its software development environment to a cloud platform at its Numazu Software Development Cloud Center. In addition to solving the above problems, this transition to a cloud environment is expected to reduce costs by 700 million yen annually from 2011. Converting to cloud computing within Fujitsu itself is also seen as a way to refine the cloud products and services that Fujitsu offers to its customers. This paper describes the background to converting to cloud-based software development, Fujitsu’s approach to this conversion, the effects of cloud deployment, and the expansion of services as a result of using a cloud platform. It also introduces the Numazu Cloud Center tour, which conveys cloud computing know-how through face-to-face conversations with customers.",
    "keywords": "",
    "released": 2011,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000306819000012",
    "interesting": "-"
  },
  {
    "title": "Adinda: A knowledgeable, browser-based IDE",
    "abstract": "In practice, many people have to work together to develop and maintain a software system. However, the programmer’s key tool, the Integrated Development Environment (IDE), is a solo-tool, serving to help individual programmers understand and modify the system. Such an IDE does not leverage the knowledge other team members may have of the design and implementation of the system. We propose to resolve this problem by exploring, experimentally, new ways of inferring knowledge from past IDE-interactions, and of maximizing collaboration among developers. Our approach, called Adinda, revolves around transforming the IDE into a set of integrated services, accessible via a web browser, and enriched with Web 2.0 technologies. Such services will not only help developers perform traditional IDE tasks, but also facilitate the required informal communication and collaboration needs of software development projects. In this paper, we report on our vision, approach and challenges for building Adinda, and initial results.",
    "keywords": "programming environments; interaction mining; collaboration; Web 2.0; IDE",
    "released": 2010,
    "link": "https://doi.org/10.1145/1810295.1810330",
    "interesting": "+"
  },
  {
    "title": "Online learning 101: Part i: Authoring and course development tools",
    "abstract": "The first part of this three-part series focuses on authoring and course development tools and techniques for integrating e-learning. In Part II, Susan Landay explores games and interactivity solutions for e-learning. Part III looks at tools used for web conferencing, as well as learning-management systems.",
    "keywords": "",
    "released": 2010,
    "link": "https://doi.org/10.1145/1821982.1821984",
    "interesting": "-"
  },
  {
    "title": "Example-centric programming: Integrating web search into the development environment",
    "abstract": "The ready availability of online source-code examples has fundamentally changed programming practices. However, current search tools are not designed to assist with programming tasks and are wholly separate from editing tools. This paper proposes that embedding a task-specific search engine in the development environment can significantly reduce the cost of finding information and thus enable programmers to write better code more easily. This paper describes the design, implementation, and evaluation of Blueprint, a Web search interface integrated into the Adobe Flex Builder development environment that helps users locate example code. Blueprint automatically augments queries with code context, presents a code-centric view of search results, embeds the search experience into the editor, and retains a link between copied code and its source. A comparative laboratory study found that Blueprint enables participants to write significantly better code and find example code significantly faster than with a standard Web browser. Analysis of three months of usage logs with 2,024 users suggests that task-specific search interfaces can significantly change how and when people search the Web.",
    "keywords": "example-centric development",
    "released": 2010,
    "link": "https://doi.org/10.1145/1753326.1753402",
    "interesting": "-"
  },
  {
    "title": "JavaWIDE: Innovation in an online IDE",
    "abstract": "Over the past decade applications have been moving from the desktop into the cloud. Only relatively recently have integrated development environments begun emerging in cloud computing. The Java Wiki Integrated Development Environment (JavaWIDE) is one of these new online IDEs, and it is designed to be simple enough for novice programmers to use. JavaWIDE is free and provides anyone the capability to create, edit and run programs anytime, anywhere, all from within a web browser – no specialized software required. JavaWIDE promotes collaboration, integrates well with social networking sites, and includes novel features such as concurrent editing support, a common code base for all users, revision history explorer, automatic posting of programs as applets, annotated and hyperlinked source code, an integrated Java API and many others.",
    "keywords": "",
    "released": 2010,
    "link": "https://dl.acm.org/doi/10.5555/1734797.1734799",
    "interesting": "-"
  },
  {
    "title": "JavaWIDE: Innovation in an online IDE: Tutorial presentation",
    "abstract": "Over the past decade applications have been moving from the desktop into the cloud. Only relatively recently have integrated development environments begun emerging in cloud computing. The Java Wiki Integrated Development Environment (JavaWIDE) is one of these new online IDEs, and it is designed to be simple enough for novice programmers to use. JavaWIDE is free and provides anyone the capability to create, edit and run programs anytime, anywhere, all from within a web browser – no specialized software required. JavaWIDE promotes collaboration, integrates well with social networking sites, and includes novel features such as concurrent editing support (multiple people can edit the same code at the same time), a common code base for all users, revision history explorer, automatic posting of programs as applets, hyperlinked source, an integrated Java API and many others.",
    "keywords": "",
    "released": 2010,
    "link": "https://dl.acm.org/doi/10.5555/1858583.1858622",
    "interesting": "-"
  },
  {
    "title": "The fluid software metadata framework (FSM)",
    "abstract": "The Fluid Software Metadata (FSM) framework is a dynamic and flexible framework for software repository metadata generation and analysis. FSM aims to improve the setup time for the mining, analysis, and interactive visualisation of repository artefacts. FSM supports the integration of usability findings through XML-based usability reports. Viewing usability issues side-by-side with source code provides several advantages in holistic software development.",
    "keywords": "development tools; framework; metrics; software repositories; usability issues; visualisation; web interface",
    "released": 2010,
    "link": "https://doi.org/10.1145/1822018.1822074",
    "interesting": "-"
  },
  {
    "title": "Investigating the use of tags in collaborative development environments: A replicated study",
    "abstract": "Modern collaborative development environments have recently introduced tagging as a new feature in order to let developers annotate software artifacts with free keywords. Since tagging has the potential to have an impact on task management in software development processes, there is a need to understand how developers use tagging in projects supported by collaborative development environments and how developers’ behavior differ from collaborative tagging in the Social Web.We have conducted an independent replication of an empirical study, which first investigated how tags are used in a large software project. In our replication, we have analyzed two further projects coordinated through two different collaborative development environments, Jazz and Trac. The findings from our replicated study extend the initial contribution of the original study by (1) showing evidence of differences in tag usage between the two collaborative development environments, and (2) providing a clear understanding that tags used in such environments significantly differs from those used in traditional collaborative tagging systems.",
    "keywords": "collaborative development environments; empirical study; replication; tagging",
    "released": 2010,
    "link": "https://doi.org/10.1145/1852786.1852818",
    "interesting": "-"
  },
  {
    "title": "GameSoup: A two-stage game development environment",
    "abstract": "Designing an end-user development environment seems to require making a trade-off between ease of use and expressiveness. GameSoup is an online game development platform that attempts to satisfy these two design requirements by splitting development into two distinct stages. One stage requires programming experience and is highly expressive; the other stage is very easy to use.",
    "keywords": "end-user development",
    "released": 2010,
    "link": "https://doi.org/10.1145/1920778.1920822",
    "interesting": "-"
  },
  {
    "title": "The open source IPTV service development environment: IPTV service execution environment",
    "abstract": "HDTV will be the trend of future video entertainments, and IPTV is the most potential because true 2-way interaction bringing more new audiovisual entertainment options can only be delivered through IP networks.This paper proposes a service execution environment, ISEE (IPTV Service Execution Environment), that is an open source framework. This environment supports various needs during developing and executing IPTV services, fully presents the interaction of IPTV with the \"Service Component Platform\" design concept, and has the features that can flexible use and provide new additional service quickly. in order to let service providers to quickly deliver interactive TV services that meet subscriber demands according to the market trends and thereby to build the brand loyalty and to enhance industry competitiveness. On the other hand, the design concept of \"modularization platform\" is applied to increase the flexibility and stability to expansion or update set-top-box (STB) or video server, and thereby to bring service providers more comprehensive options for platform maintenance.ISEE service includes the programs executed on the service and client sides, that communicate with HTTP protocols. Server programs are run in the JVM (Java Virtual Machine) and Servlet/JSP container environment, using Apache Struts as the web AP framework. Client programs are run in browsers supporting Javascript/CSS.This paper also proposes the development tool—ISSE SDK based on the above targets. The ISEE SDK is the development tool for the IPTV services in ISEE. It is a freeware comply with the open source standards using licensing terms in Apache License, V2.[30] Service developers can freely modify the ISEE SDK source codes and freely use the SDK and the application services developing with it. The SDK is easy to use and allows users to quickly develop IPTV services to support various STBs.",
    "keywords": "IPTV; SDK; STB; asynchronous design; open source",
    "released": 2010,
    "link": "https://doi.org/10.1145/2108616.2108677",
    "interesting": "-"
  },
  {
    "title": "A collaborative ontology development tool for information security managers",
    "abstract": "This paper explores the need for a collaborative development tool to allow information security experts to capture their interrelated knowledge in an ontology. Such a tool would enable organisations to make more informed security policy decisions around shared security issues. However, population of ontologies can be time-consuming and error-prone, and current collaborative ontology editing tools require a familiarity with ontology concepts. We present a Web-oriented tool which simplifies ontology population for information security experts, allowing them to develop ontology content without the need to understand ontology concepts. To understand how organisations manage information security knowledge within policies, we consulted two information security managers in large organisations. The Web-Protégé collaborative ontology editor was then modified to create a tool with an appropriate knowledge ontology structure that meets their requirements. The same information security managers then evaluated the tool, judging it to be accessible and potentially useful in policy decision-making.",
    "keywords": "information security ontology; ontology editor",
    "released": 2010,
    "link": "https://doi.org/10.1145/1873561.1873566",
    "interesting": "-"
  },
  {
    "title": "Exploration on Integrated Development Environment of Trusted Data Processing Oriented Software Product Line for WEB Application",
    "abstract": "The focus of this paper is on Data Processing-Oriented Software Product Line (DPOSPL) and trusted software technology and theory, among which evidence-based trustworthy software guarantee mechanism, and develop an integrated environment for web application of DPOSPL - -DPOWSPL IDE. To ensure that this IDE be highly trustworthy, as defined in literature, it uses evidence-based software evaluation to guarantee its system trustworthiness. Finally, a concrete application of this IDE is presented.",
    "keywords": "trustworthy software; software product line; domain engineering; integrated develop environment",
    "released": 2010,
    "link": "https://doi.org/10.1109/UIC-ATC.2010.64",
    "interesting": "-"
  },
  {
    "title": "TWUI-an extended interaction model based rapid web UI development tool",
    "abstract": "The more efficient way of developing the application software is to use general tools. This article is to introduce a rapid Web user interface development tool-TWUI which is based on the extended interaction model.",
    "keywords": "Extended Interaction Model; Rapid Web UI Development Tool; Web-based Interaction Model",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICACTE.2010.5579684",
    "interesting": "-"
  },
  {
    "title": "WappenLite: A Web application framework for lightweight programming environments",
    "abstract": "This paper describes WappenLite-a Web application framework for lightweight educational programming environments. In particular, this paper focuses on the back-end (nonuser-interface) components of the framework.",
    "keywords": "Web; Programming",
    "released": 2010,
    "link": "https://doi.org/10.1109/ITHET.2010.5480068",
    "interesting": "-"
  },
  {
    "title": "A Practical Study on Geographic Semantic Web Services Based on OWL-S",
    "abstract": "With the development of Semantic Web technology, the Geographic service based on OWL-S is an effective way for sharing and interoperation of heterogeneous information resources in the distributed network environment. This paper focuses on how to dynamic find, bind and invoke Geographic web services by Ontology Web Language for Services (OWL-S). The development of an OWL-S based web service is time consuming and error prone. The main reason is the lack of a integrated development environment. So, we build an integrated developing environment of Geographic semantic web services by using existing tools. This IDE can assist developers to develop Geographic semantic web services. In order to realize the applications of Geographic semantic web services in OWL-S IDE, an experimental system has been developed. In the system we generate Geographic Ontology and develop, publish, bind, find and invoke web services in distributed network.",
    "keywords": "semantic web services; Geographic Ontology; OWL-S IDE; Experimental system",
    "released": 2010,
    "link": "https://doi.org/10.1109/CCIE.2010.166",
    "interesting": "-"
  },
  {
    "title": "XYLUS: A virtualized programming environment",
    "abstract": "XYLUS is a virtualized programming environment that addresses coder's mobility, hassle free coding environment, project management and team coordination. It aims to provide a coder or a team of coders to create, manage, develop, compile, execute and share a complete or partial set of development projects on the web without having any development and associated tools. This is mainly achieved through developing a virtualized integrated development environment completely functional on a browser, a web server hosting the virtual machine environment, a set of web services to carry out the necessary communication and synchronization, and a developer portal as the focal point of the whole environment. In this paper we describe the main architecture, working, related issues and challenges of the system. We have tested this concept and architecture on developing projects for .NET platform with C# as the base language. We observe that such environments offer plenty of useful and charming features to the developers with the some burden and sacrifice of flexibility.",
    "keywords": "Online IDE; Development portal; Virtualization",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICIET.2010.5625674",
    "interesting": "+"
  },
  {
    "title": "An improved schedule of MapReduce programming environment in cloud computing",
    "abstract": "Background processing technology is the overall protection of cloud computing system. Large-scale data processing technology plays a key role in background data collection and arrangement of the cloud computing. Google's MapReduce programming mode is a parallel programming model, widely used in processing and generating large data sets, and its scheduling mechanism is an important part of the model. In this article, the implementation process of MapReduce programming environment is analyzed, and a improvement in scheduling mechanisms is proposed.",
    "keywords": "Cloud Computing; MapReduce; Hadoop; Scheduling",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICISS.2010.5655483",
    "interesting": "-"
  },
  {
    "title": "Futuristic model for school's content management systems : A beginning",
    "abstract": "One of the main elements in educational portal is Content Management System (CMS). CMS is a web application technology used for managing contents on websites which easy to be updated by anyone who uses a web form. By using CMS, teachers are authorized to contribute materials for teaching purposes while the students do their experiment to test their understanding of the subject. Problem Statement: In order to monitor the student's assessment progress and maintain the “engagement” of the students to the curriculum and assessments' activities, it is important for the parent to get the result of the assessment via mobile services. Approach: This research will concentrate on the analysis and development of futuristic CMS model by using Web 2.0 development, but the paper will explain the theoretical basis of this research first. The characteristic of Flow Theory will be considered to ensure the “engagement” of the student to the CMS exists. Result: A CMS model which can be used in secondary school. ICT Form five secondary schools subject will be used as a sample of teaching and learning materials. The proposed CMS can be embedded to the educational portal framework. Conclusion: With the proposed CMS, it encourages the “engagement” of the students in doing their curriculum activities and at the same time improve their level of understanding in ICT subject. As for their parent, they will receive a message of their children's performance to help them monitoring their children's performance in study.",
    "keywords": "Content Management System; Educational Portal; Web 2.0 Development; Collaborative Development Environment; Flow Theory",
    "released": 2010,
    "link": "https://doi.org/10.1109/ITSIM.2010.5561638",
    "interesting": "-"
  },
  {
    "title": "Finding Steiner trees for web information retrieval",
    "abstract": "Web pages and hyperlinks in a web site are represented graph theoretically to generate optimal structured web objects for more convenient and effective searching of relevant web contents. Mathematical models based on Linear programming for web site are developed to structure web objects so that most relevant web contents can be reachable more efficiently with the optimal-structured web objects. In the web structuring model, arc weights that represent weights for hyperlinks are used to rank the degrees of the relevance among web objects. We also developed a tree-filtering algorithm and a top_k Steiner tree algorithm that can be used to provide search recommendations in practical applications. With real web sites' information, some examples are given for more detail explanations of the structured web search mechanism.",
    "keywords": "H.2.8.m: Web mining; J.8.s; Web site management/development tools",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICCIE.2010.5668293",
    "interesting": "-"
  },
  {
    "title": "EFAIoT: An Easy and Flexible Application Development System for Internet of Things",
    "abstract": "This paper presents a development environment of Internet of Things, EFAIoT. EFAIoT means an Easy and Flexible Application Development system, which is focus on the Internet of Things field. Our system provides graphic user interface, through which users can build up their own internet of things applications on the semantic layout. A browser based and user friendly user interface was provided to reduce developers' learning time and give end users good experience.",
    "keywords": "the Internet of Things; EFAIoT; development environment",
    "released": 2010,
    "link": "https://doi.org/10.1109/GCC.2010.102",
    "interesting": "-"
  },
  {
    "title": "Supporting multimodality in service-oriented model-based development environments",
    "abstract": "While multimodal interfaces are becoming more and more used and supported, their development is still difficult and there is a lack of authoring tools for this purpose. The goal of this work is to discuss how multimodality can be specified in model-based languages and apply such solution to the composition of graphical and vocal interactions. In particular, we show how to provide structured support that aims to identify the most suitable solutions for modelling multimodality at various detail levels. This is obtained using, amongst other techniques, the well-known CARE properties in the context of a model-based language able to support service-based applications and modern Web 2.0 interactions. The method is supported by an authoring environment, which provides some specific solutions that can be modified by the designers to better suit their specific needs, and is able to generate implementations of multimodal interfaces in Web environments. An example of modelling a multimodal application and the corresponding, automatically generated, user interfaces is reported as well. © 2010 IFIP International Federation for Information Processing.",
    "keywords": "Authoring tools; Model-based design; Multimodal interfaces",
    "released": 2010,
    "link": "https://doi.org/10.1007/978-3-642-16488-0_11",
    "interesting": "-"
  },
  {
    "title": "The effectiveness of Zoom Visual Flow (ZViF) technique in program comprehension activities",
    "abstract": "Many techniques and tools have been developed to improve program comprehension but most tools are unsuitable for novices. Some tools are not user friendly, some designs are more suitable to expert programmers and some integrated development environments (IDEs) are very simple and fail to support program comprehension needs among the users. These factors hinder the learning process and may become obstacles to users who have no programming background. This paper attempts to improve program comprehension by using Zoom Visual Flow (ZViF) technique that represents source code in graphical views. It also gives some insights on how to improve visual presentation method in a program editor or an IDE. A lab experiment was conducted to determine the effectiveness of the technique. The respondents were asked to determine their preference between ZViF technique and Control Structured Diagram (CSD). CSD is one of the best techniques that uses graphic to visualize a program. The result shows that users prefer the proposed technique compared to CSD as the ZViF helps to improve program comprehension among novices. © 2010 IEEE.",
    "keywords": "Integrated development environment; Program comprehension; Program visualization",
    "released": 2010,
    "link": "https://doi.org/10.1109/ITSIM.2010.5561292",
    "interesting": "-"
  },
  {
    "title": "SBVR based business contract and business rule IDE",
    "abstract": "We propose an IDE - Integrated Development Environment to model SBVR (Semantic of Business Vocabulary and Business Rule) compliant business rules [2] extracted from business contract of services and store them in an ontological structure of rules, facts and terms as defined in the SBVR metamodel. Business rules are based on principles of deontic logic for treating expressions in the form of normative policies. Deontic constraints express what parties to the contract are required to perform (obligations), what they are allowed to do (permissions), or what they are not allowed to do (prohibitions).",
    "keywords": "Business contract; Business rule; IDE; Ontology; SBVR",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888994433&partnerID=40&md5=bf5cec227bdbf417ef7e1c6098feb74f",
    "interesting": "-"
  },
  {
    "title": "A programming environment consisting of web services",
    "abstract": "An integrated development environment (IDE) is essential for modern development of object-oriented software. By using an IDE, developers can create their software programs effectively and productively. However, conventional IDEs provide a limited number of functions with less flexibility. Therefore, not all developers are satisfied with those prepared functions. In real development, most developers must install new functions they want and update existing functions they maintain. This paper proposes a framework in which every IDE function consists of web services distributed on the Internet, and presents a programming environment to support compilation services based on this framework. In this environment, developers do not have to install a variety of compilers in their local computers. Consequently, this programming environment encourages the developers to concentrate on their programming tasks. Although the current version of a running implementation of this compilation service is a minimum prototype to partially demonstrate its feasibility, it suggests the potential of implementing IDEs consisting of web services and liberating developers from troublesome installation and update of IDEs.",
    "keywords": "Distributed systems; IDE; Software components",
    "released": 2010,
    "link": "https://doi.org/10.2316/P.2010.725-027",
    "interesting": "-"
  },
  {
    "title": "Design and development of C language integrated development environment with data accessing",
    "abstract": "The C language integrated development environment(IDE) with data accessing can help the programming beginners fast grasp the basic language grammars and the drawing functions of C language .It also helps C language to access relational data, no relational data and the cluster communication port(COM) data conveniently. The system has the characters such as window docking freely, the striking grammar, a rich control toolbox, the program templates and the guide code behind the scenes open.This IDE provides a platform for C language to develop various applications quickly and can help to reduce the cost of programmer cultivating. The construction and development of the system is based on the add-in theory. To develop the new language and the new compiler of this system is the key of the development and Visual parser++ plays a big role in it. © 2010 IEEE.",
    "keywords": "Add-in; C language; Data accessing; Integrated development environment; Visual parser++",
    "released": 2010,
    "link": "https://doi.org/10.1109/IFITA.2010.52",
    "interesting": "-"
  },
  {
    "title": "The greenfoot programming environment",
    "abstract": "Greenfoot is an educational integrated development environment aimed at learning and teaching programming. It is aimed at a target audience of students from about 14 years old upwards, and is also suitable for college-and university-level education. Greenfoot combines graphical, interactive output with programming in Java, a standard, text-based object-oriented programming language. This article first describes Greenfoot and then goes on to discuss design goals and motivations, strengths and weaknesses of the system, and its relation to two environments with similar goals, Scratch and Alice. © 2010 ACM.",
    "keywords": "Greenfoot; Programming education; Programming environment",
    "released": 2010,
    "link": "https://doi.org/10.1145/1868358.1868361",
    "interesting": "-"
  },
  {
    "title": "Components and an effective IDE of open software platform for robotics services",
    "abstract": "In this paper, we propose the components and an effective integrated development environment (IDE) of an Open software Platform for Robotic Services (OPRoS) that covers from the control of H/W devices to the execution of complicated application programs. Standardized components with data, service, and event ports are offered for developing robot S/W applications easily and efficiently by just combining several components in proper ways. Some design patterns are also provided for general reusable solutions to commonly occurring problems in developing the robot S/W applications. For an all-level development environment, the IDE of the OPRoS supports the development from low-level device controls to high-level contents composition. It turns out that, as a comprehensive platform for robot S/W applications, the proposed OPRoS provides convenient environments for all development steps from editing to execution. ©ICROS.",
    "keywords": "Component; Framework; Integrated development environment; Open software platform; Robotic service",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-78751564522&partnerID=40&md5=e591e3559d9631dde357a275066a7b50",
    "interesting": "-"
  },
  {
    "title": "Self intelligence with text recognization",
    "abstract": "The prime objective of this Research is the development of effective reading skills in Machines. After reading the text and comprehending the meaning, it would self-program itself and according to the program it would implement the instructions. Here we are exploring a new era of computer vision and related Research. The current investigation presents an algorithm and software which detects, recognizes text and character with specific protocol in a live streaming video and programs itself according to the text. The protocol used for text consists of a Start word and an end word with embedded c instructions between them in special font. The proposed algorithm first detects the frame having text from live video streaming. The character is at its best view which means no broken point in a single character and no merge between groups of characters. The image processor tallies the images and burns the main microcontroller accordingly. This technology can prove to be immensely important to various human activities in day to day life. ©2010 IEEE.",
    "keywords": "Character recognization; Cross compiler and Integrated Development Environment (IDE); Image and video processing; Machine learning; Text detection",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICSIP.2010.5697531",
    "interesting": "-"
  },
  {
    "title": "LMNtal model checking using an integrated development environment",
    "abstract": "LMNtal was designed and implemented as a unifying computational model based on hierarchical graph rewriting. In pursuit of its application to the fields of verification and search, the system has recently evolved into a model checker that employs LMNtal as a modeling language, and we have been accumulating experiences with modeling and verification. This paper describes LMNtalEditor, an integrated development environment (IDE) featuring both state space search and visualization of verification, and gives various examples of model description, verification and visualization. LMNtalEditor features the visualization and browsing of state space and counterexamples, the searching of states of interest, and so on. We have successfully run diverse examples taken from the fields including concurrency and AI search, and found that the IDE plays an essential role in understanding the models and counterexamples and thus greatly eases the task of verification. Furthermore, through the encoding of models in Promela, MSR and Coloured Petri Nets into LMNtal, we have extended the expressive power of LMNtal to the field of verification.",
    "keywords": "",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-78650850542&partnerID=40&md5=d87e620089787588cfb84dc83bddafad",
    "interesting": "-"
  },
  {
    "title": "A survey of mashup development environments",
    "abstract": "This chapter presents a survey of six mashup development environments and looks at how mashups fit into the vision of the smart internet. The fast-paced expansion of mashup development environments has resulted in a wealth of features and approaches. To provide an overview of End User Development support in current mashup development environments, we explore, summarize and compare their features across six different themes (Levels of Abstraction, Learning Support, Community Support, Discoverability, User Interface Design and Software Engineering Techniques). We found that the mashup development environments provide many features to support end users, but there is still much room for further improvement, especially in relation to the smart internet. We believe that by connecting matters of concern to mashups, mashup development environments can become an essential part of the smart internet. Such a connection would enable mining of mashup elements, which could facilitate automatic mashup creation and customization. © 2010 Springer-Verlag Berlin Heidelberg.",
    "keywords": "End user development; End user programming; Google Mashup Editor; IBM Mashup Center; Intel MashMaker; Mashup; Mashup development environment; Microsoft popfly; Serena Business Mashups; Smart interactions; Smart Internet; Survey; Web 2.0; Yahoo! Pipes",
    "released": 2010,
    "link": "https://doi.org/10.1007/978-3-642-16599-3_10",
    "interesting": "-"
  },
  {
    "title": "26th International Conference on Logic Programming, ICLP 2010 - Joint Workshop on Implementation of Constraint Logic Programming Systems and Logic-based Methods in Programming Environments - CICLOPS-WLPE 2010",
    "abstract": "The proceedings contain 8 papers. The special focus in this conference is on Logic Programming. The topics include: A test automation framework for mercury; realizing evaluation strategies by hierarchical graph rewriting; an extensible web interface for databases and its application to storing biochemical data; towards a study of meta-predicate semantics; portability of prolog programs; DNF sampling for problog inference; distributed work stealing for constraint solving and casting of the WAM as an EAM.",
    "keywords": "",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886653368&partnerID=40&md5=761388223b7bbd1bec5fc21ddf61972e",
    "interesting": "-"
  },
  {
    "title": "Immediacy through interactivity: Online analysis of run-time behavior",
    "abstract": "Visualizations of actual run-time data support the comprehension of programs, like examples support the explanation of abstract concepts and principles. Unfortunately, the required run-time analysis is often associated with an inconvenient overhead that renders current tools impractical for frequent use. We propose an interactive approach to collect and present run-time data. An initial shallow analysis provides for immediate access to visualizations of run-time information. As users explore this information, it is incrementally refined on-demand. We present an implementation that realizes our proposed approach and enables developers to instantly explore run-time behavior of selected code entities. We evaluate our interactive approach by measuring time and memory overhead in the context of ten different-sized projects. Our empirical results show that run-time data for an initial overview can be collected in less than 300 milliseconds for 95% of cases. © 2010 IEEE.",
    "keywords": "Development environments; Dynamic analysis; Object collaboration; Program comprehension; Test cases",
    "released": 2010,
    "link": "https://doi.org/10.1109/WCRE.2010.17",
    "interesting": "-"
  },
  {
    "title": "Minimalism for usability: The design of a programming development system with a minimalistic user interface",
    "abstract": "We present a project in development, an integrated development environment (IDE) for Mac OS X named Lightweight IDE. The design breaks with the trend of making user interfaces more and more complex, in order to produce a system which is fast to learn and comfortable to use. The project has two goals: To produce a usable system for education and hobbyists, as well as exploring advantages of a tight user interface for this particular kind of applications. The system has been implemented and is fully usable for serious development. It has been evaluated in a limited user study.",
    "keywords": "Education; GUI; IDE; Usability",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-79955395068&partnerID=40&md5=09a546e766157078098deb680082efe7",
    "interesting": "-"
  },
  {
    "title": "Comparing ontology development tools based on an online survey",
    "abstract": "Finding an appropriate tool to develop ontology is the first step towards ontology development. A lot of ontology development tools are available in the market, however, some are free and some are commercial. Which tools are mostly used by users? Are there any drawbacks using the tools? And if any, then what? The answers of these questions are highlighted in this paper. These topics are investigated and discussed based on the findings of an online survey concerned with current process of ontology development, the users of the tools, and their domain of working.",
    "keywords": "Ontology development tools; Ontology editors; Protégé",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959852241&partnerID=40&md5=0c5c7946ea182900c67bcd4ccc4ca13c",
    "interesting": "-"
  },
  {
    "title": "A java approach for implementing organizational information system on NetBeans Integrated Development Environment",
    "abstract": "An organizational information system (OIS) has been designed and implemented using visual web Java Server Faces (JSF) on NetBeans Integrated Development Environment (IDE) 6.5 in Instrumentation and Informatics Research Laboratory, Department of Electronics Science, Gauhati University, INDIA. The database for the system is developed using My Structured Query Language Version 5.0 (MySQL). The connectivity with the database tables are implemented using visual web JSF data provider components. The applications have been created using the framework of visual web JSF. This paper describes in details the aspects of software, design and technique for implementation of the system.",
    "keywords": "ACID; JDBC; MySQL; NetBeans IDE; OIS; RDBMS",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-79952434025&partnerID=40&md5=f5dd60daeb3931a885c7a5ec20fb6a1a",
    "interesting": "-"
  },
  {
    "title": "Applications of ontologies in collaborative software development",
    "abstract": "Making distributed teams more efficient is one main goal of Collaborative Software Development (CSD) research. To this end, ontologies, which are models that capture a shared understanding of a specific domain, provide key benefits. Ontologies have formal, machine-interpretable semantics that allow to define semantic mappings for heterogeneous data and to infer implicit knowledge at run-time. Extending development infrastructures and software architectures with ontologies (of problem and solution domains) will address coordination and knowledge sharing challenges in activities such as documentation, requirements specificationrequirements specification, component reuse, error handling, and test case management. The purpose of this article is to provide systematic account of how ontologies can be applied in CSD, and to describe benefits of both existing applications such as \"semantic wikis\" as well as visionary scenarios such as a \"Software Engineering Semantic Web\". © 2010 Springer-Verlag Berlin Heidelberg.",
    "keywords": "Knowledge sharing; Ontology; Semantic development environment; Semantic wiki; Software engineering semantic web",
    "released": 2010,
    "link": "https://doi.org/10.1007/978-3-642-10294-3_6",
    "interesting": "-"
  },
  {
    "title": "Speculative analysis: Exploring future development states of software",
    "abstract": "Most software tools and environments help developers analyze the present and past development states of their software systems. Few approaches have investigated the potential consequences of future actions the developers may perform. The commoditization of hardware, multi-core architectures, and cloud computing provide new potential for delivering apparently-instantaneous feedback to developers, informing them of the effects of changes that they may be considering to the software. For example, modern IDEs often provide \"quick fix\" suggestions for resolving compilation errors. Developers must scan this list and select the option they think will resolve the problem. Instead, we propose that the IDE should speculatively perform each of the suggestions in the background and provide information that helps developers select the best option for the given context. We believe the feedback enabled by speculative operations can improve developer productivity and software quality. Copyright 2010 ACM.",
    "keywords": "Developer awareness; IDE; Quick fix; Recommender system; Speculation; Version control",
    "released": 2010,
    "link": "https://doi.org/10.1145/1882362.1882375",
    "interesting": "-"
  },
  {
    "title": "Improving UPC productivity via integrated development tools",
    "abstract": "In the world of high-performance computing (HPC), there has been an increased focus in recent years upon the importance of productivity in HPC application development. One crucial aspect of productivity is the programming model used, and the family of partitioned global-address-space (PGAS) models, such as UPC and X10, has served to advance the state of the art in balancing performance and productivity. Also of great importance is the variety of development tools used to support activities such as editing, debugging, and optimizing programs. These tools are often most useful as part of an integrated development environment (IDE). While some progress has been made towards bringing IDE capabilities into the HPC world, in particular by way of Eclipse projects, support has mainly focused on MPI and OpenMP tools. In this paper, we present research and development activities that are bringing Eclipse-based IDE capabilities to the PGAS developer community. We focus on tools for UPC, giving background on previously existing capabilities to work with UPC programs in Eclipse and then presenting a tool-chain and project wizard for the open-source Berkeley UPC compiler, basic UPC static analysis tools, and integration of our performance analysis tool (Parallel Performance Wizard) supporting UPC. Finally, we conclude by proposing future work and providing recommendations for further integration of UPC and other PGAS tools to enhance overall developer productivity. © 2010 ACM.",
    "keywords": "Eclipse; partitioned global address space; UPC",
    "released": 2010,
    "link": "https://doi.org/10.1145/2020373.2020381",
    "interesting": "-"
  },
  {
    "title": "Novel integrated development environment for implementing PLC on FPGA by converting ladder diagram to synthesizable VHDL code",
    "abstract": "Programmable logic controllers (PLCs) are the universally accepted automation components in industrial control. IEC61131-3 standard was developed to unify textual and graphical ways of describing the control specification for PLCs; ladder diagram being one such control specifications. However, PLCs available in the market as on today are vendor specific and replacement of PLC of one vendor in a process equipment by PLC of another vendor is not possible due to lack of standardization among EDA tools from PLC vendors. Secondly, heart of PLCs is a sequential processor which cannot execute parallel rungs of ladder diagram concurrently. Perhaps this aspect did not pose any problem so far due to large response times associated with industrial processes. However with introduction of high speed MEMS sensors along with increased control complexity, the need for high speed PLCs has been spelt out. Further, the safety features of control system are now expected to be integral part of ladder control specification. Field Programmable Gate Arrays (FPGAs) have better portability support, ability to support implementation of concurrent logic and security aspects. They have been mentioned in the literature as prospective programmable devices to implement control logic of PLCs. However, utilization of FPGAs for implementing control specification demands development of integrated environment to convert ladder logic as per IEC61131-3 to HDL. This HDL specification further can be ported to any of the standard FPGA development environments. It is seen through literature that not enough efforts have been focused on developing such integrated environment. This paper focuses on the details of such environment being developed by authors to convert IEC-61131-3 control specification standard to VHDL for direct synthesis. ©2010 IEEE.",
    "keywords": "IDE; IEC61131-3; Ladder diagram to VHDL synthesis; PLC on FPGA; Verification; VLSI",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICARCV.2010.5707833",
    "interesting": "-"
  },
  {
    "title": "Machine learning with text recognition",
    "abstract": "The prime objective of this Research is the development of effective reading skills in Machines. After reading the text and comprehending the meaning, it would self- program itself and according to the program it would implement the instructions. Here we are exploring a new era of computer vision and related Research. The current investigation presents an algorithm and software which detects, recognizes text and character with specific protocol in a live streaming video and programs itself according to the text. The protocol used for text consists of a Start word and an end word with embedded c instructions between them in special font. The proposed algorithm first detects the frame having text from live video streaming. The character is at its best view which means no broken point in a single character and no merge between groups of characters. The image processor tallies the images and burns the main microcontroller accordingly. This technology can prove to be immensely important to various human activities in day to day life. © 2010 IEEE.",
    "keywords": "Character recognition. Cross compiler and integrated development environment (IDE); Image and video processing; Machine learning; Text detection",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICCIC.2010.5705811",
    "interesting": "-"
  },
  {
    "title": "JLearn: An instructional environment for java program composition integrating test-driven development and life-cycle management for software quality assurance",
    "abstract": "JLearn is an instructional integrated development environment to support learning in Java programming, software development and project management. JLearn is based on Eclipse and JXPro platform, thus providing a software suite that integrates source editors, compilers, error analyzer, unit-testing and life-cycle management tools to afford advanced software development and project management within the IDE. The aim of this research is to provide a fully-automated collection of tools for learning software development and project management to improve learning outcomes of the students, improve software quality, throughput and enhance project management skills. © 2010 IEEE.",
    "keywords": "Integrated development environment; Learning environment; Life-cycle management; Software development",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICNIT.2010.5508538",
    "interesting": "-"
  },
  {
    "title": "Application integrated development environment technology for cross GIS platform",
    "abstract": "In order to break through business-oriented systems, and issue-oriented modeling technology to improve the geographic information system (GIS) application systems to adapt to ever-changing needs and the ability to reuse, workflow technology combined with application of formal language is used to achieve precise quantitative mathematical model of the effective conversion and heavy methods on the abstract operator space and expansion is used to simplify the large-scale analysis of heterogeneous modeling and applications to and the complex logic modeling. As a result, the new spatial analysis modeling is featured by visualization, precision, simplicity. On this basis, combined with visual interface building, functional warehouse and space resource management, support cross-platform GIS applications is built quickly, which in turn builds integrated environment for multi-domain application systems integration and functionality, provides the means to reuse, reduces GIS application difficulty of system development for GIS applications, provides in-depth and comprehensive technical support for GIS application.",
    "keywords": "Functional warehouse; Geographic information system (GIS); Spatial analysis; Spatial analysis modeling; Spatial operator; Visualization; Workflow",
    "released": 2010,
    "link": "https://doi.org/10.3799/dqkx.2010.036",
    "interesting": "-"
  },
  {
    "title": "A collaborative task planning and development environment on the grid",
    "abstract": "Grid system is a promising solution for sharing distributed resources of registered participants to perform tasks whose demands may exceed the capacity of individual participating organization. However, the collaborative aspect of Grids is still underdeveloped as they lack features and mechanisms for human interaction and collaboration. This paper presents the design and development of a prototype integrated environment for collaborative task planning and workflow development over a Grid. It allows the participants to design their joint workplan interactively and collaboratively in a high level graphical notation. The resulting workplan can be translated into Business Process Execution Language (BPEL) for testing and execution in the Grid and forms the basis for further refinement and collaboration. This collaborative Grid environment is a part of our larger Active Assistive Grid infrastructure. © 2010 IEEE.",
    "keywords": "Collaborative grid; Integrated development environment; Task planning; Workflow development",
    "released": 2010,
    "link": "https://doi.org/10.1109/WETICE.2010.50",
    "interesting": "-"
  },
  {
    "title": "Google-Wide Profiling: A continuous profiling infrastructure for data centers",
    "abstract": "Google-Wide Profiling (GWP), a continuous profiling infrastructure for data centers, provides performance insights for cloud applications. With negligible overhead, GWP provides stable, accurate profiles and a datacenter-scale tool for traditional performance analyses. Furthermore, GWP introduces novel applications of its profiles, such as application- platform affinity measurements and identification of platform-specific, microarchitectural peculiarities. © 2006 IEEE.",
    "keywords": "hardware; optimization; performance Monitoring; profiling tools; programming environments; system performance; tools and techniques",
    "released": 2010,
    "link": "https://doi.org/10.1109/MM.2010.68",
    "interesting": "-"
  },
  {
    "title": "JXPro: Environment for Java program composition integrating test-driven development with life-cycle management",
    "abstract": "Software development and project management in the IT industry offers increasing revenues for software houses and outsourcing companies. Development of complex multiple toolsets for software development and management results to high quality software systems requiring specialist software engineers to bring many aspects of software development together to create top software systems titles. There is a need to simplify this process, not only for ease of development but to bring out the best ideas of outside customers to software development domain to exceed customer satisfaction. With this in mind we developed a novel integrated development environment called JXPro. JXPro is based on Eclipse platform, thus providing a software suite that integrates source editors, compilers, error analyzer, unit-testing and life-cycle management tools to afford advanced software development and project management within the IDE. The aim of this research is to provide a fully-automated collection of tools for software project development and management to improve software quality, throughput and increase productivity. © 2010 IEEE.",
    "keywords": "Compiler; Integrated development environment; Life-cycle management; Software development",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICCNT.2010.27",
    "interesting": "-"
  },
  {
    "title": "SaaS platform services",
    "abstract": "With recognition of the cloud computing, SaaS and PaaS have been increasing and the need to incorporate these technologies in business operating systems has also been increasing. This paper introduces the \"SaaS platform service,\" which is a PaaS that provides the functions required for the development of SaaS applications for business systems (authentication, user management, E-mail distribution, service linkages etc.) and for business development frameworks. The SaaS platform service makes it possible to improve development efficiency and reduce the operation costs as well as implementing hybrid business systems in which ownership and usage are well balanced. NEC offers the SaaS platform service as \"RIACUBE/SP,\" which is a common platform of cloud oriented service platform solutions.",
    "keywords": "Cloud computing; Development environment; Multi-tenancy; PaaS; SaaS; Service linkages",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953983173&partnerID=40&md5=2a193ed2becdd382e7718471bde6c2e2",
    "interesting": "-"
  },
  {
    "title": "Actively comparing clones inside the code editor",
    "abstract": "Tool support for code clones can improve software quality and maintainability. While significant research has been done in locating clones in existing source code, there has been less of a research focus on proactively tracking and supporting copy-paste-modify operations, even though copying and pasting is a major source of clone formation and the resulting clones are then often modified. We designed and implemented a programming editor, based on the Eclipse integrated development environment, named CSeR (Code Segment Reuse), which keeps a record of copy-and-paste-induced clones and then tracks and visualizes the changes made to a clone with distinct colors. The core of CSeR is an algorithm that actively compares two clones for detailed differences as a programmer edits either one of them. This edit-based comparison algorithm is unique to CSeR and produces more immediate, accurate, and natural results than other differencing tools. © 2010 ACM.",
    "keywords": "code clone; code comparison; copy-and-paste programming; differencing tools; Eclipse integrated development environment; Java; software evolution; software maintenance",
    "released": 2010,
    "link": "https://doi.org/10.1145/1808901.1808903",
    "interesting": "-"
  },
  {
    "title": "Aiding software maintenance with copy-and-paste clone-awareness",
    "abstract": "When programmers copy, paste, and then modify source code, the once-identical code fragments (code clones) can become indistinguishable as the software evolves over time. In this paper, we present three features of our software tool, a set of Eclipse plug-ins named CnP (CnP's clone visualization, CReN, and LexId), which aids the programmer during copy-and-paste programming. We believe that the clone-awareness that the tool provides can help programmers benefit from this clone information during debugging and modification tasks, develop software more efficiently, and prevent inconsistent identifier renaming within clones. We tested these hypotheses with a user study and present our results. © 2010 IEEE.",
    "keywords": "Code clone; Copy-and-paste programming; Eclipse integrated development environment; Identifier renaming; Java",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICPC.2010.22",
    "interesting": "-"
  },
  {
    "title": "Novel approaches to CS 0 with app inventor for android",
    "abstract": "Google's App Inventor for Android (AIA) is a visual programming environment for creating mobile phone applications that is designed to be accessible and appealing to college nonmajors taking introductory courses in computer science. Specifically, AIA provides a development environment similar to StarLogo TNG [7], Scratch [5], and Alice [2] but enabling users to create mobile applications incorporating social networking, location awareness, and Web-based services for Google's Android platform [1]. Faculty at twelve different colleges and universities used AIA in a wide range of introductory computer science courses for nonmajors in the fall of 2009. After a short visual introduction to AIA, panelists from four of these schools will present: • their different curricular approaches. • ways in which AIA was successful or unsuccessful in helping them meet their educational goals. • projects created by their students. • what they learned from their experiences that can be applied to other introductory computer science courses. • whether AIA was effective in interesting students who would otherwise not take computer science courses. • results of pre- and post-surveys of the students.",
    "keywords": "CS 0; Education; Introductory computer science; Mobile application development; Social aspects; Visual programming environments",
    "released": 2010,
    "link": "https://doi.org/10.1145/1734263.1734373",
    "interesting": "-"
  },
  {
    "title": "Web-based information systems development and dynamic organisational change: The need for development tools to cope with emergent information requirements",
    "abstract": "Purpose: This paper aims to examine the contextual issues relating to the problem of developing web-based information systems for emergent organisations. Design/methodology/approach: The study employs an action research approach to understand and develop an analytical development tool for web developers. It postulates that existing methods are inadequate in coping with sudden and unexpected changing characteristics within the organisation. The theory of deferred action is used as the basis for the development of an emergent analytical development tool. Many tools for managing change in a continuously changing organisation are susceptible to inadequacy. Findings: The insights proposed are believed to assist designers in developing functional and relevant approaches within dynamic organisational contexts. Originality/value: The analytical development matrix assists web developers in emergent organisations to develop web-based information systems. © Emerald Group Publishing Limited.",
    "keywords": "Information systems; Organizational change; Worldwide web",
    "released": 2010,
    "link": "https://doi.org/10.1108/17410391011036111",
    "interesting": "-"
  },
  {
    "title": "Artemis-GADE: A graph grammar-directed development environment for software architecture",
    "abstract": "With the increasing size and complexity of software systems, the focus of software development has been shifting from algorithms and data structures to software architectures. Graphical and integrated software architecture development environments are becoming more and more important for the research and practice of software architectures-centric system development. Proposed in this paper is a generative framework for graph grammar-based visual development environment. Given a description of a certain software architecture style in graph grammar, the framework can automatically generate a corresponding graph grammar-directed environment. Compared with existing work of meta-model-based tools, this graph grammar-directed approach is more intuitive as it uses graphic notations, while it is still equipped with a rich set of formal semantics and reasoning theories. It encodes more style-specific semantics and dynamic evolution of software architectures is also depicted with graph transformations. It makes better use of the implicit semantics of software architecture style, and hence makes the generated environment easier to use and more reliable. A prototype system Artemis-GADE has been designed and implemented. Besides graph grammar-directed visual editing of software architecture specifications, Artemis-GADE provides feasible supports for the activities in the whole lifecycle of software architecture-centric system construction and evolution, including online system adaption based on dynamic architecture reconfigurations.",
    "keywords": "Attributed graph grammar; Development environment; Software architecture; Syntax-directed; Visualization",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955987800&partnerID=40&md5=f6ffdeb530d97cd3ba9c913ac9dd0ae2",
    "interesting": "-"
  },
  {
    "title": "Renaming parts of identifiers consistently within code clones",
    "abstract": "Copying and pasting source code results in code duplication. A common form of software reuse involves modifying the new duplicate to fit a current task. The similar code fragments (code clones) may be edited inconsistently by the programmer, for various reasons, leaving a bug in the software that may remain undetected by both the programmer and the compiler. A previously published tool, CReN, helps the programmer by automatically renaming all instances of the same identifier consistently within a clone when one is edited. In this tool demo, we introduce an extension of CReN, an Eclipse plug-in named LexId, which renames the same parts of different identifiers consistently together within code clones. © 2010 IEEE.",
    "keywords": "Code clone; Copy-and-paste programming; Eclipse integrated development environment; Identifier renaming; Java",
    "released": 2010,
    "link": "https://doi.org/10.1109/ICPC.2010.23",
    "interesting": "-"
  },
  {
    "title": "Towards integrating e-mail communication in the IDE",
    "abstract": "Software developers spend a large part of their working time using an Integrated Development Environment (IDE). However, IDEs are usually disconnected from the means of communication programmers use to interact and discuss with other co-workers. Because of this, many context switches are required and the existing connection between source code artifacts and artifacts generated from recorded communications, such as e-mails, cannot be effectively put to good use. In this paper, we introduce Remail, an Eclipse plugin to integrate e-mail communication in the IDE. It allows developers to seamlessly handle source code entities and e-mails concerning the source code. We present our preliminary work on Remail that allows linking source code classes to the e-mails in which they are discussed, thus providing an updated and effective documentation. © 2010 ACM.",
    "keywords": "D.2.7 [Distribution, Maintenance, and Enhancement]: Restructuring, reverse engineering, and reengineering",
    "released": 2010,
    "link": "https://doi.org/10.1145/1809175.1809176",
    "interesting": "-"
  },
  {
    "title": "The QuickHaptics microAPI: Enabling haptic mashups",
    "abstract": "Modern software development requires harnessing rich complex APIs allowing much more sophisticated and creative systems to be designed. End user web-based programming has manifested itself today in mashups, most often a page or server-side application that pulls together content, data models and functionality from diverse sources and combines them in a generative manner as a new application or web service. The nature of a mashup implies a certain style of software coding, one that is fast, with easy integration using open application programming interfaces (APIs) to produce results that are intentional from the point of view of the application developer but can be unexpected and surprising from the point of view of the API designers. Like APIs developed to enable web mashups, the QuickHaptics microAPI (released by SensAble in November 2008) follows the Facade pattern of software engineering to provide a simple interface to the great bulk of code in the HD and HL layers of OpenHaptics in order to enable \"haptic mashups\". HD pulls the developer into the details of device initialization, threading and the haptics Servo Loop; while HL requires the applications developer to know a great deal about OpenGL, geometry description and scene graphs. QuickHaptics makes programming simpler by encapsulating the basic steps common to all haptics/graphics applications. By anticipating typical use scenarios, a wide range of intelligent defaults is provided that allows the programmer to quickly and efficiently put a project together but gives a very wide range of control over the force rendering that is implemented in the end. ©2010 IEEE.",
    "keywords": "D.2.6 [programming environments]: integrated environments; Education; H.5.2 [user interfaces]: haptic, graphic and auditory feedback; Haptics; Human-computer interaction; Mashups; Medical simulation; Rapid application development; Scientific visualization",
    "released": 2010,
    "link": "https://doi.org/10.1109/HAPTIC.2010.5444644",
    "interesting": "-"
  },
  {
    "title": "A social collaborative virtual environment for software development",
    "abstract": "Software development teams often require information and expert help that are not supported by conventional development environments. This paper presents a social development environment called SCI (Social Collaborative IDE) that unifies the concepts of social network and collaborative development environment. SCI integrates presence and activity awareness information and collaborative program development tools. The activity awareness information provides inter-project and inter-session sharing and awareness of other developers' behavior. The collaboration tools provide a wide range of facilities for synchronous and asynchronous collaboration and information sharing between team members. SCI presents a framework that manages pending invitations of team members. © 2010 IEEE.",
    "keywords": "Collaborative development environment; Non-player characters; SCI; Social networks; Software development",
    "released": 2010,
    "link": "https://doi.org/10.1109/CTS.2010.5478525",
    "interesting": "-"
  },
  {
    "title": "STEXIDE: An integrated development environment for STEX collections",
    "abstract": "Authoring documents in MKM formats like OMDoc is a very tedious task. After years of working on a semantically annotated corpus of STEX documents (GenCS), we identified a set of common, time-consuming subtasks, which can be supported in an integrated authoring environment. We have adapted the modular Eclipse IDE into STEXIDE, an authoring solution for enhancing productivity in contributing to STEX based corpora. STEXIDE supports context-aware command completion, module management, semantic macro retrieval, and theory graph navigation. © 2010 Springer-Verlag Berlin Heidelberg.",
    "keywords": "",
    "released": 2010,
    "link": "https://doi.org/10.1007/978-3-642-14128-7_29",
    "interesting": "-"
  },
  {
    "title": "Evaluating the use of search engine development tools in IT education",
    "abstract": "It is important for education in computer science and information systems to keep up to date with the latest development in technology. With the rapid development of the Internet and the Web, many schools have included Internet-related technologies, such as Web search engines and e-commerce, as part of their curricula. Previous research has shown that it is effective to use search engine development tools to facilitate students' learning. However, the effectiveness of these tools in the classroom has not been evaluated. In this article, we review the design of three search engine development tools, SpidersRUs, Greenstone, and Alkaline, followed by an evaluation study that compared the three tools in the classroom. In the study, 33 students were divided into 13 groups and each group used the three tools to develop three independent search engines in a class project. Our evaluation results showed that SpidersRUs performed better than the two other tools in overall satisfaction and the level of knowledge gained in their learning experience when using the tools for a class project on Internet applications development. © 2009 ASIS & T.",
    "keywords": "",
    "released": 2010,
    "link": "https://doi.org/10.1002/asi.21223",
    "interesting": "-"
  },
  {
    "title": "Integrating parallel application development with performance analysis in periscope",
    "abstract": "High-performance computing (HPC) is making its way in every field of science and engineering by providing advanced methods for getting deeper comprehension of different processes and phenomena. However, due to the increased complexity of computer architectures and their multi-level parallelism, the development of efficient highly parallel applications is considerably complicated. This process has to be inevitably augmented with continuous performance analysis in order for one to be successful in optimizing applications and squeezing the potential out of today's supercomputers. Periscope is a distributed performance analysis tool capable of collecting and processing measurement data from large scale application runs. In comparison to other similar tools, Periscope provides high-level performance bottlenecks and not the low-level values of hardware counters. This paper presents an enhanced and powerful graphical user interface that was recently developed for Periscope. It was successfully integrated in the Eclipse development platform as a plug-in and takes advantage of one of its extensions - the Parallel Tools Platform (PTP). This approach combines some of platform's advanced programming features with those of the Periscope performance measurement toolkit. As a result, a convenient software development and performance analysis environment was produced that aims at increasing the productivity of developers during the creation of highly efficient HPC applications.© 2010 IEEE.",
    "keywords": "Eclipse; Integrated development environment; Parallel programming; Performance analysis; Periscope",
    "released": 2010,
    "link": "https://doi.org/10.1109/IPDPSW.2010.5470940",
    "interesting": "-"
  },
  {
    "title": "JavaSpaces NetBeans - A Linda workbench for distributed programming course",
    "abstract": "In this paper we introduce the JavaSpaces NetBeans IDE (JSN) which integrates the JavaSpaces technology, an implementation of Linda principles in Java, with the NetBeans IDE. JSN is a didactic tool for practical assignments during distributed programming courses. It hides advanced aspects of JavaSpaces configuration and lets students focus on interprocess coordination. An important component of JSN is a distributed debugger which can help to make concurrent programming classes easier to understand and more compelling. Copyright 2010 ACM.",
    "keywords": "Distributed debugger; Distributed programming; Integrated development environment; Javaspaces; Linda; NetBeans",
    "released": 2010,
    "link": "https://doi.org/10.1145/1822090.1822099",
    "interesting": "-"
  },
  {
    "title": "Searching and using external types in an extensible software development environment",
    "abstract": "Schema and ontology languages have proved to be useful for conceptualizing knowledge in a variety of applications. In many software projects, XML Schema Definition data types and ontological concept descriptions coexist with programming language class hierarchies. However, only programming language type definitions are fully integrated into today's software development environments. Support for external type systems is spotty. For programmers, it is particularly tedious to search type definitions in XML schema files and OWL ontologies, to browse external type hierarchies, to investigate external type members, and to analyze and comprehend the use of external type definitions in program code. In this work, it will be argued that improved search capabilities are required to ease the use of schema and ontology languages in software projects. Difficulties of searching type definitions in software project workspaces will be indicated. An extensible compiler framework will be outlined that facilitates the use of schema and ontology languages in C# programs. An Eclipse-based integrated development environment will be described that makes XML data types and OWL concept descriptions first-class citizens of the source code editor. Finally, identical search and (just in time) program analysis features for programming language and external type definitions will be suggested. © 2010 ACM.",
    "keywords": "C#; integration of programming and ontology languages; OWL; XSD; Zhi#",
    "released": 2010,
    "link": "https://doi.org/10.1145/1809175.1809185",
    "interesting": "-"
  },
  {
    "title": "Domain-specific languages for composable editor plugins",
    "abstract": "Modern IDEs increase developer productivity by incorporating many different kinds of editor services. These can be purely syntactic, such as syntax highlighting, code folding, and an outline for navigation; or they can be based on the language semantics, such as in-line type error reporting and resolving identifier declarations. Building all these services from scratch requires both the extensive knowledge of the sometimes complicated and highly interdependent APIs and extension mechanisms of an IDE framework, and an in-depth understanding of the structure and semantics of the targeted language. This paper describes Spoofax/IMP, a meta-tooling suite that provides high-level domain-specific languages for describing editor services, relieving editor developers from much of the framework-specific programming. Editor services are defined as composable modules of rules coupled to a modular SDF grammar. The composability provided by the SGLR parser and the declaratively defined services allows embedded languages and language extensions to be easily formulated as additional rules extending an existing language definition. The service definitions are used to generate Eclipse editor plugins. We discuss two examples: an editor plugin for WebDSL, a domain-specific language for web applications, and the embedding of WebDSL in Stratego, used for expressing the (static) semantic rules of WebDSL. © 2010 Elsevier B.V. All rights reserved.",
    "keywords": "Domain specific language; editor plugin; integrated development environment",
    "released": 2010,
    "link": "https://doi.org/10.1016/j.entcs.2010.08.038",
    "interesting": "-"
  },
  {
    "title": "Designing the user interface and functions of a search engine development tool",
    "abstract": "Search engine development tools have been made to allow users to build their own search engines. However, most of these tools have been designed for advanced computer users. Users without a full understanding of topics such as Web spidering would find these tools difficult to use due to different issues in terms of user interface, performance, and reliability. In view of these issues, we presented a tool called SpidersRUs to strike a balance between usability and functionality. On one hand, beginners should be able to operate the tool by using the basic functions needed to build a search engine. On the other, advanced users should be given the options to exert a higher level of customization while working on the tool. To study the interface design of SpidersRUs, we compared its usability and functionality from the users' perspective with two other development tools, namely Alkaline and Greenstone, in an evaluation study. Our study showed that SpidersRUs was preferred over the other two, particularly in areas of screen layout and sequence, terminology and system information, and learning to use the system. © 2009 Elsevier B.V. All rights reserved.",
    "keywords": "Search engine development tools; User evaluation; Web search",
    "released": 2010,
    "link": "https://doi.org/10.1016/j.dss.2009.10.001",
    "interesting": "-"
  },
  {
    "title": "A feature model for an IDE4OCL",
    "abstract": "An Integrated OCL Development Environment (IDE4OCL) can significantly improve the pragmatics and practice of OCL. Therefore we started a comprehensive requirement analysis with the long term vision of a multisite IDE4OCL project. In this paper we present a feature model for the IDE4OCL vision based on this analysis. In an earlier work we identified domain concepts, tool-level interactions with IDE4OCL, and use cases for OCL developers including a set predefined features. In the second step, we asked the OCL community members for their feedback on our proposal. Around 100 researchers, tool developers and practitioners who gained experience with OCL have voted in an online-survey. The results gave us a valuable insight in the needs of OCL usage both in usual and advanced OCL applications. One of the important results is a collection of features that have been proposed additionally to our predefined features. We analysed all the comments of the participants of the survey and consolidated them into an extended set of IDE4OCL features and eventually into a feature model. © OCL and Textual Modelling, 2010.",
    "keywords": "Feature model; Integrated development environment; Modeling; OCL",
    "released": 2010,
    "link": "https://doi.org/10.14279/tuj.eceasst.36.536.531",
    "interesting": "-"
  },
  {
    "title": "An enticing environment for programming",
    "abstract": "While teaching a course on the foundations of informatics to non-CS students, the author wanted to offer a programming challenge without burdening the participants with the numerous details that typically accompany the use of practical programming languages and tools. In particular, there should be no need to install an editor and execution environment (compiler or interpreter). Furthermore, the programming language should be sufficiently simple and clean. However, the author did not want to design a completely new language with tools. This article presents Tom's JavaScript Machine as an attempt at providing a simple and enticing environment for programming, and reports some experiences. Tom's JavaScript Machine is freely available on-line and only requires a web browser that supports JavaScript. It includes a simple 3Dvariant of Turtle Graphics (for browsers that support the HTML5 canvas element) and an instructive programming challenge with extensive (inter)active hints. The ideas behind Tom's JavaScript Machine can also be applied to create problem-specific environments for informatics contests. However, the current implementation still has some shortcomings that need to be addressed. © 2010 Institute of Mathematics and Informatics.",
    "keywords": "JavaScript; Programming tools; Self-reproducing programs; Study material development",
    "released": 2010,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85011659804&partnerID=40&md5=c245fa5e8aa7bfc5822c47f839052976",
    "interesting": "-"
  },
  {
    "title": "The international documentation and evaluation system IDES: A single center observational case series for development of an ankle prosthesis documentation questionnaire and study of its feasibility and face validity",
    "abstract": "Background: The number of implanted total ankle replacements is increasing and most articles present short- and mid-term results. Comparison of outcomes is difficult because of inconsistent terminology and different use of parameters. Materials and methods: We created a module for total ankle prostheses in the framework of the International Documentation and Evaluation System (IDES). Content development was conducted with an iterative process based on a single surgeon series of 74 HINTEGRA (c) total ankle replacements and expert opinions. Results: The IDES ankle module comprises three forms A, B and C for recording of primary (A), revision (B) and followup (C) procedures. 74 primary interventions, 28 revisions and 92 followups could be documented in detail with the final version of the questionnaires. Conclusion: The IDES-forms facilitate a structured and standardized data collection for total ankle arthroplasties. Implemented on the academic MEMdoc portal http://www.memdoc.org of the University of Bern, all registered users can make use of IDES in its online or paper based versions.",
    "keywords": "",
    "released": 2010,
    "link": "https://doi.org/10.1186/1757-1146-3-4",
    "interesting": "-"
  },
  {
    "title": "Variations in/nearby genes coding for <i>JAZF1</i>, <i>TSPAN8/LGR5</i> and <i>HHEX</i>-<i>IDE</i> and risk of type 2 diabetes in han chinese",
    "abstract": "Several genetic loci (JAZF1, CDC123/CAMK1D, TSPAN8/LGR5, ADAMTS9, VEGFA and HHEX-IDE) were identified to be significantly related to the risk of type 2 diabetes and quantitative metabolic traits in European populations. Here, we aimed to evaluate the impacts of these novel loci on type 2 diabetes risk in a population-based case-control study of Han Chinese (1912 cases and 2041 controls). We genotyped 13 single-nucleotide polymorphisms (SNPs) in/near these genes and examined the differences in allele/genotype frequency between cases and controls. We found that both IDE rs11187007 and HHEX rs1111875 were associated with type 2 diabetes risk (for both variants: odds ratio (OR)=1.15, 95% confidence interval (CI) 1.04-1.28, P=0.009). In a meta-analysis where we pooled our data with the three previous studies conducted in East Asians, we found that the variants of JAZF1 rs864745 (1.09 (1.03-1.16); P=3.49x10(-3)) and TSPAN8/LGR5 rs7961581 (1.11 (1.05-1.17); P=1.89x10(-4)) were significantly associated with type 2 diabetes risk. In addition, the meta-analysis (7207 cases and 8260 controls) also showed that HHEX rs1111875 did have effects on type 2 diabetes in Chinese population (OR=1.15(1.10-1.21); P=1.93x10(-8)). This large population-based study and meta-analysis further confirmed the modest effects of the JAZF1, TSPAN8/LGR5 and HHEX-IDE loci on type 2 diabetes in Chinese and other East Asians. Journal of Human Genetics (2010) 55, 810-815; doi:10.1038/jhg.2010.117; published online 7 October 2010",
    "keywords": "association study; Han Chinese population; HHEX; type 2 diabetes",
    "released": 2010,
    "link": "https://doi.org/10.1038/jhg.2010.117",
    "interesting": "-"
  },
  {
    "title": "Lively wiki a development environment for creating and sharing active web content",
    "abstract": "Wikis are Web-based collaborative systems designed to help people share information. Wikis have become popular due to their openness which gives users complete control over the organization and the content of wiki pages. Unfortunately existing wiki engines restrict users to enter only passive content, such as text, graphics, and videos and do not allow users to customize wiki pages. Thus, wikis cannot be used to host or author rich dynamic and interactive content. In this paper we present Lively Wiki, a development and collaboration environment based on the Lively Kernel which enables users to create rich and interactive Web pages and applications - without leaving the Web. Lively Wiki combines the wiki metaphor with a direct-manipulation user interface and adds a concept for Web programming as well as programming tool support to create an easy to use, scalable, and extendable Web authoring tool. Moreover, Lively Wiki is self-supporting, i.e. the development tools were used for creating its own implementation thereby giving users the freedom to customize every aspect of the system.",
    "keywords": "web application; user innovation; morphic; end-user programming; development environment; application Wikis; Wikis",
    "released": 2009,
    "link": "https://doi.org/10.1145/1641309.1641324",
    "interesting": "-"
  },
  {
    "title": "Embedding social networking information into jazz to foster group awareness within distributed teams",
    "abstract": "A Collaborative Development Environments (CDE) provides a project workspace with a standardized toolset to help distributed development teams cope with geographical distance. However, there is a lack of support to reduce socio-cultural distance, which poses practical barriers to the development of connections and shared context/culture between team members. The rise of the Social Web has created several opportunities to publish personal information, often further composed through Web mashups, which can be regarded as a valuable data source in order to establish a shared context among remote developers, with little or no chances to meet.In this paper we present our preliminary work that aims to provide distributed software teams with overall, contextual awareness aggregated in one place. Using the IBM Jazz as CDE, which already provides both presence and workspace awareness, we leveraged the FriendFeed aggregator service to embed personal information about distributed co-workers, collected from social networks. Disseminating additional group awareness information to developers, who have little or no chances to meet, can help to speed up the establishment of organizational values, attitudes, and trust-based inter-personal connections.",
    "keywords": "web 2.0; social web; mashup; jazz; group awareness; eclipse; collaborative development environment; cde",
    "released": 2009,
    "link": "https://doi.org/10.1145/1595836.1595842",
    "interesting": "-"
  },
  {
    "title": "Incremental model synchronization in model driven development environments",
    "abstract": "Most modern model driven software development environments rely heavily on model transformations for generating various software design artifacts and eventually even source code. However, during development, maintenance and evolution activities, these software artifacts are subject to updates and refactoring operations. In such model driven development environments, these software artifacts need to be re-synchronized every time one of them is altered, so that they all remain consistent according to some specific rules, relations and domain constraints. Until now, the standard approach to model synchronization has been the re-application of all transformation rules, aiming thus for the complete re-generation of all artifacts in all models involved. This complete re-application is a safe yet computationally expensive way to ensure consistency among models. In this paper, we present a method for re-synchronizing software models in an incremental fashion by utilizing an indexing model. In this respect, using the proposed methodology, the time required for maintaining global model consistency is proportional to the size of the changes and not that of the models involved. The proposed approach has been applied for the incremental re-synchronization of large and complex models in the Eclipse Web Tools Platform (WTP). Results indicate that this solution can significantly reduce the time required to re-synchronize models in such comprehensive development environments as WTP.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1145/1723028.1723053",
    "interesting": "-"
  },
  {
    "title": "Equalizing the Structures of Web Communities in Ontology Development Tools",
    "abstract": "In this paper we face some relevant issues on the relations between Web communities and ontologies. We build an operator that constructs a weak Web community, according to the definition given in,starting from a seed of Web sites. The necessity of such an operator is derived from a problem arisen in the model developed in, in which some relevant concepts in automotive oriented ontology were not given a corresponding Web community. This fact -if not considered- can bring automatic ontology development to some non-correct results. In this work we define and analyze a new operator, called Com, with the tools furnished by the method of parametrization and we find that, given a seed S and the induced graph I(S), the community generated by our operator is monotonic with respect to clustering and is denser than the original graph I(S).",
    "keywords": "web communities; ontology engineering; complex networks",
    "released": 2009,
    "link": "https://doi.org/10.1109/ISDA.2009.223",
    "interesting": "-"
  },
  {
    "title": "Networked autonomous smart sensors and dynamic reconfigurable application development tool for online monitoring systems",
    "abstract": "Autonomous smart sensor is a highly integrated turn-key device, operates independently and owns itself life cycle. Networked sensors exchange information with protocols; we designed an application-layer protocol named AgileSN making sensor nodes interoperable and interchangeable. AgileSN sensor node itself and captured data that protocol carried are self-descriptive, with these smart capabilities, sensor nodes can be automatically detected or searched by interested peers or sink nodes, and sensor data can be parsed dynamically on the fly without human intervention, made autonomous sensor nodes plug and play in the network world. Like WEB system, well accepted network protocol make networked sensors interchangeable and interoperable, universal sensor tools are possible to process sensed data. We have designed a component-based software tool for sensor application development. In this software environment, all application functionalities are realized through software components, each component is designed to finish a special task, like reading data from networked sensors, data processing, visual presentation, network or local file I/O, HMI, etc. sensor data is processed sequentially by several components through data flow. A component can operate in its own thread, carefully designed component makes the whole data processing flow operates in pipeline mode, greatly improve data processing throughput. Components and data routes can be created and destroyed at runtime, so the application system functionality is reconfigured. We apply the Petri Net tool to model components and the whole application system, investigate their function and performance, present a non-collision high-performance soft-bus for inter-component data transfer, investigate the hazard phenomenon that exists in a multi-input component, and propose technical means to eliminate it.",
    "keywords": "networked sensors; autonomous smart sensor; dynamic reconfigurable; virtual instrumentation; AgileSN; IsVIP",
    "released": 2009,
    "link": "https://doi.org/10.1109/AUTEST.2009.5314047",
    "interesting": "-"
  },
  {
    "title": "Lively Fabrik A Web-based End-user Programming Environment",
    "abstract": "Lively Fabrik is a Web-based general-purpose end-user programming environment. Based on the Lively Kernel, Lively Fabrik extends the ideas of the original Fabrik system by empowering end-users to create interactive Web content entirely within their Web browsers. Web applications created with Lively Fabrik typically combine Web sources, data manipulation, and interactive user interface elements. The result can be a Mashup, but due to the powerful underlaying system, any general-purpose application. Connecting components with wires and scripting components is all that is needed to do so.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/C5.2009.8",
    "interesting": "-"
  },
  {
    "title": "Semantic Interoperability Problem of OSS Forges",
    "abstract": "Interoperability between collaborative development platforms (forges) in the Open Source Software world is a significant issue. The forges tend to follow the lock-in phenomenon, providing no easy-to-use facilities for migrating projects or their parts between forge platforms. To facilitate the process of cross-forge project migration, the following paper presents an approach of lifting forge data models to the semantic level and applying rule-based mappings for their alignment. The approach also involves Semantic Web Services to handle the process of importing/exporting project metadata from/to Open Source Software forges. Finally, the paper demonstrates the approach on the basis of proof-of-concept implementation exploiting the existing forges and presents the lessons learnt.",
    "keywords": "semantic mapping; SWRL; Semantic Web Service; semantic interoperability; collaborative development environments (forges); Open Source Software (OSS)",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICSEA.2009.39",
    "interesting": "-"
  },
  {
    "title": "A Browser Agnostic Web Application UI Test Framework: Motivation, Architecture, and Design",
    "abstract": "There are several approaches available for creating Web application UI test automation. This paper describes the motivation for creating a new Web application test framework, and briefly describes the architecture and design of the framework. The framework is browser agnostic, easy to use, employs a high level programming language and development environment allowing integrated debugging and object oriented design, permits low level access to UI controls, and is resilient to UI changes in the application under test. The architecture of the framework features a two-layer design which isolates all browser specific functionality, allowing test scenario developers to focus on testing related issues rather than on implementation details. The architecture of the framework can be used with most modern operating system platforms. Early experience with the framework has been promising.",
    "keywords": "Automatic testing; programming environments; software libraries; software quality; software testing",
    "released": 2009,
    "link": "https://doi.org/10.1109/ITNG.2009.97",
    "interesting": "-"
  },
  {
    "title": "An empirical analysis of the evolution of user-visible features in an integrated development environment",
    "abstract": "Programmers spend much of their time interacting with Integrated Development Environments (IDEs), which help increase productivity by automating much of the clerical and administrative work. Like any useful software, IDEs are becoming more powerful and usable as new functionality is added and usability concerns addressed. In particular, the last decade has witnessed the rapid and steady growth of features and enhancements (changes) in major Java IDEs. It is of research interest to learn about the characteristics of these changes as well as salient patterns in their evolution trajectories as these can be useful to understand and guide both the design and evolution of similar systems. To this end, a total of 645 \"What's New\" entries in seven releases of the Eclipse IDE were analyzed both quantitatively and qualitatively under two models. Using the first, an activity-based, functional model, it is found that the vast majority of the changes are refinements or incremental additions to the feature architecture set up in early releases (1.0 and 2.0). Using the second, a usability-based model, a detailed usability analysis was performed to further characterize these changes in terms of their potential impact on how effectively programmers use the IDE. Findings and implications as well as results of selective comparison with two other popular IDEs are reported. Copyright © 2009 Daqing Hou and Yuejiao Wang.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1145/1723028.1723044",
    "interesting": "-"
  },
  {
    "title": "SCI: Towards a social collaborative integrated development environment",
    "abstract": "Software development teams face challenges communicating with each other. This paper presents the design of a social real-time collaborative IDE called SCI that unifies the concepts of social network and collaborative IDE. SCI integrates presence and activity awareness information and collaborative program development tools. Activity awareness information provides a sense of the presence of each team member: their activity on joint projects, technical interests, currently active sessions, and availability profile. The collaboration tools provide a wide range of facilities for synchronous and asynchronous collaboration and information sharing between team members © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/CSE.2009.420",
    "interesting": "-"
  },
  {
    "title": "The SWRLAPI: A development environment for working with SWRL rules",
    "abstract": "SWRL is an expressive OWL-based rule language that can be used to increase the amount of knowledge encoded in OWL ontologies. While semantically a SWRL rule can be considered as an additional type of OWL axiom, the authoring and management of SWRL rule bases requires specialized tools that are not typically present in standard OWL development environments. In this paper, we describe such a tool-called the SWRLAPI-that provides a rich development environment for working with SWRL rules. The SWRLAPI is built on the widely-used Protégé-OWL ontology toolkit. It provides both a set of highly interactive user interfaces for working with rules and a set of low-level APIs for embedding rules in knowledge-driven applications. This SWRLAPI has been used to develop a number of technologies to support data integration on the Semantic Web, including a SWRL-based query language called SQWRL and a set of tools that support interoperation between OWL and a variety of information formats.",
    "keywords": "",
    "released": 2009,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885706463&partnerID=40&md5=1898ea6f4440662681d5af208f512d01",
    "interesting": "-"
  },
  {
    "title": "LAnguages, methodologies and Development tools for multi-agent systemS, LADS'009 (Introductory Essay of the Workshop)",
    "abstract": "LADS'09 aims to offer a rich forum for leading researchers, from both academia and industry, interested in sharing their experiences about the theory and practice of formal approaches, programming languages, tools and techniques that support the development and deployment of multi-agent systems. These are gaining increasing attention in important application areas such as electronic institutions, semantic web, web services, security, grid computing, ambient intelligence, pervasive computing, electronic contracting, among others.",
    "keywords": "",
    "released": 2009,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885193839&partnerID=40&md5=42dd741b9051cab3a4c3a13768d0c6e3",
    "interesting": "-"
  },
  {
    "title": "Web-based information systems development and dynamic organisational change: The need for emergent development tools",
    "abstract": "This paper considers contextual issues relating to the problem of developing web-based information systems in and for emergent organisations. It postulates that the methods available suffer because of sudden and unexpected changing characteristics within the organisation. The Theory of Deferred Action is used as the basis for the development of an emergent development tool. Many tools for managing change in a continuously changing organisation are susceptible to inadequacy. The insights proposed are believed to assist designers in developing functional and relevant approaches within dynamic organisational contexts.",
    "keywords": "Emergent organisations; Theory of deferred action; Web-based information system development",
    "released": 2009,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857778895&partnerID=40&md5=ccdd6bb8b1e23d825896122e6a5b4cc5",
    "interesting": "-"
  },
  {
    "title": "What your IDE could do once you understand your code",
    "abstract": "A significant part of today's program comprehension research addresses the long and complicated road a developer needs to travel to understand a given piece of code. But perhaps the best way to shorten this road, is by focusing on the eventual moment of enlightenment that marks the end of this road, when the developer actually understands the code and is about to make the required change. © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/WSE.2009.5630966",
    "interesting": "-"
  },
  {
    "title": "Integrating linked data driven software development interaction into an IDE",
    "abstract": "With \"Linked Data Driven Software Development\" (LD2SD) we have introduced a light-weight, linked data-based framework that allows to integrate software artefacts, such as version control systems and issue trackers, as well as discussion forums. The so created interlinked data-space enables uniform query and browsing facilities. In this paper we elaborate on the interaction part of LD2SD, and demonstrate how the LD2SD-interaction can be integrated into an Integrated Development Environment (IDE). We have performed an end-user evaluation and report on our findings and outline future steps.",
    "keywords": "IDE; Interaction; Linked data; Software engineering",
    "released": 2009,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891382193&partnerID=40&md5=67dea87d9140c954225587d009b82416",
    "interesting": "-"
  },
  {
    "title": "UEMan: A tool to manage user evaluation in development environments",
    "abstract": "One of the challenges in software development is to collect and analyze the end users' feedback in an effective and efficient manner. In this paper we present a tool to manage user evaluation alongside the process of software development. The tool is based on the idea that user evaluation should be managed iteratively from within the integrated development environment (IDE) in order to provide high quality user interface. The main capabilities include creating the experiment object as part of the software project; deriving development tasks from the analysis of evaluation data; and tracing these tasks to and from the code. Further, we provide a library to enable development of Java aspects for creation of automatic measures to increase the body of the evaluation data. Using this tool, development teams can manage user-centered design (UCD) activities at the IDE level, hence developing software products with an adequate level of usability. © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICSE.2009.5070553",
    "interesting": "-"
  },
  {
    "title": "Implementing self-organizing neural networks for P-systems communications architectures using microcontrollers",
    "abstract": "Nowadays, it is possible to find out different viable architectures that implements P Systems in a distributed cluster of processors. They are based in the distribution of several membranes in each processor, the use of proxies to control the communication between membranes and mainly, the suitable distribution of the architecture in a balanced tree of processors. For a given P System and K processors, there exists a great volume of possible distributions of membranes over these. Recent works have demonstrated the uses of Self- Organizing Neural Networks (SONN) as a useful tool to help in the selection process of balanced distributions of membranes for a given P-system. The aim of this work is to present the integration of the management of balanced distribution of membranes in communication architectures using SONN into an integrated development environment (IDE) for the automatic loading in hardware components based on microcontrollers. Copyright © 2009 by IICAI.",
    "keywords": "Distributed architecture communication; IDE; Microcontrollers; Natural computation; P-system; Self-organizing neural networks",
    "released": 2009,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872166711&partnerID=40&md5=61d5276567e49cb4bcb9432d9248674f",
    "interesting": "-"
  },
  {
    "title": "Knowledge-based visual image processing IDE model for algorithm and system rapid prototyping",
    "abstract": "A novel intelligent model for Image Processing (IP) research integrated development environment (IDE) is presented for rapid converting conceptual model of IP algorithm into computational model and program implementation. Considering psychology of IP and computer programming, this model presents a cycle model of IP research process and establishes an improved expert system prototype. Visualization approaches are introduced into visualizing three phases of IP development. An intelligent methodology is applied to reuse algorithms, graphical user interfaces (GUI) and data visualizing tools. Thus, researchers are allowed to fix more attention only on their own interest algorithm models. Experimental results show that the development based the new model enhances rapid algorithm prototype modeling with great efficiency and speed. © 2009 Copyright SPIE - The International Society for Optical Engineering.",
    "keywords": "Expert system; Image processing; Integrated development environment; Prototyping; Visual",
    "released": 2009,
    "link": "https://doi.org/10.1117/12.833722",
    "interesting": "-"
  },
  {
    "title": "Embedded web server on Nios II embedded FPGA platform",
    "abstract": "This Paper describes implementation of web-server using Altera Nios II embedded IP core, a configurable general purpose embedded RISC processor with embedded peripheral architecture. A web server is a computer that delivers web pages to other computers in the network. Every web server has a unique IP address and possibly a domain name. Any computer can work as web server by installing server software. The web server with Nios II processor is called the embedded web server. The embedded web server is a high-performance embedded web server, allows users to monitor and control their embedded applications using any standard browser. The embedded web server can communicate with the web browser through TCP/HTTP. The user can use a web browser and typing URL of website into that browser user can examine the web pages. This web server does not need dedicated high configuration computer. The web server application is designed using Altera NiosII embedded platform for uploading the information related to department. The results are verified by connecting it through intranet with in the campus. This is found to be the cheapest best solution with low power consumption for substituting traditional web servers. With Nios II soft processor approach, designers can create a \"perfect fit\" in terms of processors, peripherals, memory interfaces, performance characteristics and cost [3]. This is accomplished by using an Altera Cyclone FPGA to create a custom system-on-chip or a system-on-programmable-chip (SOPC). The SOPC designers are benefited with tremendous versatility in product features, performance, cost and life cycle management. © 2009 IEEE.",
    "keywords": "FPGA; Nios II IDE; Nios II processor; System-on-a-programmable chip (SOPC)",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICETET.2009.89",
    "interesting": "-"
  },
  {
    "title": "MobiNET: A framework for supporting Java mobile application developers through contextual inquiry",
    "abstract": "From a developing world perspective, mobile phone is the primary technology for the majority of people and will be for the foreseeable future. It will be their connection to the internet, their communication tool, school book, vaccination report, photo album and many other things. Despite this reality, relatively few mobile applications exist. However, a tool to support the programming of mobile applications can significantly impact and improve programmer's productivity and software quality. In this paper, we develop a concept for a mobile tooling framework that extends the Netbeans integrated development environment (IDE) for mobile programming. Mobile Tools for Netbeans (MobiNET) design would support the development of mobile applications for various mobile phones. We evaluate Netbeans as a development tool and drawing from insights gained in interviews with mobile software developers, conceptualize MobiNET. A working prototype is discussed and evaluated. ©2009 IEEE.",
    "keywords": "Integrated development environment; Mobile applications; Mobile tools; MobiNET",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICASTECH.2009.5409746",
    "interesting": "-"
  },
  {
    "title": "Save-IDE - A tool for design, analysis and implementation of component-based embedded systems",
    "abstract": "The paper presents Save-IDE, an Integrated Development Environment for the development of component-based embedded systems. Save-IDE supports efficient development of dependable embedded systems by providing tools for design of embedded software systems using a dedicated component model, formal specification and analysis of component and system behaviors already in early development phases, and a fully automated transformation of the system of components into an executable image. © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICSE.2009.5070567",
    "interesting": "-"
  },
  {
    "title": "Smarttutor: Creating IDE-based interactive tutorials via editable replay",
    "abstract": "Interactive tutorials, like Eclipse's cheat sheets, are good for novice programmers to learn how to perform tasks (e.g., checking out a CVS project) in an Integrated Development Environment (IDE). Creating these tutorials often requires programming effort that is time-consuming and difficult. In this paper, we propose an approach using editable replay of user actions to help authors create interactive tutorials with little programming effort. User actions of performing a task can be recorded, edited, and presented as a tutorial. The tutorial can be replayed interactively for mentoring. We present our SmartTutor implementation in the Eclipse IDE and conduct a preliminary evaluation on it, which demonstrates efficiency gains for the tutorial authors. © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICSE.2009.5070555",
    "interesting": "-"
  },
  {
    "title": "Using blogs as a professional development tool for teachers: Analysis of interaction behavioral patterns",
    "abstract": "The coming era of Web 2.0 focuses on users' active online participation and interaction. Among such interactive media, the blog is one representative tool of online knowledge construction. The purpose of this study is to explore the behavioral patterns and the depth of knowledge construction when using blogs for teachers' professional development. This research combines quantitative content analysis, sequential analysis, and qualitative protocol analysis. We studied how 470 teachers used blogs to conduct instructional knowledge interactions prior to the intervention of teacher educators and analyzed the teacher's behavioral patterns and the depth of knowledge construction. On the basis of the discovered behavioral patterns, we see that although blogs can serve as a channel for teachers to share teaching information, the aspect of knowledge construction is limited. We point out these limitations, and provide suggestions on how teacher educators can guide interactions during training. We also suggest how system developers can adjust blog functions to facilitate the discussion quality of online teacher communities. © 2009 Taylor & Francis.",
    "keywords": "Behavioral pattern; Blog; Knowledge sharing; Professional development; Teacher community",
    "released": 2009,
    "link": "https://doi.org/10.1080/10494820903195215",
    "interesting": "-"
  },
  {
    "title": "BPIDE: A business process IDE supporting multi-role collaboration",
    "abstract": "Business Process Management aims at creating business values for enterprises in a more flexible and competitive way. However, an integrated development environment for developing business processes with good support of multi-role collaboration is still rarely studied. In this paper, a business process integrated development environment called BPIDE based on a role-sensitive framework is designated to provide different roles (especially the analysts and developers) in different stages to work on business processes together in a more efficient way. We also elaborate on the implementation of BPIDE using a new development pattern. At last, a case study is used to demonstrate how different roles can develop business processes collaboratively with BPIDE. © 2009 IEEE.",
    "keywords": "BPM; BPMN; Business process; IDE; Service composition",
    "released": 2009,
    "link": "https://doi.org/10.1109/ComputationWorld.2009.44",
    "interesting": "-"
  },
  {
    "title": "A TPS integrated development environment implementing IEEE1641 and ATML",
    "abstract": "With the publication of IEEE1641 and Automatic Test Markup Language (ATML), high level solutions to instrument interchange problem can be accomplished in the near future. This paper introduced a TPS (Test Program Set) Integrated Development Environment (IDE), including a Graphical Signal and Test definition application and an ATML Executive Environment. Experiment shows the TPS IDE can reduce development time and maintenance of test system. ©2009 IEEE.",
    "keywords": "ATML; IDE; Signal oriented",
    "released": 2009,
    "link": "https://doi.org/10.1109/AUTEST.2009.5314048",
    "interesting": "-"
  },
  {
    "title": "A case study of developing an IDE for embedded software using open source",
    "abstract": "IDEs (Integrated Development Environments) support software developers in their implementation work. However, embedded software has specific requirements, so an off-the-shelf IDE for this purpose does not exist. In such a case, this paper recommends developing a customized IDE based on open source software. We present a case study of developing such an IDE for the languages C#, Python and JavaScript. We used several open source projects with varying project status as a basis for our development. We analyzed developer communication within these open source projects and identified the benefits and the potential pitfalls for the case study. Moreover, we present the effort made in terms of person months and that reuse of open source software improves cost-efficiency for the development of such IDEs. © 2009 IEEE.",
    "keywords": "Embedded software; Integrated development environment (IDE); Open source",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICSEA.2009.38",
    "interesting": "-"
  },
  {
    "title": "A model-driven multicore software development environment for embedded system",
    "abstract": "Multi-core programming is no more a luxury; it is now a necessity, because even embedded processors are becoming multi-core. However, the state-of-the-art techniques such as OpenMP and the Intel Threading Building Block (TBB) library are far from user-friendly due to the tedious work needed in explicitly designing multi-core programs and debugging. At the present days, a solution for above problems will be that to enhance the abstract level of multicore embedded software design. By leveraging on the expertise gained from Verifiable Embedded Real-Time Application Framework (VERTAF), we propose a Multi-Core version of VERTAF, called VERTAF/ Multi-core (VMC in short). VMC is an integrated development environment for multi-core embedded software architecture. Developers would be able to 1. describe their system requirements with SysML by using this environment, 2 model their design with SysML standard notation, 3. automatically apply a pattern structure into their design for a high quality multicore embedded system, 4. generate source code through a well-designed model; 5. map to different hardware architecture as assigned by the model, and 6. finally we can test the code. Using the model driven architecture (MDA) design flow in SysML, we saw a significantly improvement on productivity and quality of a multicore embedded programming over traditional approach. © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/COMPSAC.2009.148",
    "interesting": "-"
  },
  {
    "title": "Learning from examples to improve code completion systems",
    "abstract": "The suggestions made by current IDE's code completion features are based exclusively on static type system of the programming language. As a result, often proposals are made which are irrelevant for a particular working context. Also, these suggestions are ordered alphabetically rather than by their relevance in a particular context. In this paper, we present intelligent code completion systems that learn from existing code repositories. We have implemented three such systems, each using the information contained in repositories in a different way. We perform a large-scale quantitative evaluation of these systems, integrate the best performing one into Eclipse, and evaluate the latter also by a user study. Our experiments give evidence that intelligent code completion systems which learn from examples significantly outperform mainstream code completion systems in terms of the relevance of their suggestions and thus have the potential to enhance developers' productivity. Copyright 2009 ACM.",
    "keywords": "Code completion; Code recommender; Content assist; Integrated development environment",
    "released": 2009,
    "link": "https://doi.org/10.1145/1595696.1595728",
    "interesting": "-"
  },
  {
    "title": "A P-lingua programming environment for membrane computing",
    "abstract": "A new programming language for membrane computing, P-Lingua, is developed in this paper. This language is not designed for a specific simulator software. On the contrary, its purpose is to offer a general syntactic framework that could define a unified standard for membrane computing, covering a broad variety of models. At the present stage, P-Lingua can only handle P systems with active membranes, although the authors intend to extend it to other models in the near future. P-Lingua allows to write programs in a friendly way, as its syntax is very close to standard scientific notation, and parameterized expressions can be used as shorthand for sets of rules. There is a built-in compiler that parses these human-style programs and generates XML documents that can be given as input to simulation tools, while different plugins can be designed to produce specific adequate outputs for existing simulators. Furthermore, we present in this paper an integrated development environment that plays the role of an interface where P-Lingua programs can be written and compiled. We also present a simulator for the class of recognizer P systems with active membranes, and we illustrate it by following the writing, compiling and simulating processes with a family of P systems solving the SAT problem. © 2009 Springer Berlin Heidelberg.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1007/978-3-540-95885-7_14",
    "interesting": "-"
  },
  {
    "title": "Future integrated design environments",
    "abstract": "We are facing a probable great change in the way we carry through design in future ICT supported environments. The main driving forces are the digitalization of information handling leading to a paramount paradigm shift when information storage and access media are separated, building process and product systems are formalized in digital models, user environments are provided with rich adaptable multimedia access to virtual models, virtual collaboration rooms established, and new efficient and effective ICT tools defined and implemented. There are though some barriers putting strains on the development. Among the most important are missing ontologies both on business and Web/Internet service levels as well as their interrelations, poor user involvement in needs and requirements formulations on new ICT tools as well as in continuous user involvement in design and evaluation of new user environments, lack of interoperability within building process/product models, and the effects of local community behavior on global scale. The general competence level and preparedness for organizational and work change due to globalization and development of new common grounds for building design needs to be increased. The paper presents a roadmap for development of future Integrated Building Design Systems (IBDS) with enduser participation. Methods for development of tools supporting creative and innovative building design with end-user participation is taking into account, including methods for capture and modeling of explicit and implicit end-user needs and requirements on both the building to be designed and the supporting design tools. The paper provides grounds to higher success rate in capture of explicit and implicit end user needs and requirements on functional performance in use and re-use of buildings, taking into account effective tools for creative and innovative design. Providing a common ground for successful building design system development and meta-level agreements on open design systems supporting different design contexts and end user needs and values. The roadmap timeframe is 3-10 years. © 2009 The authors.",
    "keywords": "End user needs; Functional building systems; Future integrated building design systems; Innovative building design tools.; Ontologies; Requirements modeling; System development tools; User driven innovation",
    "released": 2009,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-74349096370&partnerID=40&md5=e4b3be492e4d1cbaea05e1f7fe3ca975",
    "interesting": "-"
  },
  {
    "title": "Relative debugging in an integrated development environment",
    "abstract": "Relative Debugging allows a user to compare the internal state of two programs as they run, making it possible to test whether two programs perform the same function given the same input. When implemented with a command line user interface, a relative debugger looks like traditional debugging tools with the addition of commands that describe which structures should be equivalent in the two programs. In this paper, we discuss relative debugging within an integrated development environment, and show that there are significant advantages over a command line form. We describe a pluggable, modular, architecture that works with a variety of different products, including Microsoft's Visual Studio, SUN's NetBeans, and IBM's Eclipse. © 2009 John Wiley & Sons, Ltd.",
    "keywords": "Debugging; Integrated development environments; Software tools",
    "released": 2009,
    "link": "https://doi.org/10.1002/spe.932",
    "interesting": "-"
  },
  {
    "title": "Codetrail: Connecting source code and web resources",
    "abstract": "When faced with the need for documentation, examples, bug fixes, error descriptions, code snippets, workarounds, templates, patterns, or advice, software developers frequently turn to their web browser. Web resources both organized and authoritative as well as informal and community-driven are heavily used by developers. The time and attention devoted to finding (or re-finding) and navigating these sites is significant. We present Codetrail, a system that demonstrates how the developer's use of web resources can be improved by connecting the Eclipse integrated development environment (IDE) and the Firefox web browser. Codetrail uses a communication channel and shared data model between these applications to implement a variety of integrative tools. By combining information previously available only to the IDE or the web browser alone (such as editing history, code contents, and recent browsing), Codetrail can automate previously manual tasks and enable new interactions that exploit the marriage of data and functionality from Firefox and Eclipse. Just as the IDE will change the contents of peripheral views to focus on the particular code or task with which the developer is engaged, so, too, the web browser can be focused on the developer's current context and task. © 2009 Elsevier Ltd. All rights reserved.",
    "keywords": "Development environment; Human-computer interaction; Software development; Web browser",
    "released": 2009,
    "link": "https://doi.org/10.1016/j.jvlc.2009.04.003",
    "interesting": "-"
  },
  {
    "title": "EcoSpire: An application development kit for an ultra-compact wireless sensing system",
    "abstract": "EcoSpire is a hardware and software platform for wireless sensing applications. The hardware kit consists of two types of self-contained, expandable sensor nodes, as well as, a multipurpose base station and programmer, a cascadable charger, and sensor modules. The software kit consists of an integrated development environment (IDE) for application programming and RF debugging utilities on the host computer, plus a lightweight operating system with support for data logging and remote firmware reprogramming. Together, this package facilitates application development of ultra-compact, wearable wireless sensing systems. © 2009 IEEE.",
    "keywords": "Embedded systems; Integrated development environment; Platform-based design; Runtime support; Wireless sensor networks",
    "released": 2009,
    "link": "https://doi.org/10.1109/LES.2009.2037984",
    "interesting": "-"
  },
  {
    "title": "Identifying stagnation periods in software evolution by replaying editing operations",
    "abstract": "As managing software evolution becomes more important, many methods of development support using editing operations have been proposed. However, it is still difficult to extract truly valuable information, since massiveness of recorded operations grows with the development period. In this paper, we propose a mechanism for extracting useful information on stagnation of development from huge operation history. We have implemented this mechanism as a tool, which is called OperationReplayer. The tool allows a developer to investigate detected candidates of stagnation periods and replay operations belonging to the candidate through its graphical user interface. Through exploratory case studies using the tool, we found several problematic operations that adversely affect of the developer's development process. © 2009 IEEE.",
    "keywords": "Change-aware; Component; Development process improvement; Integrated development environment; Operation history; Software evolution",
    "released": 2009,
    "link": "https://doi.org/10.1109/APSEC.2009.50",
    "interesting": "-"
  },
  {
    "title": "Whimori CDK: A control program development kit",
    "abstract": "This paper introduces Whimori CDK, an integrated development environment for PLC control programs based on IEC 61131-3 standard and TC6 XML schema. Whimori CDK consists of project manifest editor, LD graphic editor, LD-to-IL translator, IL runtime, LD-to-SMV translator, SMV model checker etc. The components of Whimori are portable and independent since they have been developed as Eclipse plug-ins. Particularly LD-to-IL translator, LD-to-SMV translator and IL runtime are designed to be based on formal semantics, implemented in Ocaml, and more reliable than other systems. This paper describes the overall structure of Whimori CDK and the features of graphic user interfaces and interior components. © 2009 IEEE.",
    "keywords": "Eclipse; IEC61131; Integrated development environment; Programmable logic controller",
    "released": 2009,
    "link": "https://doi.org/10.1109/ICC.2009.33",
    "interesting": "-"
  },
  {
    "title": "ESIDE: An integrated development environment for component-based embedded systems",
    "abstract": "In this paper we present ESIDE, an integrated development environment for component-based embedded systems. It leverages component-based software engineering principles to facilitate efficient, scalable, and robust hardware/ software co-design, co-simulation, co-verification, and their seamless integration. We first describe the architecture and features of ESIDE. We then discuss several design decisions that we faced in developing ESIDE and the trade-offs in making these decisions. To provide perspective, we report our experiences in re-engineering TinyOSbased networked sensor systems into complete componentbased designs that cover both hardware and software. © 2009 IEEE.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1109/COMPSAC.2009.48",
    "interesting": "-"
  },
  {
    "title": "The coming revolution in competence development: Using serious games to improve cross-cultural skills",
    "abstract": "Approaches to competence development have tended to focus on training to reach a required level of performance in simple and reproducible contexts, rather than in the more complex and hard-to-replicate contexts that characterize real-world projects, especially projects that involve people from other cultures. This paper explores how the Serious Games approach can be exploited to create skills in dealing with cross-cultural issues in project management. The degree of difference this can make to real-world performance is so dramatic that managers who have experienced it are seeing it not as a way to add Incremental Improvements to TEL (Technology Enhanced Learning) but as more of a Radical Innovation - a revolutionary change. Some of the main skills required in project management are reviewed, and different models of cross-cultural analysis applied to understand how the challenges of managing projects are increased by cultural issues. Our testbed for this is an EU project TARGET that is developing the next generation TEL approach. We describe its approach and look at how the TARGET serious game can be designed to achieve enhanced cross-cultural skills in users. © 2009 Springer Berlin Heidelberg.",
    "keywords": "Competence development environments; Inter-cultural; Role playing; Serious games",
    "released": 2009,
    "link": "https://doi.org/10.1007/978-3-642-02774-1_45",
    "interesting": "-"
  },
  {
    "title": "Benefits and challenges of using collaborative development environments with social software in higher computer science education",
    "abstract": "This paper addresses the question how to optimally support projects of students and employees of a higher education institution of computer science by means of a special software environment. At first the motivation to introduce such a supportive system is examined by describing the current situation in the authors' department of computer science, which is typical for many colleges and universities. On the one hand problems are pointed out, which hamper students and employees in their project work, on the other hand the additional possibilities of a supportive system, which far exceed the ones of a traditional approach, are drafted. The paper shows how a mutual value for students and employees can be generated from the projects by using social software. After the requirements are described we suggest an architecture for such a supportive system and finally the challenges for the implementation and application, which determine the success or failure of the system, are discussed. © 2009 Springer Berlin Heidelberg.",
    "keywords": "",
    "released": 2009,
    "link": "https://doi.org/10.1007/978-3-642-02774-1_52",
    "interesting": "-"
  },
  {
    "title": "RoCoS: Room-based communication system and its aspect as development tool for 3D entertainment applications",
    "abstract": "This paper proposes a new communication system called RoCoS (Room-based Communication System) that allows multiple users to communicate with each other through their virtual 3D spaces called rooms located on the Internet. This system consists of two main sub-systems, i.e., 3D Messenger and Edit Tool. 3D Messenger provides multiple users with their collaborative operable and communicable environment on the Internet. Edit Tool allows each user to create his/her own virtual 3D space, i.e., individual room, and to create any avatar represented as his/her own 3D character used in 3D Messenger. Each room provided by 3D Messenger is regarded as 3D version of a web page because each room exists separately on its dedicated computer managed by its owner (Administrator) and the owner can edit, decorate and modify his/her room as he/she wants using Edit tool. This paper describes details and clarifies the usefulness of the system by showing its several functionalities and application examples. © ACM 2009.",
    "keywords": "Collaborative environment; Distributed virtual space; Human interface; Peer-to-peer; Software component; Virtual reality",
    "released": 2009,
    "link": "https://doi.org/10.1145/1690388.1690390",
    "interesting": "-"
  },
  {
    "title": "A web-based, interactive annotation editor for the eCampus development environment for SCORM compliant e-learning modules",
    "abstract": "The eCampus development environment was created in an interdisciplinary project at the University of Applied Sciences Fulda. Today it is a fully webbased application for the easy creation of E-Learning modules complying the SCORM standard. The webbased, interactive annotation editor for the eCampus development environment is used to both automatically and manually annotate existing OpenOffice documents in order to transform them into E-Learning modules. The editor is build using Open Source software and frameworks such as Ruby on Rails. © 2009 Springer Berlin Heidelberg.",
    "keywords": "Annotation; E-Learning; ECampus; JavaScript; OpenOffice; Ruby; Ruby on Rails; SCORM; Transformation; User friendly; Web",
    "released": 2009,
    "link": "https://doi.org/10.1007/978-3-642-02583-9_10",
    "interesting": "-"
  },
  {
    "title": "Modeling semantic web services with the web service modeling toolkit",
    "abstract": "The lack of any methodology for modeling Semantic Web Services means that developers wishing to utilize technologies like the Web Service Modeling Ontology, the Web Service Modeling Language, and the Web Service Execution Environment are lost in a Semantic wilderness with no road signs to guide them on their way. This paper presents an initial guide for developers wishing to model Semantic Web Services, along with a description of the Web Service Modeling Toolkit that provides tool support for the activities that must be conducted by the developer in this process. © 2009 Springer Science+Business Media, LLC.",
    "keywords": "Integrated Development Environment; Semantic Web Services; Web Service Modeling Ontology; Web Service Modeling Toolkit",
    "released": 2009,
    "link": "https://doi.org/10.1007/s10922-009-9130-8",
    "interesting": "-"
  },
  {
    "title": "Integrated development environment based on resource library for intelligent opto-electric instruments",
    "abstract": "Intelligent opto-electric instruments are synthetically products that are involved with optics, mechanics and electronics. An effective development platform is necessary for efficient development. According to the conception of integrated development and manufacture, an architecture of integrated development environment based on resource library and resource management is presented to resolve the shortcoming of weak reusability and portability of resource, long periods of development and weak openness of existing platform. The development environment provides a suite of standard resource integration and management interface to integrate and regulate existing models, algorithms, tools and components. Then reusable typical resource library is established by adding third party resource that accords with the interface defined. Resources in library are expressed as reusable components. System modeling, rapid prototype developing and online simulating and testing can be implemented rapidly and reliably by utilizing corresponding resources in library, so technique difficulty and development periods can be reduced, and development efficiency is improved. Because of describing resource by metadata and XML, the architecture is flexible and open, and can be improved continuously to adapt to development and upgrade of various intelligent opto-electric instrument to meet therequirement of efficient integrated development and manufacture perfectly. © 2009 SPIE.",
    "keywords": "Integrated development environment; Intelligent opto-electric instrument; Resource library; Reusable components",
    "released": 2009,
    "link": "https://doi.org/10.1117/12.830889",
    "interesting": "-"
  },
  {
    "title": "A page-centric approach to web application development",
    "abstract": "This paper proposes a page-centric approach for developing Web applications in which an application is modeled as a state machine of a UML that takes into account the state of a Web page. Application variables are divided into page-related variables and others. Business logics are also divided into presentation-related logics and others. In this paper, based on our model, a Web application development environment is also described. Using this environment, we can intuitively define the behavior of a Web application. Examples of applications developed by our method are given. © 2009 Wiley Periodicals, Inc.",
    "keywords": "Application framework; Integrated development environment; UML; Web application",
    "released": 2009,
    "link": "https://doi.org/10.1002/ecj.10039",
    "interesting": "-"
  },
  {
    "title": "State-transition diagram for visual programming tool guest",
    "abstract": "Many people have been interested in Web 2.0, which is a new concept of Web service. Web sites became sources of information and functionality that enables users to create new content of their own. For this demand, more versatile browsers that enables users to edit and display content based on their creative concepts and preferences are required. Motivated by this demand, we have developed a state-transition diagram-based Web browser programming scheme that supports participatory Web use and enables end-user to interact with Web content. We implemented a prototype of our scheme called GUEST (Graphical User interface Editor by State-transition Diagram). GUEST enables users to define behaviors of a Web browser easily. However, there are some parts of complexity of user interfaces that prevent the users' intuitive understanding in the original version of GUEST. Therefore, in this paper, we focus on user interface, and introduce a new concept of the design. © 2009 Springer Berlin Heidelberg.",
    "keywords": "GUEST (Graphical User interface Editor by State-transition Diagram); New user interface design concept; State-transition diagram; Visual programming; Web programming for non-programmers",
    "released": 2009,
    "link": "https://doi.org/10.1007/978-3-642-01344-7_16",
    "interesting": "-"
  },
  {
    "title": "Simulator for a multi-programming environment for computer science learning and teaching",
    "abstract": "The objective of this paper is to explore improvements in the learning process for Computer Science using a new tool (an IDE simulator) and to demonstrate the pedagogic and cognitive aspects of the tool. This work presents the design and implementation of a web-based self-assessment environment with multi-language programming questions. The application has been implemented in a complete e-learning system, known as Aula Web, and is being used as a facility to encourage students on computer science courses to practice programming techniques with different programming languages, for example, Java and C/C++. Furthermore, this paper describes the pedagogical methodology and some results drawn from the experience.",
    "keywords": "IDE simulator; web-based systems; programming languages; learning-teaching strategies; assessment",
    "released": 2009,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000269869600004",
    "interesting": "-"
  },
  {
    "title": "A programming environment for web services",
    "abstract": "PEWS is a programming language for the definition of web service interfaces. PEWS programs can be used for the description of both simple and composite web services. Simple web services can be built from scratch, by the combination of (WSDL) operations. Each operation must be implemented as a Java method. Composite web services are constructed from the combination of existing web services, accessed by using their WSDL descriptions. PEWS combinators help to define the order in which web services and operations will be performed. PEWS has a human-readable syntax as well as a XML version, called XPEWS. The human-readable language is intended to help in the design of web services and in the formal reasoning about programs. XPEWS is used as an interface language between the front-end and back-end of the PEWS language processor.This paper presents the development of a computational environment for PEWS. The front-end of the environment is an Eclipse plug-in. The use of the front-end can help reducing the time for development of the compositions, by the verification of codification errors and the generation XPEWS documents. The back-end of PEWS is responsible for the implementation of the web services described in a XPEWS document. The back-end produces Java™ code (skeletons) to call the web service operations and performs them in the order defined by the XPEWS document.",
    "keywords": "front-end; back-end; PEWS",
    "released": 2008,
    "link": "https://doi.org/10.1145/1363686.1364249",
    "interesting": "-"
  },
  {
    "title": "Conceptual framework for services creation/development environment in telecom domain",
    "abstract": "The telecom service providers (fixed and mobile) understand that they must bring in new smart services in order to attract new customers, retain existing ones and increase revenue. The challenges and goals for doing so are as follows: determining which services are needed; introducing more services in a faster manner and at lower costs; delivering innovative services in a way that allows existing users to migrate smoothly to new ones. These goals could not be achieved with traditional closed and proprietary network infrastructure, as the vendor lock-in involved in that infrastructure results in limited scope of services, and dependency on old business models. New services require a much greater degree of system flexibility, performance and scalability, as well as open standards. Next Generation Network (NGN) provide the means for enabling agile service creation capabilities that facilitate better user experiences by integrating both new and legacy services across any access. However, NGNs involve complex structures even for simple services as they consist of a large number of building blocks and necessitate hierarchical models with a lot of parallel subsystems. Thus, particular attention has to be paid to understanding and modelling the performance of these systems. The rationale of this paper lies in developing a design and engineering methodology (based on a mathematical foundation) that addresses the service creation aspects for those fields in which traditional approaches will not work for NGNs.",
    "keywords": "service delivery platform (SDP); service creation environment (SCE); queuing theory; parallel queues; next generation network (NGN); hierarchical modeling",
    "released": 2008,
    "link": "https://doi.org/10.1145/1497308.1497368",
    "interesting": "-"
  },
  {
    "title": "Talktic: A development environment for pervasive computing applications",
    "abstract": "Talktic is a platform for the easy production of entertainment content developed under the keyword of \"pervasive computing.\" The Talktic platform consists of runtime environment, library, and development environment to support applications using an MCU board, personal computer, and network. It uses a virtual machine in the runtime environment and provides a programming environment and library based on a lightweight scripting language for easy development of entertainment content. The linkage with web services and the high degree of compatibility for the virtual machine and scripts are expected to generate new forms of entertainment content.",
    "keywords": "simplicity; internet networking media; design works",
    "released": 2008,
    "link": "https://doi.org/10.1145/1501750.1501758",
    "interesting": "-"
  },
  {
    "title": "An Integrated Development Environment for Synthesising Web Services",
    "abstract": "Web services are emerging technologies that can be considered as the result of the continuous improvement of Internet services due to the tremendous increase in demand that is being placed on them. In this paper, the different facets of Web services are identified and a flexible approach to engineering complex Web services is adopted in the form of a proposed framework for the development of Web services. After the examination of its main constituent parts, it is argued that its full potential and that of Web service engineering in general, is realized through the gradual formation of a rich service grid offering value-added supporting functionality and therefore the main desirable properties of such a service grid are highlighted. Finally, the paper outlines a validation approach for the proposed framework and assembles important pointers for future work and concluding remarks.",
    "keywords": "Web services; Web service engineering; Internet middleware; service grids",
    "released": 2008,
    "link": "https://doi.org/10.1109/ICEBE.2008.34",
    "interesting": "-"
  },
  {
    "title": "Semantic Web Services offer discovery using OWL-S IDE",
    "abstract": "Semantic Web Services are a search effort to automate the usage of Web services, a necessary component for the Semantic Web. Traditionally, Web service discovery depends on detail formal semantic descriptions of available services. Since a complete detailed service is not always feasible, the client software cannot select the best service offer for a given user goal only by using the static service descriptions. Dynamic discovery based on semantic description of services is an essential aspect of the Semantic Web Service integration process Some data needs to be obtained during run0time because not all data required for service discovery can always be included in service descriptions. This paper shows when and why complete semantic description is unfeasible and it defines the role and position of offer discovery. We propose an approach for offer discovery of semantic web services using OWL-S IDE during discovery process. We also present the algorithm, the implementation and some preliminary results.",
    "keywords": "Semantic Web Service Offer Discovery; OWL ontology; Data Fetching; Dynamic Discovery",
    "released": 2008,
    "link": "https://doi.org/10.1109/ICSPCS.2008.4813736",
    "interesting": "-"
  },
  {
    "title": "Open Source Web Application Development Stack for Symbian-Based Mobile Phones",
    "abstract": "LAMP is the widely used open source web development stack for building dynamic websites. In this paper, we discuss PAMP (Personal AMP), which is a port of the stack to the Symbian/S60 mobile phone platform. We illustrate the possibilities of PAMP with a couple of examples, share our experiences in bringing the stack to resource-constrained devices, and discuss the lessons learned. The existence of the dominant development environment on handheld devices allows easier development of mobile services with familiar high-level tools. Moreover, it enables reuse of existing solutions like content management systems and integration with other web services such as Facebook.",
    "keywords": "mobile phone; web server; web development environment; xAMP",
    "released": 2008,
    "link": "https://doi.org/10.1109/NGMAST.2008.25",
    "interesting": "-"
  },
  {
    "title": "Rapid Web Application Development: A Ruby on Rails Tutorial",
    "abstract": "Ruby on Rails is a powerful Web application development framework based on the dynamic object-oriented programming language Ruby. With several popular Web sites based on it, its prominence is rapidly rising. Ruby on Rails fully supports Web 2.0 and Web services and enables extremely rapid development. It incorporates several important features of \"programming in the large\" and is well suited for quickly developing even large, complex applications. A small Web application that also uses Ajax and Web services provides an introduction to Ruby on Rails.",
    "keywords": "software engineering; programming environments; Ruby on Rails; Ruby; Ajax; Web services; Web applications",
    "released": 2008,
    "link": "https://doi.org/10.1109/MS.2008.156",
    "interesting": "-"
  },
  {
    "title": "RESTful Web Services Development Checklist",
    "abstract": "Sometimes, Representational State Transfer (REST) architectural style proponents describe it as being easy, but this in no way implies that REST is trivial or simplistic, nor does it mean that RESTful systems lack sophistication. REST's relative simplicity comes from the fact that it not only clearly defines its trade-offs and constraints but also distinctly separates concerns, such as resource identification, resource interfaces, and definitions for interchanged data. This delineation makes it relatively easy for developers designing and building RESTful services to consider and track important issues that can profoundly impact system flexibility, scalability, and performance. REST isn't the answer to all distributed computing and integration problems by any stretch of the imagination, but it can yield highly practical solutions to a variety of such problems, not only on the Web but also within the enterprise.",
    "keywords": "RESTful Web development; HTTP; IDEs; hypermedia constraints; conditional GET; toward integration; Steve Vinoski",
    "released": 2008,
    "link": "https://doi.org/10.1109/MIC.2008.130",
    "interesting": "-"
  },
  {
    "title": "Developing Software Online With Platform-as-a-Service Technology",
    "abstract": "Vendors are starting to offer platform as a service systems. PaaS systems are hosted, Web-based application-development platforms, providing end-to-end or, in some cases, partial environments for developing full programs online.",
    "keywords": "software; platform as a service; application development; development tools; Web-based development.",
    "released": 2008,
    "link": "https://doi.org/10.1109/MC.2008.185",
    "interesting": "-"
  },
  {
    "title": "Rapid component-based development for Condor job submission",
    "abstract": "Many scientific, engineering and business applications benefit from the ability to submit a large number of computational jobs to a Condor pool simultaneously. However, crafting a correct Condor submission script is not trivial, especially for the less computer command line-savvy users. Therefore, developers often wish to create a job submission page in a Web client application for the Condor system to provide an easy way for users to run their computation jobs. In doing so, the developers must understand the Condor ClassAd mechanism and provide a proper transformation if the application needs to support user or application defined ClassAds. This paper describes a rapid and easy way of creating a job submission page using our visual Web components. By integrating these components into a popular web application integrated development environment (IDE), the developers can easily compose a Condor job submission page by dragging and dropping the components. This will significantly reduce the time spent on creating the job submission application.",
    "keywords": "Programming environments; Graphical user interfaces; Condor job submission",
    "released": 2008,
    "link": "https://doi.org/10.1109/GCE.2008.4738441",
    "interesting": "-"
  },
  {
    "title": "Integrated Consistency Constraints Checking in a Complicated Development Environment",
    "abstract": "Maintaining consistency constraints in a complicated development environment is ever an open problem, as different development tools are usually involved which in turn use various files or databases to store their data. To solve this problem, current XML technology was used to build a repository which manages all data of a development effort. XML queries were also presented to state consistency constraints in this paper and a generic light-weighted checking tool was provided to perform queries and to present results, which was designed to be flexibly tailored to the requirements of different projects and integrated in a Web-based, distributed environment.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/ISCID.2008.44",
    "interesting": "-"
  },
  {
    "title": "Modeling and simulation of electromechanical systems by the use of the programming tools included in modern graphical packages",
    "abstract": "The aim of this paper is an attempt of the simulation of the electromechanical systems with the use of the programming tools included in the modern graphical packages or graphical extensions to the programming languages. The advantage of such approach lies in possibility of the simultaneous high quality visualization of the currently obtained results. More - the possibilities of new graphical packages enable making calculations on the web platform - it is new and very interesting idea. The proposed solutions can be used both to the educational and presentation tasks.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/ICELMACH.2008.4799883",
    "interesting": "-"
  },
  {
    "title": "'Scratch' your way to introductory CS",
    "abstract": "Scratch [9, 10] is a media-rich programming environment originally designed to introduce and motivate programming in after-school settings such as the Computer Clubhouse [11, 12]. Programs are constructed by assembling stacks of colorful command blocks that eliminate syntax issues, and encourage exploration. Scratch makes it easy to program projects that users find motivating and empowering, such as animated stories, interactive presentations, and games. Yet since Scratch includes repetition constructs, conditionals, threads, communications, user input, and variables, it also introduces many key computer science ideas. Concepts that are often difficult for novices are easier to understand in Scratch because less is hidden. For example, variables can be made visible, helping the user to immediately understand the effect of operations such as clearing or incrementing that variable. Scratch is also a social computing network via the Scratch web site [9]. This community of programmers encourages a dramatic alternative to traditional lecture, lab-based programming pedagogy [1, 4, 6, 7, 8]. Scratch has been used as a lead-in to Java in an introductory computer science course at Harvard [5], and is currently being used by one of the presenters in such fashion. It could be used in the same way at the high-school level. At lower grade levels, Scratch can be used to generate an early interest in computer science, especially among girls and ethnic groups that have historically been under-represented in the computing discipline [6, 7, 8]. Scratch has been used to introduce 1st graders to algorithm design through storytelling, to teach programming at summer camps for middle-school girls, as an alternative to PowerPoint for creating presentations, and in many other ways. Although it is easy to learn Scratch on one's own, it is more fun to do so with others. This special hands-on session will give participants a direct encounter with Scratch - a playful \"programming challenge\" - followed by the opportunity to discuss their experiences and reflect on how Scratch might be used to introduce and promote interest in computer science. This session will be led by enthusiastic members of the Scratch community including computer science teachers, a member of the Scratch team, and, and, two young participants in the Scratch online social community, Christopher Dunne and Nikhil B. Pulimood. If you join us, please bring a laptop and download Scratch from http://scratch.mit.edu/.",
    "keywords": "Creative problem solving; Introductory programming; Novice programming environments; Scratch; Social networks",
    "released": 2008,
    "link": "https://doi.org/10.1145/1352135.1352239",
    "interesting": "-"
  },
  {
    "title": "Detecting coordination problems in collaborative software development environments",
    "abstract": "Software development is rarely an individual effort and generally involves teams of developers collaborating to generate good reliable code. Among the software code there exist technical dependencies that arise from software components using services from other components. The different ways of assigning the design, development, and testing of these software modules to people can cause various coordination problems among them. We claim that the collaboration of the developers, designers and testers must be related to and governed by the technical task structure. These collaboration practices are handled in what we call Socio-Technical Patterns. The TESNA project (Technical Social Network Analysis) we report on in this paper addresses this issue. We propose a method and a tool that a project manager can use in order to detect the socio-technical coordination problems. We test the method and tool in a case study of a small and innovative software product company.",
    "keywords": "Collaboration; Collaboration technology; Electronic collaboration; Information systems development; Information technology; Social networks; Software development",
    "released": 2008,
    "link": "https://doi.org/10.1080/10580530701777156",
    "interesting": "-"
  },
  {
    "title": "Unifying Semantic Wikis and semantic Web applications",
    "abstract": "Many Semantic Wiki Engines have been developed in response to a semi-structured domain of application. Nevertheless these engines take very few advantages of the structured model on their viewing and editing interfaces. In this paper we present HyperDEWiki implementation where we combine Semantic Wiki and model-based Semantic Web Application allowing specialized interfaces and navigation. The tool is also intended to support domain ontology evolution.",
    "keywords": "Development Environment; Semantic Web; Semantic Wiki; Web Application; Wiki",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885595191&partnerID=40&md5=0e2c586242acd72f80e2bcd7284ce97d",
    "interesting": "-"
  },
  {
    "title": "A client-server approach to capture web browsing history",
    "abstract": "Situations often arise in which IT managers at schools and elsewhere have an occasional need to track network usage, and more specifically, employee web browsing habits. For many networks, a simple centralized solution, one which is both free to implement and relatively easy to manage, is often the most realistic and desired choice. This paper describes a client/server-based solution to meet this need. Our design consists of two components: (i) a server which both archives data from clients and provides an interface with which to manage and view this data; and (ii) a client application which handles the periodic reporting of browsing history by a given user. The client application works on a per-user basis.",
    "keywords": "Coding tools and techiques; Programming environments; Software architectures",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-62749155017&partnerID=40&md5=585134fb9fa65293f7f7369c45d2c4d4",
    "interesting": "-"
  },
  {
    "title": "Semantic SOA based integrated development environment for complex information systems",
    "abstract": "To improve interoperability, resource reusability and agility of complex information systems (CIS), a new integrated development environment (IDE) is proposed. Based on semantic service oriented architecture (SSOA), this new IDE is designed for accommodating requirements involved in development life-cycle of CIS. In addition to providing a framework of the SSOA based IDE, some key enabling technologies including semantic service engine, semantic data integration, semantic service integration, and semantic description for man-machine interface are studied. Furthermore, an IDE prototype system for a kind of CIS, C4ISR, is designed and implemented. Feasibility of the proposed IDE is validated by application results. © 2008 IEEE.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/ASC-ICSC.2008.4675617",
    "interesting": "-"
  },
  {
    "title": "Towards IDE support for abstract thinking",
    "abstract": "Abstract thinking is considered to be a high level cognitive skill that enables a comprehensive understanding of a specific concept or a problem using different levels of detailing. Based on a lab activity we conducted on the matter of abstraction, we present guidelines for enabling an Integrated Development Environment (IDE) to promote abstract thinking. The guidelines are defined in the context of an Aspect-Oriented Process Support (AOPS) framework that aims at customizing IDEs to automatically support various software development practices. Specifically, we suggest two kinds of guidelines. The first is concerned with a positive feedback from the IDE in cases where abstraction is used. The second kind is concerned with cases in which the developer is encouraged to move to a different level of detailing, that is, promoted to use abstract thinking. © 2008 ACM.",
    "keywords": "Abstract thinking; Aspects; Process support",
    "released": 2008,
    "link": "https://doi.org/10.1145/1370164.1370167",
    "interesting": "-"
  },
  {
    "title": "The research of software product line engineering process and its integrated development environment model",
    "abstract": "In order to realize the industrialization production of software, people have carried out research on and analysis the software product line architecture of the growing maturity, component technology and development methods for product line. In this paper, a novel software engineering process model is proposed based on the modern industrial production systems and automated production method: that is \"N-life-cycle model\". Based on this new model, not only integrated software engineering environment model and framework have been proposed, which are based on the product line development process model, but also study systematically on theirs implementation. \"N-life-cycle model\" and \"integrated software engineering environment model based on the product line\" which are set up in the article are bran-new open models possessing modern manufacturing production characteristic. The models can impel the research development quickly of product line engineering and product line software engineering environment towards the industrialisation and automatization of the software industry. © 2008 IEEE.",
    "keywords": "Component; Integrated software engineering environmen; Process model; Software architecture; Software product-line",
    "released": 2008,
    "link": "https://doi.org/10.1109/ISCSCT.2008.100",
    "interesting": "-"
  },
  {
    "title": "MimEc: Intelligent user notification of faults in the eclipse IDE",
    "abstract": "The earlier in the software process a fault is detected, the cheaper the cost of fixing the fault. Automated fault detection tools can provide developers with information throughout development, however, programming is a cognitively complex process and inundating the developer with information may do more harm than good. In this paper, we present MimEc, a part of the AWARE plug-in for the Eclipse integrated development environment. MimEc presents fault information to developers while they are writing code. The purpose of MimEc is to display only those faults in which a developer may be interested, thereby increasing the likelihood the developer will address the fault. MimEc infers interest in a fault based on fault criticality, relevance of the fault to the developer's current working context, and the developer's interactions with the programming environment. MimEc is currently under development and will be evaluated in both academic and professional settings. Copyright 2008 ACM.",
    "keywords": "intelligent IDE; psychology of programming",
    "released": 2008,
    "link": "https://doi.org/10.1145/1370114.1370133",
    "interesting": "-"
  },
  {
    "title": "Sometimes the old ways are best",
    "abstract": "Brian Kernighan looks back at what has and has not changed in computing, programming, and tools over the last 30 years. He discusses what we want from our tools and reveals his favorites. © 2008 IEEE.",
    "keywords": "Books; Computer hacking; Integrated development environment; Linux; Manuals; Paints; Software development tool; Software tool; Software tools; Visualization",
    "released": 2008,
    "link": "https://doi.org/10.1109/MS.2008.161",
    "interesting": "-"
  },
  {
    "title": "Beyond Information Silos-An Omnipresent Approach to Software Evolution",
    "abstract": "Nowadays, software development and maintenance are highly distributed processes that involve a multitude of supporting tools and resources. Knowledge relevant for a particular software maintenance task is typically dispersed over a wide range of artifacts in different representational formats and at different abstraction levels, resulting in isolated 'information silos'. An increasing number of task-specific software tools aim to support developers, but this often results in additional challenges, as not every project member can be familiar with every tool and its applicability for a given problem. Furthermore, historical knowledge about successfully performed modifications is lost, since only the result is recorded in versioning systems, but not how a developer arrived at the solution. In this research, we introduce conceptual models for the software domain that go beyond existing program and tool models, by including maintenance processes and their constituents. The models are supported by a pro-active, ambient, knowledge-based environment that integrates users, tasks, tools, and resources, as well as processes and history-specific information. Given this ambient environment, we demonstrate how maintainers can be supported with contextual guidance during typical maintenance tasks through the use of ontology queries and reasoning services. © 2008 World Scientific Publishing Company.",
    "keywords": "ambient software development environment; knowledge modeling; Semantic Web technologies; software evolution",
    "released": 2008,
    "link": "https://doi.org/10.1142/S1793351X08000567",
    "interesting": "-"
  },
  {
    "title": "TROPOMI end-to-end performance studies",
    "abstract": "The TROPOspheric Monitoring Instrument (TROPOMI) is a UV/VIS/NIR/SWIR non-scanning nadir viewing imaging spectrometer that combines a wide swath (110°) with high spatial resolution (8×8 km). Its main heritages are from the Ozone Monitoring Instrument (OMI) and from SCIAMACHY. Since its launch in 2004 OMI has been providing, on a daily basis and on a global scale, a wealth of data on ozone, NO2 and minor trace gases, aerosols and local pollution, a scanning spectrometer launched in 2004. The TROPOMI UVATS/NIR and SWIR heritage is a combination of OMI and SCIAMACHY. In the framework of development programs for a follow-up mission for the successful Ozone Monitoring Instrument, we have developed the so-called TROPOMI Integrated Development Environment. This is a GRID based software simulation tool for OMI follow-up missions. It includes scene generation, an instrument simulator, a level 0-lb processing chain, as well as several level lb-2 processing chains. In addition it contains an error-analyzer, i.e. a tool to feedback the level 2 results to the input of the scene generator. The paper gives a description of the TROPOMI instrument and focuses on design aspects as well as on the performance, as tested in the end-to-end development environment TIDE. © 2008 SPIE.",
    "keywords": "Air Quality; GridAssist; Spectrograph; TIDE; Tropomi",
    "released": 2008,
    "link": "https://doi.org/10.1117/12.808186",
    "interesting": "-"
  },
  {
    "title": "Embracing scientific workflow knowledge into IDE",
    "abstract": "Scientific workflow is mainly supported in many development and execution environments corresponding to specific domains. Although there are many differences among those environments, some consensuses have been achieved to a certain extent in the following parts of scientific workflow IDE(Integrated Development Environment): workflow languages and representations, workflow executors, and execution environments. As all consideration about a workfow should be mapped to the soucre code or graph, it is difficult for experts to complete a workflow with no negligence or errors. As a result, knowledge should be embraced in scientific workflow IDE from the three essential elements of a workflow language: syntax, semantics, and pragmatics. According to knowledge tips provided by experts, scientific workflow IDE can help them to develop their scientific workflows in a straightforward and iterative way through the interaction with IDE. © 2008 IEEE.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/SKG.2008.79",
    "interesting": "-"
  },
  {
    "title": "Component-based development environment for Grid systems: Design and implementation",
    "abstract": "Component-oriented development is a software design method which enables users to build large scale Grid systems by integrating independent and possibly distributed software modules (components), via well defined interfaces, into higher level components. The main benefit from such an approach is improved productivity. Firstly, due to abstracting away network level functionalities, thus reducing the technical demands on the developer. Secondly, by combining components into higher level components, component libraries can be built up incrementally and made available for reuse. In this paper, we share our initial experiences in designing and developing an integrated development environment for Grids to support component-oriented development, deployment, monitoring, and steering of large-scale Grid applications. The development platform, which is tightly integrated with Eclipse software framework, was designed to empower the developer with all the tools necessary to compose, deploy, monitor, and steer Grid applications. We also discuss the overall functionality, design aspects, and initial implementation issues.",
    "keywords": "Component-oriented development; Eclipse; Grid platform; Integrated development environment",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900253621&partnerID=40&md5=e61e0f50b0fbffa20d23a175bcb6a5ce",
    "interesting": "-"
  },
  {
    "title": "Evaluation of a role-based approach for customizing a complex development environment",
    "abstract": "Coarse-grained approaches to customization allow the user to enable or disable groups of features at once, rather than individual features. While this may reduce the complexity of customization and encourage more users to customize, the research challenges of designing such approaches have not been fully explored. To address this limitation, we conducted an interview study with 14 professional software developers who use an integrated development environment that provides a role-based, coarse-grained approach to customization. We identify challenges of designing coarsegrained customization models, including issues of functionality partitioning, presentation, and individual differences. These findings highlight potentially critical design choices, and provide direction for future work. Copyright 2008 ACM.",
    "keywords": "Adaptable and adaptive interfaces; Customization; Interview study; Role-based interface",
    "released": 2008,
    "link": "https://doi.org/10.1145/1357054.1357251",
    "interesting": "-"
  },
  {
    "title": "Interpreter and development environment for learning structured programming languages; [Intérprete y entorno de desarrollo para el aprendizaje de lenguajes de programación estructurada]",
    "abstract": "The main purpose of this Project was to design and develop an interpreter and an integrated development environment that could be used for teaching in introductory courses of programming. The IDE would assist the programmer offering a friendly and proper environment as well as a programming languague in spanish. The goal of these tools is to help the user to understand the fundamentals of programming, to acquire good programming habits and to learn to solve problems without feeling the barrier language, hence improving the understanding and abstraction of the programmer over the problem. Our work considers crucial pedagogical aspects like meaningfull reserved words which are easy to learn and remember; a small instruction set that has, nevertheless, flexible semantics; a simple and straightforward sintax and some other features that guide the development process. This work was developed in Java platform using windows called frames and it can be ported easily to applet applications for its future use in web environments.",
    "keywords": "",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883063842&partnerID=40&md5=dc32b2c4ba35064f96a653d8d14d8207",
    "interesting": "-"
  },
  {
    "title": "Issues of extending the user interface of integrated development environments",
    "abstract": "The current level of extensibility of integrated development environments (IDEs) does not provide sufficient access to make modifications to their user interface components. This limits innovation in IDEs. This paper reviews the problems we have encountered and presents alternative ways to help developers achieve their goals of extending user interface components. Developers interested in extending existing applications will appreciate the information on likely problems and solutions with extensible architectures. Furthermore general suggestions for software architecture extensions to maximize extensibility are included. © 2008 ACM.",
    "keywords": "Annotation; Extensibility; Integrated development environment; User interface",
    "released": 2008,
    "link": "https://doi.org/10.1145/1496976.1496980",
    "interesting": "-"
  },
  {
    "title": "Integrating collaborative program development and debugging within a virtual environment",
    "abstract": "A collaborative integrated development environment enables developers to share programming-related tasks. This paper presents the design and implementation of a collaborative IDE named ICI (Idaho Collaborative IDE). ICI enables developers in different locations to collaborate on a variety of software development activities in real-time. It supports software development in C, C++, Java, and Unicon. ICI combines a synchronous collaborative program editor and a real-time collaborative debugger within a 3D multi-user virtual environment. ICI reduces cognitive context switches between tools inside the IDE and between IDE tasks and virtual environment activities, allowing developers to share, in real-time, the process of editing, compiling, running, and debugging of their software projects. © 2008 Springer Berlin Heidelberg.",
    "keywords": "Collaborative environment; Debugger; Integrated Development Environment (IDE); Run-time debugging",
    "released": 2008,
    "link": "https://doi.org/10.1007/978-3-540-92831-7_10",
    "interesting": "-"
  },
  {
    "title": "Del.icio.us development tools",
    "abstract": "Developers need better knowledge tools to answer their information needs, rather than continuing to rely so heavily on communication with coworkers. Web sites, like the social bookmarking site Del.icio.us, might provide a way forward. They are designed to provide each user an individual incentive for entering data, but provide even more value by combining data from different users into collective knowledge. Several research projects hint that designing knowledge tools for developers using this principle would be more cost effective and provide better incentive structures for capturing knowledge. Copyright 2008 ACM.",
    "keywords": "collaboration; programming environments; social bookmarking",
    "released": 2008,
    "link": "https://doi.org/10.1145/1370114.1370123",
    "interesting": "-"
  },
  {
    "title": "A service based development environment on Web 2.0 platforms",
    "abstract": "Governments are investing on the IT adoption and promoting the so-called e-economies as a way to improve competitive advantages. One of the main government's actions is to provide internet access to the most part of the population, people and organisations. Internet provides the required support for connecting organizations, people and geographically distributed developments teams. Software developments are tightly related to the availability of tools and platforms needed for products developments. Internet is becoming the most widely used platform. Software forges such as SourceForge provide an integrated tools environment gathering a set of tools that are suited for each development with a low cost. In this paper we propose an innovating approach based on Web2.0, services and a method engineering approach for software developments. This approach represents one of the possible usages of the internet of the future. © 2008 Springer Berlin Heidelberg.",
    "keywords": "Method engineering; Service; Web2.0",
    "released": 2008,
    "link": "https://doi.org/10.1007/978-3-540-89897-9_4",
    "interesting": "-"
  },
  {
    "title": "Data mining applications in intelligent integrated development environments",
    "abstract": "Programming and developing of small scale software applications can be accomplished with simple command-line compilers that can be used to compile, test, and execute code generation. Nonetheless, the increase in the scale of software applications and line of program codes has a direct impact on the complexity and management of codes. Moreover, the increase of program scale and the number of programmers can cause problems such as a rise in program errors and bugs, non integrity of development team in programming, complex control versioning and etc. More than four decades has been elapsed since the appearance of the first Integrated Development Environment (IDE) that was used for reduction of these problems. Many IDEs have been developed by Software companies but problems are not completely eliminated. In this paper we concentrate on the idea of Intelligent IDEs that has the ability to learn and predict from Programmers code. Therefore, we can use data mining techniques. This capability has the advantages to advise the novice programmers based on the experience of expert programmers, automatic programmers error correction, clustering programmers with similar programming styles and so on. © 2008 IADIS.",
    "keywords": "Data mining; Integrated development environment; Intelligent IDE",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-58449094919&partnerID=40&md5=2a82f0bc308cfe07ce40fa89918235ca",
    "interesting": "-"
  },
  {
    "title": "Improving software maintenance efficiency with behavior-based cognitive models",
    "abstract": "Currently, in most software maintenance environments, the fundamental tool used by software maintainers to perform system maintenance is the integrated development environment (IDE). Current IDEs have inadequate usability and offer little design information to the user, which may impair program comprehension activities required for efficient maintenance. We have developed and tested a prototype IDE that provides behavioral design information in graphical form, with the intent of allowing software maintainers the ability to more easily learn how a system works and locate relevant source code without the need to consult outside documentation. We show that in two experimental maintenance tasks, users were able to find and modify appropriate code more quickly when using an IDE based on a behavioral view of the software compared with a more traditional, structurally-oriented IDE. Moreover, when using an IDE with a behavioral view, users noticed software patterns more readily and more often used a top-down strategy for solving the maintenance tasks. © 2008 IEEE.",
    "keywords": "Integrated development environment; Program comprehension; Software maintenance; Usability",
    "released": 2008,
    "link": "https://doi.org/10.1109/ICSMC.2008.4811815",
    "interesting": "-"
  },
  {
    "title": "Towards persistence framework-based rapid application development toolkit for web application development",
    "abstract": "Software systems must be delivered quickly in order to respond to today's rapid changing business environments. Persistence framework was introduced to overcome the problem of object-relational impedance mismatch, occurred in most enterprise applications that need access to a relational database. However, most of these persistence frameworks are difficult to configure and use, thus do not really contribute much to the improvement of software developers' overall productivity. This study proposes the concept, architecture, design and development of a rapid application development toolkit that will leverage on a persistence framework to subsequently provide an easy-to-use and customizable front-end web application development environment for developers to perform rapid web application development. Unlike prior efforts, the combination of the features of rapid prototyping, code generation and configuration wizard on top of the persistence framework provided by the proposed rapid application development toolkit enables developers not only to deliver their target web applications within a shorter timeframe through an easy-to-use front-end environment, but also to achieve encapsulation of database access from the business objects of a web application. © 2008 Science Publications.",
    "keywords": "Code generation; Framework reuse; Rapid-prototyping",
    "released": 2008,
    "link": "https://doi.org/10.3844/jcssp.2008.290.297",
    "interesting": "-"
  },
  {
    "title": "Save-IDE - An integrated development environment for building predictable component-based embedded systems",
    "abstract": "In this paper we present an Integrated Development Environment Save-IDE, a toolset that embraces several tools: a tool for designing component-based systems and components, modeling and predicting certain run-time properties, such as timing properties, and transforming the components to real-time execution elements. Save-IDE is specialized for the domain of dependable embedded systems, which in addition to standard design tools requires tool support for analysis and verification of particular properties of such systems. © 2008 IEEE.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/ASE.2008.87",
    "interesting": "-"
  },
  {
    "title": "An integrated development environment for transparent fuzzy agents design: An application to automotive electronic stability program",
    "abstract": "In the last years several computing frameworks based on the ubiquitous and embedding properties have been designed and realized. These systems, characterized by the interconnection of several devices embedded into a microenvironment and interacting among them in order to achieve a common goals, offer new fascinating challenges to face as, for instance, the interoperability and safety problems. The automotive environments are a typical sample of ubiquitous and embedded systems, in fact, modern cars can be considered as mobile computer network composed of intelligent devices capable of controlling the mechanical and hydraulic car components. This study presents an advanced Integrated Development Environment modeling FML-based fuzzy controllers useful to design an efficient Electronic Stability Program (ESP) to be reprogrammed on different hardware without additional effort. In this scenario, multi-agent paradigm and transparent fuzzy control methodology represent the natural technologies exploited to achieve the proposed aims. © 2008 IEEE.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/FUZZY.2008.4630538",
    "interesting": "-"
  },
  {
    "title": "A change-aware development environment by recording editing operations of source code",
    "abstract": "Understanding a program and its evolution is not satisfied only by looking at a current snapshot of its source code. Thus, a developer often examines a sequence of its snapshots stored in repositories of versioning systems, and identifies differences between two successive snapshots. Unfortunately, such differences do not represent individual changes of the source code. This paper proposes a mechanism for recording all editing operations a developer has applied to source code on an integrated development environment. The paper also shows a running implementation of the mechanism built as an Eclipse plug-in, which is called OperationRecorder. The experimental results with a small-scale program substantiate that it has a practical use from the viewpoint of its performance. Copyright 2008 ACM.",
    "keywords": "Integrated development environments; Software evolution; Source code modification; Versioning systems",
    "released": 2008,
    "link": "https://doi.org/10.1145/1370750.1370758",
    "interesting": "-"
  },
  {
    "title": "Distributed watchpoints: Debugging large modular robot systems",
    "abstract": "Distributed systems frequently exhibit properties of interest which span multiple entities. These properties cannot easily be recognized from any single entity, but can be readily detected by combining the knowledge of multiple entities. Testing for distributed properties is especially important in debugging or verifying software for modular robots. We have developed a technique we call distributed watchpoint triggers which can efficiently recognize distributed conditions. Our watchpoint description language can handle a variety of temporal, spatial and logical properties spanning multiple robots. In this paper we present the specification language, describe the distributed online mechanism for detecting distributed conditions in a running system and evaluate the performance of our implementation. ©SAGE Publications 2008.",
    "keywords": "Cellular and modular robotics; Distributed robot systems; Programming environment",
    "released": 2008,
    "link": "https://doi.org/10.1177/0278364907084986",
    "interesting": "-"
  },
  {
    "title": "The automatic identification of the emotion status of web pages",
    "abstract": "A system has been developed that analyses the emotional content of web pages. Text is extracted from an embedded Internet browser and sent to a text-to-emotion engine that identifies the emotive content. An experiment was conducted that examines the effect the emotional content of the web page has on the reader. Our Online Emotion Stock Analyser application was used to assess the emotional content of web pages displaying articles that comment on the previous day's Stock Market share prices. The relevant emotive words relate to the up and down movement of share prices. The relative movement of the positive and negative emotions expressed in the articles over time was compared with the relative movement of the value of the London Stock Exchange. The experiment results support the loop effect between published articles and the future movement of share prices. A number of significant relationships have been observed between the emotion contained in articles about the Stock Market and the next day's market value. The output of the Online Emotion Analyser was shown to be a more accurate predictor of the next day's movement of the Stock Market share index than viewing the previous movement of the index.",
    "keywords": "Development tools for internet explorer; HTML converters and editors; Intelligent analysis and interpretation of multimedia data; Real time interactive systems",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898918677&partnerID=40&md5=f55f22c1b5635c2af3de13030ef0b337",
    "interesting": "-"
  },
  {
    "title": "Improving Prolog programs: Refactoring for Prolog",
    "abstract": "Refactoring is an established technique from the object-oriented (OO) programming community to restructure code: it aims at improving software readability, maintainability, and extensibility. Although refactoring is not tied to the OO-paradigm in particular, its ideas have not been applied to logic programming until now. This paper applies the ideas of refactoring to Prolog programs. A catalogue is presented listing refactorings classified according to scope. Some of the refactorings have been adapted from the OO-paradigm, while others have been specifically designed for Prolog. The discrepancy between intended and operational semantics in Prolog is also addressed by some of the refactorings. In addition, ViPReSS, a semi-automatic refactoring browser, is discussed and the experience with applying ViPReSS to a large Prolog legacy system is reported. The main conclusion is that refactoring is both a viable technique in Prolog and a rather desirable one. © 2007 Cambridge University Press.",
    "keywords": "Program transformation; Programming environments; Refactoring; Software engineering; Tools",
    "released": 2008,
    "link": "https://doi.org/10.1017/S1471068407003134",
    "interesting": "-"
  },
  {
    "title": "JCHRIDE: An integrated development environment for JCHR",
    "abstract": "The rule-based programming language Constraint Handling Rules (CHR) has been introduced to ease the development and implementation of constraint solvers. Currently,several CHR libraries exist in languages such as Prolog,Haskell and Java. The K.U.Leuven JCHR system is a high-performance integration of Constraint Handling Rules (CHR) and Java. JCHR is currently by far the most efficient implementation of CHR in Java. Its performance is competitive with state-of-theart CHR systems in e.g. HAL and Prolog. To ease the duty of a CHR programmer,we introduce in this paper an integrated development environment (IDE) for the K.U.Leuven JCHR. The IDE is implemented as a plug-in in Eclipse.",
    "keywords": "",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894043823&partnerID=40&md5=23d99743ae338c2df3eb18ddbc7df3c9",
    "interesting": "-"
  },
  {
    "title": "A generalised type-2 fuzzy logic system embedded board and integrated development environment",
    "abstract": "This paper describes the design and construction of the first hardware running a generalised type-2 fuzzy logic system. A rationale for the design is given and hardware representations are discussed. An integrated development environment, also developed as part of this project, for type-2 fuzzy system is described along with the software which links this IDE to the novel hardware. The performance of the novel type-2 development board is tested under two scenarios. © 2008 IEEE.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/FUZZY.2008.4630443",
    "interesting": "-"
  },
  {
    "title": "Open source development tools for IMS research",
    "abstract": "The 3GPP IMS is a next generation network architecture aimed at bringing the features and rich services of the Internet to the telephony world. Traditionally telephony products are developed by large companies with access to the proprietary solutions required for PSTN products. However, the shift to a packet-switched architecture and open Internet protocols has increased the developer base to include the huge community of web-developers. Consequently there are currently several open source software projects that aim to provide proof-of-concept implementations and research tools for promoting the development and adoption of IMS technologies. This work investigates the tools created by four open source IMS projects and incorporates these tools into a practical IMS test-bed framework. Evaluations are performed that demonstrate the capabilities and limitations of these tools in providing rich services to IMS users.",
    "keywords": "IMS; Open source; Testbed",
    "released": 2008,
    "link": "https://doi.org/10.4108/tridentcom.2008.3251",
    "interesting": "-"
  },
  {
    "title": "Building a robust development environment",
    "abstract": "Stephen Rylander, a software engineer at CDW focusing on web scalability and best practices, provides strategies and insights for source-code management, build automation, and human factors. Rylander states that ownership of source code is necessary for its maintenance and is also essential to help stakeholders understand various scenarios for structuring source. Re-engineering a source-control tool or folder structure includes continuous integration (CI) to minimize the number of branches that are necessary for development isolation. The CCNET server is used to label the source code after a build and provide traceability of the component for production. Rylander highlighted that a platform upgrade from the .NET 1.1 Framework to the .NET 3.5 Framework requires maintainance of two versions of the source for a period of time without interfering with each other and be built with different compilers.",
    "keywords": "",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-50649092897&partnerID=40&md5=31f33455611fe4c00d7b922d7af18f75",
    "interesting": "-"
  },
  {
    "title": "Editable replay of IDE-based repetitive tasks",
    "abstract": "Programmers often have to do many repetitive tasks when using an IDE (Integrated Development Environment). These tasks require them to navigate through many views and dialogs in the same steps and input same data, which are time consuming and boring. In this paper, we present an approach to automatically perform the repetitive tasks by catching user actions on the IDE and replaying them when necessary. The sequence and contents of the caught user actions can be edited for generating user actions of similar tasks. The user actions are manifested as a set of high-level information so that they are easy to be edited and robust to UI changes. We present SmartReplayer, an implementation of our approach in the Eclipse IDE and use examples to show that it can greatly improve efficiency of Eclipse Programmers. © 2008 IEEE.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1109/COMPSAC.2008.25",
    "interesting": "-"
  },
  {
    "title": "Business rules and services ontologies development environment",
    "abstract": "In the current globalized world, characterized by strong Web based interactions, relationships between people and governments are subject to fast changes. The increasing demand for new services conducts to the need to create services from scratch and by integrating disparate and heterogeneous legacy systems. The problem is that the form as most of the systems were implemented turns the change excessively slow and expensive. The main identified reasons that explain this problem are: (i) the difficulty in the individualization and separation of business rules from other aspects of the business and of the system, (ii) the rules mechanisms don't accept rules described in friendly languages for business analysts that could be automatically transformed to executable code. This paper proposes an integrated development environment (IDE) consisted by a set of tools to automate the modeling of business rules in the business people's terminology and integration of services. The IDE is based on a set of ontologies to manage metadata of services, vocabularies and business rules, guarantying the necessary support in terms of semantics, persistence and integrity for the manipulated artifacts.",
    "keywords": "Business rule; E-government; Ontology; Service; SOA; Web services",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962779282&partnerID=40&md5=9be72ceab8844d365d08836328bf9520",
    "interesting": "-"
  },
  {
    "title": "Selection criteria for software development tools for SMES SMEs and Cooperatives in Venezuela",
    "abstract": "Software engineering tools have regained interests in recent years due to different changes affecting software developing organizations. These organizations carry out activities that might be undertaken in a plan driven and agile manner with the support of such tools. A proper balance between both approaches and the effective tool adoption will help organizations to meet their objectives and evolve. Small and medium enterprises and Cooperatives (S&C) share common characteristics throughout Latin America. Small and medium enterprises (SMEs) lack of formality in their roles and relationships among interacting individuals, whereas Cooperatives are usually small companies with weaknesses as to management techniques and technological equipment. In fact, both have difficulties when finding the right personnel and tools that best suit their needs. Considering Venezuela as our study subject, we have herein proposed some criteria to assist S&C in the tools selection that support their development processes while fostering the balance required between agility and discipline. Such criteria were formulated based on the characterization of five factors aimed at determining this balance. These contributions will help subsequently identifying methodological and technical aspects to provide guidance to S&C in the improvement of their development processes.",
    "keywords": "Methodology; Selection; Sme; Software development; Tools",
    "released": 2008,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-55849123998&partnerID=40&md5=d58044f4aa27620c1c1a6f6015312ea8",
    "interesting": "-"
  },
  {
    "title": "Managing scientific software complexity with Bocca and CCA",
    "abstract": "In high-performance scientific software development, the emphasis is often on short time to first solution. Even when the development of new components mostly reuses existing components or libraries and only small amounts of new code must be created, dealing with the component glue code and software build processes to obtain complete applications is still tedious and error-prone. Component-based software meant to reduce complexity at the application level increases complexity to the extent that the user must learn and remember the interfaces and conventions of the component model itself. To address these needs, we introduce Bocca, the first tool to enable application developers to perform rapid component prototyping while maintaining robust software-engineering practices suitable to HPC environments. Bocca provides project management and a comprehensive build environment for creating and managing applications composed of Common Component Architecture components. Of critical importance for high-performance computing (HPC) applications, Bocca is designed to operate in a language-agnostic way, simultaneously handling components written in any of the languages commonly used in scientific applications: C, C++, Fortran, Python and Java. Bocca automates the tasks related to the component glue code, freeing the user to focus on the scientific aspects of the application. Bocca embraces the philosophy pioneered by Ruby on Rails for web applications: start with something that works, and evolve it to the user's purpose. © 2008 - IOS Press and the authors. All rights reserved.",
    "keywords": "Code generation; Interface definition language; SIDL; Software development environment",
    "released": 2008,
    "link": "https://doi.org/10.1155/2008/417946",
    "interesting": "-"
  },
  {
    "title": "A SOA-based embedded systems development environment for industrial automation",
    "abstract": "Currently available toolsets for the development of embedded systems adopt traditional architectural styles and do not cover the whole requirements of the development process, with extensibility being the major drawback. In this paper, a service-oriented architectural framework that exploits semantic web is defined. Features required in the development process are defined as web services and published into the public domain, so as to be used on demand by developers to construct their projects' specific integrated development environments (IDEs). The infrastructure required to build a web service-based IDE is presented. Specific web services are defined and the way these services affect the development process is discussed. Special focus is given on the device model and the means that such a modelling can significantly improve the development process. A prototype implementation demonstrates the applicability and usefulness of the proposed demand-led development process in the industrial automation domain.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1155/2008/312671",
    "interesting": "-"
  },
  {
    "title": "Creating sophisticated development tools with OmniBrowser",
    "abstract": "Smalltalk is not only an object-oriented programming language; it is also known for its extensive integrated development environment supporting interactive and dynamic programming. While the default tools are adequate for browsing the code and developing applications, it is often cumbersome to extend the environment to support new language constructs or to build additional tools supporting new ways of navigating and presenting source code. In this paper, we present the OmniBrowser, a browser framework that supports the definition of browsers based on an explicit metamodel. With OmniBrowser a domain model is described in a graph and the navigation in this graph is specified in its associated metagraph. We present how new browsers are built from predefined parts and how new tools are easily described. The browser framework is implemented in the Squeak Smalltalk environment. This paper shows several concrete instantiations of the framework: a remake of the ubiquitous Smalltalk system browser, a coverage browser, the Duo Browser and the dynamic protocols browser. © 2007 Elsevier Ltd. All rights reserved.",
    "keywords": "Domain modelling; Graphical user interface; Meta-description; Programming environment",
    "released": 2008,
    "link": "https://doi.org/10.1016/j.cl.2007.05.005",
    "interesting": "-"
  },
  {
    "title": "An approach to creating development environments for a wide class of programming languages",
    "abstract": "Creating an integrated development environment for a new programming language is a nontrivial and laborious task. Such universal integration platforms as Eclipse, NetBeans, MS Visual Studio, and others partly facilitate it. The paper gives a comparative analysis of the approaches to creating a development environment on the basis a universal integration platform and proposes a new approach that eliminates the disadvantages while retaining the advantages of the existing approaches. © 2008 MAIK Nauka.",
    "keywords": "",
    "released": 2008,
    "link": "https://doi.org/10.1134/S0361768808040063",
    "interesting": "-"
  },
  {
    "title": "Faster ARMA maximum likelihood estimation",
    "abstract": "A new likelihood based AR approximation is given for ARMA models. The usual algorithms for the computation of the likelihood of an ARMA model require O (n) flops per function evaluation. Using our new approximation, an algorithm is developed which requires only O (1) flops in repeated likelihood evaluations. In most cases, the new algorithm gives results identical to or very close to the exact maximum likelihood estimate (MLE). This algorithm is easily implemented in high level quantitative programming environments (QPEs) such as Mathematica, MatLab and R. In order to obtain reasonable speed, previous ARMA maximum likelihood algorithms are usually implemented in C or some other machine efficient language. With our algorithm it is easy to do maximum likelihood estimation for long time series directly in the QPE of your choice. The new algorithm is extended to obtain the MLE for the mean parameter. Simulation experiments which illustrate the effectiveness of the new algorithm are discussed. Mathematica and R packages which implement the algorithm discussed in this paper are available [McLeod, A.I., Zhang, Y., 2007. Online supplements to \"Faster ARMA Maximum Likelihood Estimation\", 〈http://www.stats.uwo.ca/faculty/aim/2007/faster/〉]. Based on these package implementations, it is expected that the interested researcher would be able to implement this algorithm in other QPEs. © 2007 Elsevier B.V. All rights reserved.",
    "keywords": "Autoregressive approximation; Efficiency of the sample mean; High-order autoregression; Long time series and massive data sets; Maximum likelihood estimator; Quantitative programming environments",
    "released": 2008,
    "link": "https://doi.org/10.1016/j.csda.2007.07.020",
    "interesting": "-"
  },
  {
    "title": "Online discussion as a potential professional development tool for first-year teachers",
    "abstract": "The opportunity to engage in discussion with others about teaching issues is essential to a teacher's professional development, and can potentially be afforded through online discussions. The following study explored the use of online discussion as a way to engage beginning teachers in professional development. An investigation was conducted to determine what ten beginning teachers discuss during a year-long electronic discussion, how often and at what times of the year they tend to participate, and if online discussions hold promise for future use in the professional development of beginning teachers. Transcripts of the online discussions revealed seven categories of first-year teacher discussion that might be used to tailor future professional development activities with novice teachers. Patterns in what times of the year these topics arose and when beginning teachers tended to participate indicate when appropriate support might be given during the induction phase of teaching. Examination of the topics that generated the most activity provided evidence of cognitive development among the beginning teachers. Finally, interviews with the first-year teacher participants acknowledged several benefits of the system and allowed for exploration of ways in which the online discussions might be adapted to better meet beginning teacher needs.",
    "keywords": "Beginning teachers; Induction; Online; Professional development",
    "released": 2008,
    "link": "https://doi.org/10.1080/14759390701847591",
    "interesting": "-"
  },
  {
    "title": "Supporting environment based on graph grammar for dynamic software architectures",
    "abstract": "In this paper, software architectures and architecture styles are modeled with attributed typed graphs and graph grammars respectively. Accordingly, dynamic reconfigurations of software architectures are modeled with graph transformations. Based on such a modeling, a supporting environment is constructed twofold. Firstly, the visual manipulation of the graphical representation of software architectures is supported with a graph grammar- enabled editor. Secondly, the graphical architecture model is reified as a runtime software architecture object built into the physical running system, through which graph transformations of the architecture model is then naturally reflected as dynamic reconfigurations of the running system.",
    "keywords": "Development environment; Dynamic software architecture; Graph grammar; Visualization",
    "released": 2008,
    "link": "https://doi.org/10.3724/SP.J.1001.2008.01881",
    "interesting": "-"
  },
  {
    "title": "WinHIPE: An IDE for functional programming based on rewriting and visualization",
    "abstract": "The article describes an IDE for functional programming, called WinHIPE. It provides an interactive and flexible tracer, as well as a powerful visualization and animation system. The former tool is based on the rewriting model of evaluation, and the latter provides automatic generation of visualizations and animations, friendly support for customization, maintenance and exportation of animations to the Web, and facilities to cope with large scale. Its main advantage over other visualization systems is an effortless approach to animation creation and maintenance, based on generating visualizations and animations automatically, as a side effect of program execution. Finally, we briefly describe our experience using the system during several years in educational settings.",
    "keywords": "expression evaluation; functional programming; program animation; program visualization; programming environments; term rewriting; tracing",
    "released": 2007,
    "link": "https://doi.org/10.1145/1273039.1273042",
    "interesting": "-"
  },
  {
    "title": "An Integrated Development Environment for Web Service Composition",
    "abstract": "Web services provide an instantiation of the loosely coupled service–oriented architecture and facilitate the process of enterprise application integration by encapsulating information, software, and other resources. However, to exploit the true potential of web services, it is critical to develop technologies and tools for composing new services from existing ones. While numerous composition approaches have been developed in the past, very little has been done towards tooling. What is clearly lacking is an Integrated Development Environment (IDE) to ease the process of composition, thereby reducing development time and integration efforts. In this paper, we build on our previous work on service composition, and present an IDE for end–to–end composition of web services. We elaborate on the design of the IDE, describe its integration with existing technologies, and discuss its usability based on the findings of a user survey.",
    "keywords": "",
    "released": 2007,
    "link": "https://doi.org/10.1109/ICWS.2007.38",
    "interesting": "-"
  },
  {
    "title": "Multimedia web-based programming development environment",
    "abstract": "A web-based environment for C, Java, and Unix shell script programming is described, together with its use in an engineering freshman C programming course. Besides the usual program development facilities such as compiling and debugging, the environment also provides multimedia features for presentation of program output, including audio, interactive graphics, interactive I/O, and HTML forms. The interactive graphics feature plots one or more user-defined functions and includes a graphical implementation of Newton's method for finding a zero given a function and its derivative. The audio feature plays 8 KHz. sampled sound which may be generated by a program directly or by performing signal processing on an input file. The HTML output feature allows students in advanced courses to develop specialized web-based sub- environments. The environment can be customized to provide different prototype files for each subproject of multiple courses and also different files for each student.",
    "keywords": "C Programming; Plotting; Programming Development Environment; Web-based",
    "released": 2007,
    "link": "https://doi.org/10.1109/FIE.2007.4417875",
    "interesting": "-"
  },
  {
    "title": "Understanding Web 2.0",
    "abstract": "Web 2.0, the second phase in the Web's evolution, is attracting the attention of IT professionals, businesses, and Web users. Web 2.0 is also called the wisdom Web, people-centric Web, participative Web, and read/write Web. Web 2.0 harnesses the Web in a more interactive and collaborative manner, emphasizing peers' social interaction and collective intelligence, and presents new opportunities for leveraging the Web and engaging its users more effectively. Within the last two to three years, Web 2.0, ignited by successful Web 2.0 based social applications such as MySpace, Flickr, and YouTube, has been forging new applications that were previously unimaginable.",
    "keywords": "Web 2.0; blog; Web mashup; wiki; tagging; social bookmarking; social computing; Web 2.0 development tools; Web 2.0 applications; social networking",
    "released": 2007,
    "link": "https://doi.org/10.1109/MITP.2007.78",
    "interesting": "-"
  },
  {
    "title": "A tool for creating speaking web pages: Text-to-speech integrated development environment (TTS-IDE)",
    "abstract": "This paper describes an integrated development environment (IDE) which web authors may use to add synthesized speech to their browser-based presentations. Web authors use the IDE to input the text to be spoken. The IDE embeds that text within the HTML file for playback by a speech-enabled browser. Browsers currently supporting text-to-speech (TTS) are Microsoft Internet Explorer and Opera. The IDE works with either HTML files or Powerpoint Web Presentation files. Playback is controlled by a set of controls that \"float\" innocuously in the upper right hand corner of each page. Speaking pages can be used by online courses, training programs, or certification processes.",
    "keywords": "Online; Speaking browser; Speech synthesis; Text-to-speech; Web-based",
    "released": 2007,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887310745&partnerID=40&md5=4261e96323cf0ba14529e52878cb0642",
    "interesting": "-"
  },
  {
    "title": "Managing the copy-and-paste programming practice in modern IDEs",
    "abstract": "Copy-and-paste is a common practice in industrial software development and maintenance, which results in code clones. Prior research has focused on automatically detecting and analyzing code clones from legacy systems and on eliminating clones. We believe that it is equally important to provide automated support in an integrated development environment (IDE) for the copy-and-paste practice when programs are being written. By instrumenting an IDE, the cloning relation among multiple copy-and-pasted code fragments will be tracked, thus obtaining a clone group. The commonality among members of a clone group will be extracted and represented as rules that capture code intent. We envision uses of the extracted rules for better software quality. Our CnP tool is currently targeted at Java and integrated into Eclipse. Empirical evaluation in terms of false positives, usefulness, and usability will be performed.",
    "keywords": "Abstract syntax tree; Code clone; Code management; Copy-and-paste programming; Eclipse integrated development environment; Error detection; Intent inference; Java",
    "released": 2007,
    "link": "https://doi.org/10.1145/1297846.1297952",
    "interesting": "-"
  },
  {
    "title": "Tinilipse: An eclipse plug-in to enable communication with the Tini platform",
    "abstract": "Anyone developing for the Tini platform needs to perform four major activities: compile code, build the application, deploy the application and test it. Several independent Tini tools exist to perform these activities. To centralize and improve developer productivity, we describe a TINI Integrated Development Environment that is structured as an Eclipse plug-in. It combines and places all four development activities into the Eclipse IDE.",
    "keywords": "Eclipse; IDE; Tini Platform",
    "released": 2007,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869829151&partnerID=40&md5=38ff75ce5fcff7041026634c290d44bf",
    "interesting": "-"
  },
  {
    "title": "Design and development tools for next generation mobile services",
    "abstract": "The actual standards for service authoring, composition and development are not easy to port and to apply for next generation mobile applications. This paper describes some tools that we're developing in the context of the IST-Simple Mobile Service project, whose aim is to ease the authoring and the use of services for mobile devices. We propose a service composition approach using an UML profile very close to the actual standards for Web Services definition and authoring, like WSDL and BPEL. We take a glance at SMILE, the run-time support we provide for service execution. Finally we hint at an efficient serialization mechanism based on JSON, a human readable data exchange format less verbose and, in our opinion, more suitable for mobile terminals than XML. © 2007 IEEE.",
    "keywords": "",
    "released": 2007,
    "link": "https://doi.org/10.1109/ICSEA.2007.26",
    "interesting": "-"
  },
  {
    "title": "Social software development environments",
    "abstract": "The software development as a social activity involves project personnel collaboration, collocation of team members, and face-to-face, phone, and online meeting and communication. The three trends of software development involve the increasing distribution of development teams, the extensibility of integrated development environments, and the emergence of social software in the Web 2.0 era. Integrated Development Environments (IDE) are used to develop softwares with tools such as editing, compiling, building, versioning, and testing software. The Jazz Research Project (JRP) aims to promote interaction and team building among small and core group developers, and capturing team's artifacts to provide a useful knowledge base and context of communication. The ActivitySpaces system provides users with real-time awareness of information about the project teammates, artifacts, and tasks for social development.",
    "keywords": "",
    "released": 2007,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-33846678629&partnerID=40&md5=cb495d3f85db0912bfd32609e35c1ecc",
    "interesting": "-"
  },
  {
    "title": "Java: From \"hard coding\" to using an integrated development environment",
    "abstract": "Being a Java developer the decision of starting to use an integrated development environment (IDE) instead of a set of discrete programming tools, is to be taken sooner or later. This paper identifies the favorite features to opt for, in selecting a suitable IDE, what should be used and by whom with plethora of such IDEs. Though IDEs are meant to facilitate program development and increase productivity, migrating developers might fall into a set of common pitfalls that could hinder productivity. Such pitfalls are indicated and discussed in the view of available IDE features. © 2006 IEEE.",
    "keywords": "Hard coding; Integrated development environment; Java programming; Productivity",
    "released": 2007,
    "link": "https://doi.org/10.1109/DFMA.2006.296905",
    "interesting": "-"
  },
  {
    "title": "A collaborative environment for user-initiated development of web applications",
    "abstract": "Many projects that develop information systems fail because system developers do not understand the user's requirements completely. The term \"user\" here means the customers that requests the software development to system developers. The reasons for failure include incomplete specifications of the user's requirements and the frequent changes thereof. We propose a new development method for a collaborative development model between users and system developers in developing Web application. In our method, users first create a part of the screen images and screen transition images in HTML. Next, the Web-app-skeleton generation tool we have developed, automatically generates a skeleton of the Web application from the HTML files. The system developers then add logical function to it. The Web-app-skeleton generation tool works to generate an optimal skeleton, after analyzing the structure of the HTML file, evaluating any similarity to other HTML files and clustering the pages. This paper describes the new user initiative collborative development environment. In addition, the prototype Web-appskeleton generation tool is discussed and experimental results obtained from using the tool are reported.",
    "keywords": "Collaborative development environment; Information system; Skeleton auto-generation; User initiative; Web application",
    "released": 2007,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863346509&partnerID=40&md5=0021eb5041317334162debc39acc9b31",
    "interesting": "-"
  },
  {
    "title": "Distributed and collaborative soft computing: An emerging development environment",
    "abstract": "There is a rapidly emerging need to deal with distributed sources of data (sensors, web sites, databases). By recognizing their limited accessibility while acknowledging benefits of pursuing collaborative processing, we propose a concept of a distributed and collaborative framework of Computational Intelligence (CI). The variety of possible mechanisms of interaction is organized into a setting of the C3 (communication collaboration - consensus) paradigm. This helps us offer taxonomy of various schemes of interaction which in the sequel leads to a suite of detailed algorithms. The role of granular information and granular computing in the establishing the mechanisms of interaction is emphasized and investigated. © 2007 IEEE.",
    "keywords": "C<sup>3</sup> paradigm; Computational intelligence; Distributed processing; Fuzzy clustering; Fuzzy models",
    "released": 2007,
    "link": "https://doi.org/10.1109/ICCTA.2007.52",
    "interesting": "-"
  },
  {
    "title": "Integrated development environment for GARUDA grid (G-IDE)",
    "abstract": "Grid is a seamless integration varied resources that are geographically distributed around the globe aiming to provide gigantic computational power. The heterogeneous, decentralized and distributed nature of Grid environment places special requirement for Grid applications management. With a large number of scientists eager to use the Grid, the need of the hour is to provide a means through which the user can exploit the Grid without getting bogged by its complexities for developing, building, executing and debugging their Grid applications. In other words, there arises a need for a common application development interface to compile, build, execute, debug and profile applications on heterogeneous environment like GARUDA Grid. The authors working at Centre for Development of Advanced Computing (C-DAC) have developed a Grid application development environment called G-IDE, which abstracts the grid technology diversity. G-IDE helps application developers to compile, build, execute, debug, and profile grid applications on remote resources efficiently. G-IDE helps in rapid development of grid applications by the scientific programming community. In this paper, the authors described details of its features, the design, architecture, and implementation of G-IDE. © 2007 IEEE.",
    "keywords": "",
    "released": 2007,
    "link": "https://doi.org/10.1109/E-SCIENCE.2007.44",
    "interesting": "-"
  },
  {
    "title": "OOWS Suite: A Development Environment for Web Applications based on MDA; [OOWS suite: Un entorno de desarrollo para aplicaciones web basado en MDA]",
    "abstract": "[No abstract available]",
    "keywords": "",
    "released": 2007,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865973240&partnerID=40&md5=8760b950d359daf38781400ad0913c5f",
    "interesting": "-"
  },
  {
    "title": "Game teleporter: A development tool for everyone",
    "abstract": "The Game Teleporter is an application that translates one file format to another without any user intervention. The application itself is made up of different combinations of input plug-ins and output plug-ins. For example, the application can take an Adobe Flash file as an input and then output a Playstation Portable binary that can be run on the specified target platform and have the same functionality as the original Adobe Flash file. Flash is a file format commonly used by web developers to create animated and interactive websites. Using Flash as an input opens up development to people who might have great ideas for games, but cannot display them on the desired target as they do not know how to write programs for it. This tool is applicable at all levels of education. A very simple input/output plug-in combination allows elementary school children to create a game simply by drawing pictures. This can enhance their interest in learning computer programming. As shown in this paper, students used this tool with a customized graphical input plug-in to create a basic game that will run on both Microsoft Windows and on a Sony Playstation Portable. College students can also utilize this application by creating and modifying the plug-ins to adapt to whatever the current technology requires. This paper lays out how the Game Teleporter functions, and how it can be used in education at all levels to generate better computer programmers for the future. ©2007 IEEE.",
    "keywords": "Game development; Multiple platforms; Open source; Playstation portable",
    "released": 2007,
    "link": "https://doi.org/10.1109/FIE.2007.4417963",
    "interesting": "-"
  },
  {
    "title": "Web sites verification: An abductive logic programming tool",
    "abstract": "We present the CIFFWEB system, an innovative tool for the verification of web sites, relying upon abductive logic programming. The system allows the user to define rules that a web site should fulfill by using (a fragment of) the query language Xcerpt. The rules are translated into abductive logic programs with constraints and their fulfillment is checked through the CIFF abductive proof procedure. © Springer-Verlag Berlin Heidelberg 2007.",
    "keywords": "",
    "released": 2007,
    "link": "https://doi.org/10.1007/978-3-540-74610-2_33",
    "interesting": "-"
  },
  {
    "title": "The web service modeling toolkit - An integrated development environment for semantic web services",
    "abstract": "The time of engineers is a precious commodity. This is especially true for engineers of semantic descriptions, who need to be highly skilled in conceptual modeling, a skill which will be in high demand as Semantic Web technologies are adopted by industry. Within the software engineering community Integrated Development Environments (IDEs) like the Eclipse Java Development Toolkit and NetBeans have proved to increase the productivity of engineers by bringing together tools to help engineers with their everyday tasks. This paper motivates the need for such an IDE for the Semantic Web and in particular describes the Web Service Modeling Toolkit (WSMT), an Integrated Development Environment for Semantic Web Services through the WSMO paradigm. © Springer-Verlag Berlin Heidelberg 2007.",
    "keywords": "",
    "released": 2007,
    "link": "https://doi.org/10.1007/978-3-540-72667-8_57",
    "interesting": "-"
  },
  {
    "title": "JASPER: An eclipse plug-in to facilitate software maintenance tasks",
    "abstract": "Recent research has shown that developers spend significant amounts of time navigating around code. Much of this time is spent on redundant navigations to code that the developer previously found. This is necessary today because existing development environments do not enable users to easily collect relevant information, such as web pages, textual notes, and code fragments. JASPER is a new system that allows users to collect relevant artifacts into a working set for easy reference. These artifacts are visible in a single view that represents the user’s current task and allows users to easily make each artifact visible within its context. We predict that JASPER will significantly reduce time spent on redundant navigations. In addition, JASPER will facilitate multitasking, interruption management, and sharing task information with other developers.",
    "keywords": "Eclipse; concerns; natural programming; programmer efficiency; programming environments",
    "released": 2006,
    "link": "https://doi.org/10.1145/1188835.1188849",
    "interesting": "-"
  },
  {
    "title": "A resource support toolkit (r-IDE): Supporting the DECIDE framework",
    "abstract": "A central activity involved in the user-centred design process is usability evaluation. Cost-effective evaluation tools to fully support usability evaluations however, are still limited. The aim of this work is to introduce a web-based, resource-supported, interactive evaluation toolkit called R-IDE, which guides evaluation planners through the various activities involved in planning and conducting usability evaluations. The IDE stages of the DECIDE framework provide the basis for the design of this toolkit, which currently supports two evaluation methods: heuristic evaluation for websites and standard questionnaires. This paper describes the design, development, evaluation and future potential of this toolkit.",
    "keywords": "evaluation methods; evaluation toolkit; heuristic evaluation",
    "released": 2006,
    "link": "https://doi.org/10.1145/1152760.1152768",
    "interesting": "-"
  },
  {
    "title": "Web Interface Development Environment (WIDE): Software Tool for Automatic Generation of Web Application Interfaces",
    "abstract": "Using web applications has become a common solution to access and manipulate information remotely. Platform and device independency can be achieved most efficiently using matured web standards. By combining available standards and web technology, complex interactive web applications can be created. However, building even basic web applications is limited to expert software developers. Even though end-users have a desire to create one, the hurdle to learn and combine multiple technologies altogether is often too high for their needs and skills. In this paper we present WIDE, a new software application designed to assists end-users develop web applications visually and thus minimize their efforts.",
    "keywords": "End-user programming; visual programming; web design; web application development; prototyping; navigation charts",
    "released": 2006,
    "link": "https://doi.org/10.1109/WAC.2006.376042",
    "interesting": "-"
  },
  {
    "title": "Semantic Web Service Discovery in the OWL-S IDE",
    "abstract": "The increasing availability of web services necessitates efficient discovery and execution framework. The use of xml at various levels of web services standards poses challenges to the above process. OWL-S is a service ontology and language, whose semantics are based on OWL. The semantics provided by OWL support greater automation of service selection, invocation, translation of message content between heterogeneous services, and service composition. The development and consumption of an OWL-S based web service is time consuming and error prone. OWL-S IDE assists developers in the semantic web service development, deployment and consumption processes. In order to achieve this the OWL-S IDE uses and extends existing web service tools. In this paper we will look in detail at the support for discovery for semantic web services. We also present the matching schemes, the implementation and the results of performance evaluation.",
    "keywords": "",
    "released": 2006,
    "link": "https://doi.org/10.1109/HICSS.2006.431",
    "interesting": "-"
  },
  {
    "title": "Before-Commit Client State Management Services for AJAX Applications",
    "abstract": "Heavily script-based browser applications change the manner in which users interact with Web browsers. Instead of downloading a succession of HTML pages, users download a single application and use that application for a long period of time. The application is not a set of HTML pages, but rather a single page that can possible modify its own presentation based on data exchanged with a server. In such an environment, it is necessary to provide some means for the client to manage its own state. We describe the initial results of our work in providing client-side state management services for these script-based applications. We focus on browser-based services that can help the user before any data is committed on the server. Our services include state checkpointing, property binding, operation logging, operational replay, ATOM/RSS data updates, and application-controlled persistence.",
    "keywords": "Web Applications; Scripting; Programming Environments; Data Handling; Data Management",
    "released": 2006,
    "link": "https://doi.org/10.1109/HOTWEB.2006.355269",
    "interesting": "-"
  },
  {
    "title": "16th Workshop on Logic-based methods in Programming Environments, WLPE 2006",
    "abstract": "The proceedings contain 9 papers. The special focus in this conference is on Logic Programming. The topics include: A delta debugger for ILP query execution; on using tracer driver for external dynamic process observation; a logic-based debugger for java; towards execution time estimation for logic programs via static analysis and profiling; a generic analysis environment for curry programs; some issues on incremental abstraction-carrying code; fingerprinting logic programs; solving constraint satisfaction problems with the spreadsheet paradigm and a web-based tool combining different type analyses.",
    "keywords": "",
    "released": 2006,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886680872&partnerID=40&md5=916704211d567812a0d3f49a29767171",
    "interesting": "-"
  },
  {
    "title": "Integrating XP project management in development environments",
    "abstract": "Extreme Programming (XP) is an Agile Methodology (AM) which does not require any specific supporting tool for being successfully applied. Despite this starting observation, there are many reasons leading a XP team to adopt Web based tools to support XP practices. For example, such tools could be useful for process and product data collection and analysis or for supporting distributed development. In this article, we describe XPSuite, a tool composed of two parts: XPSwiki, a tool for managing XP projects and XP4IDE, a plug-in for integrating XPSwiki with an Integrated Development Environment (IDE). Moreover, we will show how the full Object Oriented implementation provides a powerful support for extracting all data represented in the model that the system implements. © 2006 Elsevier B.V. All rights reserved.",
    "keywords": "Agile methodologies; Distributed development; Extreme programming; Process metrics; XP tools",
    "released": 2006,
    "link": "https://doi.org/10.1016/j.sysarc.2006.06.006",
    "interesting": "-"
  },
  {
    "title": "Components and workflow based Grid programming environment for integrated image-processing applications",
    "abstract": "With the development of high-performance computing technologies, Grid computing has emerged as a new infrastructure for applications with resource integration. However, some obstacles for the prevalence of Grid and Grid application developments are still to be overcome, which is largely due to the immature Grid-enabled computing environment and its geographically distributed and non-centralized administrative nature. In order to improve the situation and support Grid applications, a powerful Grid system is proposed as an efficient solution, which enables components and workflow support for loosely coupled and geographically distributed components on a Grid. An image-processing Grid is a project aiming at providing an efficient programming environment. In this paper, we discuss the infrastructure of the integrated environment, a flexible and useful workflow mechanism, a dynamic resource-scheduling strategy to achieve multiple image-processing operations, and an easy-to-use Web portal. In the system, components and workflow techniques provide the benefits of flexibility, reusability and scalability, so that even the unskilled user can easily specify the processing of complex, cooperative applications without knowledge of underlying Grid platform configuration details. Copyright © 2006 John Wiley & Sons, Ltd.",
    "keywords": "Components and workflow; Grid application; Grid computing; Grid workflow; High-performance computing; Image processing",
    "released": 2006,
    "link": "https://doi.org/10.1002/cpe.1034",
    "interesting": "-"
  },
  {
    "title": "Kid's Programming Language (KPL)",
    "abstract": "In this paper, we introduce Kid's Programming Language, or KPL. KPL is an integrated development environment (IDE) and programming language which are similar to but greatly simplified from current mainstream IDEs and languages. KPL is educational freeware. KPL was initially targeted at the 10-14 age group, but has proven to be engaging and interesting to beginning programmers and hobbyists of all ages. KPL offers a highly leveraged object model which emphasizes graphics programming, including 2D and 3D graphics. KPL intends to address the problem of declining computer science interest and enrollment by 1) making it easy for beginners to get started with computer programming, 2) capturing and holding beginners' interest by emphasizing graphics and games programming and 3) enabling a smooth \"graduation\" from KPL into mainstream languages and IDEs.",
    "keywords": "2D graphics; 3D graphics; Beginning programming; Computer science education; Games; Integrated development environment; Programming language",
    "released": 2006,
    "link": "https://doi.org/10.1145/1179295.1179348",
    "interesting": "-"
  },
  {
    "title": "Gathering online representations of practice about assessment for use as a professional development tool: A case in progress",
    "abstract": "The Assessment Snapshots digital resource at the University of Western Sydney is a current project to produce locally contextualised resources about effective assessment practice. Assessment case studies showcased through the project offer insights into how individual teachers in the disciplines design assessment strategies which respond to the challenges of teaching and learning in the tertiary sector in the 21st century. Resources produced are designed as online professional development tools for self-access by teachers and for use in assessment workshops and curriculum renewal projects. The paper explores the rationale for using case studies as a form of representation of practice, and describes the processes taken by a team of academic developers to gather cases from individual academics, provides initial reflections on those processes, and proposes plans for using the resource and evaluating its effectiveness as a trigger for improvement in assessment practice. © 2006 Wilson, G., Thomson, R., Malfroy, J.",
    "keywords": "Assessment; Case studies; Online professional development; Representations of practice",
    "released": 2006,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870891662&partnerID=40&md5=e8369138402450843afd5899f3b5bfd1",
    "interesting": "-"
  },
  {
    "title": "Using visual momentum to explain disorientation in the Eclipse IDE",
    "abstract": "We report on a field study about how software developers experience disorientation when using the Eclipse Java integrated development environment. We analyzed the data using the theory of visual momentum, identifying three factors that may lead to disorientation: the absence of connecting navigation context during program exploration, thrashing between displays to view necessary pieces of code, and the pursuit of sometimes unrelated subtasks. © 2006 IEEE.",
    "keywords": "",
    "released": 2006,
    "link": "https://doi.org/10.1109/VLHCC.2006.49",
    "interesting": "-"
  },
  {
    "title": "Workshop jGRASP: An integrated development environment with visualizations for teaching Java in CS1, CS2, and beyond",
    "abstract": "The purpose of the workshop is to introduce faculty to the advanced pedagogical features provided by jGRASP for teaching and learning Java, especially for first year students. This includes the traditional CS1 (introduction to programming) and CS2 (introduction to data structures and algorithms). jGRASP is a freely available lightweight integrated development environment (http://jgrasp.org) that provides automatically generated visualizations for improving the comprehensibility of software. These visualizations, which are particularly well suited for CS1 and CS2 students learning Java, include Control Structure Diagrams, UML Class Diagrams, and dynamic Object Views (including arrays, ArrayList, LinkedList, HashMap, and TreeMap). The object workbench and integrated debugger facilitate a unique way for students to view objects created by their programs. The workshop will include hands-on activities and example programs to demonstrate how instructors can improve the learning and programming experience of their students by using jGRASP and the pedagogically sound visualizations it provides. © 2006 IEEE.",
    "keywords": "Control structures; Data structures; Integrated development environment; Software visualizations",
    "released": 2006,
    "link": "https://doi.org/10.1109/FIE.2006.322748",
    "interesting": "-"
  },
  {
    "title": "Japanese workshop on leveraging Web2.0 Technologies in Software Development Environments (WebSDE)",
    "abstract": "This paper briefly describes the theme and goals of the WebSDE Workshop on ASE'2006. This workshop emphasizes next-generation software development environments inspired by Web2.0 technologies and seeks to explore ways of automated support to software development in the Web2.0 era. © 2006 IEEE.",
    "keywords": "",
    "released": 2006,
    "link": "https://doi.org/10.1109/ASE.2006.45",
    "interesting": "-"
  },
  {
    "title": "A collaborative programming environment for web interoperability",
    "abstract": "We describe a new type of collaborative system that exhibits much of the simple, cooperative nature of a wiki, but allows dynamic sharing of functionality as well as of content. In contrast with traditional wikis, pages in this system are executable, and interoperate with each other by passing and returning data structures of known type, such as messages, URLs, or locations. This collaborative programming environment is well suited to retrieving and combining content available on the Web. Since code within pages can access any type of Web content, the environment provides a collaborative way to convert diverse, unstructured information into semantically annotated content that can be combined into new and useful services. We discuss how these ideas have been applied in WubHub, a prototype Web portal with a command-line interface.",
    "keywords": "",
    "released": 2006,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873417244&partnerID=40&md5=4c557a02b423f99609dfb7dd2fd0c1a0",
    "interesting": "-"
  },
  {
    "title": "Improvement of software quality and productivity using development tools",
    "abstract": "Information systems, which successively meet the requirements of on-site management and staff, have become enormous and complicated after many years of modification. To make IT investments efficient, it is essential to reuse current software assets effectively, quickly develop systems, and reduce testing costs. To help customers achieve these goals, Fujitsu provides a systematic development environment called the System Development Architecture & Support facilities (SDAS). This environment covers the entire lifecycle of application development. This paper introduces some systematic development tools for SDAS-based Web application development. Specifically, it introduces Interstage Apworks, which is an integrated development environment based on open standards; the SIMPLIA series of testing support tools; the PROSPECS reverse engineering tool; and the NetCOBOL multi-platform COBOL compiler.",
    "keywords": "",
    "released": 2006,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-33748505438&partnerID=40&md5=750ca36277f5d6289e6b49f462d608c6",
    "interesting": "-"
  },
  {
    "title": "The JBoss integration plug-in for IntelliJ IDEA, part 3",
    "abstract": "This paper is the third in a series of papers that describe a new plug-in for enabling the integration of the IntelliJ IDEA IDE with the JBoss application server. The JBoss plug-in was first conceived and implemented by Martin Fuhrer at Fuhrer Engineering. Part 1 discussed how to download and install the new JBoss plug-in, allowing the JBoss application server to integrate into the IntelliJ IDEA IDE development environment. It then demonstrated how to create a project with EJBs and web modules. Part 2 discussed how to create a session bean in our project. The session bean contained the implementation for the functionality that we wish to expose to the client. This paper continues to build upon our project by describing how to add a servlet for accessing the EJB methods implemented previously, and then how to create an application module for deployment to the JBoss application server.",
    "keywords": "",
    "released": 2006,
    "link": "https://doi.org/10.5381/jot.2006.5.2.c2",
    "interesting": "-"
  },
  {
    "title": "UML 2: A model-driven development tool",
    "abstract": "The Unified Modeling Language® (UML®) industry standard has recently undergone a major upgrade, resulting in a revision called UML 2. The primary motivation for this revision was to make UML better suited to model-driven development™ (MDD™), an approach to software development in which software models play a vital role. This requires a modeling language that is not only highly expressive but also capable of specifying models that are precise and unambiguous. In this overview article, we describe the key developments in UML 2 and the rationale behind them, and we explain how they help meet the needs of MDD. These new capabilities can be grouped into two distinct categories: (1) internal and architectural changes required to support MDD and (2) new modeling features. This paper is a revised version of a Web article, \"Unified Modeling Language Version 2.0,\" which was published on March 21, 2005, by developerWorks®, IBM Corporation. © 2006 IBM.",
    "keywords": "",
    "released": 2006,
    "link": "https://doi.org/10.1147/sj.453.0607",
    "interesting": "-"
  },
  {
    "title": "A methodology for analyzing the temporal evolution of novice programs based on semantic components",
    "abstract": "Empirical studies of novice programming typically rely on code solutions or test responses as the basis of their analyses. While such data can provide insight into novice programming knowledge, they say little about the programming processes in which novices engage. For those interested in improving novice programming environments, a key research question arises: How can we collect and analyze data on novice programming that will enable us (a) to analyze and compare the programming processes promoted by alternative novice programming environments, and (b) ultimately to build better novice programming environments? To address this question, we have collected a large video corpus of novices as they construct code solutions in various versions of ALVIS Live! [17], a novice programming environment. Through detailed post-hoc analyses of our video corpus, we have developed a methodology for compiling the moment-by-moment evolution of novice code solutions. Based on an analysis of a model code solution's key semantic components, our methodology enables researchers to document, on a second-by-second basis, (a) what part of a code solution a programmer is focusing on, and (b) where the semantic feedback provided by the programming environment is helping. Although it is time and labor intensive, our methodology provides researchers with a standard set of data and representations for comparing the programming processes promoted by alternative programming environments. Copyright 2006 ACM.",
    "keywords": "Algorithm visualization; Novice programming environments; Programming process; Semantic components; Video analysis",
    "released": 2006,
    "link": "https://doi.org/10.1145/1151588.1151599",
    "interesting": "-"
  },
  {
    "title": "JavaDON: an open-source expert system shell",
    "abstract": "The paper describes JavaDON, an open-source expert systems shell based on the OBOA framework for developing intelligent systems. The central idea of the JavaDON project was to make an easy-to-use and easy-to-extend tool for building practical expert systems. Since JavaDON is rooted in a sound theoretical framework, it is well-suited for building even complex expert system applications, both stand-alone and Web-based ones. JavaDON knowledge representation scheme supports using multimedia elements along with traditional techniques, such as rules and frames. Another important feature of JavaDON is its capability of saving knowledge bases in XML format (in addition to the shell's native format), thus making them potentially easy to interoperate with other knowledge bases on the Internet. So far, JavaDON has been used to build several practical expert systems, as well as a practical knowledge engineering tool to support both introductory and advanced university courses on expert systems. The paper presents design details of JavaDON, explains its links with the underlying OBOA framework, and shows examples of using JavaDON in expert system development. It also discusses some of the current efforts in extending JavaDON. © 2005 Elsevier Ltd. All rights reserved.",
    "keywords": "Development tools; Expert systems; Graphical user interface; Knowledge base interoperability",
    "released": 2006,
    "link": "https://doi.org/10.1016/j.eswa.2005.09.085",
    "interesting": "-"
  },
  {
    "title": "Teaching students how to work in global software development environments",
    "abstract": "Given that outsourcing has become a fact of life, it is becoming increasingly obvious that we need to ensure that computer science students are taught the necessary skills to cope with global software development. Unfortunately, the enormous amount of time that it takes to coordinate and support such activities can deter even the most devoted educator. This paper describes a course that used a computer supported collaborative tool help teach distributed teams from Turkey and the US how to work together to solve programming problems. The system contains both collaborative tools that support groups, as well as course management software for helping instructors with administrative tasks. Examples of the usage of the system and data collected from the undergraduate computer science course that used the software are presented. Based on that experience, future plans to refine the system for early detection of problem teams, and the advantages of implementing the software as a web service are also discussed. This information is designed to provide support for effective multi-institutional learning courses. © 2006 IEEE.",
    "keywords": "Collaborative learning; Distributed learning; Global software development; Groupware",
    "released": 2006,
    "link": "https://doi.org/10.1109/COLCOM.2006.361849",
    "interesting": "-"
  },
  {
    "title": "Benchmark suites for improving the RDF(s) importers and exporters of ontology development tools",
    "abstract": "Interoperability is the ability of two or more systems to interchange information and to use the information that has been interchanged. Nowadays, interoperability between ontology development tools is low. Therefore, to assess and improve this interoperability, we propose to perform a benchmarking of the interoperability of ontology development tools using RDF(S) as the interchange language. This paper presents, on the one hand, the interoperability benchmarking that is currently in progress in Knowledge Web(1) and, on the other, the benchmark suites defined and used in this benchmarking.",
    "keywords": "",
    "released": 2006,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000238574900011",
    "interesting": "-"
  },
  {
    "title": "A web-based programming environment for LEGO mindstorms robots",
    "abstract": "In this paper, we present briefly an approach that provides simple, inexpensive access to a mobile telerobot in order to facilitate team-based problem solving for introductory programming students.",
    "keywords": "telerobotics; problem solving",
    "released": 2005,
    "link": "https://doi.org/10.1145/1167253.1167333",
    "interesting": "+"
  },
  {
    "title": "WIPE: A programming environment for novices",
    "abstract": "This paper presents an overview of the design principles and the evaluation of a new programming environment, WIPE (Web Integrated Programming Environment), designed specifically to teach novices the fundamentals of programming. The environment is designed for use in secondary education as a first programming course, in order to help students become familiar with the main programming concepts.",
    "keywords": "web-based compiler; secondary education; programming and programming languages; interactive learning environment; e-learning",
    "released": 2005,
    "link": "https://doi.org/10.1145/1067445.1067479",
    "interesting": "+"
  },
  {
    "title": "IDE support for test-driven development and automated grading in both java and c++",
    "abstract": "Students need to learn testing skills, and using test-driven development on assignments is one way to help students learn. We use a flexible automated grading system called Web-CAT to assess student assignments, including the validity and completeness of their own test cases. By building on existing educational plug-ins for Eclipse, and adding our own plug-ins for electronic submission and for unit testing support in C++, we are able to use Eclipse as a portal to all the services our students will need, allowing them to accomplish all their tasks entirely within the IDE, from their project’s inception to its submission and evaluation. Further, we are able to carry students through the transition from Java programming to C++ programming within this same environment.",
    "keywords": "Eclipse IDE; electronic assignment submission; electronic grading; extreme programming; test-driven development; test-first coding",
    "released": 2005,
    "link": "https://doi.org/10.1145/1117696.1117717",
    "interesting": "-"
  },
  {
    "title": "Supporting dynamic software tool integration via Web service-based components",
    "abstract": "Most software engineering tools come with fixed functionality or limited plug-in extension capabilities. Building software development environments that support truly dynamic extension capabilities to incorporate a wide range of additional facilities at run-time has proved to be a very challenging task. We describe a new approach using Web service components to support the dynamic discovery, integration and invocation of remote software tool facilities for JEdit, an open source integrated development environment. In this approach discrete software tool functionality is encapsulated in software \"toolets\", accessed as remote Web service-based components. These toolet services are registered and discovered, and then dynamically integrated and invoked from within the JEdit IDE as required. We describe the architecture of our approach, key design and implementation issues, and illustrate the feasibility of the approach with several prototype toolet components and results of their evaluation.",
    "keywords": "software tool integration; web services; service discovery and integration; integrated development environments",
    "released": 2005,
    "link": "https://doi.org/10.1109/ASWEC.2005.45",
    "interesting": "-"
  },
  {
    "title": "A Web-based PLM system research and implementation in a collaborative product development environment",
    "abstract": "A conceptual PLM system architecture which contains a product modeling framework and an information infrastructure is proposed in this paper. The product modeling framework consists of a product information modeling architecture, a workflow modeling architecture and the extended enterprise resource modeling architecture. A multidisciplinary collaborative design method based on the product modeling framework over Internet is discussed, and a J2EE standards based and multi-agents based information system infrastructure is presented in order to achieve the collaborative product development. Finally, a PLM prototype system is implemented based on B/S scheme and the proposed conceptual PLM system architecture, and primary ideas have been validated",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.1109/ICEBE.2005.20",
    "interesting": "-"
  },
  {
    "title": "Fusion: a system for business users to manage program variability",
    "abstract": "In order to make software components more flexible and reusable, it is desirable to provide business users with facilities to assemble and control them without their needing programming knowledge. This paper describes a fully functional prototype middleware system where variability is externalized so that core applications need not be altered for anticipated changes. In this system, application behavior modification is fast and easy, making this middleware suitable for frequently changing programs.",
    "keywords": "Index Terms- Web site management/development tools; middleware/business logic; specialized application languages; domain-specific architectures; human factors in software design; user interfaces.",
    "released": 2005,
    "link": "https://doi.org/10.1109/TSE.2005.82",
    "interesting": "-"
  },
  {
    "title": "A practical experience on web applications' developing environments",
    "abstract": "Demand for Web applications' is quickly developing. This in turn means a growing needs for deploying high-quality custom applications that provide unique business services. The choice of a developing environment to build these systems or the technology to use depends on many factors. This paper compares several features between J2EE and Zope environments. Both technologies have individual strength and are appropriate in individual contexts. In choosing a development environment for web applications, a criterion is needed to assess the available development technologies. To do this comparison, we have designed a web-based prototype for \"managing research information\" and implemented the prototype in both technologies. We have compared several key features in both technologies including content managements, session handling, safe delegation, security, and testing facilities. The comparison is a base for making an educated choice for a web development environment, both in industry and in academic arena.",
    "keywords": "Content management; J2EE; Web applications; Web development environment; Zope",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883314692&partnerID=40&md5=5bb2aec030c51f3251072bc053a79f92",
    "interesting": "-"
  },
  {
    "title": "Designing web services for business processes through integrated development environments",
    "abstract": "Today's Enterprises and Organizations are facing the problem of Software Integration and the difficulty to efficiently design and implement their Business Processes using cutting-edge Information Technology. The problem investigated in this paper is the creation and design of executable Business Processes using technologies and standards such as XML, Web Services, and Java. Our proposal, the C.O.S.M.O.S. (Cooperation, Orchestration and Semantic Mapping of Services) environment, is an environment that enables the user to create, design and modify executable Business Processes following the BPEL specification, an XML based language for the Orchestration and Choreography of Web Services. C.O.S.M.O.S. environment, attempts to be a complete and easy to use environment for the design of Business Processes. It provides two perspectives for the users: a Manager-oriented interface, that includes a graphical enabled design environment of Business Processes and a Developer-oriented that provides an advanced XML Workflow Editor and functionalities such as validation and deployment of the BPEL Workflow.",
    "keywords": "BPEL; Business Process Modeling; IDE; Software Engineering; Web Services; Workflow; XML",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-23444438348&partnerID=40&md5=12fee1c4dcc7d8587346ba1bc2722c45",
    "interesting": "-"
  },
  {
    "title": "A co-work tool for visual programs",
    "abstract": "Visual programs consist of user interfaces and process logics. Because most visual IDEs(Integrated Development Environment) are utilized by only one developer, many developers can't cooperate simultaneously in one large-scaled visual program to promote the development efficiency. This paper suggests a co-development environment for visual programs through which developers can cooperate with each other in the type of distribution. Developers can maintain the coincidence and the confidence of cooperation through a communication window and a job controller to process the priority of the events that developers make in co-development work. Especially in large-scaled visual program, the suggested environment reduces the burden that developer takes about the heavy development work, and many developers can divide and take the complex and large program modules according to their ability. We hope that the suggested environment can improve the development productivity and efficiency because it can reduce the time and effort for developing user interfaces in visual programs.",
    "keywords": "Co-work; Development tool; User interface; Visual program",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-60749090868&partnerID=40&md5=fce21caaf7988c21b554ea08a911df4e",
    "interesting": "-"
  },
  {
    "title": "An integrated software development environment for Web applications",
    "abstract": "In recent years, the World Wide Web has become an ideal platform for developing Internet applications. World Wide Web service and application engineering is a complex task. Many web applications at present are large-scale and involve hundreds or thousands of web pages and sophisticated interactions with users and databases. Thus, improving the quality of web applications and reducing development costs are important challenges for the Internet industry. One way to resolve the difficulty is to provide web application developers with an integrated development environment. In this paper, 1 propose an efficient methodology and development environment for web application programs. This environment includes a design model to represent data and navigational structure, a modeling language for the notation technique of the design model, and a process model to define development stages. © Springer-Verlag Berlin Heidelberg 2005.",
    "keywords": "",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-33745175514&partnerID=40&md5=a4d02731f7f7febf0292b4152429d033",
    "interesting": "-"
  },
  {
    "title": "Eclipse becomes the dominant Java IDE",
    "abstract": "By making Sun Microsystem's Java more competitive with Microsoft's popular Visual Studio.NET, proponents of the technology set off a battle among several Java IDEs. One contender has been Eclipse, which IBM developed and turned over in 2001 to the nonprofit Eclipse Foundation to manage as an open-source platform. Eclipse has garnered so much support that many industry observers say it is now the key Java-tools player.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.1109/MC.2005.228",
    "interesting": "-"
  },
  {
    "title": "Study of novice programmers using Eclipse and Gild",
    "abstract": "In this paper we discuss a pilot user study that compares the use of two integrated development environments (IDEs), Eclipse and Gild, by novice programmers. Gild is a perspective for Eclipse that is intended to be more suitable for first-year students who are learning how to program in Java. This study focuses on qualitative and quantitative measures; the quantitative measures include: efficiency, effectiveness, satisfaction and understanding. Two statistically significant results are obtained from the satisfaction measure, in particular: the frustration level and the overall level of satisfaction. The mean differences for the remaining measures indicate that Gild was more suitable for novices than Eclipse. Qualitative analysis yields suggestions for improvement for both interfaces and also identifies areas of success. Copyright © 2005 IBM.",
    "keywords": "Integrated development environment; Novice; User study",
    "released": 2005,
    "link": "https://doi.org/10.1145/1117696.1117718",
    "interesting": "-"
  },
  {
    "title": "An innovative tool to easily get usable web sites",
    "abstract": "This paper describes the actual methodologies to develop usable web sites. We consider significant tools to model web sites and pages, and then we propose an innovative approach to create usable web sites rapidly and easily. Our goal has been the inclusion of new methodologies in the web application development process.",
    "keywords": "Colour; Development tool; Fast prototyping; Navigation; Presentation; Web usability",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874956798&partnerID=40&md5=ee44ceb903a5b66df1732bb5ece1932d",
    "interesting": "-"
  },
  {
    "title": "Development of an integrated robotic programming environment",
    "abstract": "The paper presents a new Integrated Development Environment (IDE) targeted specifically for use in Robotics programming. The IDE is based on IBM's Eclipse platform and supports the Python scripting language, using the RADAR language extensions developed by PhD student Geoff Biggs. Player and Stage are used as the robot programming tools. Key issues with existing development processes are identified including the number of different tools that must be managed by the developer, the lack of useful debugging information, and the unsuitability of current debugging methods for coping with real-time systems such as mobile robots. To resolve these issues, extensions were made to the IDE including a proxy server for gathering debugging data, a tool manager for automating menial tasks including running and monitoring tools, and a number of visualisations to show meaningful debugging information. The system was tested with two robot programs and shown to streamline the development process considerably. Tests indicate the system is reliable and stable, barring small issues with 3rd party components.",
    "keywords": "",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855609723&partnerID=40&md5=5ee594c1c01cc2e6887ca24cb4dc535d",
    "interesting": "-"
  },
  {
    "title": "Microsimulation model development environments",
    "abstract": "This paper describes some of the results of an analysis of new software technology, which can be used to develop microsimulation models. Searching for microsimulation software development environment, the author concludes that opportunities of contemporary software technology are not exhausted; Web-based application development could provide better software architecture while fulfilling user requirements. The structure of the paper is as follows. The brief introduction defines microsimulation and categorizes the models used. The next sections focus in detail on two major approaches, database-oriented and web-oriented. The subsequent parts of the paper present two solutions for Web services, J2EE and .NET and discuss their respective merits and disadvantages. A sample model, using database-oriented approach with Web-service and final remarks concludes the paper. The major contribution of the paper is the presentation of new technology and its use for microsimulation. The software solutions discussed can be used for other simulation applications and the software architecture could build the basis of more general simulation software development environments. © 2005, UK Simulation Society. All rights reserved.",
    "keywords": "Microsimulation; Socioeconomic applications; Software development environments Microsimulation software; Web-services",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923856833&partnerID=40&md5=de060002e55b66e6e4930bfd8711c314",
    "interesting": "-"
  },
  {
    "title": "The JBoss integration plug-in for IntelliJ IDEA",
    "abstract": "This paper is the final in a series of papers that describe a new plug-in for enabling the integration of the IntelliJ IDEA IDE with the JBoss application server. The JBoss plug-in was first conceived and implemented by Martin Fuhrer at Fuhrer Engineering. Parts 1, 2 and 3 discussed how to download and install the plug-in, how to create a project containing a web module, a session bean, a servlet, and an application module for deployment to JBoss. This paper discusses deployment and execution, showing how to create a remote deployment method using SSH Transfer, and a run configuration for both local and remote deployment.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.5381/jot.2005.4.9.c2",
    "interesting": "-"
  },
  {
    "title": "MTES: Visual programming environment for teaching and research in image processing",
    "abstract": "In this paper, we present a visual-programming environment for teaching and research referred to as \"MTES\". MTES(Multimedia Education System) is the system designed to support both lecture and laboratory experiment simultaneously in one environment. It provides tools to prepare online teaching materials for the lecture and the experiment. It also provides a suitable teaching environment where lecturers can present the online teaching materials effectively and demonstrate new image processing concepts by showing real examples. In the same teaching environment, students can carry out experiments interactively by following the online instruction prepared by lecturer. In addition to support for the image processing education, MTES is also designed to assist research and application development with visual-programming environment. By supporting both teaching and research, MTES provides an easy bridge between learning and developing applications. © Springer-Verlag Berlin Heidelberg 2005.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.1007/11428831_129",
    "interesting": "-"
  },
  {
    "title": "Integrated development environment for digital image computing and configuration management",
    "abstract": "In this paper, we present a system referred to as \"Hello-Vision.\" Hello-Vision is a software development environment that can be used in conjunction with research and application development in the area of image processing. It is an integrated environment that supports reusable image processing algorithm developments, systematic management of algorithms and related information. Hello-Vision's function is to simplify image processing applications using the algorithms and to provide an ideal environment for the education of practical image processing engineers. Hello-Vision adopts a true object-oriented approach supporting well-separated data classes similar to IUE (Image Understanding Environment) classes. This process allows algorithm to be written by their functions without user interface programming by separating the interface layer from data processing functions. The user-defined functions are easily registered in the online algorithm management systems and treated as a system command. Hello-Vision is equipped with a visual programming environment where a user can easily create image-processing applications by manipulating visual command icons and user-defined function icons that are created automatically when they are registered. Hello-Vision also provides an ideal environment where instructors can register their lecture materials for image processing theory, which allows hands-on experimentation with Hello-Vision through user interaction. © Springer-Verlag Berlin Heidelberg 2005.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.1007/11424925_3",
    "interesting": "-"
  },
  {
    "title": "Cooperative Ontology Development Environment CODE and a demo Semantic Web on Economics",
    "abstract": "Ontology is the backbone of Semantic Web. Ontology has drawn more and more concerns with the research works developing in the Semantic Web. The construction of large-scale ontologies will involve collaborative efforts of multiple developers. In this paper, we give a demonstration of our Cooperative Ontology Development Environment CODE and discuss a demo Semantic Web on Economics. © Springer-Verlag Berlin Heidelberg 2005.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.1007/978-3-540-31849-1_104",
    "interesting": "-"
  },
  {
    "title": "Beating commercial products: Control system office and integrated development environment are the way to go",
    "abstract": "The success of office suites is based on the three fundamentals: consistent look and feel across applications, a common set of data manipulations (navigation, clipboards, undo/redo, copy and paste, find and replace etc) and the ability of different applications to process the same data (a table can be a part of a document in a word processor and a spreadsheet). This article discusses the same fundamentals in the context of control system software and shows that the \"office paradigm\" is relevant to it. To support office-like functions, data beyond raw measured quantities is required: we call this data metadata, and it encompasses - for example - machinereadable information about how different channels are logically organized into parallel hierarchies, how single values can be combined into group displays and how data items are interpreted differently according to the user interface context. We enumerate meta-data, describe how it is uniformly managed behind the scenes by Abeans, and how it enables generic applications such as table application, chart, archive or even IDE, to interoperate seamlessly as parts of an integrated suite.",
    "keywords": "",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899655356&partnerID=40&md5=59bcf081065b1c38fd76da2572b8b480",
    "interesting": "-"
  },
  {
    "title": "The OWL-S editor - A development tool for semantic Web Services",
    "abstract": "The power of Web Service (WS) technology lies in the fact that it establishes a common, vendor-neutral platform for integrating distributed computing applications, in intranets as well as the Internet at large. Semantic Web Services (SWSs) promise to provide solutions to the challenges associated with automated discovery, dynamic composition, enactment, and other tasks associated with managing and using service-based systems. One of the barriers to a wider adoption of SWS technology is the lack of tools for creating SWS specifications. OWL-S is one of the major SWS description languages. This paper presents an OWL-S Editor, whose objective is to allow easy, intuitive OWL-S service development and to provide a variety of special-purpose capabilities to facilitate SWS design. The editor is implemented as a plugin to the Protégé OWL ontology editor, and is being developed as open-source software. © Springer-Verlag Berlin Heidelberg 2005.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.1007/11431053_6",
    "interesting": "-"
  },
  {
    "title": "JQuery: A generic code browser with a declarative configuration language",
    "abstract": "Modern IDEs have an open-ended plugin architecture to allow customizability. However, developing a plugin is costly in terms of effort and expertise required by the customizer. We present a two-pronged approach that allows for open-ended customizations while keeping the customization cost low. First, we explicitly limit the portion of the design space targeted by the configuration mechanism. This reduces customization cost by simplifying the configuration interface. Second, we use a declarative programming language as our configuration language. This facilitates open-ended specification of behavior without burdening the user with operational details. © Springer-Verlag Berlin Heidelberg 2006.",
    "keywords": "Domain-specific language; Integrated development environment; Logic programming; Program database",
    "released": 2005,
    "link": "https://doi.org/10.1007/11603023_7",
    "interesting": "-"
  },
  {
    "title": "The JBoss integration plug-in for the IntelliJ IDEA, Part 2",
    "abstract": "This paper is the second in a series of papers that describe a new plug-in for enabling the integration of the IntelliJ IDEA IDE with the JBoss application server. The JBoss plug-in was first conceived and implemented by Martin Fuhrer at Fuhrer Engineering. Part 1 discussed how to download and install the new JBoss plug-in, allowing the JBoss application server to integrate into the IntelliJ IDEA IDE development environment. It showed how to create a project with EJBs and web modules. This paper continues with our project created in Part 1 by describing how to add a stateless session bean. It is stateless because we are not concerned with remembering values of attributes between successive calls from the client. This paper also demonstrates that our session bean can be either remote (i.e., a bean with a remote interface) or it can be local (a bean with a remote interface). © JOT, 2005.",
    "keywords": "",
    "released": 2005,
    "link": "https://doi.org/10.5381/jot.2005.4.7.c3",
    "interesting": "-"
  },
  {
    "title": "The Assistment Builder: A Rapid Development Tool for ITS",
    "abstract": "Intelligent Tutoring Systems are notoriously costly to construct [1], and require PhD level experience in cognitive science and rule based programming. The goal of this research was to ease the development process for building pseudo-tutors [5], which are ITS constructs that mimic cognitive tutors but are limited in that they only work for a single problem. The Assistment Builder is a system designed to rapidly develop, test, and deploy simple pseudo-tutors. These tutors provide a simple cognitive model based upon a state graph tailored to a specific problem. These tutors offer many of the features of rule-based tutors, but without the expensive creation time. The system simplifies the process of tutor construction to allow users with little or no ITS experience to develop content. The system provides a web-based interface as a means to build and store these simple tutors we have called Assistments. This paper describes our attempt to make the process of developing content easy for teachers. We present some evidence to suggest that these novice users can develop a tutor for a problem in under thirty minutes. © 2005 The authors. All rights reserved.",
    "keywords": "",
    "released": 2005,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952468860&partnerID=40&md5=39e9e97ed791cb7aa8d546d3ef519f18",
    "interesting": "-"
  },
  {
    "title": "View/edit/compile/run Web-based programming environment",
    "abstract": "A Web-based environment has been developed for students to perform C, Java, and shell programming. The environment runs on a Unix server, uses password authentication, and provides each student with separate project subdirectories that cannot be seen by other students. Options are available to view fiks, edit source code, compile, run, run in debug mode, run with output plotted and displayed as a GIF image, display C preprocessor output, display generated assembly code, display optimized assembly code, and insert compiler error messages as comments into the source code. The environment is implemented using a combination of C code, peri, and shell scripts, and is freely available (open source). The source code of the environment itself can be used as examples in an advanced Unix/C programming or security course. The environment has been used successfully in both sophomore and senior-level C programming courses, a graduate Unix/C programming course (C and shell programming), and a senior/graduate computer communications security course (Java programming).",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1109/FIE.2004.1408552",
    "interesting": "+"
  },
  {
    "title": "A/B dashboard: the case for a virtual information systems development environment to support a rad project",
    "abstract": "The impact of digitization on organizational structures and processes is transforming relationships and work practices. The dynamics of the digital economy fuelled by the high rate of innovation in digital technologies demand that firms adopt an equally rapid and responsive information systems development model/paradigm to keep pace. With reference to Rapid Applications Development (RAD), this case study considers the degree to which an iterative and participative information systems development process is amenable to being conducted in a virtual manner. Using participatory action research, this paper investigates the potential for deploying a virtual learning environment as a CASE tool for the development of web-based applications. In this instance the final IT artefact is an operational prototype - the A/B Dashboard. We demonstrate that a virtual information systems development environment can successfully support a RAD/DSDM approach, resolving some of the existing problems associated with RAD.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1109/HICSS.2004.1265630",
    "interesting": "-"
  },
  {
    "title": "Work in progress - An integrated programming environment suitable for distance learning",
    "abstract": "Autonomous Robots are used as a vehicle to learn programming in C and Java, to design neural network controllers, to experiment with Finite State Machines and to explore operating system concepts. Our environment is deployed as (i) physical robots (ii) multi-robot simulation written as a Java application (iii) distributed multi-robot simulation using client-server architecture running on the Web. This paper details the design rationale, implementation, deployment and reports evaluation of the work to date. The software is freely available from the author at c.price@worc.ac.uk. © 2004 IEEE.",
    "keywords": "Computer Science Education; Java; Real-Time Operating Systems",
    "released": 2004,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-21644476341&partnerID=40&md5=baabf8d0ae3f3ef12c49739be4a24621",
    "interesting": "-"
  },
  {
    "title": "Separation of concerns: A web application architecture framework",
    "abstract": "Architecture frameworks have been extensively developed and described within the literature. These frameworks typically support and guide organisations during system planning, design, building, deployment and maintenance. Their main pupose is to provide clarity to the different modelling perspectives, abstractions, and domains of consideration within system development. In dpoing so they allow improved clarity with regard to the connections between the different models, and the selection of models tht are most likely to capture salient features of the system. In this paper we present an Architectural Framework which takes into account the specific characteristics of web systems. The framework is based around a two dimensional matrix. One dimension separates the concerns of different participants of the web system into perspectives. The second dimension classifies each perspective into development abstractions: structure (what), behaviour (how), location (where) and pattern. The framework is illustrated through examples from the development of a commercial web application.",
    "keywords": "Architecture classification; Web architecture; Web architecture framework; Web development tools; Web engineering; Web information system; Web management; Web modelling",
    "released": 2004,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-25644445937&partnerID=40&md5=6917b4c9540e1012d8c6a0793160bbff",
    "interesting": "-"
  },
  {
    "title": "Formalizing the user's context to support user interfaces for integrated mathematical environments",
    "abstract": "This paper describes the several user-interface features for interactive theorem provers. Many of these features mimic functionality that already exists, and have great utility, in modern interactive development environments (IDEs). A formal kind theoretic model of a user's context is also presented. This model is used to formally describe the structure, behavior, and customization of the features. The functionality presented include browsers for basic mathematical constructs (declarations, theories, types, proofs, etc.), quick access to constructs definitions and uses (a short-cut sidebar, menus, or implicit hyperlinks), built-in contextual help, context- and type-aware completion and visual representation (expanding and collapsing structured elements of specifications, proof terms, and sequents), the graphical representation of language elements, and a user-extensible, type-aware pretty-printer. Research opportunities in interface design based upon the formal model are also identified and discussed. These features have been added to the PVS theorem prover as a proof-of-concept and will be available in its next major release. © 2004 Elsevier B.V. All rights reserved.",
    "keywords": "Interactive development environment; Interactive theorem prover; PVS theorem prover",
    "released": 2004,
    "link": "https://doi.org/10.1016/j.entcs.2004.09.015",
    "interesting": "-"
  },
  {
    "title": "A development environment for customer-oriented Internet business: eBizBench",
    "abstract": "An important challenge in the age of Internet business is the proper alignment of customers' needs with the business system. In order to improve an Internet business system according to customers' needs continuously, reuse of design results is of particular importance. This paper proposes a development environment, called eBizBench, which provides support for this alignment and reusability. The eBizBench includes seven functions: (1) project management, (2) customer analysis, (3) value analysis, (4) web design, (5) implementation design, (6) repository management, and (7) repository. The eBizBench can help develop and maintain Internet business systems in a systematic fashion. The repository is useful for the conversion of design results among development environments. A real-life web site is illustrated to demonstrate the usefulness of the eBizBench. © 2003 Elsevier Inc. All rights reserved.",
    "keywords": "Customer orientation; Development environment; Internet business; Repository; Scenario",
    "released": 2004,
    "link": "https://doi.org/10.1016/S0164-1212(03)00218-8",
    "interesting": "-"
  },
  {
    "title": "Accessibility and the next generation of web development tools introduction to the special thematic session",
    "abstract": "This session introduces a series of papers that present new perspectives to support the industry in its quest to support a wider variety of users. Through them, we will learn how different research groups are approaching the topic, and will try to understand whether the research arena is tackling in a supportive way the needs of the industry. © Springer-Verlag Berlin Heidelberg 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-27817-7_44",
    "interesting": "-"
  },
  {
    "title": "Web interface for image processing algorithms",
    "abstract": "In this contribution we present an interface for image processing algorithms that has been made recently available on the Internet (http://nibbler.uni-koblenz.de). First, we show its usefulness compared to some other existing products. After a description of its architecture, its main features are then presented: the particularity of the user management, its image database, its interface, and its original quarantine system. We finally present the result of an evaluation performed by students in image processing.",
    "keywords": "Interface; Internet; Programming environment",
    "released": 2004,
    "link": "https://doi.org/10.1117/12.526787",
    "interesting": "-"
  },
  {
    "title": "The Concern Manipulation Environment [OOPSLA/GPCE]",
    "abstract": "The Concern Manipulation Environment (CME) aims to provide a set of open, extensible components and a set of tools that promote aspect-oriented software development (AOSD) throughout the software lifecycle. It has two main goals: □ To provide an open, integrated development environment (IDE) to enable software engineers to use AOSD techniques throughout the software lifecycle, and to allow them to use different AOSD approaches in an integrated manner. □ To promote the rapid development of new tools supporting AOSD at any stage of the software lifecycle, and to serve as an integrating platform for such tools, facilitating development and experimentation with new AOSD approaches. This demonstration will highlight a number of tools and components that are useful to software developers and to AOSD tool providers and researchers. Tools for software developers include ones that allow developers to identify, model and visualize concerns, aspects and relationships in their software, covering software artifacts of any type, including both code and non-code artifacts, and including latent concerns or aspects that were not separated in the artifacts; that enable flexible queries over software; and that compose/integrate aspects and other concerns. For AOSD tool providers and researchers, the demonstration will describe some of the CME's support for integration of tools and approaches within the environment, highlighting the integration of Java, AspectJ and Ant artifacts within the CME, and how to use the CME's extensible components to create new AOSD tools or prototypes rapidly.",
    "keywords": "Aspect-oriented software development (AOSD); Concern modeling; Eclipse open source; Extraction; Full-lifecycle software engineering; Integrated development environment; Integration; Separation of concern; Software composition; Software design; Software query",
    "released": 2004,
    "link": "https://doi.org/10.1145/1028664.1028681",
    "interesting": "-"
  },
  {
    "title": "A practical experience in workspace separation for developing multiple storefronts on customized commerce engines",
    "abstract": "In this paper, we describe our experience in separating workspaces, using the IBM VisualAge for Java development tool, for multiple web storefronts development for several major IBM public and private commerce sites. There was a need to create multiple workspaces since different storefronts may be developed at the same time. In addition, we wanted to keep the completed software packages for compatibility checking. Instead of tuning the current program setting to a desired mixed-version environment for each project, we generate a dedicated workspace by applying dependency analysis. New icons are created to conveniently invoke the development tool under different software packages and workspaces. We also present a systematic approach to facilitate the generation of a plan with instruction steps to produce new workspaces for their dedicated and required resources. © 2003 Elsevier Inc. All rights reserved.",
    "keywords": "Commerce engines; Dependency analysis; ECommerce; Integrated development environment; Software development; Web storefronts; Workspace separation",
    "released": 2004,
    "link": "https://doi.org/10.1016/S0164-1212(03)00243-7",
    "interesting": "-"
  },
  {
    "title": "An object-oriented Petri Nets based integrated development environment for grid-based applications",
    "abstract": "The Object-Oriented Petri Nets (OOPN) based integrated solution to a grid-based application system modeling and enacting is proposed in this paper for simplifying designs and developments of the grid-based applications. An Integrated Development Environment is also provided to support the methodology proposed. Visual modeling to the system can be made by using OOPN to give a reliable system structure. Computing resources can be dispatched reasonably in terms of basic services of a grid-computing platform. Since the user requirement described in OOPN is an operational system requirement, as soon as the user creates the requirement model in OOPN, the grid-based application program can be generated automatically and executed actually on a grid system. The safe and reliable system structure can be obtained after getting through the deadlock detection. © Springer-Verlag Berlin Heidelberg 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-24679-4_137",
    "interesting": "-"
  },
  {
    "title": "Implementing Coloured Petri Nets using a functional programming language",
    "abstract": "Coloured Petri Nets (CPNs) are a graphically oriented modelling language for concurrent systems based on Petri Nets and the functional programming language Standard ML. Petri Nets provide the primitives for modelling concurrency and synchronisation. Standard ML provides the primitives for modelling data manipulation and for creating compact and parameterisable CPN models. Functional programming and Standard ML have played a major role in the development of CPNs and the CPN computer tools supporting modelling, simulation, verification, and performance analysis of concurrent systems. At the modelling language level, Standard ML has extended Petri Nets with the practical expressiveness required for modelling systems of the size and complexity found in typical industrial projects. At the implementation level, Standard ML has been used to implement the formal semantics of CPNs that provide the theoretical foundation of the CPN computer tools. This paper provides an overview of how functional programming and Standard ML are applied in the CPN modelling language and the supporting computer tools. We give a detailed presentation of the key algorithms and techniques used for implementing the formal semantics of CPNs, and we survey a number of case studies where CPNs have been used for the design and analysis of systems. We also demonstrate how the use of a Standard ML programming environment has allowed Petri Nets to be used for the implementation of systems.",
    "keywords": "Coloured Petri Nets; Distributed and concurrent computation; High-level Petri Nets; Implementation techniques; Petri Nets; Programming environments and tools",
    "released": 2004,
    "link": "https://doi.org/10.1023/B:LISP.0000029445.29210.ca",
    "interesting": "-"
  },
  {
    "title": "Unanticipated integration of development tools using the classification model",
    "abstract": "The increasing complexity of software development spawns lots of specialised tools to edit code, employ UML schemes, integrate documentation, and so on. The problem is that the tool builders themselves are responsible for making their tools interoperable with other tools or development environments. Because they cannot anticipate all other tools they can integrate with, a lot of tools cannot co-operate. This paper introduces the classification model, a lightweight integration medium that enables unrelated tools that were not meant to be integrated to cooperate easily. Moreover, the tool integration is done by a tool integrator, and not by the tool builder. To validate this claim, we show how to integrate several third-party tools using the classification model, and how it forms the foundation for the StarBrowser, a Smalltalk browser integrating different tools. © 2003 Elsevier Ltd. All rights reserved.",
    "keywords": "Development environments; Software classifications; Tool integration",
    "released": 2004,
    "link": "https://doi.org/10.1016/j.cl.2003.08.003",
    "interesting": "-"
  },
  {
    "title": "Example centric programming",
    "abstract": "Programmers tend to understand programs by thinking of concrete examples. Example Centric Programming seeks to add IDE support for examples throughout the process of programming. Instead of programmers interpreting examples in their head, the examples are written down and the IDE interprets them automatically. Advanced UI techniques are used to present the results closely integrated with the code. Traditionally distinct programming tools (the editor, Read-Eval-Print-Loop, debugger, and test runner) are unified into a single tool that might be called an example-enlightened editor. This is expected to benefit a wide spectrum of programming activities, for both novice and experienced programmers. Some novel methods for testing and development are made possible. In the longer term, example centrism has implications for the design of future programming languages. A prototype has been implemented for Java in Eclipse.",
    "keywords": "Debugging; Eclipse; Examples; Integrated development environment; Unit testing",
    "released": 2004,
    "link": "https://doi.org/10.1145/1028664.1028713",
    "interesting": "-"
  },
  {
    "title": "Agent-based web services framework and development environment",
    "abstract": "The current Web services technologies have not exploited sufficient semantics and approaches to dynamic service-oriented operations in open environments. This paper argues that such operations can be realized through agent-oriented interaction approaches. The key challenge is to develop an integration framework for the two paradigms, agent- and service-oriented, in a way that capitalizes on their individual strengths. This paper proposes the notion of agent-based Web services (AWS). We address several critical issues, including the appropriate architectural framework and the structure of its main elements (agent-based Web services), their meta-model, supporting technologies, integration method, and implementation approach. An integrated development environment for this framework called SOAStudio has been developed and tested by implementing a case study of a reverse auction e-marketplace.",
    "keywords": "Agent-based web services; E-marketplaces; Knowledge representation; Semantic description; Software agents; Web services",
    "released": 2004,
    "link": "https://doi.org/10.1111/j.0824-7935.2004.00260.x",
    "interesting": "-"
  },
  {
    "title": "New web application development tool and its MDA-based support methodology",
    "abstract": "Web applications are ubiquitous on the Internet, and almost every type of business now needs to be able to quickly develop their own Web applications. This paper introduces a technology developed by Fujitsu that reduces the development period for Web applications and also improves their quality. The paper discusses a development style that enables iterative refinement of a specification and specification checking with customers.",
    "keywords": "",
    "released": 2004,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-3142687096&partnerID=40&md5=1ff6aa919024e5883d63285c98749cfc",
    "interesting": "-"
  },
  {
    "title": "The Protégé OWL Plugin: An Open Development Environment for Semantic Web Applications",
    "abstract": "We introduce the OWL Plugin, a Semantic Web extension of the Protégé ontology development platform. The OWL Plugin can be used to edit ontologies in the Web Ontology Language (OWL), to access description logic reasoners, and to acquire instances for semantic markup. In many of these features, the OWL Plugin has created and facilitated new practices for building Semantic Web contents, often driven by the needs of and feedback from our users. Furthermore, Protégé's flexible open-source platform means that it is easy to integrate customtailored components to build real-world applications. This document describes the architecture of the OWL Plugin, walks through its most important features, and discusses some of our design decisions. © Springer-Verlag 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-30475-3_17",
    "interesting": "-"
  },
  {
    "title": "Research on user programming environment in grid",
    "abstract": "Principal among the technical obstacles when using the grid environment is usability. Owing to the inherently complex, programs in grid will reflect some of the complexity. To make grid resources useful and accessible effectively to the users, as we think, it requires new software or environment to build and program applications. The goal of the user programming environment of Vega Grid is to simplify the programming of the grid in the same way that the Web simplified information sharing over the Internet. To the end, it is easier for ordinary users to develop, execute, and tune applications on the grid. In this paper, we firstly analyse the properties and capabilities grid programming tools should possess; and then describe our research on end-user programming environment when developing Vega Grid. We are now going to further develop our Grid End-user Programming Environment prototype. © Springer-Verlag Berlin Heidelberg 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-24679-4_132",
    "interesting": "-"
  },
  {
    "title": "A GUI for Jess",
    "abstract": "The paper describes JessGUI, a graphical user interface developed on top of the Jess expert system shell. The central idea of the JessGUI project was to make building, revising, updating, and testing Jess-based expert systems easier, more flexible, and more user friendly. There are many other expert system building tools providing a rich and comfortable integrated development environment to expert system builders. However, they are all either commercial or proprietary products. Jess and JessGUI are open-source freeware, and yet they are well suited for building even complex expert system applications, both stand-alone and Web-based ones. An important feature of JessGUI is its capability of saving knowledge bases in XML format (in addition to the original Jess format), thus making them potentially easy to interoperate with other knowledge bases on the Internet. Jess and JessGUI are also used as practical knowledge engineering tools to support both introductory and advanced university courses on expert systems. The paper presents design details of JessGUI, explains its links with the underlying Jess knowledge representation and reasoning tools, and shows examples of using JessGUI in expert system development. It also discusses some of the current efforts in extending Jess/JessGUI in order to provide intelligent features originally not supported in Jess. © 2004 Elsevier Ltd. All rights reserved.",
    "keywords": "Development tools; Expert systems; Graphical user interface; Knowledge base interoperability",
    "released": 2004,
    "link": "https://doi.org/10.1016/j.eswa.2003.12.012",
    "interesting": "-"
  },
  {
    "title": "An extensible editor and simulation engine for petri nets: renew",
    "abstract": "Renew is a computer tool that supports the development and execution of object-oriented Petri nets, which include net instances, synchronous channels, and seamless Java integration for easy modelling. Renew is available free of charge including the Java source code. Due to the growing application area more and more requirements had to be fulfilled by the tool set. Therefore, the architecture of the tool has been refactored to gain more flexibility. Now new features allow for plug-ins on the level of concepts (net formalisms) and on the level of applications (e.g. workflow or agents). © Springer-Verlag 2004.",
    "keywords": "Architecture; High-level petri nets; Integrated development environment; Nets-within-nets; Reference nets; Renew, plug-in; Tool",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-27793-4_29",
    "interesting": "-"
  },
  {
    "title": "The GOPCSD Tool: An Integrated Development Environment for Process Control Requirements and Design",
    "abstract": "The GOPCSD (Goal Oriented Process Control Systems Design) tool is an integrated environment, where the process control systems engineer can construct, import, check, reason about, modify, validate requirements specifications and generate in the B specification language a formal specification of such process control requirements. Borrowing from the KAOS method, the GOPCSD tool adopts the goal-oriented hierarchy concept to enable easy tracing of the user needs to the requirements level, as well as the requirements to the design specification level. The tool offers a library and formal and informal checks and tests to aid correction and enhancement of the requirements; in addition, the normal systems engineer can use the tool effectively and automatically generate a B formal specification, thus not demanding a high-level of knowledge about the sophisticated mathematics supporting formal methods like B. © Springer-Verlag 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-24721-0_19",
    "interesting": "-"
  },
  {
    "title": "Model-driven agent-based web services IDE",
    "abstract": "Web services have not exploited sufficient semantics and approaches to dynamic service-oriented operations. Software agents have been developed for these operations. Current efforts on integrating Web services and agents are predominantly concerned with enabling the agents in existing systems to request, provide or broker Web services. This paper presents the notion of agentbased Web services (AWS) and describes an integration framework that utilizes software agents' model to construct semantic and dynamic Web services. Essential concerns about the integration have been addressed. Basic AWS meta model and model-driven integrated development environment (IDE) have been developed. The IDE has been evaluated by a case study of an e-MarketpIace service, reverse auction. © Springer-Verlag 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-30466-1_47",
    "interesting": "-"
  },
  {
    "title": "Cadena: An integrated development environment for analysis, synthesis, and verification of component-based systems",
    "abstract": "This tool paper gives an overview of Cadena - an integrated environment for building and modeling systems built using the CORBA Component Model (COM). Cadena provides facilities for defining component types using CCM IDL, specifying dependency information and transition system semantics for these types, assembling systems from CCM components, visualizing various dependence relationships between components, specifying and verifying correctness properties of models of CCM systems derived from CCM IDL, component assembly information, and Cadena specifications, and producing CORBA stubs and skeletons implemented in Java. Cadena has been applied to build applications in Boeing's Bold Stroke framework for avionics mission-control systems. Cadena is implemented in IBM's Eclipse open-source IDE and is freely available. © Springer-Verlag 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-24721-0_11",
    "interesting": "-"
  },
  {
    "title": "A combined runtime environment and web-based development environment for web application engineering",
    "abstract": "In the last 5 years, server side application server technology became very popular. The two most popular, .NET and J2EE have a large mindshare in the commercial world. Application servers have raised the productivity of server side web developers. In this paper we give a short overview of the history of application servers, and try to answer the question: what options or features would raise the productivity even more? While building commercial websites at 〈GX〉, we found out that that a combined web-based development environment and persistent runtime environment raised our productivity, even compared to .NET or J2EE environments. In this paper we describe such a system built at 〈GX〉, which we called a WRDE (Web-based Runtime and Development Environment), and show the strength and weaknesses of this approach. © Springer-Verlag 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-25975-6_23",
    "interesting": "-"
  },
  {
    "title": "Integrated service component development tool on web services",
    "abstract": "The web services based on the HTTP protocol and XML are the efficient way to integrate distributed applications on the Internet. The web services contain SOAP, WSDL and UDDI standard, and various technologies related to them are researched now. In this paper, we design and implement an efficient integrated development tool for web services components. Generally a structure of web service components is constructed by combining other components closely. For this, it may be required the efficient mechanism during design of service components. Therefore we propose an integrated model of the functions required and some composition techniques of service components. Then we develop the integrated service component development tool. This automatic tool provides UML design on the GUI and includes some procedures that are creation and registration of WSDL document for accessing the web service component efficiently and that create wrapper class composing with the other services. As a result, this tool will provide the opportunity of faster and stable component development.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-30501-9_166",
    "interesting": "-"
  },
  {
    "title": "Integrating the soot compiler infrastructure into an IDE",
    "abstract": "This paper presents the integration of Soot, a byte-code analysis and transformation framework, with an integrated development environment (IDE), Eclipse. Such an integrated toolkit is useful for both the compiler developer, to aid in understanding and debugging new analyses, and also for the end-user of the IDE, to aid in program understanding by exposing semantic information gathered by the advanced compiler analyses. The paper discusses these advantages and provides concrete examples of its usefulness. There are several major challenges to overcome in developing the integrated toolkit, and the paper discusses three major challenges and the solutions to those challenges. An overview of Soot and the integrated toolkit is given, followed by a more detailed discussion of the fundamental components. The paper concludes with several illustrative examples of using the integrated toolkit along with a discussion of future plans and research. © Springer-Verlag 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-24723-4_19",
    "interesting": "-"
  },
  {
    "title": "A grid middleware for aggregating scientific computing libraries and parallel programming environments",
    "abstract": "Grids collect the geographically distributed heterogeneous resources and use their aggregated power to solve large-scale scientific problems. In order to aggregate scientific computing libraries and parallel programming environments, a Grid computing agent is introduced. The agent acts as the middleware of grid computing. It coordinates several parallel programming environments to support the heterogeneous parallel computing and integrates scientific computing libraries to deliver the efficient solution of large problems. The agent consists of four modules: (1) parallel compilation module for compiling, debugging, and distributing codes. (2) parallel execution module for resource scheduling, application program execution and result redirection. (3) scientific computing module as a graphical user interface which is implemented by integrating Matlab and NetSolve [1]. (4) resource management module providing a single system image for the whole system. Based on the agent, a web portal is developed which provides a uniform service entry for end users. This approach improves the system usability significantly. © Springer-Verlag Berlin Heidelberg 2004.",
    "keywords": "",
    "released": 2004,
    "link": "https://doi.org/10.1007/978-3-540-24655-8_73",
    "interesting": "-"
  },
  {
    "title": "The protege OWL plugin: An open development environment for semantic web applications",
    "abstract": "We introduce the OWL Plugin, a Semantic Web extension of the Protege ontology development platform. The OWL Plugin can be used to edit ontologies in the Web Ontology Language (OWL), to access description logic reasoners, and to acquire instances for semantic markup. In many of these features, the OWL Plugin has created and facilitated new practices for building Semantic Web contents, often driven by the needs of and feedback from our users. Furthermore, Protege’s flexible open-source platform means that it is easy to integrate custom-tailored components to build real-world applications. This document describes the architecture of the OWL Plugin, walks through its most important features, and discusses some of our design decisions.",
    "keywords": "",
    "released": 2004,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000225767000017",
    "interesting": "-"
  },
  {
    "title": "Accessibility and the next generation of web development tools - introduction to the special thematic session",
    "abstract": "This session introduces a series of papers that present new perspectives to support the industry in its quest to support a wider variety of users. Through them, we will learn how different research groups are approaching the topic, and will try to understand whether the research arena is tackling in a supportive way the needs of the industry.",
    "keywords": "",
    "released": 2004,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000222635100044",
    "interesting": "-"
  },
  {
    "title": "A visual programming environment for device independent generation of user interfaces",
    "abstract": "The promise of information anytime, anywhere has become a reality. Today, it is possible to access information through multiple kinds of devices. However, the design of user interfaces for such devices is restricted to the use of specific adhoc programming languages that may vary from one device to the other. In this sense, the existence of generic programming languages for creating device-independent user interfaces is becoming a strong necessity. One emerging approach to device independent developments require the construction of generic vocabularies for transcoding into specific target codes for web browsers, PDAs, voice systems, mobile phones, etc. In this work, we present an authoring tool for designing generic user interfaces with automatic transcoding to multiple target languages. The tool is a visual programming environment with drag and drop generic widgets created in UIML and transcoded into VoiceXML, J2ME, HTML and WML languages. This tool takes advantage of the UIML language and visual programming paradigms for providing flexibility, consistency and decrease in development time.",
    "keywords": "J2ME; UIML; VXML; WML; XSLT; generic vocabulary; visual programming",
    "released": 2003,
    "link": "https://doi.org/10.1145/944519.944526",
    "interesting": "-"
  },
  {
    "title": "Design of a development environment for Web-based asynchronous and synchronous integrated groupware systems",
    "abstract": "Asynchronous and asynchronous integrated multimedia conferencing system ASSIST aims for corresponding to both of realtime conferences and non-realtime conferences. Especially, it is designed for effective information sharing by storing realtime conferencing information including multimedia information such as video and audio, and by making relation to conferencing items and information for asynchronous groupware tools such as schedule/task management, e-mail, and BBS. It is significant to construct efficient development environment for ASSIST, because it requires much effort to build this kind of systems each time in compliance with various purposes or display devices. We have designed a development environment for it and developed the prototype. The prototype system is currently focused on the implementation of facilities for asynchronous type groupware, and it makes developers possible to display tables of databases with sortable links for each field into Web browser by writing only a few line statements. In addition, we have considered integration methods for asynchronous and synchronous type Web-based groupware, applying architecture of we b-based slide sharing tool which we have already implemented. In this paper, we describe the design of a development environment for Web-based asynchronous and synchronous integrated groupware systems.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1109/ICDCSW.2003.1203616",
    "interesting": "-"
  },
  {
    "title": "A language and task-based taxonomy of programming environments",
    "abstract": "Standard desktop computer applications are becoming increasingly sophisticated, allowing competent users to gain greater levels of efficiency through powerful capabilities. Examples are wide ranging - from simple tailoring of Web-browsers so that frequently used links appear on the toolbar, to writing code to customize the behaviour of a word processor. These interface features promise benefits of end-user programming to those who can access them. To help people access these features, many programming environments have been developed to make programming more accessible. Despite this plethora of developmental research, there has been surprisingly little analytical work in characterising and comparing the capabilities of the environments. This paper presents a methodological analysis of programming environments - particularly educational ones - to shine light on how different languages are used to support three fundamental programming activities. The analysis reveals how programming environments use different languages for the three tasks. We discover that programming environments can be more usable by displaying multiple languages for program representation, but only displaying multiple representations risks creating three cognitive gulfs. To avoid these gulfs, our taxonomy describes why every representation must be editable. Our taxonomy also describes why all languages should be animated when a program is executed. We intend this taxonomy and analysis to be useful for anyone who is building or evaluating a programming environment.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1109/HCC.2003.1260227",
    "interesting": "-"
  },
  {
    "title": "VMSDT: a device independent mobile service development tool",
    "abstract": "Mobile commerce has attracted increasingly attention recently and Web based service plays more and more important role in the future. However, many problems need to be solved when building this kind of service. In that, device diversity is the most troublesome one. In this article, we introduce a project called VMSDT, which provides a device independent usual development environment to construct Web-based mobile service. It provides solutions for the diversity of device language. It stresses on the extensibility not only in visual design and result file conversion. In this article, we first analyze design issues resulted from the diversity of device language and introduce related works. Then, we present the system architecture of this tool and discuss the implementation strategies and algorithms of the two core components IEE and converter in detail. In the end, we draw a conclusion and specify the future work.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1109/PIMRC.2003.1260387",
    "interesting": "-"
  },
  {
    "title": "iStuff: A physical user interface toolkit for ubiquitous computing environments",
    "abstract": "The iStuff toolkit of physical devices, and the flexible software infrastructure to support it, were designed to simplify the exploration of novel interaction techniques in the post-desktop era of multiple users, devices, systems and applications collaborating in an interactive environment. The toolkit leverages an existing interactive workspace infrastructure, making it lightweight and platform independent. The supporting software framework includes a dynamically configurable intermediary to simplify the mapping of devices to applications. We describe the iStuff architecture and provide several examples of iStuff, organized into a design space of ubiquitous computing interaction components. The main contribution is a physical toolkit for distributed, heterogeneous environments with run-time retargetable device data flow. We conclude with some in-sights and experiences derived from using this toolkit and framework to prototype experimental interaction techniques for ubiquitous computing environments.",
    "keywords": "Development tools; Input and interaction technologies; Intermediation; Programming environments; Prototyping; Tangible user interfaces; Ubiquitous computing; User interface toolkits; Wireless devices",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0038713808&partnerID=40&md5=def24d328a166d841bd0a0e8d48ccd0b",
    "interesting": "-"
  },
  {
    "title": "Medulio: Development Environment to Create Content-Based Image Retrieval Systems",
    "abstract": "The current need for systems searching for images by visual features is going rise to a new research area. Traditionally, the image retrieval systems proposed in the literature are closed-like systems, facing a specific application. This paper introduces a new open architecture for image retrieval. This architecture, known as Medulio, is a tool to design content-based image retrieval systems. This new architecture assists in the design of scalable and modular systems. In addition, Medulio has the ability to deal with different kinds of image feature extractors, retrieval techniques, user interfaces and several databases.",
    "keywords": "Image Features; Image Indexer; Image Retrieval System",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-1542433848&partnerID=40&md5=1123ae9a74f2c45740c3baa60df03b0e",
    "interesting": "-"
  },
  {
    "title": "Repositories for CS Courses - An Evolutionary Tale",
    "abstract": "This paper describes a simple Unix-based repository that supports programming intensive courses. Initially motivated by the need to capture sample artifacts for the capstone course sequence, the repository has evolved to support program submission, on-line testing, and automated program grading. Repository features enforce naming conventions, assignment due dates, while supporting the use of Unix in programming classes. The repository also facilitates consistent on-line program grading along with detailed capture of program compilation and execution. Repository utilities are provided to support first-time adoption, for archiving repositories from past terms, and for establishing repositories for a new academic term. Results from the transfer of the technology to first-time adopters are presented.",
    "keywords": "Programming environment; Repository; Technology transfer",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-6344282531&partnerID=40&md5=a6e2e98624303168f4c76bb390969de1",
    "interesting": "-"
  },
  {
    "title": "Borland Delphi Studio: New development tools bundled with RAD system",
    "abstract": "The features of version 7 of Borland's Delphi rapid application development (RAD) system are discussed. The version, named Delphi 7 Studio, introduces development tools for Microsoft Visual Studio .NET. The Enterprise version includes enhanced web development tools, such as DataSnap, WebSnap, and IntraWeb. Its visual modeling tool is based on Universal Modeling Language (UML) and the RAD Integrated Development Environment (IDE) is utilized for program coding and designing purposes.",
    "keywords": "",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0347409130&partnerID=40&md5=a2cacaaeeb53bd1f91d64039c69a503b",
    "interesting": "-"
  },
  {
    "title": "An Integrated Ontology Development Environment for Data Extraction",
    "abstract": "Data extraction is a necessary technology to deal with the huge and growing collection of unstructured and semistructured information available on the World Wide Web. Ontology-based data extraction is a robust approach, but the construction of ontologies is a technical task requiring the services of a human expert. We present a Java-based tool for the graphical creation and testing of data extraction ontologies. This tool leverages standards such as Java and XML to provide a portable, extensible, maintainable, feature-rich environment. This tool reduces the burden on expert ontology developers and simplifies the task of ontology creation. © 2003 Gesellschaft fur Informatik (GI). All rights reserved.",
    "keywords": "",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85134479332&partnerID=40&md5=4e478d3c036e948ecb42af72d671cef9",
    "interesting": "-"
  },
  {
    "title": "T-Clipse: An integrated development environment for two-level grammar",
    "abstract": "T-Clipse is an Integrated Development Environment (IDE) using Eclipse developed for Two-Level Grammar (TLG), a high-level formal specification language. In our research, given a programming language, TLG is used to specify the syntax and semantics of the language to generate an interpreter for that language. This IDE provides a user-friendly environment for editing and navigation of TLG source codes, as well as parsing and error tracing at the source code level and interpreter generation for programming languages. To build this IDE, we leveraged the extension power of plug-ins in Eclipse as well as a TLG parser prebuilt from an existing lexical analyzer generator and parser generator.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1145/965660.965679",
    "interesting": "-"
  },
  {
    "title": "An Object Oriented Simulation Model for Assigning Browser Clients to Servers",
    "abstract": "Object Oriented Programming is a design and programming discipline that focuses on the objects that make up the system rather than on the overall function of the system. This paper concerns a simulation application on using C++ and Sim [4], a C++ library for discrete event simulation. The functionality of the library is comparable to the simulation features found in Simula [5]. The application domain that we consider is the assignment of internet (browser) clients to web servers in a replicated server configuration. Our focus is on modeling existing algorithms [6] and we do not propose any new algorithms in this paper. © PDCS 2003. All rights reserved.",
    "keywords": "Assignment; Modeling; Object orientation; Programming environments; Simulation",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133167160&partnerID=40&md5=2beba89bcc15711697ce672746acb236",
    "interesting": "-"
  },
  {
    "title": "Content Engineering Agent: A TBL-Based E-Course Development Tool with TQM",
    "abstract": "With the advance in Internet technology, “e-learning” becomes an alternative means of learning and teaching, and is currently an active research topic in both IT and education professionals. However, to make “e-learning” an effective learning mode, besides technology, the issue of pedagogy and quality control are equally important. Most of the existing e-learning platforms and tools usually focus on the technology aspect without much investigation on the pedagogical issues and the quality control on the e-learning material. In fact, there is still a big gap between pedagogy and technology. The SPACE Online Universal Learning (SOUL) platform is designed to fill this gap and provide an effective e-Learning platform for e-course providers and students. In particular, the content engineering agent of the platform is designed for e-course development, which is based on the Task-Based Learning (TBL) curriculum development framework and is incorporated with the concept of Total Quality Management (TQM), a well-known technique in quality control. In this paper, we discuss the details of this content engineering agent and show how TBL and TQM are incorporated in the agent. As a remark, the content engineering agent has already been integrated in the SOUL platform, which is being used by more than 17,000 students and teachers. A preliminary evaluation on the usefulness of the Content Engineering agent has been performed and the result is positive. © 2003, IGI Global. All rights reserved.",
    "keywords": "e-learning; task-based learning; total quality management",
    "released": 2003,
    "link": "https://doi.org/10.4018/jdet.2003040104",
    "interesting": "-"
  },
  {
    "title": "A demonstration of JPie: An environment for live software construction in Java",
    "abstract": "JPie is a tightly integrated development environment supporting live object-oriented software construction in Java. JPie embodies the notion of a dynamic class whose signature and implementation can be modified at run time, with changes taking effect immediately upon existing instances of the class. The result is complete elimination of the edit-compile-test cycle. JPie users create and modify class definitions through direct manipulation of visual representations of program abstractions. This support is provided without modification of the language or run-time system. In this demonstration, we illustrate central features of JPie through the construction of a sample application. These include dynamic declaration of instance variables and methods, dynamic modification of method bodies and threads, dynamic user interface construction and event handling, and on-the-fly exception handling in JPie's integrated thread-oriented debugger.",
    "keywords": "Direct manipulation; Dynamic classes; Live programming; Tightly integrated development environments",
    "released": 2003,
    "link": "https://doi.org/10.1145/949344.949356",
    "interesting": "-"
  },
  {
    "title": "Come Together, Right Now: Eclipse and Open Development Tools Integration",
    "abstract": "Various aspects of open development tools integration are discussed. It is found that Eclipse is a well-implemented integration framework that vendors plug into, reusing common components. Many providers are making a 'plug-in' version of their technology for both Eclipse and other development environments. It is observed that the Eclipse open source projects recognizes standards where they exist, providing a collaborative environment for creating useful reference implementations of the technology that are made available without change.",
    "keywords": "",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0345870988&partnerID=40&md5=74463540897afe53bb12be568375fad3",
    "interesting": "-"
  },
  {
    "title": "An Algorithm Development Environment for an On-line FT-NIR Spectrometer",
    "abstract": "This paper describes a software development environment suitable for advanced signal processing and feedback control algorithms for interferometry. The significance of software fast prototyping tools is illustrated where theoretically challenging algorithms are to be implemented. Specifically, a case is discussed where advanced control is deemed necessary for reliable operation of FT-NIR instruments in an on-line environment. In this particular case, an interactive test bed for new algorithmic approaches is developed, such that advanced theories and methods can be rapidly tested and validated with the real-world interferometer hardware. This development environment also allows new interfacing concepts with mechanical and optical hardware to be tested. Use of this environment is illustrated for the case of a novel Michelson NIR spectrometer operating in the range 800-2200 nm.",
    "keywords": "Active control; NIR; On-line monitoring; Spectrometry",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-1842582927&partnerID=40&md5=e5f333fb9ff33d5b0990d55cbd416517",
    "interesting": "-"
  },
  {
    "title": "Research on universal IDE for distributed simulation system (DSS)",
    "abstract": "In this paper we utilize the universal technology frame (mainly the distributed computation technology) to build the distributed simulation application. We bring forward the concept to utilize the universal technology to build web based IDE for distributed simulation system. Additionally, we bring forward a simple technology frame about the standard of the coming distributed simulation system.",
    "keywords": "",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0141951850&partnerID=40&md5=720326d89ecceda3d6cce86d60f4070a",
    "interesting": "-"
  },
  {
    "title": "ODE-SWS: A semantic web service development environment",
    "abstract": "Web Services (WS) are software modules that perform operations that are network-Accessible through XML messaging. Web Services in the SemanticWeb, that is, SemanticWeb Services (SWS), should describe semantically their structure and capabilities to enable its automatic discovery, invocation and composition. In this work we present a development environment to design SWS in a language-independent manner. This environment is based on a framework that defines an ontology set to characterize how a SWS should be specified. The core ontology of this framework describes the SWS problem-solving behaviour and enables the SWS design at a conceptual level. Considering this framework, the SWS development environment is composed of (1) a graphical interface, in which the conceptual design of SWSs is performed, and (2) a tool set, which instantiates the framework ontologies according to the graphical model created by the user, verifies the completeness and consistency of the SWS through instance evaluation, and translates the SWS conceptual model description into SWS (and WS) languages, such as DAML-S, WSDL or UDDI. This tool set is integrated in the WebODE ontology engineering workbench in order to take advantage of its reasoning and ontology translation capabilities.",
    "keywords": "",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952971223&partnerID=40&md5=ac7a7834c5444afedd20c84035fce52d",
    "interesting": "-"
  },
  {
    "title": "Development tools for distributed applications",
    "abstract": "The emergence of the global Internet has dramatically broadened and changed the computing landscape. In particular, much of the value in contemporary computing systems derives from networked applications. Prominent examples include e-mail, Usenet news, the World Wide Web, and the many varieties of peer-to-peer networks. However, the number of successful, large-scale, truly distributed, applications is exceedingly small. We argue that a major reason for this is that tools and other facilities available to aid the developers of these applications are inadequate. We propose a life-cycle for these applications, identify challenges that must be met to make the model viable, and detail our initial work towards meeting these challenges. © HotOS 2003.",
    "keywords": "",
    "released": 2003,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-41149101573&partnerID=40&md5=04c572627a3a9b741fb1f2f239b3a5ea",
    "interesting": "-"
  },
  {
    "title": "Integrating producibility and product performance tools within a web-service environment",
    "abstract": "This paper describes the integration of a producibility and product performance tool in a web service environment. First, we provide a background on web services and a review of product development environments that utilize a service-based architecture. Next, the paper describes the implementation of two services - a process capability database coupled with an aircraft engine fuel nozzle performance model. Discussions close addressing the challenges faced in the current software services development environment.",
    "keywords": "Engineering web services; Process capability management; Producibility; Product development environment",
    "released": 2003,
    "link": "https://doi.org/10.1115/detc2003/cie-48281",
    "interesting": "-"
  },
  {
    "title": "GUNGEN-GO: Real-time groupware development environment for a hypermedia system",
    "abstract": "A real-time groupware development environment for a hypermedia system called 'GUNGEN-GO' has been developed. The GUNGEN-GO extends three functions over HyperCard that is one of hypermedia systems. These functions are group connection function to realize varieties of participants' network, group communication function to support multi-user event with flexible data formats and multimedia communication function with video and voice. This environment has been applied to five groupware system building and realizes real-time collaboration system and virtual laboratory system, which supports awareness functions to support shared consciousness, between remote sites.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1007/978-3-540-45226-3_106",
    "interesting": "-"
  },
  {
    "title": "A High-level Programming Environment for Packet Trace Anonymization and Transformation",
    "abstract": "Packet traces of operational Internet traffic are invaluable to network research, but public sharing of such traces is severely limited by the need to first remove all sensitive information. Current trace anonymization technology leaves only the packet headers intact, completely stripping the contents; to our knowledge, there are no publicly available traces of any significant size that contain packet payloads. We describe a new approach to transform and anonymize packet traces. Our tool provides high-level language support for packet transformation, allowing the user to write short policy scripts to express sophisticated trace transformations. The resulting scripts can anonymize both packet headers and payloads, and can perform application-level transformations such as editing HTTP or SMTP headers, replacing the content of Web items with MD5 hashes, or altering filenames or reply codes that match given patterns. We discuss the critical issue of verifying that anonymizations are both correctly applied and correctly specified, and experiences with anonymizing FTP traces from the Lawrence Berkeley National Laboratory for public release.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1145/863993.863994",
    "interesting": "-"
  },
  {
    "title": "Semantic Web logic programming tools",
    "abstract": "The last two decades of research in Logic Programming, both at the theoretical and practical levels, have addressed several topics highly relevant for the Semantic Web effort, providing very concrete answers to some open questions. This paper describes succinctly the contributions from the Logic Programming group of Centro de Inteligência Artificial (CENTRIA) of Universidade Nova de Lisboa, as a prelude to a description of our recent efforts to develop integrated standard tools for disseminating this research throughout the interested Web communities. The paper does not intended to be a survey of logic programming techniques applicable to the Semantic Web, and so the interested reader should try to obtain the missing information in the logic programming journals and conferences. © Springer-Verlag Berlin Heidelberg 2003.",
    "keywords": "",
    "released": 2003,
    "link": "https://doi.org/10.1007/978-3-540-24572-8_2",
    "interesting": "-"
  },
  {
    "title": "Tool Support for Refactoring Functional Programs",
    "abstract": "Refactorings are source-to-source program transformations which change program structure and organisation, but not program functionality. Documented in catalogues and supported by tools, refactoring provides the means to adapt and improve the design of existing code, and has thus enabled the trend towards modern agile software development processes. Refactoring has taken a prominent place in software development and maintenance, but most of this recent success has taken place in the OO and XP communities. In our project, we explore the prospects for 'Refactoring Functional Programs', taking Haskell as a concrete case-study. This paper discusses the variety of pragmatic and implementation issues raised by our work on the Haskell Refactorer. We briefly introduce the ideas behind refactoring, and a set of elementary functional refactorings. The core of the paper then outlines the main challenges that arise from our aim to produce practical tools for a decidedly non-toy language, summarizes our experience in trying to establish the necessary meta-programming infrastructure and gives an implementation overview of our current prototype refactoring tool. Using Haskell as our implementation language, we also offer some preliminary comments on Haskell programming-in-the-large.",
    "keywords": "Haskell; Language-aware programming environments; Program transformation; Refactoring; Semantic editors",
    "released": 2003,
    "link": "https://doi.org/10.1145/871895.871899",
    "interesting": "-"
  },
  {
    "title": "A software reliability assessment method based on neural networks for distributed development environment",
    "abstract": "The software development environment has been changing into a new development paradigm in CSSs (client/server systems) by the use of network computing technologies. Therefore, it is important to assess the reliability of software system in a distributed development environment because of increasing demands on quality and productivity in social systems. However, it is difficult to assess software reliability in recent years because the complexity of software systems has been increasing as a result of distributed system development. In this paper, we propose a software reliability assessment method considering the interaction among software components in the system-testing phase of a distributed development environment. (C) 2003 Wiley Periodicals, Inc. Electron Comm Jpn Pt 3, 86(11): 13-20, 2003; Published online in Wiley InterScience (www.interscience.wiley. com). DOI 10.1002/ecjc.10092.",
    "keywords": "distributed development environment; software reliability; reliability assessment; software component; neural network",
    "released": 2003,
    "link": "https://doi.org/10.1002/ecjc.10092",
    "interesting": "-"
  },
  {
    "title": "XML in a web-based grammar development environment",
    "abstract": "Example-based Development of Grammars (EDG) is a natural language parsing and grammatical knowledge representation system, implemented in Common Lisp, that uses XML to display its output. The system parses sentences and allows querying and editing of its linguistic knowledge base. The system’s response to user input is in XML, which is then transformed by an XSLT processor to form HTML, which is then displayed by the user’s browser. The XML dialect used by the system to represent linguistic structure is described, together with details of how the XSLT stylesheet transforms it into HTML. Further information about the system, including an interactive demonstration of the system, may be found on the Web at http://edg.sf.net",
    "keywords": "",
    "released": 2002,
    "link": "https://doi.org/10.3115/1118808.1118817",
    "interesting": "-"
  },
  {
    "title": "W/AGE: the Windsor Attribute Grammar Programming Environment",
    "abstract": "Advances in speech-recognition and wireless-communication technology have generated a growing interest in hands-free, eyes-free, access to, and navigation between, remote data sources. Owing to the fact that conventional query languages such as SQL cannot be spoken, there is a need to develop natural-language processors to be used in conjunction with speech interfaces. Ideally, it should be possible for non-programmers to create their own speech-accessible natural-language applications that they can easily add to a SpeechWeb, in a similar manner to the creation of web pages using hunt. The W/AGE programming environment is a step towards this goal.",
    "keywords": "",
    "released": 2002,
    "link": "https://doi.org/10.1109/HCC.2002.1046358",
    "interesting": "-"
  },
  {
    "title": "Practical graduate software engineering projects: Can something useful be built in one semester?",
    "abstract": "First year software engineering graduate students are required to take a Survey in Software Engineering course as a pre-requisite to all other graduate level studies at Southwest Texas. Along with covering the software engineering body of knowledge, students form in teams to work on a case study or project. During the fall semester of 2001, the author presented the students with a real world problem of building a web site for one of the other university colleges. To spread out the learning experience, this professor also had a graduate software engineering quality class running concurrently. That class became the software quality assurance and test teams for the first year students. A master's program in software engineering should not be looked on as a stepping-stone to a PhD. It has to be a real-world experience with building a product for real customers. These students, 29 in the survey and 19 in the quality courses, had a high percentage of adult learners and two with PhDs in unrelated fields. 50% had worked in programming related jobs but none had been on a product team that actually delivered an end product. At the onset the requirements could not have been simpler - build a web site for an associate dean who knew exactly what he wanted. The end result was far from simple with the customer changing requirements up to finals' week. There were many learning opportunities for both classes. This paper describes the learning environment, the problem presented, lessons learned, and effort expended. It will compare the efforts and results to other software engineering student semester projects. Based on the author's experience, a framework and selection criteria for the types of software engineering projects that can successfully be completed in one semester will be presented.",
    "keywords": "Projects software quality; Software development environment; Software engineering; Team oriented",
    "released": 2002,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036954234&partnerID=40&md5=027ee58d198c37df04fd6cb51ce4faed",
    "interesting": "-"
  },
  {
    "title": "Aspect-oriented programming with C# and.NET",
    "abstract": "Microsoft has introduced the.NET architecture as a new component-based programming environment, which allows for easy integration of classical distributed programming techniques with Web computing. NET defines a type system and introduces notions such as component, object, and interface, which are building blocks for distributed multi-language component-based applications. As many other component frameworks,.NET mainly focuses on functional interfaces of components. Non-functional aspects of components, such as resource usage (CPU, memory), timing behavior, fault-tolerance, or security requirements are currently not expressed in.NET's component interfaces. We discuss the usage of aspect-oriented programming techniques in context of the.NET framework. We focus on the fault-tolerance aspect and discuss the expression of non-functional component properties (aspects) as C# custom attributes. Our approach uses reflection to generate replicated objects based on settings of a special \"fault-tolerance\" attribute for C# components. We have implemented an aspect-weaver for integration of aspect-code and component-code, which uses the mechanisms of the language-neutral.NET type system. Therefore, our approach is not restricted to the C# language but works for any of the.NET programming languages. © 2002 IEEE.",
    "keywords": "Computer architecture; Computer languages; Distributed computing; Fault tolerance; Object oriented modeling; Programming environments; Reflection; Security; Service oriented architecture; Timing",
    "released": 2002,
    "link": "https://doi.org/10.1109/ISORC.2002.1003711",
    "interesting": "-"
  },
  {
    "title": "An XML-based quality of service enabling language for the web",
    "abstract": "In this paper, we introduce an XML-based hierarchical QoS markup language, called HQML, to enhance distributed multimedia applications on the World Wide Web (WWW) with quality of service (QoS) capability. The design of HQML is based on two observations: (1) the absence of a systematic QoS specification language, that can be used by distributed multimedia applications on the WWW to utilize the state-of-the-art QoS management technology and (2) the power and popularity of XML to deliver richly structured contents over the Web. HQML allows distributed multimedia applications to specify all kinds of application-specific QoS policies and requirements. During runtime, the HQML Executor translates the HQML file into desired data structures and cooperates with the QoS proxies that assist applications in end-to-end QoS negotiation, setup and enforcement. In order to make QoS services tailored toward user preferences and meet the challenges of uncertainty in the distributed heterogeneous environments, the design of HQML is featured as interactive and flexible. In order to allow application developers to create HQML specifications correctly and easily, we have designed and developed a unified visual QoS programming environment, called QoSTalk. In QoSTalk, we adopt a grammatical approach to perform consistency check on the visual QoS specifications and generate HQML files automatically. Finally, we introduce the distributed QoS compiler, which performs the automatic mappings between application- and resource-level QoS parameters to relieve the application developer of the burden of dealing with low-level QoS specifications. © 2002 Elsevier Science Ltd. All rights reserved.",
    "keywords": "Distributed multimedia applications; Quality of service; Visual programming environment; XML",
    "released": 2002,
    "link": "https://doi.org/10.1006/jvlc.2001.0227",
    "interesting": "-"
  },
  {
    "title": "Aspect and XML-oriented semantic framework generator: SmartTools",
    "abstract": "SmartTools is a semantic framework generator, based on XML and object technologies. Thanks to a process of automatic generation from specifications, SmartTools makes it possible to quickly develop environments dedicated to domain-specific and programming languages. Some of these specifications (XML, DTD, Schemas, XSLT) are issued from the W3C which is an important source of varied emerging domain-specific languages. SmartTools uses object technologies such as visitor patterns and aspect-oriented programming. It provides code generation adapted to the usage of those technologies to support the development of semantic analyses. In this way, we obtain at minimal cost the design and implementation of a modular development platform which is open, interactive, uniform, and most important prone to evolution. ©2002 Published by Elsevier Science B.V.",
    "keywords": "Aspect-oriented programming; Development environment; Program transformation; Semantic analyses; Software generation; Visitor pattern; XML; XSLT",
    "released": 2002,
    "link": "https://doi.org/10.1016/S1571-0661(04)80429-8",
    "interesting": "-"
  },
  {
    "title": "A method-based development environment for efficient creation of interactive 3D information systems",
    "abstract": "This article describes a development environment in which 3D multimedia productions can be implemented effectively. Multimedia-enriched 3D environments, which can be used intuitively, are becoming increasingly widely used. The museum environment provides a typical example of this. The content for these applications is taken mostly from the areas of natural sciences and technology or history. In other areas, such as the production of complex, highly variant products, 3D multimedia information systems are required to support workers on the assembly line. These systems often have to be used universally because similar products are being developed at different sites. The best way, therefore, to feed content to such systems is online from a central server so that the information at all sites is similarly up to date. These information systems have still not broken through into the commercial sector, however. One of the reasons for this is that the proper development environments are not available for such online-based multimedia-enriched 3D information systems, which support the creation of these systems from the requirement analysis to startup. The information systems available to date are single systems, developed specifically for their respective application scenarios. The development environment described here aims to make that step from single-item production to custom-tailored series production. A consortium of industrial and university partners will begin to create this development environment and test it in a practical environment from early 2002, with planned completion within two years.",
    "keywords": "Creating attractive 3D presentations quickly and cost-effectively; Development Environment; VR",
    "released": 2002,
    "link": "https://doi.org/10.1117/12.498038",
    "interesting": "-"
  },
  {
    "title": "Agile software development - Introduction and overview; [Agile Entwicklung Web-basierter Systeme: Eiführung und Überblick]",
    "abstract": "Both time-to-morket and flexibility are becoming more and more important in today's software development, especially when heading for web-based information systems. Traditional processes focus on detecting errors early, because they assume that changing existing software is expensive. Agile software development uses a different strategy: The team is organized to facilitate the design of changeable software. Tight relations to the stakeholders and short feedback cycles enable the team to put the software into production faster and react to changing requirements more flexible.",
    "keywords": "Adaptive Software Development; Agile software development environments; Crystal methods family; Extreme programming; Software development processes; Time-to-market",
    "released": 2002,
    "link": "https://doi.org/10.1007/bf03250842",
    "interesting": "-"
  },
  {
    "title": "Knowledge-based product development environment using XML and object Web",
    "abstract": "[No abstract available]",
    "keywords": "",
    "released": 2002,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0036122986&partnerID=40&md5=9a89ecdbcd995d6b4a13c52578063411",
    "interesting": "-"
  },
  {
    "title": "Hands on software engineering: building a Java software engineering development environment",
    "abstract": "This paper describes the team and software engineering experiences of a group of undergraduate computer science students doing their final project class before graduation. The project was to build and deliver a Java software engineering development environment The students were organized into teams that had specific assignments to deliver portions of the product. The students established a Web page to track their progress and kept metrics on all of their effort. They defined and followed a software development life cycle. This was the first time these students had worked on a real deliverable product. The results of the semester long class was a bootable system running under Linux that is a complete Java software engineering development environment. It is being used today to drive a Web server and a shared development environment for a consulting organization and their clients. The final delivered cost, including the cost of the CDROM was less than $10.00. This team oriented, product focused class was successful in having the students demonstrate to themselves the value of software engineering disciplines and practices.",
    "keywords": "",
    "released": 2001,
    "link": "https://doi.org/10.1109/FIE.2001.963675",
    "interesting": "-"
  },
  {
    "title": "JXTA: A network programming environment",
    "abstract": "JXTA provides a network-programming platform specifically designed to be the foundation for peer-to-peer systems. As a set of protocols, the technology stays away from APIs and remains independent of programming languages. This technology is also independent of transport protocols.",
    "keywords": "",
    "released": 2001,
    "link": "https://doi.org/10.1109/4236.935182",
    "interesting": "-"
  },
  {
    "title": "IJADE eMiner - A web-based mining agent based on intelligent Java agent development environment (iJADE) on internet shopping",
    "abstract": "With the rapid growth of e-commerce applications, Internet shopping is becoming part of our daily lives. Traditional Web-based product searching based on keywords searching seems insufficient and inefficient in the 'sea' of information. In this paper, we propose an innovative intelligent multi-agent based environment, namely (iJADE) - intelligent Java Agent Development Environment - to provide an integrated and intelligent agent-based platform in the e-commerce environment. In addition to contemporary agent development platforms, which focus on the autonomy and mobility of the multi-agents, iJADE provides an intelligent layer (known as the 'conscious layer') to implement various AI functionalities in order to produce 'smart' agents. From the implementation point of view, iJADE eMiner consists of two main modules: 1) a visual data mining and visualization system for automatic facial authentication based on the FAgent model, and 2) a fuzzy-neural based shopping agent (FShopper) to facilitate Web-mining on Internet shopping in cyberspace. © Springer-Verlag Berlin Heidelberg 2001.",
    "keywords": "",
    "released": 2001,
    "link": "https://doi.org/10.1007/3-540-45357-1_6",
    "interesting": "-"
  },
  {
    "title": "Customization of library service in a cross-platform programming environment",
    "abstract": "This paper describes how library operations can be integrated in a cross-platform programming environment. It discusses the organizational and technical issues in planning and designing of macro applications from the technical services workstation. It then describes a variety of technical and public service macro applications. It shows the efficiency and ergonomic benefits of these customized programs. It concludes with an example of how PC-based macro-programs can populate Web-accessible server-side databases with ActiveX technologies.",
    "keywords": "",
    "released": 2001,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035529951&partnerID=40&md5=aece18d697af2791ae1271f75ca590ef",
    "interesting": "-"
  },
  {
    "title": "Coordinating distributed components on the web: An integrated development environment",
    "abstract": "Component-based software has become an important alternative for building applications, especially distributed ones, so it is essential to define new software development processes based on components. Within this trend, we propose a complete framework-based method which guides application developers in exactly determining application requirements. It also guides how to build them using the compositional framework MultiTEL from the collaborative and multimedia applications domain. Although many multimedia frameworks are available, none of them offer a design methodology for understanding and adapting the framework classes or components to each derived application. By applying an architecture description language (ADL) we are able to document the framework and help designers in: constructing; reusing, and connecting components; extending the framework architecture; and adding components to meet user requirements. Tools for the automatic generation of code from the ADL specifications are also described.",
    "keywords": "",
    "released": 2001,
    "link": "https://doi.org/10.1002/spe.362",
    "interesting": "-"
  },
  {
    "title": "Supporting tailorable program visualisation through literate programming and fisheye views",
    "abstract": "This paper describes the 'Jaba' program editor and browser that allows users to tailor the level of abstraction at which they visualise, browse, edit and document object-oriented programs. Its design draws on concepts from literate programming, holophrasting displays, fisheye visualisation and hypertext to allow programmers to rapidly move between abstract and detailed views of Java classes. The paper focuses on the motivation for, and user interface issues surrounding, the integration of these facilities in Jaba. Limitations in the current tools and theories for programming support are identified, and modifications are proposed and demonstrated. Examples include overcoming the static post-hoc documentation support provided by Javadoc, and normalising Furnas's 'degree of interest' fisheye visualisation formula to avoid excessive suppression of program segments. © 2001 Elsevier Science B.V. All rights reserved.",
    "keywords": "Documentation; Fisheye visualisation; Hypertext; Java; Literate programming; Programming environments",
    "released": 2001,
    "link": "https://doi.org/10.1016/S0950-5849(01)00182-3",
    "interesting": "-"
  },
  {
    "title": "Logic programming techniques for dynamic vrml web content generation",
    "abstract": "We explore the use of a number of Logic Programming techniques for generating dynamic Web content and the underlying architecture and implementation issues. We describe a Prolog to VRML mapping allowing generation of dynamic VRML pages through CGI and server side Prolog scripts. BinProlog’s Assumption Grammars (a form of multi-stream DCGs with implicit arguments and temporary assertions, scoping over the current AND-continuation) are used to mimic VRML syntax and semantics directly, without using a preprocessor. The resulting generator allows quick development of integrated knowledge processing and data visualization Web applications. Using BinProlog’s multi-threaded networking primitives, we describe a design integrating in a self-contained Prolog application a Web Server, a Data Extraction module and an Assumption Grammar based VRML generator. © Springer-Verlag Berlin Heidelberg 2001",
    "keywords": "Definite clause grammars; Dynamic VRML content; Internet programming with prolog; Logic programming tools; Prolog based Client-Server programming; Prolog networking; Web architectures",
    "released": 2001,
    "link": "https://doi.org/10.1007/3-540-45241-9_7",
    "interesting": "-"
  },
  {
    "title": "A survey of methods and approaches to knowledge management in the product development environment",
    "abstract": "Various approaches to capturing and retrieving engineering design information and intent are currently used in industry and play an important role in engineering design collaboration and concurrent engineering., At one end of the spectrum there are expert systems that perform complex analyses of designs based on information that is very specific and specialized for a particular' product. At the other end are less automated and less complex non-expert systems These systems provide the means to organize, collect, and reuse general collections of design intent and rationale in terms of notes, solutions to problems previously encountered, and best practices organized into a database or posted on an internal web site. By surveying the current state of engineering design knowledge management (KM) tools and implementation, conclusions can be drawn regarding the basic elements of successful knowledge management and the opportunities that exist to expand the capabilities and use of such systems in the product development environment. This is of particular relevance to current design practices that are becoming increasingly automated, decentralized, and global. Knowledge management on a large scale will require strategic planning and a deeper understanding to provide the standards for interoperability and exchange that will be needed. This paper provides an overview of approaches to knowledge management in the product development environment.",
    "keywords": "",
    "released": 2001,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-1342323841&partnerID=40&md5=12fa540454e92e81761a1740e156af99",
    "interesting": "-"
  },
  {
    "title": "Net-console: Web-based development environment for parallel programs",
    "abstract": "Net-Console is an integrated program development environment that can be used as a front-end for High Performance Computing (HPC) sites. It consist of an MPI-aware editor, an execution console, a debugger, monitoring tools and an account and file manager. Using Net-console the user is able to edit, execute, debug and evaluate the performance of parallel programs from anywhere in the Internet. The user interface is done through a normal Java-enabled browser. Net-console can also support processing through wireless and lightweight devices with the use of mobile agent technologies. The tools included in Net-console and their functionality, the languages used and the overall structure of the project are presented in this paper.",
    "keywords": "Java; Mobile agents; MPI; Teleworking",
    "released": 2001,
    "link": "https://doi.org/10.1142/s0129626401000488",
    "interesting": "-"
  },
  {
    "title": "VoiceXML and the voice/web environment - visual programming tools, for telephone application development",
    "abstract": "",
    "keywords": "",
    "released": 2001,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000170809000024",
    "interesting": "-"
  },
  {
    "title": "Towards an integrated, web-executable parallel programming tool environment",
    "abstract": "We present a new parallel programming tool environment that is (1) accessible and executable “anytime, anywhere,” through standard Web browsers and (2) integrated in that it provides tools which adhere to a common underlying methodology for parallel programming and performance tuning. The environment is based on a new network computing infrastructure developed at Purdue University. We evaluate our environment qualitatively by comparing our tool access method with conventional schemes of software download and installation. We also quantitatively evaluate the efficiency of interactive tool access in our environment. We do this by measuring the response times of various functions of the Ursa Minor tool and compare them with those of a Java Applet-based \"anytime, anywhere\" tool access method. We found that our environment offers significant advantages in terms of tool accessibility, integration, and efficiency.",
    "keywords": "",
    "released": 2000,
    "link": "https://dl.acm.org/doi/10.5555/370049.370067",
    "interesting": "-"
  },
  {
    "title": "Which Web development tool is right for you?",
    "abstract": "Before selecting your next project's Web development tool, you need to know which functions the tool must perform and which tool can best accomplish those functions. The article might not settle dogmatic developer arguments, but it offers objectivity and technical detail to help you assess the strengths, weaknesses, and appropriateness of some popular Web development tools. Selecting the right tool for Web development projects is becoming more important as enterprises move from static Web sites to more sophisticated interactive, secure, database-backed Web sites. The need to develop and deploy new Web applications in Internet time feeds the need to select the right tool for the project. In writing the article, each of the authors, as Web developers, began by picking their favorite tool and presenting its strengths and weaknesses. The tools presented were: Dreamweaver; Active Server Pages (ASP); Domino; Practical Extraction and Report Language (Perl). Then they challenged one another's lists of strengths and weaknesses. The sessions were sometimes passionate, but the authors managed to keep the discussions collegial and objective. The article reflects the best from those sessions.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1109/6294.839363",
    "interesting": "-"
  },
  {
    "title": "Requirements for an elucidative programming environment",
    "abstract": "Motivates a variation of literate programming which I call \"elucidative programming\". Elucidative programming is oriented towards program explanation, with the purpose of throwing light on important and complex program relationships. Since it was proposed by D.E. Knuth (1984), literate programming has been one of the most viable approaches to radically improving internal program documentation. Unfortunately, most programmers find the ideas of literate programming, as supported by Web-like tools, far too impractical, academic and far-fetched in relation to current programming practices. With elucidative programming, I focus on the best ideas of literate programming. I disregard the program-publishing aspects as technical literature, and I provide mechanisms with which documentation can be added to a program without affecting or disturbing the source program. My ideas about elucidative programming are presented as a number of requirements, and in a discussion of programming environment issues in relation to these new ideas.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1109/WPC.2000.852486",
    "interesting": "-"
  },
  {
    "title": "Past, Present, and Future of User Interface Software Tools",
    "abstract": "A user interface software tool helps developers design and implement the user interface. Research on past tools has had enormous impact on today's developers-virtually all applications today are built using some form of user interface tool. In this article, we consider cases of both success and failure in past user interface tools. From these cases we extract a set of themes which can serve as lessons for future work. Using these themes, past tools can be characterized by what aspects of the user interface they addressed, their threshold and ceiling, what path of least resistance they offer, how predictable they are to use, and whether they addressed a target that became irrelevant. We believe the lessons of these past themes are particularly important now, because increasingly rapid technological changes are likely to significantly change user interfaces. We are at the dawn of an era where user interfaces are about to break out of the “desktop” box where they have been stuck for the past 15 years. The next millenium will open with an increasing diversity of user interfaces on an increasing diversity of computerized devices. These devices include hand-held personal digital assistants (PDAs), cell phones, pagers, computerized pens, computerized notepads, and various kinds of desk and wall-size computers, as well as devices in everyday objects (such as mounted on refrigerators, or even embedded in truck tires). The increased connectivity of computers, initially evidenced by the World Wide Web, but spreading also with technologies such as personal-area networks, will also have a profound effect on the user interface to computers. Another important force will be recognition-based user interfaces, especially speech, and camera-based vision systems. Other changes we see are an increasing need for 3D and end-user customization, programming, and scripting. All of these changes will require significant support from the underlying user interface software tools. © 2000, ACM. All rights reserved.",
    "keywords": "Event languages; Human Factors; interface builders; Languages; scripting languages; toolkits; user interface development environments; user interface software",
    "released": 2000,
    "link": "https://doi.org/10.1145/344949.344959",
    "interesting": "-"
  },
  {
    "title": "A web-based distributed programming environment",
    "abstract": "A Java-based system called the GeoJAVA System was introduced in [1]. This system allows a user to remotely compile his/her own C/C++ programs and execute them for visualization among a group of remote users. DISPE, which stands for DIStributed Programming Environment, expands on the GeoJAVA System by allowing the resulting executables to be run on systems other than the host on which they were compiled, thus making the system more versatile. DISPE uses Common Object Request Broker (CORBA) services to enable executables compiled on this system to invoke methods in libraries on remote sites in an architecturally heterogeneous environment. Not only does this allow users to compile and execute their programs remotely, but the maintenance and duplication of libraries is lowered since agents are used to search for symbols in libraries located remotely and to compile them with the user’s source code. As long as there is an Internet connection between the hosts on which these libraries reside, the agents can search and compile with these libraries. © Springer-Verlag Berlin Heidelberg 2000.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1007/3-540-45492-6_24",
    "interesting": "+"
  },
  {
    "title": "Enhanced monitoring in the GRADE programming environment by using OMIS",
    "abstract": "To provide high-level graphical support for developing message passing programs, an integrated programming environment (GRADE) is being developed. GRADE provides tools to construct, execute, debug, monitor and visualize message-passing based parallel programs. The paper describes the integration of GRADE and an OMIS compliant monitor system. OMIS is a recent specification of a universal on-line monitoring interface for parallel and distributed programs. The integration provides GRADE with a more flexible monitoring support and makes possible the simultaneous usage of debugging and visualization tools. The paper specifically addresses the requirements imposed by GRADE on the on-line event tracing mechanisms, as well as their implementation and performance.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1016/S0167-739X(99)00073-4",
    "interesting": "-"
  },
  {
    "title": "An integrated development environment for concurrent software developing based on object oriented Petri nets",
    "abstract": "An approach to concurrent software development is proposed. The article introduces the implemented principles of an integrated development environment for concurrent software based on object oriented Petri nets (OOPN) with multi-computer coordinate working. Under this method, two programming levels of concurrent software design are adopted. The top level is for concurrent part modeling by drawing object oriented Petri net pictures. The bottom level is for sequential part programming by using traditional high level languages. OOPN-IDE (Object Oriented Petri Net based Integrated Development Environment) is the research result for the methodology (J. Niu, 1999). It can make both the concurrent part of Petri net pictures and the sequential part of high level language programs be integrated as a whole concurrent program autamatically. © 2000 IEEE.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1109/HPC.2000.843524",
    "interesting": "-"
  },
  {
    "title": "IDEAL: An integrated distributed environment for asynchronous learning",
    "abstract": "In this paper, we present the design and implementation of IDEAL, an Integrated Distributed Environment for Asynchronous Learning. The learning environment supports a Web-based distributed community for student-centered, self-paced, and highly interactive learning. IDEAL enables the students in the community to learn from each other and enhances their learning experience. Implemented using the prevalent Internet, Web, intelligent agent, and digital library technologies, IDEAL adopts an open architecture design and targets at large-scale, distributed operations. In the initial implementation, a number of prototypes using different Java-based software development environments have been developed. © Springer-Verlag Berlin Heidelberg 2000.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1007/3-540-45111-0_21",
    "interesting": "-"
  },
  {
    "title": "A critical analysis and evaluation of Web-based environments for program development",
    "abstract": "This paper provides a classification, review, and critical analysis of current Web-based interactive programming environments and tools that facilitate learning programming languages and concepts. The focal point of the paper is based on (1) categorizing available programming systems and tools into classes according to their pedagogical approaches; (2) reviewing individual systems; and (3) critically analyzing them according to established standards for instructional design. The paper is intended to provide those seeking to use these resources with a comprehensive survey of the available systems, their succinct evaluation, and their effectiveness. © 2001 Elsevier Science Inc. All rights reserved.",
    "keywords": "Drill and practice systems; Learning systems; Problem solving and programming languages; Programming tools; Simulation systems; Tutorial systems; Web-based interactive environments",
    "released": 2000,
    "link": "https://doi.org/10.1016/S1096-7516(01)00038-0",
    "interesting": "+"
  },
  {
    "title": "Bee: An integrated development environment for the Scheme programming language",
    "abstract": "The Bee is an integrated development environment for the Scheme programming language. It provides the user with a connection between Scheme and the C programming language, a symbolic debugger, a profiler, an interpreter, an optimizing compiler that delivers stand alone executables, a source file browser, a project manager, user libraries and online documentation. This article details the facilities of the Bee, its user interface, and presents an overview of the implementation of its main components.",
    "keywords": "",
    "released": 2000,
    "link": "https://doi.org/10.1017/S0956796800003725",
    "interesting": "-"
  },
  {
    "title": "AN INTERNET-BASED SOLUTION FOR THE TECHNICAL SUPPORT OF TOOLING OPERATIONS",
    "abstract": "A system named Tool Trial System (TTS), which is capable of collating and disseminating information relating to tool trials amongst a variety of user groups, has been developed. In the context of tooling engineers TTS has provided a platform from which it is possible to submit and retrieve highly specific technical tooling data on the World Wide Web. TTS has been developed under a distributed philosophy and it can be downloaded by remote users in the form of Java applets, through any computer with Internet connection and using conventional Java enabled browsers without the requirements of using middle tiers software or hardware between clients and server sides. TTS uses a 100% pure Java driver for remote database access and it was developed using PowerJ, which is a graphical programming tool able to speed up the creation of Java projects. This work demonstrated not only the suitability of the Internet as a distributed computing resource, but more importantly it was possible to look at the ways in which approved data could be analyzed and then applied to cutting data selection within the Process Planning arena. Copyright © 2000 by ASME.",
    "keywords": "Corporate Solution; Internet-Based Architecture; Java Programming Environment; Manufacturing Tooling Industry",
    "released": 2000,
    "link": "https://doi.org/10.1115/DETC2000/CIE-14604",
    "interesting": "-"
  },
  {
    "title": "Web enabled client-server model for development environment of distributed image processing",
    "abstract": "Image processing applications (IPA) requirements can be best met by using the distributed environment. The authors had developed an environment over a network of VAX/VMS and Unix for distributed image processing. The efficiency was as high as 90-95%. This paper presents an augmentation and generalization of the environment using Java and web technology to make it truly system independent. Although the environment has been tested using image processing applications, the design and architecture is truly general so that it can be used for other applications, which require distributed processing. © Springer-Verlag Berlin Heidelberg 2000.",
    "keywords": "DEDIP; Distributed image processing; Parallel image processing",
    "released": 2000,
    "link": "https://doi.org/10.1007/3-540-44444-0_13",
    "interesting": "-"
  },
  {
    "title": "Protection and interoperability for mobile agents: A secure and open programming environment",
    "abstract": "The Mobile Agent technology helps in the development of applications in open, distributed and heterogeneous environments such as the Internet and the Web, but it has to answer to the requirements of security and interoperability to achieve wide acceptance. The paper focuses on security and interoperability, and describes a Secure and Open Mobile Agent (SOMA) programming environment where both requirements are main design objectives. On the one hand, SOMA is based on a thorough security model and provides a wide range of mechanisms and tools to build and enforce flexible security policies. On the other hand, the SOMA framework permits to interoperate with different application components designed with different programming styles. SOMA grants interoperability by closely considering compliance with the OMG CORBA and MASIF standards. SOMA has already shown the feasibility and effectiveness of the approach for the development of flexible and adaptive applications in several areas, particularly in network and systems management.",
    "keywords": "mobile agents; security; interoperability; CORBA; network and systems management",
    "released": 2000,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000087318300011",
    "interesting": "-"
  },
  {
    "title": "OU LearningWorks: a customized programming environment for Smalltalk modules",
    "abstract": "We have exploited and adapted Goldberg's LearningWorks framework to produce an environment with new programming tools, visualization tools, and system simulations. The environment is designed to be used via plug-in modules, called LearningBooks, sets of classes and persistent objects, for which we have developed a pedagogic standard that includes, for example, an HTML browser and various of the aforementioned tools and systems. The context for this development has been a distance learning degree-level course in object technology which is enrolling over 5000 mature students per year, mostly in the UK, Western Europe and Singapore. The course, M206, Computing: An Object-oriented Approach from the Open University (OU), will soon be introduced into the USA. While adhering to the original conception of LearningWorks that it promote a software engineering approach of systems building, we have successfully added support for the needs of the distance learning neophyte. By showing various microworlds and programming tools these notes outline the environment we have implemented and deployed.",
    "keywords": "",
    "released": 1999,
    "link": "https://doi.org/10.1145/302405.302910",
    "interesting": "-"
  },
  {
    "title": "Exploiting Smalltalk modules in a customizable programming environment",
    "abstract": "This paper describes how we extended a module structure of the Smalltalk LearningWorks framework to provide a programming environment designed for very large scale technology transfer. The 'module' is what we have termed the LearningBook, a set of classes and persistent objects, including an HTML browser, programming and visualization tools, and microworlds. The context for this development is a distance learning university course in object technology which is enrolling over 5000 mature students per year-making it the largest such course in the world. While promoting a systems building approach, we have successfully added support for programming in the small and the needs of the isolated novice. Two guiding principles have been: (i) the environment and its modules fit into a consistent structure for personal management of learning and (ii) details of complex facilities, such as the class library, are progressively disclosed as knowledge and sophistication grow. The paper shows how these principles have guided the exploitation of LearningBook modules. To provide context, relevant academic background is given. Early informal feedback is reported and a project currently underway to observe in detail how thousands of learners use the programming environment is sketched.",
    "keywords": "",
    "released": 1999,
    "link": "https://doi.org/10.1145/302405.302453",
    "interesting": "-"
  },
  {
    "title": "A secure and open mobile agent programming environment",
    "abstract": "The Mobile Agent technology is suitable for applications in open, distributed and heterogeneous environments such as the Internet and the Web, because it can overcome some limits of traditional approaches. The paper describes a Secure and Open Mobile Agent (SOMA) programming environment with two main design objectives that are security and interoperability. On the one hand SOMA is based on a thorough security model and provides a wide range of tools and mechanisms to build and enforce flexible security policies. On the other hand, the SOMA framework can interoperate with different application components designed with different programming styles. SOMA grants interoperability by closely considering compliance with CORBA, the most diffused standard in the area of Object-Oriented components. SOMA has been adopted as a platform to develop several distributed applications in the area of network and systems management, CSCW, and distributed and heterogeneous information systems.",
    "keywords": "",
    "released": 1999,
    "link": "https://doi.org/10.1109/ISADS.1999.838439",
    "interesting": "-"
  },
  {
    "title": "Virtual standards development environments for concurrent standardization process",
    "abstract": "Recently, the increased handling of online standards information has emerged as an important feature of information and communications technology (ICT) standardization. In order to meet market needs for on-time standards deployment, most standards organizations are actively seeking more efficient ways of standardization using electronic means in order to accelerate the standards making process. This paper suggests a virtual standard development environment designed for standards developers to carry out their standards-related activities on-line. In this paper, we outline a conceptual model of a concurrent standardization process and describe the design and implementation of an Extranet-based network system called standards information cooperative network (SIGN). The system was created with a view to fostering faster standards development with functionalities such as a virtual management of networked standards developers, collaboration support tools, a workflow-based electronic signature system, and dynamic links for ready retrieval of standards information stored in a database. We conclude this paper with an introduction to the concept of a virtual standards development organization (VSDO) that supports all the features needed by the relevant standards making bodies to carry out their activities in a dynamic on-line environment.",
    "keywords": "",
    "released": 1999,
    "link": "https://doi.org/10.4218/etrij.99.0199.0104",
    "interesting": "-"
  },
  {
    "title": "Ada+SQL - An overview",
    "abstract": "Ada+SQL is a programming environment for Ada 95 extended with basic SQL single user capabilities. It incorporates a very fast compiler and interpreter, with debugging options, library generator and browser, syntax template editors, programmer wizard, two-dimensional graphics, SQL interactive interface and hypertext documentation on the environment, Ada 9S and SQL. Several implementation aspects are discussed. © 1999 ACM.",
    "keywords": "Compilers; Computer education; Interpreters; Programming environments; Relational databases",
    "released": 1999,
    "link": "https://doi.org/10.1145/319294.319316",
    "interesting": "-"
  },
  {
    "title": "Developing distributed software development tools in Java on the Internet",
    "abstract": "This paper focuses on employing the leading-edge Java programming language to develop Internet-based software development tools. In the real world, most (non-trivial) software development tasks are carried out by development teams using various software tools. In this Internet era, it becomes extremely desirable that software development can be conducted in a distributed fashion via a Web-based environment. This demands sophisticated development of distributed software development tools. In this paper, Java networking support is described in order to develop distributed software development tools. Requirements and the corresponding framework of a Web-based process-centred software development tool to support global teamwork are also introduced to illustrate the role of Java.",
    "keywords": "",
    "released": 1999,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0033322598&partnerID=40&md5=679d8cbf6635733bd0d246622fccbe88",
    "interesting": "-"
  },
  {
    "title": "An Individualized and Non-Presential Laboratory Project Development Environment for Highly Populated Courses",
    "abstract": "In this paper, we present an educational tool to develop laboratory projects using distance learning techniques. Laboratory projects are very important to increase the quality of education. However, at the Polytechnic University of Madrid (UPM), several factors made it very difficult to offer presential laboratory projects to all the students: small number of laboratories, small number of teachers, and highly populated courses. Thus, we have developed computerassisted distance learning tools to solve the former problems, but offering a high quality individualized practical training. Electronic access to the tutor, preliminary training facilities, access to discussion and information news groups, automatic submission, evaluation, and fake detection are some features of our tools. Copyright© (1999) by the International Society for Computers and Their Applications. All rights reserved.",
    "keywords": "Automatic project evaluation; Distance learning; Laboratory projects; World wide web",
    "released": 1999,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85131963955&partnerID=40&md5=6b3e9656c23e25043929c8accb3fa0c8",
    "interesting": "-"
  },
  {
    "title": "The design and analysis of real-time systems using the ASTRAL software development environment",
    "abstract": "ASTRAL is a formal specification language for real-time systems. It is intended to support formal software development and, therefore, has been formally defined. The structuring mechanisms in ASTRAL allow one to build modularized specifications of complex systems with layering. A real-time system is modeled by a collection of state machine specifications and a single global specification. This paper discusses the ASTRAL Software Development Environment (SDE), which is an integrated set of design and analysis tools based on the ASTRAL formal framework. The tools that make up the support environment are a syntax-directed editor, a specification processor, a verification condition generator, a browser kit, a model checker, and a mechanical theorem prover.",
    "keywords": "",
    "released": 1999,
    "link": "https://doi.org/10.1023/a:1018934104631",
    "interesting": "-"
  },
  {
    "title": "Net-console: A web-based development environment for MPI programs",
    "abstract": "In this paper we describe Net-console, a Web-based environment for the development of Message Passing Interface (MPI) programs. Using Net-console the user is able to write, execute, debug and evaluate the performance of such programs across the Internet, using a usual Java-enabled browser, without having to log on to a supercomputer in the traditional sense. The tools included in Net-console and their functionality, the languages used and the overall structure of the project are presented in this paper. © Springer-Verlag Berlin Heidelberg 1999.",
    "keywords": "",
    "released": 1999,
    "link": "https://doi.org/10.1007/3-540-48158-3_31",
    "interesting": "-"
  },
  {
    "title": "Free development tools online for embedded windows",
    "abstract": "",
    "keywords": "",
    "released": 1999,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000083708400006",
    "interesting": "-"
  },
  {
    "title": "CASE for web sites: Towards an integration of traditional case concepts and novel development tools",
    "abstract": "",
    "keywords": "tools; requirements; Internet-based systems; CASE",
    "released": 1998,
    "link": "https://doi.org/10.1145/330560.331079",
    "interesting": "-"
  },
  {
    "title": "A visual programming tool for user interface and Web page generation",
    "abstract": "This paper describes a visual programming tool for building graphical user interfaces, that allows GUI designers to create interactive, graphical, and direct-manipulated user interfaces through graphical interaction without conventional textual programming. The tool, known as Visual VanGogh, combines the visual programming paradigm with the Java technology needed for sophisticated Web-based applications. This feature makes Visual VanGogh superior to most existing GUI builders that only develop GUIs for standalone applications, rather than for Web-based applications, and enable the customers to bridge the gap between the enterprise and the Internet.",
    "keywords": "",
    "released": 1998,
    "link": "https://doi.org/10.1109/TOOLS.1998.713599",
    "interesting": "-"
  },
  {
    "title": "A knowledge-based Web server as a development environment for Web-based knowledge servers",
    "abstract": "We describe LISPWEB, a development environment aimed at facilitating the task of developing Web based systems (A. Riva et al., 1998). Based on a programmable, extensible and dynamical HTTP server (A. Riva and M. Ramoni, 1996), our environment is particularly well suited to the development of Web-accessible knowledge based systems, exploiting declarative knowledge provided in the system's knowledge base. The general idea is that, in addition to specifying the domain knowledge used by the application, the developer should include information on the structure of the system itself in the knowledge base. Using this information, LISPWEB is able to automatically generate a large part of the application and of the high level entities appearing in the user interface: hypertext links, data entry forms, object representations for output.",
    "keywords": "",
    "released": 1998,
    "link": "https://doi.org/10.1049/ic:19980533",
    "interesting": "-"
  },
  {
    "title": "Visual tools for a multimedia IC development environment (MICE)",
    "abstract": "A visual software engineering environment referred to as the Multimedia IC Development Environment (MICE) is described. MICE is to be used as the basis for the study of the visual design process applied to the development of TAO-based multimedia applications. The unifying model used in this approach is barred on Teleaction Objects (TAOs). TAOs are multimedia objects with attached knowledge structured as an active index. TAOs can be described using the TAOML extension of HTML. This allows for easy prototyping of distributed multimedia applications using a web browser as the user interface. The TAOML Builder tool allows the user to visually specify a TAO. The hypergraph is parsed for correctness using an underlying Boundary Symbol Relation grammar and the correct TAOML is output. TAOML can be translated into standard HTML using the TAOML Interpretor. The ICs for the application can be visually specified using the IC Builder. The IC Compiler produces the IC Manager which provides the run-time environment for the ICs.",
    "keywords": "",
    "released": 1998,
    "link": "https://doi.org/10.1109/VL.1998.706175",
    "interesting": "-"
  },
  {
    "title": "A neural network development environment for adaptive inverse control",
    "abstract": "Presents a neurocontroller development environment using the ideas of adaptive inverse control. The goal of the paper is to describe the environment utilized and show a very simple example. A PC running a commercial simulator communicates in real-time with a /spl mu/controller to learn how to control the power supply of a motor using the speed as input. This /spl mu/controller runs a feedforward neural network online, but the weights are adapted periodically off-line by the simulator and downloaded once the weights stabilize. The user interacts with the user interface of the commercial package to define the topology, to test the adequacy of the control topology and to set the control parameters.",
    "keywords": "",
    "released": 1998,
    "link": "https://doi.org/10.1109/IJCNN.1998.685901",
    "interesting": "-"
  },
  {
    "title": "WebFlow - High-level programming environment and visual authoring toolkit for high performance distributed computing",
    "abstract": "We developed a platform independent, three-tier system, called WebFlow. The visual authoring tools implemented in the front end integrated with the middle tier network of servers based on the industry standards and following distributed object paradigm, facilitate seamless integration of commodity software components. We add high performance to commodity systems using GLOBUS metacomputing toolkit as the backend. We have explained these ideas in general before, and here for the first time we describe a fully operational example which is expected to be deployed in an NCSA Alliance Grand Challenge. © 1998 IEEE.",
    "keywords": "Distributed objects; Globus; HPCC; Java; Metacomputing; Three tier architecture; Visual authoring tools; Web server; WebFlow",
    "released": 1998,
    "link": "https://doi.org/10.1109/SC.1998.10046",
    "interesting": "-"
  },
  {
    "title": "Web development tools: A survey",
    "abstract": "In this paper we review, classify, and assess 33 existing commercial products in the light of evaluation criteria based on the impact on the application development process, architecture, and user-perceived quality. From this review we draw requirements for new-generation development tools and show how current solutions match different application domains. © 1998 Published by Elsevier Science B.V. All rights reserved.",
    "keywords": "Authoring tools; CASE tools; Database gateways; Web development",
    "released": 1998,
    "link": "https://doi.org/10.1016/s0169-7552(98)00021-x",
    "interesting": "-"
  },
  {
    "title": "Neural network development environment for adaptive inverse control",
    "abstract": "This paper presents a neurocontroller development environment using the ideas of adaptive inverse control. The goal in this paper is to describe the environment utilized and show a very simple example. A PC running a commercial simulator communicates in real-time with a μcontroller to learn how to control the power supply of a motor using the speed as input. This μcontroller runs a feedforward neural network online, but the weights are adapted periodically off-line by the simulator and downloaded once the weights stabilize. The user interacts with the nice user interface of the commercial package to define the topology, to test the adequacy of the control topology and to set the control parameters.",
    "keywords": "",
    "released": 1998,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0031623631&partnerID=40&md5=a4a7ea3ec15038290b33107946553600",
    "interesting": "-"
  },
  {
    "title": "Special places on the Web",
    "abstract": "[No abstract available]",
    "keywords": "Color Chart; Complete Reference; Development Tool; Educational Technology; Special Place",
    "released": 1998,
    "link": "https://doi.org/10.1007/BF02954771",
    "interesting": "-"
  },
  {
    "title": "SMI++ - Object-oriented framework for designing control systems for HEP experiments",
    "abstract": "In order to cope with the complexity of the online control system, the DELPHI experiment at CERN (Aarnio et al., DELPHI Collaboration, Nucl. Instr. & Methods Phys. Res. A 303 (1991) 233-276) developed, in collaboration with the CERN OC group, a new concept for the coding of the control logic. In this concept - SMI, the State Management Interface (Barlow et al., IEEE Trans. Nucl. Sci. 36 (1989) 1549-1553) - the experiment is viewed as a collection of objects behaving as finite state machines. These objects are typically organized in hierarchical structures, allowing up to the full automation of the experiment by a a top-level object. This concept has been extended and is being redesigned using object-oriented techniques in SMI++ for the BaBar experiment at SLAC. ©1998 Elsevier Science B.V.",
    "keywords": "Communication; Control systems; Development environments; Object-oriented methods; Programming languages",
    "released": 1998,
    "link": "https://doi.org/10.1016/s0010-4655(97)00158-6",
    "interesting": "-"
  },
  {
    "title": "A development environment for knowledge-based medical applications on the world-wide web",
    "abstract": "The World-Wide Web (WWW) is increasingly being used as a platform to develop distributed applications, particularly in contexts, such as medical ones, where high usability and availability are required. In this paper we propose a methodology for the development of knowledge-based medical applications on the web, based on the use of an explicit domain ontology to automatically generate parts of the system. We describe a development environment, centred on the LISPWEB Common Lisp HTTP server, that supports this methodology, and we show how it facilitates the creation of complex web-based applications, by overcoming the limitations that normally affect the adequacy of the web for this purpose. Finally, we present an outline of a system for the management of diabetic patients built using the LISPWEB environment.; The World-Wide Web (WWW) is increasingly being used as a platform to develop distributed applications, particularly in contexts, such as medical ones, where high usability and availability are required. In this paper we propose a methodology for the development of knowledge-based medical applications on the web, based on the use of an explicit domain ontology to automatically generate parts of the system. We describe a development environment, centred on the LISPWEB Common Lisp HTTP server, that supports this methodology, and we show how it facilitates the creation of complex web- based applications, by overcoming the limitations that normally affect the adequacy of the web for this purpose. Finally, we present an outline of a system for the management of diabetic patients built using the LISPWEB environment.",
    "keywords": "Insulin-dependent diabetes mellitus; Knowledge-based systems; Web-based applications",
    "released": 1998,
    "link": "https://doi.org/10.1016/S0933-3657(98)00038-4",
    "interesting": "-"
  },
  {
    "title": "Parallel Programming and Performance Evaluation with the URSA Tool Family",
    "abstract": "This paper contributes to the solution of several open problems with parallel programming tools and their integration with performance evaluation environments. First, we propose interactive compilation scenarios instead of the usual black-box-oriented use of compiler tools. In such scenarios, information gathered by the compiler and the compiler's reasoning are presented to the user in meaningful ways and on-demand. Second, a tight integration of compilation and performance analysis tools is advocated. Many of the existing, advanced instruments for gathering performance results are being used in the presented environment and their results are combined in integrated views with compiler information and data from other tools. Initial instruments that assist users in \"data mining\" this information are presented and the need for much stronger facilities is explained. The URSA Family provides two tools addressing these issues. URSA MINOR supports a group of users at a specific site, such as a research or development project. URSA MAJOR complements this tool by making available the gathered results to the user community at large via the World-wide Web. This paper presents objectives, functionality, experience, and next development steps of the URSA tool family. Two case studies are presented that illustrate the use of the tools for developing and studying parallel applications and for evaluating parallelizing compilers.",
    "keywords": "Parallel programming; Performance evaluation; Program optimization; Programming environment; Web-based tool",
    "released": 1998,
    "link": "https://doi.org/10.1023/A:1018720530812",
    "interesting": "-"
  },
  {
    "title": "PELLPACK: A Problem-Solving Environment for PDE-Based Applications on Multicomputer Platforms",
    "abstract": "This article presents the software architecture and implementation of the problem-solving environment (PSE) PELLPACK for modeling physical objects described by partial differential equations (PDEs). The scope of this PSE is broad, as PELLPACK incorporates many PDE solving systems, and some of these, in turn, include several specific PDE solving methods. Its coverage for 1D, 2D, and 3D elliptic or parabolic problems is quite broad, and it handles some hyperbolic problems. Since a PSE should provide complete support for the problem-solving process, PELLPACK also contains a large amount of code to support graphical user interfaces, analytic tools, user help, domain or mesh partitioning, machine and data selection, visualization, and various other tasks. Its total size is well over 1 million lines of code. Its open-ended software architecture consists of several software layers. The top layer is an interactive graphical interface for specifying the PDE model and its solution framework. This interface saves the results of the user specification in the form of a very high level PDE language which is an alternative interface to the PELLPACK system. This language also allows a user to specify the PDE problem and its solution framework textually in a natural form. The PELLPACK language preprocessor generates a Fortran control program with the interfaces, calls to specified components and libraries of the PDE solution framework, and functions defining the PDE problem. The PELLPACK program execution is supported by a high-level tool where the virtual parallel system is defined, where the execution mode, file system, and hardware resources are selected, and where the compilation, loading, and execution are controlled. Finally, the PELLPACK PSE integrates several PDE libraries and PDE systems available in the public domain. The system employs several parallel reuse methodologies based on the decomposition of discrete geometric data to map sparse PDE computations to parallel machines. An instance of the system is available as a Web server (WebPELLPACK) for public use at http://pellpack.cs.purdue.edu.",
    "keywords": "C.3 [Computer Systems Organization]: Special-Purpose and Application-Based Systems; D.2.6 [Software Engineering]: Programming Environments - graphical environments; Integrated environments; Interactive environments",
    "released": 1998,
    "link": "https://doi.org/10.1145/285861.285864",
    "interesting": "-"
  },
  {
    "title": "A WWW software development environment to support cooperative and spread working groups",
    "abstract": "This article presents a software development environment based on hypertext techniques to support object-oriented software construction performed by cooperative working groups spread all over the world. The environment uses the World-Wide Web to support distributed software development. © 1998 Elsevier Science B.V.",
    "keywords": "Software development environments; Software process management; World-Wide Web",
    "released": 1998,
    "link": "https://doi.org/10.1016/s0010-4655(97)00175-6",
    "interesting": "-"
  },
  {
    "title": "Development of a platform independent receiver control system for SISIFOS",
    "abstract": "Up to now receiver control software was a time consuming development usually written by receiver engineers who had mainly the hardware in mind. We are presenting a low-cost and very flexible system which uses a minimal interface to the real hardware, and which makes it easy to adapt to new receivers. Our system uses Tcl/Tk as a Graphical User Interface (GUI), SpecTcl as a GUI builder, Pgplot as plotting software, a Simple Query Language (SQL) Database for information storage and retrieval, Ethernet socket to socket communication and SCPI as a command control language. The complete system is in principal platform independent but for cost saving reasons we are using it actually on a PC486 running Linux 2.0 3.0, which is a copylefted Unix. The only hardware dependent part are the digital input/output boards, analog to digital and digital to analog convertors. In the case of the Linux PC we are using a device driver development kit to integrate the boards fully into the kernel of the operating system, which indeed makes them look like an ordinary device. The advantage of this system is firstly the low price (all software is for free and available as source code, only the hardware cost has to be paid) and secondly the clear separation between the different software components which are available for many operating systems. If it is not possible, due to CPU performance limitations, to run all the software in a single machine, the SQL-Database or the Graphical User Interface could be installed on separate computers.",
    "keywords": "Receiver control system; Software development environment; User interface",
    "released": 1998,
    "link": "https://doi.org/10.1117/12.308817",
    "interesting": "-"
  },
  {
    "title": "Buyer’s guide: Development tools for web applications",
    "abstract": "",
    "keywords": "",
    "released": 1998,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:000073585700045",
    "interesting": "-"
  },
  {
    "title": "Java-based user interface development",
    "abstract": "This tutorial provide attendees with an understanding of the possibilities provided by the World Wide Web for application development and a more detailed understanding of the issues involved in developing user interfaces for the Web in Java.",
    "keywords": "Java; applets; development tools; user interfaces; world wide web",
    "released": 1997,
    "link": "https://doi.org/10.1145/1120212.1120342",
    "interesting": "-"
  },
  {
    "title": "The World Wide Web leads a revolution in ATE programming environments",
    "abstract": "New software technologies, including the World Wide Web, may seem far removed from the tasks facing test program set (TPS) developers, but they promise to revolutionize the way TPS data is organized, presented, and used. This paper will describe how an integrated TPS development and execution environment can capitalize on these new technologies to improve test programming efficiency.",
    "keywords": "",
    "released": 1997,
    "link": "https://doi.org/10.1109/AUTEST.1997.633601",
    "interesting": "-"
  },
  {
    "title": "Design issues in building Web-based parallel programming environments",
    "abstract": "We exploited the recent advances in Internet connectivity and Web technologies for building Web-based parallel programming environments (WPPEs) that facilitate the development and execution of parallel programs on remote high-performance computers. A Web browser running on the user's machine provides a user-friendly interface to server-site user accounts and allows the use of parallel computing platforms and software in a convenient manner. The user may create, edit, and execute files through this Web browser interface. This new Web-based client-server architecture has the potential of being used as a future front-end to high-performance computer systems. We discuss the design and implementation of several prototype WPPEs that are currently in use at the Northeast Parallel Architectures Center and the Cornell Theory Center. These initial prototypes support high-level parallel programming with Fortran 90 and High Performance Fortran (HPF), as well as explicit low-level programming with Message Passing Interface (MPI). We detail the lessons learned during the development process and outline the tradeoffs of various design choices in the realization of the design. We especially concentrate on providing server-site user accounts, mechanisms to access those accounts through the Web, and the Web-related system security issues.",
    "keywords": "",
    "released": 1997,
    "link": "https://doi.org/10.1109/HPDC.1997.626432",
    "interesting": "-"
  },
  {
    "title": "A generalized development environment for inspection of web materials",
    "abstract": "This paper describes designing and testing systems for inspection of web materials using a development environment simulated in software. This environment comprises five sub-systems: sensing, detection, characterization, validation and decision making. Given a specific inspection problem the system is customized by incorporating specific algorithms into each of the sub-systems. In order to illustrate the customization, the paper uses an example of inspection of a nonwoven material. The inspection objective is to quantify the randomness and homogeneity across the material. This task requires using statistical modeling to characterize texture. The paper discusses a theoretical approach based on a Poissonian model, its efficient implementation, and steps required to implement this procedure online.",
    "keywords": "",
    "released": 1997,
    "link": "https://doi.org/10.1109/ROBOT.1997.620007",
    "interesting": "-"
  },
  {
    "title": "World wide web leads a revolution in ATE programming environments",
    "abstract": "New software technologies, including the World Wide Web, may seem far removed from the tasks facing test program set (TPS) developers, but they promise to revolutionize the way TPS data is organized, presented, and used. This paper will describe how an integrated TPS development and execution environment can capitalize on these new technologies to improve test programming efficiency.",
    "keywords": "",
    "released": 1997,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0031345896&partnerID=40&md5=c1900115950aba851c20b70ffbc00e5f",
    "interesting": "-"
  },
  {
    "title": "Consistency maintenance of contents of windows in software development environment; [Konsistenzerhaltung von fensterinhalten in software-entwicklungsumgebungen]",
    "abstract": "Modern software development environments encompass many editors and browsers which can have windows with partly overlapping contents. Whenever a tool modifies a document all affected windows have to be corrected. Within distributed, multi-user environments, this problem is typically addressed by communication systems such as ToolTalk™. These systems lead to a relatively high programming and run-time overhead and they are insecure since editors are not notified by all changes e.g. changes caused by non-integrated tools. This paper presents a notification mechanism for software development environments which is efficient, easy to use and secure, and its implementation in the object management system H-PCTE.",
    "keywords": "H-PCTE; Notification mechanism; Object management system; Software development environment; Threads; Tool architecture",
    "released": 1997,
    "link": "https://doi.org/10.1007/s004500050088",
    "interesting": "-"
  },
  {
    "title": "Enterprise Web development environments",
    "abstract": "[No abstract available]",
    "keywords": "",
    "released": 1997,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-33845186133&partnerID=40&md5=27ebd2e0b8198c7317071cf8dc00d330",
    "interesting": "-"
  },
  {
    "title": "Generalized development environment for inspection of Web materials",
    "abstract": "This paper describes designing and testing systems for inspection of web materials using a development environment simulated in software. This environment comprises five sub-systems: sensing, detection, characterization, validation and decision making. Given a specific inspection problem the system is customized by incorporating specific algorithms into each of the sub-systems. In order to illustrate the customization, the paper uses an example of inspection of a nonwoven material. The inspection objective is to quantify the randomness and homogeneity across the material. This task requires using statistical modeling to characterize texture. The paper discusses a theoretical approach based on Poissonian model, its efficient implementation, and steps required to implement this procedure on-line.",
    "keywords": "",
    "released": 1997,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0030703796&partnerID=40&md5=91979f66cc53538c378cd3225ffe94e7",
    "interesting": "-"
  },
  {
    "title": "An integrated performance analysis tool for SPMD data-parallel programs",
    "abstract": "A new generation of data parallel languages have been proposed whereby a user specifies how data structures are to be distributed amongst the processor nodes of a distributed-memory machine. Based on this information, the compiler then generates code for the parallel application. Although this approach significantly simplifies the development of the initial version of a parallel application, selection of good data distributions leading to efficient computations is often quite difficult. Therefore, performance debuggers are needed to yield insights into the data distribution effects. On the other hand, most of the existing approaches to performance debugging are very general and thus do not provide the user feedback in terms of the high level programming model or the source code of the parallel application. In this paper, we describe a novel approach to performance debugging of data parallel programs. The design and implementation of a visual performance debugger is described that is specifically targeted to meet the performance debugging requirements of a data-parallel programming model based on user-specified data distributions. The performance debugger is part of an integrated programming environment, called EPPP, which also supports a data parallel compiler and a parallel architecture simulator. Thus development and performance debugging of an application may be done either on the real hardware or by using the simulator. The code for EPPP can be obtained free of cost (contact web address, http://www.crim.ca/apar).",
    "keywords": "Data distribution; Distributed-memory multiprocessor; Parallel programming; Performance debugger; Programming environment",
    "released": 1997,
    "link": "https://doi.org/10.1016/s0167-8191(97)00043-4",
    "interesting": "-"
  },
  {
    "title": "A lightweight communication interface for parallel programming environments",
    "abstract": "We present a small, extensible software interface for the communication between different parallel programming models. With only four new commands our PLUS communication interface can be easily integrated into existing parallel codes, allowing tasks to transparently communicate from, e.g., PVM to MPI and PARIX, or any other parallel programming model. PLUS is one important software module that has been developed within the Metacomputer Online initiative. The core idea of Metacomputer Online is to design small, versatile and extensible interfaces between existing software modules with the goal to build a WAN metacomputer by linking suitable existing software packages. Our current PLUS implementation supports inter-process communication between PVM, MPI and PARIX. Much effort has been spent on optimizing the communication across internet and intranet links. As a result, our PLUS communication is usually faster than raw stream socket TCP/IP communication supported by the various parallel programming models. © 1997 Springer-Verlag Berlin Heidelberg.",
    "keywords": "",
    "released": 1997,
    "link": "https://doi.org/10.1007/bfb0031623",
    "interesting": "-"
  },
  {
    "title": "Using java and JavaScript in the virtual programming laboratory: A web-based parallel programming environment",
    "abstract": "The Virtual Programming Laboratory (VPL) is a Web-based virtual programming environment built based on a client-server architecture. The system can be accessed on any platform (Unix, PC or Mac) using a standard Java-enabled browser, Software delivery over the Web imposes a novel set of constraints on design, We outline the tradeoffs in this design space, motivate the choices necessary to deliver an application, and detail the lessons learned in the process, We discuss the role of Java and other Web technologies in the realization of the design, VPL facilitates the development and execution of parallel programs. The initial prototype supports high-level parallel programming based on Fortran 90 and High Performance Fortran (HPF), as well as explicit low-level programming with the MPI message-passing interface, Supplementary Java-based platform-independent tools for data and performance visualization are an integral part of the VPL, Pablo SDDF trace files generated by the Pablo performance instrumentation system are used for post-mortem performance visualization. (C) 1997 by John Wiley & Sons, Ltd.",
    "keywords": "",
    "released": 1997,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:A1997XG61200007",
    "interesting": "-"
  },
  {
    "title": "RadNotes: A novel soft ware development tool for radiology education",
    "abstract": "RadNotes is a novel software development tool that enables physicians to develop teaching materials incorporating text and images in an intelligent, highly usable format, Projects undertaken in the RadNotes environment require neither programming expertise nor the assistance of a software engineer, The first of these projects, Thoracic Imaging, integrates image teaching files, concise disease and topic summaries, references, and flash card quizzes into a single program designed to provide an overview of chest radiology. RadNotes is intended to support the academic goals of teaching radiologists by enabling authors to create, edit, and electronically distribute image-oriented presentations, RadNotes also supports the educational goals of physicians who wish to quickly review selected imaging topics, as well as to develop a visual vocabulary of corresponding radiologic anatomy and pathologic conditions, Although Thoracic Imaging was developed with the aim of introducing chest radiology to residents, RadNotes can be used to develop tutorials and image-based tests for all levels; create corresponding World Wide Web sites; and organize notes, images, and references for individual use.",
    "keywords": "computers, educational aid; computers, multimedia; education",
    "released": 1997,
    "link": "https://doi.org/10.1148/radiographics.17.3.9153710",
    "interesting": "-"
  },
  {
    "title": "Tools fair: untangling the web with Web and client/server development tools",
    "abstract": "This article concentrates on tools for developing applications for the Internet and for client server distributed environments. These tools help serious software developers build applications that support company missions, goals, and objectives. The article also includes a testing and a miscellaneous category to describe a few tools that may interest software development managers.",
    "keywords": "",
    "released": 1996,
    "link": "https://doi.org/10.1109/52.536460",
    "interesting": "-"
  },
  {
    "title": "Animation and integration of material growth simulations in a visual programming environment",
    "abstract": "The use of computer simulations together with the ability of on-line visualisation and animation of the simulation data provides a powerful tool for studying the microscopic and macroscopic properties of atoms and molecules. In this work, we are concerned with the development of a visualisation environment where simulation, image rendering, and animation are integrated to provide detailed information about the behavior of a growing surface. An interactive environment for monitoring the effect of changing parameters on surface growth is realized. The animation on a workstation as well as animation using video equipment is described and results are presented. ©1996 John Wiley & Sons, Inc.",
    "keywords": "",
    "released": 1996,
    "link": "https://doi.org/10.1002/(SICI)1098-1098(199623)7:3<246::AID-IMA13>3.0.CO;2-X",
    "interesting": "-"
  },
  {
    "title": "GeoOOA-tool and its interface to open software development environments for GIS",
    "abstract": "GeoOOA is an object-oriented requirements engineering method with suitable geo-primitives which allows an adequate treatment of GIS-specific requirements. Since the applicability and success of any software engineering method depends heavily on an appropriate tool support, we propose the GeoOOA-tool, a CASE-tool supporting the development of GeoOOA-models. In this paper, we report on the editors, browsers, validators, and documentation aids of the GeoOOA-tool and sketch its connection to common open software development environments for GIS as well as some prototyping issues. Major parts of the tool have already been implemented and are available via anonymous ftp.",
    "keywords": "",
    "released": 1996,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0030359073&partnerID=40&md5=e7b98d1f911a88325a3bb542518d6ea9",
    "interesting": "-"
  },
  {
    "title": "KAP - A Prototyper for Technical Device Interfaces",
    "abstract": "We present the tool KAP (Kespohl's Automaton Prototyper) for prototyping user interfaces of technical devices, such as VCRs, CD players, alarm clocks, answering machines, etc. The work is based on a formal specification language, DSN/2. KAP supports this notation - as an editor, for adding interactive elements, and as an animation tool. The system was found suitable for performing user tests on several software models, including a CD player with realistic functionality; the results were verified against user testing on the real device. © Copyright on this material is held by the authors.",
    "keywords": "design techniques; development tools; evaluation; formal specification; Prototyping; usability testing",
    "released": 1996,
    "link": "https://doi.org/10.1145/257089.257091",
    "interesting": "-"
  },
  {
    "title": "A General Framework for Positioning, Evaluating and Selecting the New Generation of Development Tools",
    "abstract": "This paper focuses on the evaluation and positioning of a new generation of development tools containing subtools (browsers, debuggers, GUI-builders,...) and programming languages that are designed to work together and have a common graphical user interface and are therefore called environments. Several trends in IT have led to a pluriform range of development tools that can be classified in numerous categories. Examples are : object- oriented tools, GUI-tools, upper- and lower CASE-tools, client/server tools and 4GL environments. This classification does not sufficiently cover the tools subject in this paper for the reason that only one criterion is used to distinguish them. The new generation of development environments often fit in several categories because to a certain extent, several criteria can be applied to evaluate them. In this study, we will offer a broad classification scheme with which tools can be positioned and which can be refined through further research. © 1996 IEEE Proceedings of EUROMICRO-22.",
    "keywords": "client/server; object-oriented programming; programming environments; software development; software engineering; visual development tools; visual programming",
    "released": 1996,
    "link": "https://doi.org/10.1109/EURMIC.1996.546387",
    "interesting": "-"
  },
  {
    "title": "Increasing the interactivity and educational impact of a web-based radiology teaching file by using the java programming environment",
    "abstract": "",
    "keywords": "",
    "released": 1996,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:A1996VP84302717",
    "interesting": "-"
  },
  {
    "title": "Chypro*: A hypermedia programming environment for smalltalk-8o",
    "abstract": "Smalltalk-80 has introduced the use of interactive programming tools such as browsers, inspectors and debuggers which brought a major improvement on conventional text files based programming environments. However, they still heavily depend on character string representations of code and data and, as such, inherit all the known limitations of text. In this paper, we describe new versions of the Smalltalk-80 programming tools that transcend these limits, based on hypermedia techniques such as outlines, links, annotations and graphics and on direct manipulation interfaces. Particularly, the new tools allow : browsing simultaneously scattered pieces of software through multiple points of view, interleaving graphical and textual representations of Smalltalk code, documentation and data, structuring, organizing and linking heterogeneous or distant pieces of code or documentation. © Springer-Verlag Berlin Heidelberg 1995.",
    "keywords": "",
    "released": 1995,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949035913&partnerID=40&md5=f03685c2dcb9d3bcce5813f9e070743e",
    "interesting": "-"
  },
  {
    "title": "Constellation A Web-Based Design Framework eor Developing Network Applications",
    "abstract": "Constellation is a Web-based design frameworkfor developing distributed applications which allows a single user or group of users to concurrently access and manipulate different aspects of a distributed application from a simple Mosaic-like front-end tool. Users can edit and build programs and documents, manage source code, debug and instrument running distributedprograms, read manualpages and other documents, browse through source code and much, much morefrom a simple yet powerful front-end tool. Constellation is designed to work in a heterogeneous networked environment. It works with different host types and different OS environments, and supports different communication protocols. It is designed to work with hybrid client/server applications that consist of new as well as legacy code. Constellation is easily extensible to support new protocols, hosts, servers, services and back-end tools. © World Wide Web Conference: The Web Revolution, WWW 1995 - Conference Proceedings. All rights reserved.",
    "keywords": "client/server applications; design framework; development environment; Distributed applications; distributed debugging; group debugging",
    "released": 1995,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-85170541141&partnerID=40&md5=b39a8f1b27d257919aaea365619bf675",
    "interesting": "-"
  },
  {
    "title": "Discovering the Way Programmer Think About New Programming Environments",
    "abstract": "[No abstract available]",
    "keywords": "",
    "released": 1995,
    "link": "https://doi.org/10.1145/203241.203253",
    "interesting": "-"
  },
  {
    "title": "WEBMAKE - INTEGRATING DISTRIBUTED SOFTWARE-DEVELOPMENT IN a STRUCTURE-ENHANCED WEB",
    "abstract": "In this paper, a technique for structuring large amounts of interdependent data is presented. This approach which facilitates graph-based hierarchical structuring and allows for the definition of arbitrary views on graph structures can be applied to a broad range of very different application areas. Based on this concept we implemented a distributed software development environment supporting cooperative work on top of the World-Wide Web. In general, the approach is intended to serve as a basis for decentralized efforts to tame the immense and hardly manageable collection of data accessible in the Web.",
    "keywords": "SOFTWARE DEVELOPMENT ENVIRONMENT; COMPUTER SUPPORTED COOPERATIVE WORK; WORLDWIDE WEB; STRUCTURING APPROACH",
    "released": 1995,
    "link": "https://doi.org/10.1016/0169-7552(95)00019-4",
    "interesting": "-"
  },
  {
    "title": "INTERNET AS CLINICAL INFORMATION-SYSTEM - APPLICATION DEVELOPMENT USING THE WORLD-WIDE-WEB",
    "abstract": "Clinical computing application development at Columbia-Presbyterian Medical Center has been limited by the lack of a flexible programming environment that supports multiple client user platforms. The World Wide Web offers a potential solution, with its multifunction servers, multiplatform clients, and use of standard protocols for displaying information. The authors are now using the Web, coupled with their own local clinical data server and vocabulary server, to carry out rapid prototype development of clinical information systems. They have developed one such prototype system that can be run on most popular computing platforms from anywhere on the Internet. The Web paradigm allows easy integration of clinical information with other local and Internet-based information sources. The Web also simplifies many aspects of application design; for example, it includes facilities for the use of encryption to meet the authors’ security and confidentiality requirements. The prototype currently runs on only the Web server in the Department of Medical Informatics at Columbia University, but it could be run on other Web servers that access the authors’ clinical data and vocabulary servers. It could also be adapted to access clinical information from other systems with similar server capabilities. This approach may be adaptable for use in developing institution-independent standards for data and application sharing.",
    "keywords": "",
    "released": 1995,
    "link": "https://doi.org/10.1136/jamia.1995.96073829",
    "interesting": "-"
  },
  {
    "title": "Development environment for designing and testing inspection systems",
    "abstract": "This paper describes the development environment for the design and testing of an expert system for web material inspection. The environment incorporates five sub-systems: sensing, detection, characterization, feature analysis, and classification. Each sub-system consists of a number of modules targeted at performing specific functions and containing adaptive image processing and pattern recognition algorithms. An example of defect classification in web materials is considered. The results are summarized and interpreted.",
    "keywords": "",
    "released": 1994,
    "link": "https://doi.org/10.1109/ICPR.1994.577205",
    "interesting": "-"
  },
  {
    "title": "LDEF Interplanetary Dust Experiment (IDE) impact detector results",
    "abstract": "The Interplanetary Dust Experiment (IDE) provided high time resolution detection of microparticle impacts on the Long Duration Exposure Facility satellite. Particles, in the diameter range from 0.2 microns to several hundred microns, were detected impacting on six orthogonal surfaces of the gravity-gradient stabilized LDEF spacecraft. The 11 1/2 month taperecorded data set represents the most extensive record gathered of the number, orbital location, and incidence direction for microparticle impacts in low Earth orbit. Among the results to be discussed is the discovery of orbital debris rings and clouds. In some cases, impacts occurred in a localized region of the orbit for dozens or even hundreds of orbits in Multiple Ctabit Event Sequences (MOES). In addition, more than a dozen intense and short-lived \"spikes\" were seen in which impact fluxes exceeded the background by several orders of magnitude. An analysis is given of the orbital parameters and of possible progenitor events for a selection of MOES. © 1994 SPIE. All rights reserved.",
    "keywords": "",
    "released": 1994,
    "link": "https://doi.org/10.1117/12.177650",
    "interesting": "-"
  },
  {
    "title": "EXTENDING THE PROGRAMMING ENVIRONMENT - a GET AND SET BUILDER FOR THE BROWSER",
    "abstract": "",
    "keywords": "",
    "released": 1994,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:A1994NK22400011",
    "interesting": "-"
  },
  {
    "title": "A visual programming environment for supporting scientific data analysis",
    "abstract": "The authors research on a conceptual model for scientific data analysis concludes that traditional computational and environmental support is insufficient. They believe an integrated system that provides users with the ability to manage data, processes, and experiments as well as program data analysis tasks is necessary. The development of GaeaVE, a visual environment for a scientific database management system for global change research, is described. The components of the environment consist of a browser, a visual language editor for processes and experiments, and a data viewer. © 1993 IEEE.",
    "keywords": "",
    "released": 1993,
    "link": "https://doi.org/10.1109/VL.1993.269562",
    "interesting": "-"
  },
  {
    "title": "A Library for Developing PHIGS Programming Tools in a PEX Environment",
    "abstract": "The merger of three‐dimensional graphics with the X Window System has recently been standardized by adapting PHIGS, the Programmer's Hierarchical Interactive Graphics System, to the X Window System with PEX, the PHIGS Extension to X. The standard programming library for PEX has been defined to be identical to PHIGS PLUS allowing PHIGS programs to port directly to the X environment. X uses a client server model to run applications as client processes which communicate with a server to perform graphical display and input. For improved performance, the PEX extension defines new server resources to reduce network traffic and to take advantage of graphics hardware existing on high‐end servers. A side effect of this distributed model of computation is a distribution of PHIGS structures leading to a relaxation of the exclusive access which a PHIGS application usually maintains over its Central Structure Store. We exploit the distributed nature of a PEX/PHIGS client's Central Structure Store to provide access to it for other applications besides the originating PEX/PHIGS client. We refer to these other applications as tools since one of our primary goals is to create development tools for PHIGS programmers. Rather than concentrate on particular debugging tools, we focus upon easing the process of actually developing tools. Our goal is to supply a collection of routines which can be used by PHIGS programmers to create custom tools or other programs which require access to the graphics data of remote PHIGS processes. Our Tool Development Library provides the PHIGS programmer a small number of management routines which orchestrate the connection and mapping to the data of one or more remote PHIGS applications. Manipulation of remote PHIGS structures is accomplished just as easily as local operations and is performed using standard PHIGS calls. The remote application being accessed requires no changes to its source code. Obvious uses for the Tool Development Library are in the construction of PHIGS tools such as structure browsers, editors and debugging aids. Less obvious is the potential for developing collections of cooperating graphics applications which share graphics data. Copyright © 1993, Wiley Blackwell. All rights reserved",
    "keywords": "",
    "released": 1993,
    "link": "https://doi.org/10.1111/1467-8659.1240219",
    "interesting": "-"
  },
  {
    "title": "Cnest and Cscope: Tools for the literate programming environment",
    "abstract": "The authors describe two tools for the literate programming language Cweb: Cnest and Cscope. Cweb is a Web programming environment for the programming language C using the typesetting program T/sub E/X. An overview of Web is given. Cnest and Cscope operate within the EMACS editing environment and provide support both for the program developer and for the maintenance programmer. Their implementations are discussed in detail.<>",
    "keywords": "",
    "released": 1992,
    "link": "https://doi.org/10.1109/SECON.1992.202267",
    "interesting": "-"
  },
  {
    "title": "OBSERV—A Prototyping Language and Environment",
    "abstract": "The OBSERV methodology for software development is based on rapid construction of an executable specification, or prototype, of a systems, which may be examined and modified repeatedly to achieve the desired functionality. The objectives of OBSERV also include facilitating a smooth transition to a target system, and providing means for reusing specification, design, and code of systems and subsystems. We are particularly interested in handling embedded systems, which are likely to have concurrency and have some real-time requirements. The OBSERV prototyping language combines several paradigms to express the behavior of a system. The object-oriented approach provides the basic mechanism for building a system from a collection of objects, with well-defined interfaces between them. We use finite-state machines to model the behavior of individual objects. At a lower level, activities that occur within objects, either upon entry to a state or in transition between thus allowing a nonprocedural description. The environment provided to a prototype builder is as important as the language. We have made an attempt to provide flexible tools for executing or simulating the prototype being built, as well as for browsing and static checking. The first implementation of the tools was window based but not graphic. A graphic front end, name CRUISE, was developed afterwards. A simulation sequence focuses on a single object, which can be as complex as necessary, possibly the entire system, and expects all the interactions between it and the outside world to be achieved by communication between the simulator and the user. The simulator allows the user to easily switch back and forth from one object to another, simulating each object in isolation. To enable testing the behavior of a prototype in a realistic environment, it is possible to construct objects that imitate the environment objects. We also allow simulation of systems with missing pieces, by calling upon the user to simulate any such missing piece by himself. © 1992, ACM. All rights reserved.",
    "keywords": "browsers; concurrency; CRUISE; embedded systems; graphical user interface; interactive programming environments; logic programming; modeling with finite state machines; object-oriented approach; OBSERV; real time systems; simulator; software reuse; static checker",
    "released": 1992,
    "link": "https://doi.org/10.1145/131736.131751",
    "interesting": "-"
  },
  {
    "title": "The implementation of objectmath - A high-level programming environment for scientific computing",
    "abstract": "We present the design and implementation of ObjectMath, a language and environment for high-level equation-based modeling and analysis in scientific computing. The ObjeetMath language integrates object-oriented modeling with mathematical language featores that make it possible to express mathematics in a natural and consistent way. The implemented programming environment includes a graphical browser for visualizing mad editing inheritance hierarchies, an application oriented editor for editing ObjeetMath equations and formulae, a computer algebra system for doing symbolic computations, support for generation of numerical code from equations, and routines for graphical presentation. This programming environment has been successfully used in modeling and analyzing two different problems from the application domain of machine element analysis in an industrial environment. © 1992, Springer Verlag. All rights reserved.",
    "keywords": "",
    "released": 1992,
    "link": "https://doi.org/10.1007/3-540-55984-1_28",
    "interesting": "-"
  },
  {
    "title": "Building Integrated Software Development Environments. Part I: Tool Specification",
    "abstract": "The conceptual modeling approach of the IPSEN 1992 project for building highly integrated environments is based on using attributed graphs to model and implement arbitrary object structures, in particular all kinds of software documents and their relationships. A language based on graph grammars, called PROGRESS (PROgrammed Graph REwriting SyStems), and a suitable method for the application of this language, called graph grammar engineering, have been developed over the last ten years. This language and method are being extensively used for specifying the complex graph structures of internal document representations as well as for specifying the functionality of all tools (editors, browsers, analyzers, debuggers) working on these internal rpresentations. This paper explains the language and the method for applying the language based on a pragmatic nontrivial example of a software production process and its corresponding documents. In particular, it is shown why and how a graph grammar-based strongly typed language is perfectly suitable to formally specify highly integrated software tools. In addition, it is shown that the implementation of these tools (i.e., an environment composed of these tools) is systematically being derived from the formal specifications. © 1992, ACM. All rights reserved.",
    "keywords": "attribute grammars; attributed graphs; environment generators; graph grammars",
    "released": 1992,
    "link": "https://doi.org/10.1145/128894.128895",
    "interesting": "-"
  },
  {
    "title": "LITERATE PROGRAMMING AND THE LIPED ENVIRONMENT",
    "abstract": "Literate programming is a methodology that encourages the production of a program whose primary purpose is to explain to a human what it does, rather than to instruct a computer what to do. Each program element is clearly explained, and is presented in an order that is best for human understanding. The writer has the freedom to introduce parts of the program as they are needed-which is not necessarily the order required for compilation. The philosophy of literate programming was introduced by Donald Knuth while developing the documentation System TEX. His WEB system consists of two processes, WEAVE and TANGLE, that read a specially constructed literate program source file and produce as output a file containing compilable code and a file for input into TEX. WEB uses a batch approach that seems to hinder the development of new literate programs, and it has not been widely used outside its home base. The literate programming environment LIPED, described in this paper, aims to make the development of literate programs easier by being interactive (rather than batch as is WEB) and by providing instant access to a table of contents, a cross-reference table, and the extracted code. Language independence is achieved, and special facilities are made available to cater for modem programming paradigms. The system runs on minimal hardware and interfaces easily to existing compilers and text processors. This paper describes the background and progress of literate programming, compares the available literate programming systems, and provides an overview of LIPED.",
    "keywords": "LITERATE PROGRAMMING; PROGRAMMING ENVIRONMENTS",
    "released": 1992,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:A1992GU72600003",
    "interesting": "-"
  },
  {
    "title": "The fifth development environment",
    "abstract": "Although an excellent programming system in its own right, Forth does not provide an adequate platform for the development and maintenance of large, multi-programmer projects. Fifth is a derivative of Forth with 32-bit arithmetic, heap memory management, a large memory model, automatic pointer validity checking, and a Smalltalk-like browser interface. Using Fifth, a programmer can view and edit a program's structure directly using the dictionary browser, and at the character I line level using the text editor. © 1991 ACM.",
    "keywords": "",
    "released": 1991,
    "link": "https://doi.org/10.1145/259965.259996",
    "interesting": "-"
  },
  {
    "title": "FWEB: A Literate Programming System for Fortran8x",
    "abstract": "The new FWEB system applies the concept of literate programming to the FORTRAN8X language. Its design and implementation provided an opportunity to field-test WEB's applicability and provoked some reflections on its underlying concepts. © 1990, ACM. All rights reserved.",
    "keywords": "Fortran8x; literate programming; programming tools; structured documentation",
    "released": 1990,
    "link": "https://doi.org/10.1145/74105.74112",
    "interesting": "-"
  },
  {
    "title": "GMB: A tool for manipulating and animating graph data structures",
    "abstract": "This paper describes a tool graph originally developed for the Faust environment. Faust is a scientific program development environment being implemented at the Center for Supercomputing Research and Development at the University of Illinois at Urbana‐Champaign. The graph tool comprises two major components: the Graph Manager that implements an abstract graph data type, and the Graph Browser that handles the details of displaying a subgraph of a graph created through the Graph Manager. The Graph Browser displays graph views, where a graph view is a subgraph of its parent graph. The concept of graph views is analogous to the concept of views in the traditional database sense. Several graph views may simultaneously exist for a single parent graph, where each view's subgraph depends on the context of the application requesting the view. Goals of the graph tool, GMB, included providing an abstract graph data type for general use and animating graphs efficiently. Copyright © 1989 John Wiley & Sons, Ltd",
    "keywords": "Graphs; Programming environment; User interfaces",
    "released": 1989,
    "link": "https://doi.org/10.1002/spe.4380190307",
    "interesting": "-"
  },
  {
    "title": "AN ONLINE ASSISTANCE SYSTEM FOR THE SIMULATION-MODEL DEVELOPMENT ENVIRONMENT",
    "abstract": "",
    "keywords": "",
    "released": 1989,
    "link": "https://doi.org/10.1016/0020-7373(89)90022-9",
    "interesting": "-"
  },
  {
    "title": "The design view: a design oriented, high-level visual programming environment",
    "abstract": "The authors propose a concise graphical convention for representing a problem decomposition that can be used on paper, in the classroom, and on the computer. They then propose an implementation of this convention as an extension to an existing structure-editor programming environment, which allows high-level design to take-place online. As the user graphically edits this design, the system silently tracks the set of low-level details that are necessary to ultimately conform the program code with the design. The necessary changes are then presented sequentially to the user after the design phase is complete. It is further suggested that this convention is useful as a way to view already completed programs, and as a tool for debugging.<>",
    "keywords": "",
    "released": 1988,
    "link": "https://doi.org/10.1109/WVL.1988.18031",
    "interesting": "-"
  },
  {
    "title": "A new approach to cursor movements in user interfaces of integrated programming environments",
    "abstract": "The design of cursor movements in the user interfaces of integrated programming environments has largely been based on the tree representation of a program. This paper proposes a new approach to the design of cursor movements. Since cursor movements are central to the use of integrated tools, such as structured editors, code browsers, and formatters, it is the requirements of these tools that should be the primary basis for the design of cursor movements. The proposed approach uses tool requirements to: (a) define precisely the parts of a program on which the cursor can be positioned, and (b) determine the paths for cursor movements, by using the defined program parts. The application of this approach to modula-2 programs is described and a comparison with other approaches is made. An implementation of cursor movements for the programming environment MUPE-2, based on the proposed approach, is also discussed. © 1988.",
    "keywords": "programming environments; software engineering; user interfaces",
    "released": 1988,
    "link": "https://doi.org/10.1016/0950-5849(88)90132-2",
    "interesting": "-"
  },
  {
    "title": "MAGPIE - AN INTERACTIVE PROGRAMMING ENVIRONMENT FOR PASCAL.",
    "abstract": "Magpie is an interactive programming environment that supports programming in the small on a powerful, single-user workstation. Magpie integrates the functions of language-directed editing, incremental compiling and interactive debugging - all tailored specifically for Pascal. Syntax and static semantic errors are detected and reported as the program is edited; the program is always ready for execution even while it is being edited. Debugging functions include dynamic tracing of statement execution and variable values, immediate execution of Pascal statements and event monitoring. Magpie provides display windows called browsers that make it easy to navigate through the Pascal source text and its execution state.",
    "keywords": "",
    "released": 1985,
    "link": "https://www.scopus.com/inward/record.uri?eid=2-s2.0-0021855852&partnerID=40&md5=1a93648022a936a9c5c2738c1f692f8c",
    "interesting": "-"
  },
  {
    "title": "FORTH - a PROGRAMMING ENVIRONMENT FOR ONLINE INSTRUMENTATION .1. UV-VIS SPECTROPHOTOMETER",
    "abstract": "",
    "keywords": "",
    "released": 1985,
    "link": "https://doi.org/10.1016/0165-9936(85)88023-7",
    "interesting": "-"
  },
  {
    "title": "FORTH - a PROGRAMMING ENVIRONMENT FOR ONLINE INSTRUMENTATION .2. FLOATING POINT MATRIX PACKAGE",
    "abstract": "",
    "keywords": "",
    "released": 1985,
    "link": "https://doi.org/10.1016/0165-9936(85)85006-8",
    "interesting": "-"
  },
  {
    "title": "Viewing a Programming Environment as a Single Tool",
    "abstract": "Programming environments support the creation, modification, execution and debugging of programs. The goal of integrating a programming environment is more than simply building tools that share a common data base and provide a consistent user interface. Ideally, the programming environment appears to the programmer as a single tool; there are no firewalls separating the various functions provided by the environment. This paper describes the techniques used to integrate Magpie, an interactive programming environment for Pascal. Display windows, called browsers, provide a consistent approach for interacting with the Pascal source code or the execution state of the program. Incremental compilation allows the programmer to specify debugging actions in Pascal, eliminating the need for a separate debugging language. © 1984, ACM. All rights reserved.",
    "keywords": "",
    "released": 1984,
    "link": "https://doi.org/10.1145/390011.808248",
    "interesting": "-"
  },
  {
    "title": "PROGRAMMERS WORK FASTER WITH ADRS ONLINE PROGRAMMING TOOLS",
    "abstract": "",
    "keywords": "",
    "released": 1984,
    "link": "https://www.webofscience.com/wos/woscc/full-record/WOS:A1984SW53200019",
    "interesting": "-"
  }
]
