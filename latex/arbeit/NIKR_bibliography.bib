@INPROCEEDINGS{IDEOL-2013,
  author={Tran, Hai T. and Dang, Hai H. and Do, Kha N. and Tran, Thu D. and Vu Nguyen},
  booktitle={Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={An interactive Web-based IDE towards teaching and learning in programming courses}, 
  year={2013},
  volume={},
  number={},
  pages={439-444},
  keywords={Collaboration;Programming profession;Software;Servers;Education;Visualization;web-based IDE;collaborative learning},
  doi={10.1109/TALE.2013.6654478}
}

@INPROCEEDINGS{IDEOL-2014,
  author={Nguyen, Vu and Dang, Hai H. and Do, Kha N. and Tran, Thu D.},
  booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings}, 
  title={Learning and practicing object-oriented programming using a collaborative web-based IDE}, 
  year={2014},
  volume={},
  number={},
  pages={1-9},
  keywords={Collaboration;Programming profession;Message systems;Debugging;Atmospheric measurements;Particle measurements;Collaborative IDE;Web-based IDE;programming exercise;collaboration;interaction},
  doi={10.1109/FIE.2014.7044141}
}

@inproceedings{Collabode-2011,
  author = {Goldman, Max and Little, Greg and Miller, Robert C.},
  title = {Real-time collaborative coding in a web IDE},
  year = {2011},
  isbn = {9781450307161},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/2047196.2047215},
  doi = {10.1145/2047196.2047215},
  abstract = {This paper describes Collabode, a web-based Java integrated development environment designed to support close, synchronous collaboration between programmers. We examine the problem of collaborative coding in the face of program compilation errors introduced by other users which make collaboration more difficult, and describe an algorithm for error-mediated integration of program code. Concurrent editors see the text of changes made by collaborators, but the errors reported in their view are based only on their own changes. Editors may run the program at any time, using only error-free edits supplied so far, and ignoring incomplete or otherwise error-generating changes. We evaluate this algorithm and interface on recorded data from previous pilot experiments with Collabode, and via a user study with student and professional programmers. We conclude that it offers appreciable benefits over naive continuous synchronization without regard to errors and over manual version control.},
  booktitle = {Proceedings of the 24th Annual ACM Symposium on User Interface Software and Technology},
  pages = {155–164},
  numpages = {10},
  keywords = {pair programming, collaborative editing, collaboration},
  location = {Santa Barbara, California, USA},
  series = {UIST '11}
}

@article{JaguarCode-2018,
  title = {Evaluations of JaguarCode: A web-based object-oriented programming environment with static and dynamic visualization},
  volume = {145},
  ISSN = {0164-1212},
  url = {http://dx.doi.org/10.1016/j.jss.2018.07.037},
  DOI = {10.1016/j.jss.2018.07.037},
  journal = {Journal of Systems and Software},
  publisher = {Elsevier BV},
  author = {Yang,  Jeong and Lee,  Young and Chang,  Kai H.},
  year = {2018},
  month = nov,
  pages = {147–163}
}